CALL[java.util.Hashtable,remove,1,V] PARA[CALL[java.util.Vector,firstElement]] +++$+++  OP[greaterThan] VAR[INT] PARENTHESESEND CURLYSTART
CALL[java.util.Hashtable,get,1,V] PARA[VAR[java.lang.String]] +++$+++  OP[assign] PARENTHESESSTART TYPE[ExaminationVO] PARENTHESESEND
CALL[java.util.Hashtable,keys,0,java.util.Enumeration<K>] +++$+++  CURLYEND CURLYEND VAR[java.util.Enumeration] OP[assign]
CALL[java.util.Hashtable,get,1,V] PARA[VAR[java.lang.String]] +++$+++  OP[assign] PARENTHESESSTART TYPE[String] PARENTHESESEND
CALL[java.lang.Exception,printStackTrace,0,void] +++$+++  TYPE[Exception] VAR[java.lang.Exception] PARENTHESESEND CURLYSTART
CALL[java.lang.Exception,getMessage,0,java.lang.String] +++$+++  LEX[Debug.enabled] PARENTHESESEND LEX[Debug.println] PARENTHESESSTART
CALL[java.lang.String,replaceAll,2,java.lang.String] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND EOL VAR[java.lang.String] OP[assign]
CALL[java.lang.String,indexOf,1,int] PARA[LIT[Stirng]] +++$+++  OP[assign] EOL IF PARENTHESESSTART
CALL[java.lang.String,indexOf,1,int] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.util.Calendar,getTime,0,java.util.Date] +++$+++  COMMA PARENTHESESEND EOL RETURN
CALL[java.lang.String,indexOf,1,int] PARA[VAR[java.lang.String]] +++$+++  OP[assign] EOL WHILE PARENTHESESSTART
CALL[java.lang.String,replaceAll,2,java.lang.String] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND EOL VAR[java.lang.String] OP[assign]
CALL[java.lang.String,replaceAll,2,java.lang.String] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND EOL VAR[java.lang.String] OP[assign]
CALL[java.lang.String,replaceAll,2,java.lang.String] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND EOL VAR[java.lang.String] OP[assign]
CALL[java.lang.String,replaceAll,2,java.lang.String] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND EOL VAR[java.lang.String] OP[assign]
CALL[java.lang.String,replaceAll,2,java.lang.String] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND EOL VAR[java.lang.String] OP[assign]
CALL[java.lang.String,indexOf,1,int] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND OP[greaterThan] OP[bitwiseAnd] OP[bitwiseAnd]
CALL[java.lang.String,replaceAll,2,java.lang.String] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND CURLYSTART VAR[java.lang.String] OP[assign]
CALL[java.lang.String,replaceAll,2,java.lang.String] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND EOL VAR[java.lang.String] OP[assign]
CALL[java.lang.String,replaceAll,2,java.lang.String] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND EOL VAR[java.lang.String] OP[assign]
CALL[java.util.zip.InflaterOutputStream,write,1,void] PARA[VAR[BYTE]] +++$+++  PARENTHESESEND EOL TRY CURLYSTART
CALL[java.io.IOException,printStackTrace,0,void] +++$+++  TYPE[IOException] VAR[java.io.IOException] PARENTHESESEND CURLYSTART
CALL[java.util.SortedSet,iterator,0,java.util.Iterator<E>] +++$+++  EOL TYPE[Iterator] VAR[java.util.Iterator] OP[assign]
CALL[java.lang.Exception,printStackTrace,0,void] +++$+++  TYPE[Exception] VAR[java.lang.Exception] PARENTHESESEND CURLYSTART
CALL[java.io.PrintStream,flush,0,void] +++$+++  PARENTHESESEND CURLYSTART TRY CURLYSTART
CALL[java.lang.Exception,printStackTrace,0,void] +++$+++  TYPE[Exception] VAR[java.lang.Exception] PARENTHESESEND CURLYSTART
CALL[java.lang.String,substring,1,java.lang.String] PARA[VAR[INT]] +++$+++  PARENTHESESEND EOL VAR[java.lang.String] OP[assign]
CALL[java.io.FileInputStream,close,0,void] +++$+++  PARENTHESESEND CURLYSTART TRY CURLYSTART
CALL[java.lang.String,toCharArray,0,char[]] +++$+++  ARRAYSTART ARRAYEND VAR[CHAR] OP[assign]
CALL[javax.swing.JFrame,getContentPane,0,java.awt.Container] +++$+++  OP[assign] NEW TYPE[MainPanel] PARENTHESESSTART
CALL[java.util.Hashtable,elements,0,java.util.Enumeration<V>] +++$+++  EOL TYPE[Enumeration] VAR[java.util.Enumeration] OP[assign]
CALL[java.lang.Double,intValue,0,int] +++$+++  CURLYSTART TRY CURLYSTART RETURN
CALL[java.lang.String,split,1,java.lang.String[]] PARA[LIT[Stirng]] +++$+++  CURLYSTART RETURN LEX[Integer.parseInt] PARENTHESESSTART
CALL[java.lang.Exception,getMessage,0,java.lang.String] +++$+++  CURLYSTART LEX[Debug.println] PARENTHESESSTART OP[sum]
CALL[java.util.Enumeration,nextElement,0,E] +++$+++  OP[assign] PARENTHESESSTART TYPE[String] PARENTHESESEND
CALL[java.util.Enumeration,nextElement,0,E] +++$+++  OP[assign] PARENTHESESSTART TYPE[Encounter] PARENTHESESEND
CALL[java.util.Enumeration,hasMoreElements,0,boolean] +++$+++  LEX[encounter] EOL WHILE PARENTHESESSTART
CALL[java.util.Enumeration,nextElement,0,E] +++$+++  OP[assign] PARENTHESESSTART TYPE[String] PARENTHESESEND
CALL[java.util.Iterator,hasNext,0,boolean] +++$+++  OP[assign] EOL WHILE PARENTHESESSTART
CALL[java.util.Hashtable,elements,0,java.util.Enumeration<V>] +++$+++  EOL TYPE[Enumeration] VAR[java.util.Enumeration] OP[assign]
CALL[java.util.Iterator,next,0,E] +++$+++  OP[assign] PARENTHESESSTART TYPE[OutcomeStat] PARENTHESESEND
CALL[java.util.Iterator,hasNext,0,boolean] +++$+++  PARENTHESESEND EOL WHILE PARENTHESESSTART
CALL[java.util.Hashtable,elements,0,java.util.Enumeration<V>] +++$+++  EOL TYPE[Enumeration] VAR[java.util.Enumeration] OP[assign]
CALL[java.util.Hashtable,get,1,V] PARA[LIT[Stirng]] +++$+++  TYPE[KeyValue] ARRAYSTART ARRAYEND PARENTHESESEND
CALL[java.lang.String,length,0,int] +++$+++  OP[assign] NULL OP[bitwiseAnd] OP[bitwiseAnd]
CALL[java.lang.Exception,printStackTrace,0,void] +++$+++  TYPE[Exception] VAR[java.lang.Exception] PARENTHESESEND CURLYSTART
CALL[java.io.IOException,printStackTrace,0,void] +++$+++  TYPE[IOException] VAR[java.io.IOException] PARENTHESESEND CURLYSTART
CALL[java.lang.String,length,0,int] +++$+++  EOL VAR[INT] OP[lessThan] OP[assign]
CALL[java.io.File,getAbsolutePath,0,java.lang.String] +++$+++  EOL LEX[Debug.println] PARENTHESESSTART OP[sum]
CALL[java.io.File,getAbsolutePath,0,java.lang.String] +++$+++  PARENTHESESSTART PARENTHESESEND OP[sum] OP[sum]
CALL[java.lang.Exception,printStackTrace,0,void] +++$+++  TYPE[Exception] VAR[java.lang.Exception] PARENTHESESEND CURLYSTART
CALL[java.lang.Exception,printStackTrace,0,void] +++$+++  TYPE[Exception] VAR[java.lang.Exception] PARENTHESESEND CURLYSTART
CALL[java.util.Enumeration,hasMoreElements,0,boolean] +++$+++  LEX[labAnalysisVO] EOL WHILE PARENTHESESSTART
CALL[java.util.List,size,0,int] +++$+++  OP[sum] EOL VAR[INT] OP[lessThan]
CALL[java.util.Hashtable,put,2,V] PARA[CALL[org.hnrw.report.Report_RFE.RFE,getEncounterUid]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND CURLYSTART
CALL[java.util.Vector,elementAt,1,E] PARA[VAR[INT]] +++$+++  OP[assign] PARENTHESESSTART TYPE[RFE] PARENTHESESEND
CALL[java.util.Vector,size,0,int] +++$+++  OP[assign] EOL VAR[INT] OP[lessThan]
CALL[java.util.List,addAll,1,boolean] PARA[CALL[null,asList]] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND CURLYSTART
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[LIT[Character]] +++$+++  OP[assign] OP[assign] PARENTHESESEND CURLYSTART
CALL[java.awt.Shape,getBounds2D,0,java.awt.geom.Rectangle2D] +++$+++  EOL TYPE[Rectangle2D] VAR[java.awt.geom.Rectangle2D] OP[assign]
CALL[java.awt.geom.Point2D,setLocation,1,void] PARA[VAR[java.awt.geom.Point2D]] +++$+++  ARRAYSTART ARRAYEND PARENTHESESEND EOL
CALL[java.awt.geom.Point2D,getX,0,double] +++$+++  LEX[p2.getX] PARENTHESESSTART PARENTHESESEND OP[sub]
CALL[java.awt.geom.Point2D,getX,0,double] +++$+++  RETURN NEW LEX[Point2D.Double] PARENTHESESSTART
CALL[java.awt.geom.Point2D,getY,0,double] +++$+++  LEX[aEnd.getY] PARENTHESESSTART PARENTHESESEND OP[sub]
CALL[java.util.Map,get,1,V] PARA[VAR[java.lang.Object]] +++$+++  CURLYSTART TYPE[Integer] VAR[java.lang.Integer] OP[assign]
CALL[java.lang.String,length,0,int] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.awt.Shape,getBounds2D,0,java.awt.geom.Rectangle2D] +++$+++  CURLYSTART TYPE[Rectangle2D] VAR[java.awt.geom.Rectangle2D] OP[assign]
CALL[javax.swing.JMenuBar,add,1,javax.swing.JMenu] PARA[VAR[javax.swing.JMenu]] +++$+++  PARENTHESESSTART VAR[javax.swing.JMenu] PARENTHESESEND EOL
CALL[java.awt.geom.Ellipse2D,getPathIterator,1,java.awt.geom.PathIterator] PARA[VAR[java.awt.geom.AffineTransform]] +++$+++  PARENTHESESEND EOL LEX[shapeMarrs.append] PARENTHESESSTART
CALL[java.lang.String,length,0,int] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.lang.String,split,1,java.lang.String[]] PARA[LIT[Stirng]] +++$+++  ARRAYSTART ARRAYEND VAR[java.lang.String] OP[assign]
CALL[java.awt.geom.Rectangle2D,getWidth,0,double] +++$+++  OP[assign] PARENTHESESSTART LEX[float] PARENTHESESEND
CALL[java.awt.geom.Rectangle2D,getCenterX,0,double] +++$+++  LEX[box.getX] PARENTHESESSTART PARENTHESESEND COMMA
CALL[java.awt.Graphics2D,getFontMetrics,0,java.awt.FontMetrics] +++$+++  CURLYSTART TYPE[FontMetrics] VAR[java.awt.FontMetrics] OP[assign]
CALL[java.util.Set,add,1,boolean] PARA[VAR[java.awt.Component]] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND CURLYSTART
CALL[java.util.Set,remove,1,boolean] PARA[VAR[java.awt.Component]] +++$+++  PARENTHESESSTART VAR[java.awt.Component] PARENTHESESEND EOL
CALL[java.util.List,size,0,int] +++$+++  PARENTHESESSTART NEW TYPE[Object] ARRAYSTART
CALL[java.lang.String,indexOf,1,int] PARA[LIT[Character]] +++$+++  VAR[java.lang.String] PARENTHESESEND CURLYSTART RETURN
CALL[javax.swing.ComboBoxEditor,removeActionListener,1,void] PARA[VAR[java.awt.event.ActionListener]] +++$+++  LEX[ActionListener] VAR[java.awt.event.ActionListener] PARENTHESESEND CURLYSTART
CALL[java.awt.Graphics2D,draw,1,void] PARA[VAR[java.awt.geom.Line2D.Double]] +++$+++ 
CALL[java.awt.geom.Rectangle2D,getHeight,0,double] +++$+++  PARENTHESESEND VAR[DOUBLE] PARENTHESESEND EOL
CALL[java.awt.geom.GeneralPath,transform,1,void] PARA[VAR[java.awt.geom.AffineTransform]] +++$+++  PARENTHESESSTART VAR[java.awt.Shape] PARENTHESESEND EOL
CALL[java.awt.Graphics2D,draw,1,void] PARA[VAR[java.awt.Shape]] +++$+++  PARENTHESESEND CURLYSTART INT LEX[ix]
CALL[java.util.Stack,pop,0,E] +++$+++  INT PARENTHESESEND LEX[Math.ceil] PARENTHESESSTART
CALL[java.lang.StringBuffer,length,0,int] +++$+++  PARENTHESESSTART PARENTHESESEND OP[greaterThan] PARENTHESESEND
CALL[java.lang.String,length,0,int] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.util.Properties,get,1,V] PARA[VAR[java.lang.String]] +++$+++  OP[assign] PARENTHESESSTART TYPE[String] PARENTHESESEND
CALL[java.util.Properties,remove,1,V] PARA[VAR[java.lang.String]] +++$+++  OP[assign] OP[assign] NULL PARENTHESESEND
CALL[java.util.List,remove,1,boolean] PARA[VAR[javax.swing.event.ChangeListener]] +++$+++  LEX[ChangeListener] VAR[javax.swing.event.ChangeListener] PARENTHESESEND CURLYSTART
CALL[java.util.Map,get,1,V] PARA[VAR[genj.util.ReferenceSet.KEY]] +++$+++  TYPE[REF] OP[greaterThan] VAR[java.util.Set] OP[assign]
CALL[java.util.Map,get,1,V] PARA[VAR[genj.util.ReferenceSet.KEY]] +++$+++  TYPE[REF] OP[greaterThan] VAR[java.util.Set] OP[assign]
CALL[java.util.Map,values,0,java.util.Collection<V>] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.util.Map,get,1,V] PARA[VAR[java.io.File]] +++$+++  OP[assign] PARENTHESESSTART TYPE[TemplatesCache] PARENTHESESEND
CALL[java.util.Map,put,2,V] PARA[VAR[java.io.File]] PARA[VAR[genj.fo.Format.TemplatesCache]] +++$+++  PARENTHESESEND PARENTHESESEND EOL CURLYEND
CALL[java.lang.String,indexOf,1,int] PARA[LIT[Character]] +++$+++  EOL INT VAR[INT] OP[assign]
CALL[java.lang.String,substring,2,java.lang.String] PARA[LIT[Integer]] PARA[VAR[INT]] +++$+++  OP[assign] PARENTHESESEND VAR[java.lang.String] OP[assign]
CALL[java.util.Map,get,1,V] PARA[VAR[java.io.File]] +++$+++  OP[assign] PARENTHESESSTART TYPE[List] PARENTHESESEND
CALL[java.util.LinkedList,get,1,E] PARA[VAR[INT]] +++$+++  RETURN PARENTHESESSTART LEX[Point2D.Float] PARENTHESESEND
CALL[java.util.Collection,size,0,int] +++$+++  PARENTHESESSTART NEW TYPE[XYSeries] ARRAYSTART
CALL[java.util.List,get,1,E] PARA[VAR[INT]] +++$+++  COMMA PARENTHESESSTART TYPE[Property] PARENTHESESEND
CALL[java.io.BufferedWriter,newLine,0,void] +++$+++  VAR[java.lang.String] PARENTHESESEND EOL CURLYEND
CALL[java.util.concurrent.atomic.AtomicBoolean,set,1,void] PARA[LIT[Boolean]] +++$+++  PARENTHESESEND CURLYSTART TRY CURLYSTART
CALL[java.util.ArrayList,contains,1,boolean] PARA[VAR[java.lang.String]] +++$+++  OP[greaterThan] OP[bitwiseAnd] OP[bitwiseAnd] OP[not]
CALL[java.awt.geom.Rectangle2D,getY,0,double] +++$+++  PARENTHESESEND OP[multiply] VAR[INT] COMMA
CALL[java.io.BufferedWriter,write,1,void] PARA[VAR[java.lang.String]] +++$+++  LEX[bout.newLine] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.io.BufferedWriter,newLine,0,void] +++$+++  PARENTHESESSTART PARENTHESESEND EOL CURLYEND
CALL[java.lang.String,lastIndexOf,1,int] PARA[LIT[Character]] +++$+++  EOL INT VAR[INT] OP[assign]
CALL[java.io.File,toString,0,java.lang.String] +++$+++  EOL LEX[registry.put] PARENTHESESSTART COMMA
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[VAR[java.lang.String]] +++$+++  OP[not] OP[assign] NULL PARENTHESESEND
CALL[java.util.List,size,0,int] +++$+++  OP[assign] EOL VAR[INT] OP[lessThan]
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[LIT[Stirng]] +++$+++  OP[ternaryFalse] LEX[entities] PARENTHESESEND CURLYSTART
CALL[java.lang.String,length,0,int] +++$+++  OP[assign] LEX[result.substring] PARENTHESESSTART COMMA
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[CALL[java.lang.String,substring]] +++$+++  PARENTHESESSTART PARENTHESESEND EOL CURLYEND
CALL[java.util.HashSet,size,0,int] +++$+++  PARENTHESESSTART NEW TYPE[String] ARRAYSTART
CALL[java.awt.image.BufferedImage,getWidth,0,int] +++$+++  PARENTHESESSTART PARENTHESESSTART DOUBLE PARENTHESESEND
CALL[java.awt.image.BufferedImage,getHeight,0,int] +++$+++  VAR[INT] PARENTHESESSTART DOUBLE PARENTHESESEND
CALL[java.util.Calendar,setTime,1,void] PARA[VAR[java.util.Date]] +++$+++  LEX[Calendar.getInstance] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.io.InputStream,close,0,void] +++$+++  FINALLY CURLYSTART TRY CURLYSTART
CALL[java.util.Random,nextInt,0,int] +++$+++  LEX[entry.setField] PARENTHESESSTART COMMA OP[sum]
CALL[java.util.prefs.Preferences,put,2,void] PARA[VAR[java.lang.String]] PARA[VAR[java.lang.String]] +++$+++  STRING VAR[java.lang.String] PARENTHESESEND CURLYSTART
CALL[java.util.prefs.Preferences,put,2,void] PARA[VAR[java.lang.String]] PARA[VAR[java.lang.String]] +++$+++  STRING VAR[java.lang.String] PARENTHESESEND CURLYSTART
CALL[java.util.prefs.Preferences,clear,0,void] +++$+++  PARENTHESESEND THROWS LEX[BackingStoreException] CURLYSTART
CALL[javax.swing.JRadioButton,isSelected,0,boolean] +++$+++  CURLYEND ELSE IF PARENTHESESSTART
CALL[java.lang.String,isEmpty,0,boolean] +++$+++  PARENTHESESEND OP[bitwiseAnd] OP[bitwiseAnd] OP[not]
CALL[javax.swing.JPanel,remove,1,void] PARA[VAR[javax.swing.JComponent]] +++$+++  OP[assign] NULL PARENTHESESEND CURLYSTART
CALL[javax.swing.JPanel,revalidate,0,void] +++$+++  COMMA LEX[BorderLayout.CENTER] PARENTHESESEND EOL
CALL[java.util.Map,values,0,java.util.Collection<V>] +++$+++  PARENTHESESSTART TYPE[Entry] VAR[net.sf.jabref.collab.FileUpdateMonitor.Entry] OP[ternaryFalse]
CALL[java.io.File,exists,0,boolean] +++$+++  CURLYSTART IF PARENTHESESSTART OP[not]
CALL[java.util.Map,get,1,V] PARA[VAR[java.lang.String]] +++$+++  CURLYSTART TYPE[Entry] VAR[net.sf.jabref.collab.FileUpdateMonitor.Entry] OP[assign]
CALL[javax.swing.ButtonGroup,add,1,void] PARA[VAR[javax.swing.JRadioButton]] +++$+++  PARENTHESESSTART VAR[javax.swing.JRadioButton] PARENTHESESEND EOL
CALL[javax.swing.JTree,setRowHeight,1,void] PARA[CALL[null,max]] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND EOL
CALL[javax.swing.JPanel,add,1,java.awt.Component] PARA[VAR[javax.swing.JLabel]] +++$+++  COMMA VAR[java.awt.GridBagConstraints] PARENTHESESEND EOL
CALL[javax.swing.JList,getSelectedIndex,0,int] +++$+++  CURLYEND INT VAR[INT] OP[assign]
CALL[javax.swing.JProgressBar,getMaximum,0,int] +++$+++  PARENTHESESEND COMMA LEX[Integer.toString] PARENTHESESSTART
CALL[javax.swing.JLabel,setFont,1,void] PARA[CALL[java.awt.Font,deriveFont]] +++$+++  LEX[label.getFont] PARENTHESESSTART PARENTHESESEND EOL
CALL[javax.swing.JCheckBox,setEnabled,1,void] PARA[VAR[BOOLEAN]] +++$+++  PARENTHESESSTART VAR[BOOLEAN] PARENTHESESEND EOL
CALL[java.lang.String,hashCode,0,int] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.awt.datatransfer.DataFlavor,equals,1,boolean] PARA[VAR[java.awt.datatransfer.DataFlavor]] +++$+++  CURLYEND ELSE IF PARENTHESESSTART
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Character]] +++$+++  PARENTHESESEND OP[greaterThan] PARENTHESESEND CURLYSTART
CALL[javax.swing.JPopupMenu,addSeparator,0,void] +++$+++  PARENTHESESSTART VAR[net.sf.jabref.gui.plaintextimport.TextInputDialog.ClearAction] PARENTHESESEND EOL
CALL[java.util.Map,get,1,V] PARA[VAR[java.lang.String]] +++$+++  TYPE[TMarkedStoreItem] OP[greaterThan] VAR[java.util.List] OP[assign]
CALL[javax.swing.DefaultListModel,indexOf,1,int] PARA[VAR[java.lang.String]] +++$+++  CURLYSTART INT VAR[INT] OP[assign]
CALL[javax.swing.JButton,setEnabled,1,void] PARA[VAR[BOOLEAN]] +++$+++  PARENTHESESSTART VAR[BOOLEAN] PARENTHESESEND EOL
CALL[javax.swing.DefaultListModel,remove,1,E] PARA[VAR[INT]] +++$+++  VAR[INT] PARENTHESESEND PARENTHESESEND EOL
CALL[javax.swing.JDialog,setLocationRelativeTo,1,void] PARA[CALL[javax.swing.JDialog,getParent]] +++$+++  VAR[BOOLEAN] OP[assign] LEX[false] EOL
CALL[javax.swing.JPanel,setLayout,1,void] PARA[VAR[java.awt.GridBagLayout]] +++$+++  TYPE[GridBagLayout] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.awt.datatransfer.DataFlavor,match,1,boolean] PARA[VAR[java.awt.datatransfer.DataFlavor]] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.io.File,isAbsolute,0,boolean] +++$+++  EOL IF PARENTHESESSTART OP[not]
CALL[java.awt.datatransfer.DataFlavor,getDefaultRepresentationClass,0,java.lang.Class<? extends java.lang.Object>] +++$+++  PARENTHESESSTART PARENTHESESEND OP[sum] OP[sum]
CALL[javax.swing.JButton,setEnabled,1,void] PARA[LIT[Boolean]] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND CURLYSTART
CALL[javax.swing.JComboBox,getSelectedIndex,0,int] +++$+++  LEX[fieldEditor.setText] PARENTHESESSTART VAR[java.lang.String] ARRAYSTART
CALL[javax.swing.JDialog,setLocationRelativeTo,1,void] PARA[CALL[javax.swing.JDialog,getParent]] +++$+++  LEX[showDialog] PARENTHESESSTART PARENTHESESEND CURLYSTART
CALL[java.util.List,get,1,E] PARA[VAR[INT]] +++$+++  PARENTHESESSTART VAR[INT] PARENTHESESEND COMMA
CALL[java.awt.datatransfer.DataFlavor,equals,1,boolean] PARA[FIELD[TransferableEntrySelection]] +++$+++  LEX[TransferableEntrySelection.FLAVOR_INTERNAL] PARENTHESESEND OP[bitwiseOr] OP[bitwiseOr]
CALL[java.awt.datatransfer.DataFlavor,match,1,boolean] PARA[VAR[java.awt.datatransfer.DataFlavor]] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[javax.swing.JPopupMenu,isVisible,0,boolean] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.String,substring,1,java.lang.String] PARA[CALL[javax.swing.text.JTextComponent,getSelectionEnd]] +++$+++  COMMA VAR[INT] PARENTHESESEND OP[sum]
CALL[java.util.List,add,1,boolean] PARA[VAR[javax.swing.event.ListDataListener]] +++$+++  LEX[ListDataListener] VAR[javax.swing.event.ListDataListener] PARENTHESESEND CURLYSTART
CALL[java.awt.Color,getBlue,0,int] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND PARENTHESESSTART
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.lang.String,length,0,int] +++$+++  CURLYEND ELSE IF PARENTHESESSTART
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  VAR[INT] OP[sum] OP[assign] PARENTHESESSTART
CALL[java.lang.String,equals,1,boolean] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.util.List,size,0,int] +++$+++  EOL CURLYEND IF PARENTHESESSTART
CALL[java.lang.String,isEmpty,0,boolean] +++$+++  EOL IF PARENTHESESSTART OP[not]
CALL[java.lang.String,toLowerCase,0,java.lang.String] +++$+++  OP[assign] EOL CURLYEND RETURN
CALL[java.io.IOException,getMessage,0,java.lang.String] +++$+++  PARENTHESESEND EOL LEX[pr.setErrorMessage] PARENTHESESSTART
CALL[java.util.Map,get,1,V] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[CALL[java.util.regex.Matcher,group]] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND CURLYSTART
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  PARENTHESESEND CURLYSTART LEX[stringBuilder.append] PARENTHESESSTART
CALL[java.lang.String,length,0,int] +++$+++  OP[assign] EOL VAR[INT] OP[lessThan]
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[VAR[CHAR]] +++$+++  VAR[INT] OP[sum] OP[sum] EOL
CALL[java.util.List,add,1,boolean] PARA[CALL[java.lang.StringBuilder,toString]] +++$+++  OP[assign] PARENTHESESEND PARENTHESESEND CURLYSTART
CALL[java.lang.StringBuilder,toString,0,java.lang.String] +++$+++  VAR[INT] PARENTHESESEND EOL RETURN
CALL[java.lang.StringBuilder,toString,0,java.lang.String] +++$+++  LEX[braceLevel--] EOL CURLYEND RETURN
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[CALL[null,toUpperCase]] +++$+++  EOL CASE VAR[net.sf.jabref.logic.bst.BibtexCaseChanger.FORMAT_MODE] OP[ternaryFalse]
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[LIT[Stirng]] +++$+++  VAR[java.lang.String] COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[LIT[Stirng]] +++$+++  COMMA LEX[Boolean.FALSE] PARENTHESESEND EOL
CALL[java.util.Queue,size,0,int] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  CURLYSTART CHAR VAR[CHAR] OP[assign]
CALL[java.lang.String,startsWith,1,boolean] PARA[LIT[Stirng]] +++$+++  VAR[java.lang.String] PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.String,length,0,int] +++$+++  CURLYSTART IF PARENTHESESSTART PARENTHESESSTART
CALL[java.lang.String,substring,2,java.lang.String] PARA[LIT[Integer]] PARA[CALL[java.lang.String,indexOf]] +++$+++  CURLYSTART TYPE[String] VAR[java.lang.String] OP[assign]
CALL[java.lang.String,length,0,int] +++$+++  COMMA LEX[replaceStr.substring] PARENTHESESSTART COMMA
CALL[java.lang.String,length,0,int] +++$+++  OP[bitwiseAnd] PARENTHESESSTART LEX[toCheck.charAt] PARENTHESESSTART
CALL[java.lang.String,length,0,int] +++$+++  OP[bitwiseAnd] PARENTHESESSTART LEX[toCheck.charAt] PARENTHESESSTART
CALL[java.lang.String,isEmpty,0,boolean] +++$+++  NULL PARENTHESESEND OP[bitwiseOr] OP[bitwiseOr]
CALL[java.lang.StringBuilder,toString,0,java.lang.String] +++$+++  EOL CURLYEND CURLYEND RETURN
CALL[java.util.Map.Entry,getValue,0,V] +++$+++  LEX[chrAndReplace.getKey] PARENTHESESSTART PARENTHESESEND COMMA
CALL[java.lang.StringBuilder,toString,0,java.lang.String] +++$+++  EOL CURLYEND CURLYEND RETURN
CALL[java.util.List,add,1,boolean] PARA[VAR[java.lang.String]] +++$+++  OP[greaterThan] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.util.List,size,0,int] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.util.function.Consumer,andThen,1,java.util.function.Consumer<T>] PARA[VAR[java.util.function.Consumer]] +++$+++  PARENTHESESEND CURLYSTART VAR[java.util.function.Consumer] OP[assign]
CALL[java.lang.String,equals,1,boolean] PARA[LIT[Stirng]] +++$+++  CURLYEND ELSE IF PARENTHESESSTART
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[LIT[Stirng]] +++$+++  TYPE[StringBuffer] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND OP[greaterThan] PARENTHESESEND CURLYSTART
CALL[javax.swing.DefaultListModel,getSize,0,int] +++$+++  PARENTHESESEND TYPE[String] VAR[java.lang.String] OP[assign]
CALL[java.lang.Class,newInstance,0,T] +++$+++  OP[assign] PARENTHESESSTART TYPE[FileSourcedConverter] PARENTHESESEND
CALL[java.util.Vector,size,0,int] +++$+++  OP[assign] EOL VAR[INT] OP[lessThan]
CALL[java.awt.event.MouseEvent,getButton,0,int] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.lang.String,indexOf,1,int] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND CURLYSTART RETURN PARENTHESESSTART
CALL[javax.swing.JLabel,setText,1,void] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESSTART VAR[java.lang.String] PARENTHESESEND EOL
CALL[javax.swing.JLabel,setText,1,void] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESSTART VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.lang.Exception,printStackTrace,0,void] +++$+++  TYPE[Exception] VAR[java.lang.Exception] PARENTHESESEND CURLYSTART
CALL[java.lang.Exception,printStackTrace,0,void] +++$+++  TYPE[Exception] VAR[java.lang.Exception] PARENTHESESEND CURLYSTART
CALL[java.lang.Exception,printStackTrace,0,void] +++$+++  TYPE[Exception] VAR[java.lang.Exception] PARENTHESESEND CURLYSTART
CALL[java.util.Vector,size,0,int] +++$+++  OP[assign] EOL VAR[INT] OP[lessThan]
CALL[java.util.Vector,size,0,int] +++$+++  OP[assign] EOL VAR[INT] OP[lessThan]
CALL[java.lang.String,length,0,int] +++$+++  CURLYSTART INT VAR[INT] OP[assign]
CALL[java.util.Vector,addElement,1,void] PARA[VAR[java.lang.String]] +++$+++  OP[lessThan] VAR[INT] PARENTHESESEND CURLYSTART
CALL[java.lang.Exception,printStackTrace,0,void] +++$+++  TYPE[Exception] VAR[java.lang.Exception] PARENTHESESEND CURLYSTART
CALL[java.util.Vector,size,0,int] +++$+++  OP[assign] EOL VAR[INT] OP[lessThan]
CALL[javax.swing.JButton,setEnabled,1,void] PARA[LIT[Boolean]] +++$+++  LEX[m_Exp] OP[assign] LEX[exp] EOL
CALL[javax.swing.JRadioButton,setEnabled,1,void] PARA[LIT[Boolean]] +++$+++  PARENTHESESSTART LEX[true] PARENTHESESEND EOL
CALL[javax.swing.JButton,setPreferredSize,1,void] PARA[VAR[java.awt.Dimension]] +++$+++  PARENTHESESSTART VAR[java.awt.Dimension] PARENTHESESEND EOL
CALL[javax.swing.JComboBox,setPreferredSize,1,void] PARA[VAR[java.awt.Dimension]] +++$+++  PARENTHESESSTART VAR[java.awt.Dimension] PARENTHESESEND EOL
CALL[javax.swing.JComboBox,setMaximumSize,1,void] PARA[VAR[java.awt.Dimension]] +++$+++  PARENTHESESSTART VAR[java.awt.Dimension] PARENTHESESEND EOL
CALL[javax.swing.JComboBox,setMinimumSize,1,void] PARA[VAR[java.awt.Dimension]] +++$+++  PARENTHESESSTART VAR[java.awt.Dimension] PARENTHESESEND EOL
CALL[javax.swing.JList,setModel,1,void] PARA[VAR[javax.swing.DefaultListModel]] +++$+++  PARENTHESESSTART LEX[true] PARENTHESESEND EOL
CALL[javax.swing.DefaultListModel,size,0,int] +++$+++  EOL LEX[m_SaveOptionsBut.setEnabled] PARENTHESESSTART PARENTHESESSTART
CALL[javax.swing.JTextField,getText,0,java.lang.String] +++$+++  VAR[DOUBLE] OP[assign] LEX[Double.parseDouble] PARENTHESESSTART
CALL[javax.swing.DefaultListModel,removeElement,1,boolean] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESSTART VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.util.Hashtable,get,1,V] PARA[VAR[java.lang.String]] +++$+++  NULL EOL VAR[java.lang.Object] OP[assign]
CALL[javax.swing.DefaultListModel,elementAt,1,E] PARA[VAR[INT]] +++$+++  PARENTHESESSTART TYPE[String] PARENTHESESEND PARENTHESESSTART
CALL[java.lang.StringBuffer,toString,0,java.lang.String] +++$+++  VAR[java.lang.String] EOL LEX[m_SingleText.setText] PARENTHESESSTART
CALL[javax.swing.JFrame,dispose,0,void] +++$+++  LEX[java.awt.event.WindowEvent] LEX[e] PARENTHESESEND CURLYSTART
CALL[java.util.Vector,elementAt,1,E] PARA[VAR[INT]] +++$+++  OP[assign] PARENTHESESSTART TYPE[String] PARENTHESESEND
CALL[java.util.Vector,size,0,int] +++$+++  OP[assign] EOL VAR[INT] OP[lessThan]
CALL[java.io.PrintStream,println,1,void] PARA[LIT[Stirng]] +++$+++  IF PARENTHESESSTART VAR[BOOLEAN] PARENTHESESEND
CALL[weka.gui.boundaryvisualizer.BoundaryPanel.PlotPanel,getWidth,0,int] +++$+++  CURLYSTART INT VAR[INT] OP[assign]
CALL[java.lang.Thread,join,1,void] PARA[LIT[Integer]] +++$+++  LEX[true] EOL TRY CURLYSTART
CALL[java.util.Vector,removeElement,1,boolean] PARA[VAR[java.awt.event.ActionListener]] +++$+++  LEX[ActionListener] VAR[java.awt.event.ActionListener] PARENTHESESEND CURLYSTART
CALL[java.util.Vector,elementAt,1,E] PARA[VAR[INT]] +++$+++  OP[assign] PARENTHESESSTART TYPE[String] PARENTHESESEND
CALL[java.awt.event.KeyEvent,getKeyCode,0,int] +++$+++  PARENTHESESEND CURLYSTART SWITCH PARENTHESESSTART
CALL[java.lang.String,length,0,int] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.util.Vector,add,1,boolean] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESEND OP[not] OP[assign] PARENTHESESEND
CALL[java.util.Iterator,next,0,E] +++$+++  OP[assign] PARENTHESESSTART TYPE[ConnectionListener] PARENTHESESEND
CALL[java.io.StreamTokenizer,ordinaryChar,1,void] PARA[LIT[Character]] +++$+++  LEX[m_st.ordinaryChar] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.io.StreamTokenizer,ordinaryChar,1,void] PARA[LIT[Character]] +++$+++  PARENTHESESSTART LEX[false] PARENTHESESEND EOL
CALL[java.util.Vector,addElement,1,void] PARA[CALL[java.lang.String,substring]] +++$+++  OP[assign] OP[assign] PARENTHESESEND CURLYSTART
CALL[java.io.PrintWriter,print,1,void] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART VAR[INT] PARENTHESESEND EOL
CALL[java.io.PrintStream,flush,0,void] +++$+++  OP[assign] LEX[System.out] PARENTHESESEND CURLYSTART
CALL[java.lang.String,equals,1,boolean] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESSTART PARENTHESESEND EOL RETURN
CALL[javax.swing.JTextField,getText,0,java.lang.String] +++$+++  CURLYSTART TYPE[String] VAR[java.lang.String] OP[assign]
CALL[java.awt.Graphics2D,clearRect,4,void] PARA[VAR[INT]] PARA[VAR[INT]] PARA[VAR[INT]] PARA[VAR[INT]] +++$+++  INT VAR[INT] PARENTHESESEND CURLYSTART
CALL[java.awt.Graphics2D,drawBytes,5,void] PARA[VAR[BYTE]] PARA[VAR[INT]] PARA[VAR[INT]] PARA[VAR[INT]] PARA[VAR[INT]] +++$+++  INT VAR[INT] PARENTHESESEND CURLYSTART
CALL[java.awt.Graphics2D,drawImage,3,boolean] PARA[VAR[java.awt.Image]] PARA[VAR[java.awt.geom.AffineTransform]] PARA[VAR[java.awt.image.ImageObserver]] +++$+++  VAR[java.awt.image.ImageObserver] PARENTHESESEND CURLYSTART RETURN
CALL[java.awt.Graphics2D,drawImage,4,void] PARA[VAR[java.awt.image.BufferedImage]] PARA[VAR[java.awt.image.BufferedImageOp]] PARA[VAR[INT]] PARA[VAR[INT]] +++$+++  INT VAR[INT] PARENTHESESEND CURLYSTART
CALL[java.awt.Graphics2D,fillArc,6,void] PARA[VAR[INT]] PARA[VAR[INT]] PARA[VAR[INT]] PARA[VAR[INT]] PARA[VAR[INT]] PARA[VAR[INT]] +++$+++  INT VAR[INT] PARENTHESESEND CURLYSTART
CALL[java.awt.Graphics2D,fillOval,4,void] PARA[VAR[INT]] PARA[VAR[INT]] PARA[VAR[INT]] PARA[VAR[INT]] +++$+++  INT VAR[INT] PARENTHESESEND CURLYSTART
CALL[java.awt.Graphics2D,fillPolygon,1,void] PARA[VAR[java.awt.Polygon]] +++$+++  LEX[Polygon] VAR[java.awt.Polygon] PARENTHESESEND CURLYSTART
CALL[java.awt.Graphics2D,getClipBounds,1,java.awt.Rectangle] PARA[VAR[java.awt.Rectangle]] +++$+++  VAR[java.awt.Rectangle] PARENTHESESEND CURLYSTART RETURN
CALL[java.awt.Graphics2D,rotate,3,void] PARA[VAR[DOUBLE]] PARA[VAR[DOUBLE]] PARA[VAR[DOUBLE]] +++$+++  DOUBLE VAR[DOUBLE] PARENTHESESEND CURLYSTART
CALL[java.awt.Graphics2D,setClip,1,void] PARA[VAR[java.awt.Shape]] +++$+++  LEX[Shape] VAR[java.awt.Shape] PARENTHESESEND CURLYSTART
CALL[java.awt.Graphics2D,setRenderingHints,1,void] PARA[VAR[java.util.Map]] +++$+++  LEX[Map] VAR[java.util.Map] PARENTHESESEND CURLYSTART
CALL[java.awt.Graphics2D,translate,2,void] PARA[VAR[INT]] PARA[VAR[INT]] +++$+++  INT VAR[INT] PARENTHESESEND CURLYSTART
CALL[java.util.ResourceBundle,getString,1,java.lang.String] PARA[VAR[java.lang.String]] +++$+++  VAR[java.lang.String] PARENTHESESEND CURLYSTART RETURN
CALL[java.util.List,get,1,E] PARA[VAR[INT]] +++$+++  IF PARENTHESESSTART LEX[classSpecificationTemplate.equals] PARENTHESESSTART
CALL[java.util.List,remove,1,E] PARA[VAR[INT]] +++$+++  PARENTHESESEND PARENTHESESEND PARENTHESESEND CURLYSTART
CALL[java.util.List,get,1,E] PARA[VAR[INT]] +++$+++  OP[assign] PARENTHESESSTART TYPE[KeepClassSpecification] PARENTHESESEND
CALL[java.io.File,getCanonicalPath,0,java.lang.String] +++$+++  CURLYSTART TRY CURLYSTART RETURN
CALL[java.lang.String,hashCode,0,int] +++$+++  OP[assign] NULL OP[ternaryTrue] OP[ternaryFalse]
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  PARENTHESESEND CURLYSTART WHILE PARENTHESESSTART
CALL[java.io.IOException,getMessage,0,java.lang.String] +++$+++  THROW NEW TYPE[RuntimeException] PARENTHESESSTART
CALL[java.io.DataInput,readChar,0,char] +++$+++  CURLYSTART TRY CURLYSTART RETURN
CALL[java.io.IOException,printStackTrace,0,void] +++$+++  TYPE[IOException] VAR[java.io.IOException] PARENTHESESEND CURLYSTART
CALL[java.awt.event.MouseEvent,getClickCount,0,int] +++$+++  VAR[java.util.EventObject] EOL IF PARENTHESESSTART
CALL[javax.swing.DefaultCellEditor,cancelCellEditing,0,void] +++$+++  LEX[cancelCellEditing] PARENTHESESSTART PARENTHESESEND CURLYSTART
CALL[java.lang.Object,getClass,0,java.lang.Class<? extends java.lang.Object>] +++$+++  OP[bitwiseAnd] OP[bitwiseAnd] LEX[extensionPointInterface.isAssignableFrom] PARENTHESESSTART
CALL[java.util.Set,remove,1,boolean] PARA[VAR[net.sourceforge.ganttproject.task.algorithm.RetainRootsAlgorithm.T]] +++$+++  VAR[net.sourceforge.ganttproject.task.algorithm.RetainRootsAlgorithm.T] PARENTHESESEND PARENTHESESEND CURLYSTART
CALL[javax.swing.JEditorPane,setBorder,1,void] PARA[CALL[null,createEmptyBorder]] +++$+++  COMMA LEX[NotificationManager.DEFAULT_HYPERLINK_LISTENER] PARENTHESESEND EOL
CALL[javax.swing.Action,getValue,1,java.lang.Object] PARA[VAR[java.lang.String]] +++$+++  COMMA TYPE[Boolean] OP[greaterThan] PARENTHESESEND
CALL[javax.swing.JTextField,getText,0,java.lang.String] +++$+++  PARENTHESESSTART OP[not] LEX[BrowserControl.displayURL] PARENTHESESSTART
CALL[javax.swing.JCheckBox,isSelected,0,boolean] +++$+++  PARENTHESESEND CURLYSTART LEX[myEarliestBeginDatePicker.setEnabled] PARENTHESESSTART
CALL[javax.swing.JCheckBox,isSelected,0,boolean] +++$+++  LEX[false] EOL CURLYEND RETURN
CALL[javax.swing.JComponent,requestFocus,0,void] +++$+++  LEX[FocusEvent] LEX[e] PARENTHESESEND CURLYSTART
CALL[javax.swing.JEditorPane,setEditable,1,void] PARA[LIT[Boolean]] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND EOL
CALL[javax.swing.JPanel,setBackground,1,void] PARA[VAR[java.awt.Color]] +++$+++  COMMA PARENTHESESEND PARENTHESESEND EOL
CALL[java.util.HashSet,contains,1,boolean] PARA[VAR[java.lang.String]] +++$+++  VAR[java.lang.String] PARENTHESESEND CURLYSTART RETURN
CALL[java.util.List,add,1,boolean] PARA[VAR[java.awt.Component]] +++$+++  LEX[Component] VAR[java.awt.Component] PARENTHESESEND CURLYSTART
CALL[java.awt.print.PrinterJob,printDialog,1,boolean] PARA[VAR[javax.print.attribute.PrintRequestAttributeSet]] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.util.List,add,1,boolean] PARA[CALL[java.lang.Throwable,getMessage]] +++$+++  LEX[Throwable] VAR[java.lang.Throwable] PARENTHESESEND CURLYSTART
CALL[java.lang.StringBuffer,toString,0,java.lang.String] +++$+++  EOL CURLYEND LEX[myUIFacade.showErrorDialog] PARENTHESESSTART
CALL[java.util.List,get,1,E] PARA[VAR[INT]] +++$+++  VAR[INT] PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.StringBuffer,toString,0,java.lang.String] +++$+++  PARENTHESESEND PARENTHESESEND EOL RETURN
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Stirng]] +++$+++  RETURN TYPE[DURATION_FROM_START_FINISH] EOL CURLYEND
CALL[java.util.Map,get,1,V] PARA[VAR[java.lang.String]] +++$+++  CURLYSTART TYPE[Font] VAR[java.awt.Font] OP[assign]
CALL[java.lang.String,toUpperCase,0,java.lang.String] +++$+++  CURLYSTART RETURN LEX[Visibility.valueOf] PARENTHESESSTART
CALL[java.lang.String,indexOf,2,int] PARA[LIT[Stirng]] PARA[VAR[INT]] +++$+++  PARENTHESESEND CURLYSTART VAR[INT] OP[assign]
CALL[java.util.Hashtable,values,0,java.util.Collection<V>] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.String,equals,1,boolean] PARA[LIT[Stirng]] +++$+++  CURLYEND ELSE IF PARENTHESESSTART
CALL[java.lang.String,equals,1,boolean] PARA[LIT[Stirng]] +++$+++  CURLYEND ELSE IF PARENTHESESSTART
CALL[java.lang.String,startsWith,1,boolean] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART PARENTHESESEND OP[bitwiseOr] OP[bitwiseOr]
CALL[java.awt.event.KeyEvent,getKeyCode,0,int] +++$+++  CURLYSTART INT VAR[INT] OP[assign]
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[CALL[java.lang.String,charAt]] +++$+++  OP[lessThan] VAR[INT] PARENTHESESEND CURLYSTART
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[CALL[null,valueOf]] +++$+++  LEX[i.next] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.util.List,iterator,0,java.util.Iterator<E>] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.util.Set,add,1,boolean] PARA[VAR[org.argouml.cognitive.ListSet.T]] +++$+++  OP[not] VAR[BOOLEAN] PARENTHESESEND CURLYSTART
CALL[java.util.List,clear,0,void] +++$+++  PARENTHESESSTART VAR[java.lang.Object] PARENTHESESEND CURLYSTART
CALL[java.util.Hashtable,get,1,V] PARA[VAR[java.lang.Object]] +++$+++  OP[assign] PARENTHESESSTART TYPE[ChecklistStatus] PARENTHESESEND
CALL[java.lang.String,hashCode,0,int] +++$+++  RETURN EOL CURLYEND RETURN
CALL[java.util.List,add,1,boolean] PARA[VAR[org.argouml.application.events.ArgoEventPump.Pair]] +++$+++  VAR[org.argouml.application.events.ArgoEventPump.Pair] PARENTHESESEND PARENTHESESEND CURLYSTART
CALL[java.util.List,removeAll,1,boolean] PARA[VAR[java.util.List]] +++$+++  EOL CURLYEND CURLYEND CURLYEND
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  PARENTHESESSTART OP[not] LEX[Character.isJavaIdentifierPart] PARENTHESESSTART
CALL[java.util.Map,containsKey,1,boolean] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.lang.String,indexOf,1,int] PARA[LIT[Stirng]] +++$+++  CURLYEND INT VAR[INT] OP[assign]
CALL[java.util.List,add,1,boolean] PARA[VAR[javax.swing.Action]] +++$+++  LEX[Event.CTRL_MASK] PARENTHESESEND PARENTHESESEND EOL
CALL[javax.swing.Action,putValue,2,void] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  COMMA VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  PARENTHESESEND CURLYSTART VAR[CHAR] OP[assign]
CALL[java.lang.String,length,0,int] +++$+++  VAR[INT] EOL VAR[INT] OP[lessThan]
CALL[java.util.Iterator,hasNext,0,boolean] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.util.List,add,1,boolean] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESSTART VAR[INT] PARENTHESESEND EOL
CALL[javax.swing.JDialog,setVisible,1,void] PARA[LIT[Boolean]] +++$+++  OP[assign] NULL PARENTHESESEND CURLYSTART
CALL[java.awt.Container,getInsets,0,java.awt.Insets] +++$+++  FINAL TYPE[Insets] VAR[java.awt.Insets] OP[assign]
CALL[javax.swing.JComboBox,setEditable,1,void] PARA[VAR[BOOLEAN]] +++$+++  PARENTHESESSTART VAR[BOOLEAN] PARENTHESESEND EOL
CALL[java.lang.String,indexOf,1,int] PARA[VAR[java.lang.String]] +++$+++  EOL INT VAR[INT] OP[assign]
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[VAR[java.lang.String]] +++$+++  OP[assign] NULL PARENTHESESEND CURLYSTART
CALL[java.lang.StringBuffer,length,0,int] +++$+++  OP[bitwiseOr] PARENTHESESSTART LEX[currentTag.charAt] PARENTHESESSTART
CALL[java.lang.StringBuffer,append,3,java.lang.StringBuffer] PARA[VAR[CHAR]] PARA[VAR[INT]] PARA[VAR[INT]] +++$+++  PARENTHESESEND CURLYSTART VAR[java.lang.StringBuffer] OP[assign]
CALL[java.util.Iterator,next,0,E] +++$+++  OP[assign] PARENTHESESSTART TYPE[AbstractFilePersister] PARENTHESESEND
CALL[javax.swing.JFileChooser,setFileFilter,1,void] PARA[VAR[org.argouml.persistence.MultitypeFileFilter]] +++$+++  PARENTHESESEND EOL CURLYEND CURLYEND
CALL[java.util.ArrayList,contains,1,boolean] PARA[VAR[java.lang.String]] +++$+++  EOL IF PARENTHESESSTART OP[not]
CALL[javax.swing.Action,removePropertyChangeListener,1,void] PARA[VAR[java.beans.PropertyChangeListener]] +++$+++  LEX[PropertyChangeListener] VAR[java.beans.PropertyChangeListener] PARENTHESESEND CURLYSTART
CALL[java.util.Hashtable,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.lang.Object]] +++$+++  LEX[Object] VAR[java.lang.Object] PARENTHESESEND CURLYSTART
CALL[java.util.List,clear,0,void] +++$+++  LEX[clearMethodCalls] PARENTHESESSTART PARENTHESESEND CURLYSTART
CALL[java.util.Collection,remove,1,boolean] PARA[VAR[java.lang.Object]] +++$+++  LEX[Object] VAR[java.lang.Object] PARENTHESESEND CURLYSTART
CALL[java.lang.StringBuilder,toString,0,java.lang.String] +++$+++  PARENTHESESEND EOL CURLYEND RETURN
CALL[java.util.Collection,remove,1,boolean] PARA[VAR[java.lang.Object]] +++$+++  LEX[Object] VAR[java.lang.Object] PARENTHESESEND CURLYSTART
CALL[java.util.Hashtable,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.lang.Object]] +++$+++  LEX[Object] VAR[java.lang.Object] PARENTHESESEND CURLYSTART
CALL[java.lang.String,length,0,int] +++$+++  RETURN LEX[s.substring] PARENTHESESSTART COMMA
CALL[java.lang.String,equals,1,boolean] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART PARENTHESESEND OP[bitwiseOr] OP[bitwiseOr]
CALL[java.util.StringTokenizer,nextToken,0,java.lang.String] +++$+++  ARRAYEND OP[assign] LEX[Integer.parseInt] PARENTHESESSTART
CALL[java.util.Date,toString,0,java.lang.String] +++$+++  PARENTHESESSTART PARENTHESESEND EOL RETURN
CALL[java.util.Map,get,1,V] PARA[VAR[java.lang.String]] +++$+++  RETURN PARENTHESESSTART TYPE[ColumnDefinition] PARENTHESESEND
CALL[java.util.zip.ZipEntry,getName,0,java.lang.String] +++$+++  EOL TYPE[String] VAR[java.lang.String] OP[assign]
CALL[java.lang.String,endsWith,1,boolean] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.lang.StringBuffer,toString,0,java.lang.String] +++$+++  PARENTHESESEND EOL CURLYEND RETURN
CALL[java.lang.String,length,0,int] +++$+++  VAR[java.lang.String] EOL WHILE PARENTHESESSTART
CALL[java.lang.String,length,0,int] +++$+++  EOL CURLYEND IF PARENTHESESSTART
CALL[javax.swing.JTextField,setEnabled,1,void] PARA[VAR[BOOLEAN]] +++$+++  LEX[chkbTsaEnabled.isSelected] PARENTHESESSTART PARENTHESESEND EOL
CALL[javax.swing.JTextField,setEnabled,1,void] PARA[VAR[BOOLEAN]] +++$+++  PARENTHESESSTART VAR[BOOLEAN] PARENTHESESEND EOL
CALL[java.util.Enumeration,nextElement,0,E] +++$+++  FINAL TYPE[String] VAR[java.lang.String] OP[assign]
CALL[java.lang.Exception,printStackTrace,0,void] +++$+++  TYPE[Exception] VAR[java.lang.Exception] PARENTHESESEND CURLYSTART
CALL[java.io.FileInputStream,close,0,void] +++$+++  OP[assign] NULL PARENTHESESEND CURLYSTART
CALL[java.util.Properties,setProperty,2,java.lang.Object] PARA[VAR[java.lang.String]] PARA[CALL[null,valueOf]] +++$+++  BOOLEAN VAR[BOOLEAN] PARENTHESESEND CURLYSTART
CALL[java.util.Properties,setProperty,2,java.lang.Object] PARA[VAR[java.lang.String]] PARA[CALL[null,valueOf]] +++$+++  INT VAR[INT] PARENTHESESEND CURLYSTART
CALL[java.util.Properties,remove,1,V] PARA[VAR[java.lang.String]] +++$+++  STRING VAR[java.lang.String] PARENTHESESEND CURLYSTART
CALL[java.util.Properties,containsKey,1,boolean] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.util.List,size,0,int] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[LIT[Character]] +++$+++  OP[sum] ARRAYEND PARENTHESESEND EOL
CALL[java.util.List,size,0,int] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.util.prefs.Preferences,putBoolean,2,void] PARA[VAR[java.lang.String]] PARA[VAR[BOOLEAN]] +++$+++  BOOLEAN VAR[BOOLEAN] PARENTHESESEND CURLYSTART
CALL[java.util.prefs.Preferences,getInt,2,int] PARA[VAR[java.lang.String]] PARA[LIT[Integer]] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[javax.swing.JFrame,setLocation,1,void] PARA[VAR[java.awt.Point]] +++$+++  OP[assign] NULL PARENTHESESEND CURLYSTART
CALL[javax.swing.JFrame,getExtendedState,0,int] +++$+++  LEX[Settings.storeIsFrameMaximized] PARENTHESESSTART VAR[java.lang.String] COMMA
CALL[java.lang.String,split,1,java.lang.String[]] PARA[LIT[Stirng]] +++$+++  ARRAYSTART ARRAYEND VAR[java.lang.String] OP[assign]
CALL[javax.swing.JLabel,setMinimumSize,1,void] PARA[VAR[java.awt.Dimension]] +++$+++  PARENTHESESSTART VAR[javax.swing.ImageIcon] PARENTHESESEND EOL
CALL[java.util.List,size,0,int] +++$+++  LEX[Math.min] PARENTHESESSTART VAR[INT] COMMA
CALL[java.util.List,size,0,int] +++$+++  PARENTHESESEND OP[sub] VAR[INT] COMMA
CALL[jmemorize.gui.swing.panels.CardSidePanel.ScaledImagePanel,validate,0,void] +++$+++  EOL BREAK EOL CURLYEND
CALL[javax.swing.JCheckBox,isSelected,0,boolean] +++$+++  PARENTHESESEND EOL LEX[m_cardLimitSpinner.setEnabled] PARENTHESESSTART
CALL[javax.swing.JRadioButton,setEnabled,1,void] PARA[CALL[javax.swing.JCheckBox,isSelected]] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND EOL
CALL[javax.swing.JRadioButton,isSelected,0,boolean] +++$+++  PARENTHESESEND CURLYSTART LEX[m_frontChecksAmountSpinner.setEnabled] PARENTHESESSTART
CALL[javax.swing.JPanel,isVisible,0,boolean] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[javax.swing.JList,getSelectedIndex,0,int] +++$+++  VAR[javax.swing.JPanel] COMMA VAR[java.lang.String] ARRAYSTART
CALL[java.io.FileInputStream,close,0,void] +++$+++  CURLYEND CURLYEND FINALLY CURLYSTART
CALL[java.util.zip.ZipFile,entries,0,java.util.Enumeration<? extends java.util.zip.ZipEntry>] +++$+++  EOL TYPE[Enumeration] VAR[java.util.Enumeration] OP[assign]
CALL[java.util.Enumeration,hasMoreElements,0,boolean] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.util.Enumeration,nextElement,0,E] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND CURLYSTART
CALL[java.lang.String,length,0,int] +++$+++  OP[assign] LEX[baseFileName.substring] PARENTHESESSTART COMMA
CALL[java.awt.geom.Point2D,getX,0,double] +++$+++  EOL CURLYEND LEX[dstPt.setLocation] PARENTHESESSTART
CALL[javax.swing.AbstractButton,removeActionListener,1,void] PARA[VAR[java.awt.event.ActionListener]] +++$+++  OP[assign] NULL PARENTHESESEND CURLYSTART
CALL[java.awt.event.ItemEvent,getStateChange,0,int] +++$+++  PARENTHESESEND CURLYSTART LEX[stackScrollPane.setVisible] PARENTHESESSTART
CALL[java.lang.String,length,0,int] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.lang.String,charAt,1,char] PARA[LIT[Integer]] +++$+++  PARENTHESESSTART COMMA LEX[Character.toTitleCase] PARENTHESESSTART
CALL[java.util.List,iterator,0,java.util.Iterator<E>] +++$+++  EOL TYPE[Iterator] VAR[java.util.Iterator] OP[assign]
CALL[java.io.File,getName,0,java.lang.String] +++$+++  VAR[java.util.regex.Matcher] OP[assign] LEX[pattern.matcher] PARENTHESESSTART
CALL[java.util.regex.Pattern,matcher,1,java.util.regex.Matcher] PARA[CALL[java.io.File,getName]] +++$+++  EOL TYPE[Matcher] VAR[java.util.regex.Matcher] OP[assign]
CALL[java.util.List,iterator,0,java.util.Iterator<E>] +++$+++  EOL TYPE[Iterator] VAR[java.util.Iterator] OP[assign]
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.io.File]] +++$+++  OP[sum] OP[assign] EOL CURLYEND
CALL[java.lang.StringBuffer,toString,0,java.lang.String] +++$+++  VAR[CHAR] EOL CURLYEND RETURN
CALL[java.io.File,delete,0,boolean] +++$+++  EOL BOOLEAN VAR[BOOLEAN] OP[assign]
CALL[java.lang.String,length,0,int] +++$+++  EOL INT VAR[INT] OP[assign]
CALL[java.lang.String,length,0,int] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.lang.String,equals,1,boolean] PARA[VAR[java.lang.String]] +++$+++  CURLYEND ELSE IF PARENTHESESSTART
CALL[java.awt.Color,getRed,0,int] +++$+++  VAR[FLOAT] OP[assign] LEX[Color.RGBtoHSB] PARENTHESESSTART
CALL[java.util.Map,get,1,V] PARA[VAR[java.lang.String]] +++$+++  EOL TYPE[Object] VAR[java.lang.Object] OP[assign]
CALL[java.util.List,get,1,E] PARA[VAR[INT]] +++$+++  OP[assign] PARENTHESESSTART TYPE[JomicFrame] PARENTHESESEND
CALL[java.lang.String,equals,1,boolean] PARA[VAR[java.lang.String]] +++$+++  CURLYEND ELSE IF PARENTHESESSTART
CALL[java.lang.String,length,0,int] +++$+++  EOL INT VAR[INT] OP[assign]
CALL[javax.swing.JProgressBar,setVisible,1,void] PARA[LIT[Boolean]] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND EOL
CALL[javax.swing.JTextField,getText,0,java.lang.String] +++$+++  RETURN NEW TYPE[File] PARENTHESESSTART
CALL[javax.swing.JButton,setActionCommand,1,void] PARA[VAR[java.lang.String]] +++$+++  OP[sum] VAR[java.lang.String] PARENTHESESEND EOL
CALL[javax.swing.JButton,addActionListener,1,void] PARA[THIS[null]] +++$+++  PARENTHESESSTART VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.awt.event.ActionEvent,getSource,0,java.lang.Object] +++$+++  PARENTHESESSTART NEW TYPE[OpenRecentFileEvent] PARENTHESESSTART
CALL[java.util.List,iterator,0,java.util.Iterator<E>] +++$+++  CURLYSTART TYPE[Iterator] VAR[java.util.Iterator] OP[assign]
CALL[javax.swing.ListSelectionModel,getSelectionMode,0,int] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[javax.swing.ListSelectionModel,insertIndexInterval,3,void] PARA[VAR[INT]] PARA[VAR[INT]] PARA[VAR[BOOLEAN]] +++$+++  BOOLEAN VAR[BOOLEAN] PARENTHESESEND CURLYSTART
CALL[java.awt.event.MouseWheelEvent,getUnitsToScroll,0,int] +++$+++  VAR[INT] OP[assign] VAR[INT] OP[multiply]
CALL[javax.swing.JScrollBar,getUnitIncrement,0,int] +++$+++  LEX[event.getUnitsToScroll] PARENTHESESSTART PARENTHESESEND OP[multiply]
CALL[java.lang.String,length,0,int] +++$+++  VAR[java.lang.String] OP[assign] LEX[command.substring] PARENTHESESSTART
CALL[java.lang.String,substring,2,java.lang.String] PARA[LIT[Integer]] PARA[VAR[INT]] +++$+++  CURLYSTART TYPE[String] VAR[java.lang.String] OP[assign]
CALL[java.util.Vector,elementAt,1,E] PARA[VAR[INT]] +++$+++  PARENTHESESSTART PARENTHESESSTART TYPE[JButton] PARENTHESESEND
CALL[javax.swing.JCheckBox,isSelected,0,boolean] +++$+++  LEX[wholeWordCheckBox.isSelected] PARENTHESESSTART PARENTHESESEND COMMA
CALL[java.io.DataInputStream,readInt,0,int] +++$+++  ARRAYSTART VAR[INT] ARRAYEND OP[assign]
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.util.Random,nextInt,0,int] +++$+++  CURLYSTART INT VAR[INT] OP[assign]
CALL[java.awt.CheckboxMenuItem,addItemListener,1,void] PARA[THIS[null]] +++$+++  PARENTHESESSTART VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.awt.Scrollbar,getValue,0,int] +++$+++  OP[multiply] LEX[Math.exp] PARENTHESESSTART PARENTHESESSTART
CALL[java.awt.CheckboxMenuItem,getState,0,boolean] +++$+++  CURLYSTART VAR[INT] OP[assign] PARENTHESESSTART
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[VAR[java.lang.String]] +++$+++  OP[assign] NULL PARENTHESESEND CURLYSTART
CALL[java.awt.Graphics,drawString,3,void] PARA[VAR[java.lang.String]] PARA[LIT[Integer]] PARA[LIT[Integer]] +++$+++  LEX[ogf.triggerShow] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.awt.CheckboxMenuItem,addItemListener,1,void] PARA[THIS[null]] +++$+++  PARENTHESESSTART VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.lang.Double,shortValue,0,short] +++$+++  RETURN NEW TYPE[Short] PARENTHESESSTART
CALL[java.lang.String,equals,1,boolean] PARA[VAR[java.lang.String]] +++$+++  EOL ELSE IF PARENTHESESSTART
CALL[java.util.HashMap,clear,0,void] +++$+++  LEX[resetFonts] PARENTHESESSTART PARENTHESESEND CURLYSTART
CALL[java.util.Calendar,setTimeInMillis,1,void] PARA[VAR[LONG]] +++$+++  LEX[DateTime.calendarInstance] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.util.Iterator,next,0,E] +++$+++  OP[assign] PARENTHESESSTART TYPE[Association] PARENTHESESEND
CALL[java.util.LinkedList,iterator,0,java.util.Iterator<E>] +++$+++  PARENTHESESSTART TYPE[Iterator] VAR[java.util.Iterator] OP[assign]
CALL[java.util.LinkedList,iterator,0,java.util.Iterator<E>] +++$+++  PARENTHESESSTART TYPE[Iterator] VAR[java.util.Iterator] OP[assign]
CALL[java.util.LinkedList,removeAll,1,boolean] PARA[VAR[java.util.Collection]] +++$+++  VAR[java.util.Collection] PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.String,split,1,java.lang.String[]] PARA[LIT[Stirng]] +++$+++  VAR[java.lang.String] ARRAYSTART ARRAYEND OP[assign]
CALL[java.lang.Number,doubleValue,0,double] +++$+++  LEX[val.doubleValue] PARENTHESESSTART PARENTHESESEND OP[sum]
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.Object]] PARA[VAR[java.lang.Number]] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND EOL
CALL[java.util.Collection,iterator,0,java.util.Iterator<E>] +++$+++  EOL TYPE[Iterator] VAR[java.util.Iterator] OP[assign]
CALL[java.util.Iterator,next,0,E] +++$+++  OP[assign] PARENTHESESSTART TYPE[HasTimeDistributedData] PARENTHESESEND
CALL[java.util.Collection,iterator,0,java.util.Iterator<E>] +++$+++  EOL TYPE[Iterator] VAR[java.util.Iterator] OP[assign]
CALL[java.util.Iterator,hasNext,0,boolean] +++$+++  LEX[data] EOL WHILE PARENTHESESSTART
CALL[java.io.ObjectOutputStream,writeLong,1,void] PARA[VAR[LONG]] +++$+++  PARENTHESESSTART VAR[LONG] PARENTHESESEND EOL
CALL[java.util.GregorianCalendar,setTimeInMillis,1,void] PARA[LIT[Integer]] +++$+++  INT VAR[INT] PARENTHESESEND CURLYSTART
CALL[java.lang.String,length,0,int] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.util.Calendar,setTimeInMillis,1,void] PARA[LIT[Integer]] +++$+++  LEX[DateTime.calendarInstance] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.awt.Color,getRGB,0,int] +++$+++  LEX[foreground.getRGB] PARENTHESESSTART PARENTHESESEND OP[ternaryFalse]
CALL[java.util.ArrayList,iterator,0,java.util.Iterator<E>] +++$+++  EOL TYPE[Iterator] VAR[java.util.Iterator] OP[assign]
CALL[java.lang.Throwable,printStackTrace,1,void] PARA[VAR[java.io.PrintWriter]] +++$+++  PARENTHESESSTART VAR[java.io.Writer] PARENTHESESEND EOL
CALL[javax.swing.undo.UndoableEdit,getPresentationName,0,java.lang.String] +++$+++  NULL PARENTHESESEND LEX[r.add] PARENTHESESSTART
CALL[java.util.Iterator,equals,1,boolean] PARA[VAR[java.lang.Object]] +++$+++  VAR[java.lang.Object] PARENTHESESEND CURLYSTART RETURN
CALL[java.util.StringTokenizer,nextToken,0,java.lang.String] +++$+++  PARENTHESESEND PARENTHESESEND LEX[filters.add] PARENTHESESSTART
CALL[java.util.Map,get,1,V] PARA[VAR[java.lang.String]] +++$+++  RETURN NULL EOL RETURN
CALL[javax.swing.filechooser.FileFilter,accept,1,boolean] PARA[VAR[java.io.File]] +++$+++  LEX[true] EOL IF PARENTHESESSTART
CALL[java.lang.String,lastIndexOf,1,int] PARA[LIT[Character]] +++$+++  EOL INT VAR[INT] OP[assign]
CALL[java.lang.String,endsWith,1,boolean] PARA[LIT[Stirng]] +++$+++  VAR[INT] EOL IF PARENTHESESSTART
CALL[java.util.List,iterator,0,java.util.Iterator<E>] +++$+++  PARENTHESESSTART TYPE[Iterator] VAR[java.util.Iterator] OP[assign]
CALL[java.lang.String,equals,1,boolean] PARA[LIT[Stirng]] +++$+++  EOL ELSE IF PARENTHESESSTART
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART VAR[BOOLEAN] PARENTHESESEND EOL
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[VAR[java.awt.Color]] +++$+++  LEX[sb.append] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART VAR[INT] PARENTHESESEND EOL
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[VAR[java.lang.Object]] +++$+++  LEX[sb.append] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.io.OutputStreamWriter,flush,0,void] +++$+++  PARENTHESESEND THROWS LEX[IOException] CURLYSTART
CALL[java.io.OutputStreamWriter,write,1,void] PARA[VAR[java.lang.String]] +++$+++  LEX[m_writer.write] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.lang.String,length,0,int] +++$+++  LEX[m_indent.length] PARENTHESESSTART PARENTHESESEND OP[sub]
CALL[java.util.Date,getTime,0,long] +++$+++  IF PARENTHESESSTART VAR[LONG] OP[greaterThan]
CALL[java.util.TimeZone,getRawOffset,0,int] +++$+++  TYPE[Date] PARENTHESESSTART VAR[LONG] OP[sub]
CALL[java.util.Date,getTime,0,long] +++$+++  OP[assign] NEW TYPE[Date] PARENTHESESSTART
CALL[java.util.Calendar,getTime,0,java.util.Date] +++$+++  PARENTHESESEND EOL RETURN PARENTHESESSTART
CALL[java.util.Date,getTime,0,long] +++$+++  CURLYSTART LONG VAR[LONG] OP[assign]
CALL[java.io.PrintWriter,println,1,void] PARA[LIT[Stirng]] +++$+++  OP[sum] VAR[BOOLEAN] PARENTHESESEND EOL
CALL[java.io.PrintWriter,flush,0,void] +++$+++  LEX[pw.println] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.io.PrintWriter,println,1,void] PARA[LIT[Stirng]] +++$+++  VAR[java.util.Date] PARENTHESESEND EOL CURLYEND
CALL[java.util.List,contains,1,boolean] PARA[VAR[java.lang.Integer]] +++$+++  VAR[java.lang.Integer] PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.String,substring,2,java.lang.String] PARA[LIT[Integer]] PARA[VAR[INT]] +++$+++  PARENTHESESEND CURLYSTART VAR[java.lang.String] OP[assign]
CALL[java.util.Map,get,1,V] PARA[VAR[java.lang.String]] +++$+++  CURLYSTART TYPE[CodePage] VAR[net.sf.mpxj.CodePage] OP[assign]
CALL[java.util.Date,equals,1,boolean] PARA[FIELD[net.sf.mpxj.TimephasedItem]] +++$+++  FIELD[m_start,net.sf.mpxj.TimephasedItem] PARENTHESESEND OP[bitwiseAnd] OP[bitwiseAnd]
CALL[java.util.Date,hashCode,0,int] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  PARENTHESESEND CURLYSTART VAR[CHAR] OP[assign]
CALL[java.util.HashMap,put,2,V] PARA[VAR[java.lang.String]] PARA[CALL[null,valueOf]] +++$+++  OP[assign] NULL PARENTHESESEND CURLYSTART
CALL[java.lang.Integer,intValue,0,int] +++$+++  EOL CURLYEND RETURN PARENTHESESSTART
CALL[java.math.BigInteger,intValue,0,int] +++$+++  PARENTHESESEND CURLYSTART SWITCH PARENTHESESSTART
CALL[java.lang.Number,doubleValue,0,double] +++$+++  NULL OP[ternaryFalse] LEX[NumberHelper.getDouble] PARENTHESESSTART
CALL[java.lang.ThreadLocal,set,1,void] PARA[VAR[java.text.NumberFormat]] +++$+++  PARENTHESESSTART LEX[false] PARENTHESESEND EOL
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Stirng]] +++$+++  VAR[INT] PARENTHESESEND EOL CURLYEND
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[VAR[INT]] +++$+++  EOL CURLYEND ELSE CURLYSTART
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Stirng]] +++$+++  VAR[INT] PARENTHESESEND EOL CURLYEND
CALL[java.lang.String,length,0,int] +++$+++  OP[sum] OP[assign] PARENTHESESSTART PARENTHESESSTART
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[VAR[CHAR]] +++$+++  OP[not] OP[assign] PARENTHESESEND CURLYSTART
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Stirng]] +++$+++  OP[sum] OP[sum] PARENTHESESEND CURLYSTART
CALL[java.io.InputStream,read,1,int] PARA[VAR[BYTE]] +++$+++  ARRAYEND EOL IF PARENTHESESSTART
CALL[java.util.List,isEmpty,0,boolean] +++$+++  VAR[BYTE] EOL IF PARENTHESESSTART
CALL[java.io.StringWriter,toString,0,java.lang.String] +++$+++  PARENTHESESEND EOL RETURN PARENTHESESSTART
CALL[java.lang.String,length,0,int] +++$+++  OP[sum] OP[assign] PARENTHESESSTART PARENTHESESSTART
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[CALL[java.lang.String,charAt]] +++$+++  TYPE[StringBuilder] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  PARENTHESESEND CURLYSTART LEX[sb.append] PARENTHESESSTART
CALL[java.util.ArrayList,get,1,E] PARA[LIT[Integer]] +++$+++  VAR[java.lang.Integer] OP[assign] LEX[Integer.valueOf] PARENTHESESSTART
CALL[java.util.ArrayList,size,0,int] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.lang.String,endsWith,1,boolean] PARA[LIT[Stirng]] +++$+++  EOL IF PARENTHESESSTART OP[not]
CALL[java.lang.String,matches,1,boolean] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.lang.StringBuilder,toString,0,java.lang.String] +++$+++  PARENTHESESEND EOL RETURN PARENTHESESSTART
CALL[java.lang.StringBuilder,toString,0,java.lang.String] +++$+++  LEX[replacements.put] PARENTHESESSTART VAR[java.lang.String] COMMA
CALL[java.lang.Class,hashCode,0,int] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.String,equals,1,boolean] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESEND PARENTHESESEND OP[bitwiseAnd] OP[bitwiseAnd]
CALL[java.util.StringTokenizer,hasMoreTokens,0,boolean] +++$+++  PARENTHESESEND EOL WHILE PARENTHESESSTART
CALL[javax.swing.JLabel,setIcon,1,void] PARA[VAR[javax.swing.ImageIcon]] +++$+++  VAR[javax.swing.ImageIcon] OP[assign] VAR[javax.swing.ImageIcon] EOL
CALL[java.util.HashMap,remove,1,V] PARA[CALL[com.projity.pm.graphic.pert.DependencyGraph.Node,getValue]] +++$+++  LEX[pre.isolated] PARENTHESESSTART PARENTHESESEND PARENTHESESEND
CALL[java.awt.geom.GeneralPath,reset,0,void] +++$+++  EOL VAR[FLOAT] OP[assign] EOL
CALL[java.util.Map,get,1,V] PARA[VAR[java.lang.Object]] +++$+++  RETURN NULL EOL RETURN
CALL[java.util.ArrayList,add,1,boolean] PARA[VAR[java.lang.Object]] +++$+++  LEX[Object] VAR[java.lang.Object] PARENTHESESEND CURLYSTART
CALL[java.util.ListIterator,previous,0,E] +++$+++  EOL PARENTHESESEND LEX[f.execute] PARENTHESESSTART
CALL[javax.swing.JScrollPane,getViewport,0,javax.swing.JViewport] +++$+++  CURLYSTART TYPE[JViewport] VAR[javax.swing.JViewport] OP[assign]
CALL[javax.swing.JScrollPane,getViewport,0,javax.swing.JViewport] +++$+++  EOL TYPE[JViewport] VAR[javax.swing.JViewport] OP[assign]
CALL[javax.swing.JViewport,revalidate,0,void] +++$+++  PARENTHESESSTART VAR[java.awt.Point] PARENTHESESEND EOL
CALL[java.awt.Point,getY,0,double] +++$+++  COMMA PARENTHESESSTART INT PARENTHESESEND
CALL[javax.swing.JEditorPane,setText,1,void] PARA[VAR[java.lang.String]] +++$+++  STRING VAR[java.lang.String] PARENTHESESEND CURLYSTART
CALL[java.lang.String,substring,2,java.lang.String] PARA[LIT[Integer]] PARA[CALL[java.lang.String,indexOf]] +++$+++  PARENTHESESEND EOL VAR[java.lang.String] OP[assign]
CALL[javax.swing.JSpinner,getValue,0,java.lang.Object] +++$+++  VAR[BOOLEAN] PARENTHESESEND LEX[scaleToHeight.setValue] PARENTHESESSTART
CALL[java.awt.LayoutManager,preferredLayoutSize,1,java.awt.Dimension] PARA[VAR[java.awt.Container]] +++$+++  VAR[java.awt.Container] PARENTHESESEND CURLYSTART RETURN
CALL[java.awt.image.ColorModel,isAlphaPremultiplied,0,boolean] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND COMMA
CALL[java.awt.image.BufferedImage,setRGB,7,void] PARA[VAR[INT]] PARA[VAR[INT]] PARA[VAR[INT]] PARA[VAR[INT]] PARA[VAR[INT]] PARA[LIT[Integer]] PARA[VAR[INT]] +++$+++  EOL CURLYEND ELSE CURLYSTART
CALL[java.awt.GraphicsDevice,getDefaultConfiguration,0,java.awt.GraphicsConfiguration] +++$+++  EOL TYPE[GraphicsConfiguration] VAR[java.awt.GraphicsConfiguration] OP[assign]
CALL[javax.swing.AbstractButton,paint,1,void] PARA[CALL[java.awt.image.BufferedImage,getGraphics]] +++$+++  COMMA LEX[Transparency.TRANSLUCENT] PARENTHESESEND EOL
CALL[java.awt.image.BufferedImage,getRGB,2,int] PARA[LIT[Integer]] PARA[VAR[INT]] +++$+++  CURLYSTART INT VAR[INT] OP[assign]
CALL[java.awt.image.BufferedImage,getRGB,2,int] PARA[VAR[INT]] PARA[LIT[Integer]] +++$+++  CURLYSTART INT VAR[INT] OP[assign]
CALL[java.util.Collection,iterator,0,java.util.Iterator<E>] +++$+++  PARENTHESESSTART TYPE[Iterator] VAR[java.util.Iterator] OP[assign]
CALL[java.util.Iterator,next,0,E] +++$+++  OP[assign] PARENTHESESSTART TYPE[DataObject] PARENTHESESEND
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[VAR[CHAR]] +++$+++  OP[assign] OP[assign] PARENTHESESEND CURLYSTART
CALL[java.lang.StringBuffer,toString,0,java.lang.String] +++$+++  VAR[INT] OP[assign] LEX[Integer.parseInt] PARENTHESESSTART
CALL[java.lang.StringBuffer,toString,0,java.lang.String] +++$+++  VAR[INT] OP[assign] LEX[Integer.parseInt] PARENTHESESSTART
CALL[java.awt.Graphics,setColor,1,void] PARA[VAR[java.awt.Color]] +++$+++  INT VAR[INT] PARENTHESESEND CURLYSTART
CALL[java.lang.String,equals,1,boolean] PARA[CALL[java.lang.reflect.Method,getName]] +++$+++  OP[assign] NULL OP[bitwiseAnd] OP[bitwiseAnd]
CALL[java.util.Iterator,hasNext,0,boolean] +++$+++  OP[assign] EOL WHILE PARENTHESESSTART
CALL[java.util.Hashtable,elements,0,java.util.Enumeration<V>] +++$+++  EOL TYPE[Enumeration] VAR[java.util.Enumeration] OP[assign]
CALL[java.util.Enumeration,nextElement,0,E] +++$+++  OP[assign] PARENTHESESSTART TYPE[Point] PARENTHESESEND
CALL[java.util.Enumeration,hasMoreElements,0,boolean] +++$+++  PARENTHESESEND EOL WHILE PARENTHESESSTART
CALL[java.net.Socket,getInputStream,0,java.io.InputStream] +++$+++  OP[assign] NEW TYPE[DataInputStream] PARENTHESESSTART
CALL[java.lang.Thread,start,0,void] +++$+++  PARENTHESESSTART LEX[Thread.MIN_PRIORITY] PARENTHESESEND EOL
CALL[java.net.URLConnection,connect,0,void] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND EOL
CALL[java.io.PrintWriter,flush,0,void] +++$+++  VAR[java.lang.String] PARENTHESESEND PARENTHESESEND EOL
CALL[java.io.PrintWriter,flush,0,void] +++$+++  LEX[out.print] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.io.PrintWriter,print,1,void] PARA[LIT[Stirng]] +++$+++  LEX[out.print] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.io.PrintWriter,print,1,void] PARA[LIT[Stirng]] +++$+++  LEX[out.print] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.lang.StringBuffer,toString,0,java.lang.String] +++$+++  COMMA PARENTHESESEND EOL RETURN
CALL[java.lang.String,substring,1,java.lang.String] PARA[VAR[INT]] +++$+++  PARENTHESESSTART PARENTHESESEND EOL RETURN
CALL[java.lang.String,indexOf,1,int] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND CURLYSTART VAR[INT] OP[assign]
CALL[java.lang.String,length,0,int] +++$+++  VAR[INT] OP[assign] OP[assign] PARENTHESESSTART
CALL[java.io.PrintStream,println,1,void] PARA[VAR[java.lang.String]] +++$+++  EOL CURLYEND ELSE CURLYSTART
CALL[java.lang.String,lastIndexOf,1,int] PARA[LIT[Stirng]] +++$+++  OP[assign] LEX[f.substring] PARENTHESESSTART COMMA
CALL[java.lang.String,toLowerCase,0,java.lang.String] +++$+++  TYPE[String] PARENTHESESEND LEX[extensionMap.get] PARENTHESESSTART
CALL[javax.swing.table.TableColumn,setMinWidth,1,void] PARA[LIT[Integer]] +++$+++  OP[assign] OP[assign] PARENTHESESEND CURLYSTART
CALL[javax.swing.JTable,getTableHeader,0,javax.swing.table.JTableHeader] +++$+++  CURLYSTART TYPE[JTableHeader] VAR[javax.swing.table.JTableHeader] OP[assign]
CALL[java.awt.GridBagLayout,setConstraints,2,void] PARA[VAR[javax.swing.JLabel]] PARA[VAR[java.awt.GridBagConstraints]] +++$+++  EOL FIELD[gridy,java.awt.GridBagConstraints] OP[assign] EOL
CALL[javax.swing.JPanel,add,1,java.awt.Component] PARA[VAR[javax.swing.JTextField]] +++$+++  PARENTHESESSTART VAR[javax.swing.JTextField] PARENTHESESEND EOL
CALL[javax.swing.JList,getSelectedIndex,0,int] +++$+++  CURLYSTART INT VAR[INT] OP[assign]
CALL[javax.swing.DefaultListModel,elementAt,1,E] PARA[CALL[javax.swing.JList,getSelectedIndex]] +++$+++  RETURN PARENTHESESSTART TYPE[FtpHost] PARENTHESESEND
CALL[javax.swing.JTextField,setEnabled,1,void] PARA[LIT[Boolean]] +++$+++  PARENTHESESSTART LEX[true] PARENTHESESEND EOL
CALL[javax.swing.JTextField,setText,1,void] PARA[LIT[Stirng]] +++$+++  OP[assign] NULL PARENTHESESEND CURLYSTART
CALL[javax.swing.JTextField,setText,1,void] PARA[LIT[Stirng]] +++$+++  LEX[jtfName.setText] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.net.URL,openStream,0,java.io.InputStream] +++$+++  PARENTHESESSTART NEW TYPE[BufferedInputStream] PARENTHESESSTART
CALL[javax.swing.JTextArea,setText,1,void] PARA[LIT[Stirng]] +++$+++  LEX[setDefaultText] PARENTHESESSTART PARENTHESESEND CURLYSTART
CALL[java.io.PrintStream,close,0,void] +++$+++  LEX[out.flush] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.lang.String,substring,2,java.lang.String] PARA[LIT[Integer]] PARA[CALL[java.lang.String,lastIndexOf]] +++$+++  PARENTHESESEND EOL VAR[java.lang.String] OP[assign]
CALL[javax.swing.JLabel,getText,0,java.lang.String] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.awt.Image,getWidth,1,int] PARA[THIS[null]] +++$+++  CURLYEND INT VAR[INT] OP[assign]
CALL[java.util.Set,remove,1,boolean] PARA[VAR[java.lang.String]] +++$+++  OP[assign] NULL PARENTHESESEND CURLYSTART
CALL[java.awt.Graphics,setFont,1,void] PARA[VAR[java.awt.Font]] +++$+++  STRING VAR[java.lang.String] PARENTHESESEND CURLYSTART
CALL[java.lang.String,startsWith,1,boolean] PARA[LIT[Stirng]] +++$+++  OP[assign] NULL OP[bitwiseAnd] OP[bitwiseAnd]
CALL[java.util.logging.Logger,warning,1,void] PARA[VAR[java.lang.String]] +++$+++  OP[not] OP[assign] NULL PARENTHESESEND
CALL[java.lang.String,startsWith,1,boolean] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.String,indexOf,1,int] PARA[LIT[Stirng]] +++$+++  EOL INT VAR[INT] OP[assign]
CALL[java.lang.String,startsWith,1,boolean] PARA[VAR[java.lang.String]] +++$+++  VAR[java.util.List] PARENTHESESEND IF PARENTHESESSTART
CALL[java.util.List,iterator,0,java.util.Iterator<E>] +++$+++  TYPE[String] OP[greaterThan] VAR[java.util.Iterator] OP[assign]
CALL[java.util.Iterator,hasNext,0,boolean] +++$+++  PARENTHESESEND EOL WHILE PARENTHESESSTART
CALL[java.lang.String,length,0,int] +++$+++  OP[assign] LEX[h.substring] PARENTHESESSTART COMMA
CALL[java.util.Iterator,next,0,E] +++$+++  PARENTHESESEND CURLYSTART LEX[out.append] PARENTHESESSTART
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND EOL CURLYEND CURLYEND
CALL[java.lang.String,startsWith,1,boolean] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[LIT[Stirng]] +++$+++  CONTINUE EOL CASE OP[ternaryFalse]
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[LIT[Stirng]] +++$+++  CONTINUE EOL CASE OP[ternaryFalse]
CALL[java.lang.String,length,0,int] +++$+++  PARENTHESESSTART PARENTHESESEND OP[sub] COMMA
CALL[java.io.File,exists,0,boolean] +++$+++  CURLYEND WHILE PARENTHESESSTART OP[not]
CALL[java.util.Map,get,1,V] PARA[VAR[java.lang.String]] +++$+++  EOL TYPE[Class] VAR[java.lang.Class] OP[assign]
CALL[java.lang.Exception,printStackTrace,0,void] +++$+++  TYPE[Exception] VAR[java.lang.Exception] PARENTHESESEND CURLYSTART
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[LIT[Stirng]] +++$+++  CONTINUE EOL CASE OP[ternaryFalse]
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  PARENTHESESSTART PARENTHESESSTART VAR[CHAR] OP[assign]
CALL[java.lang.String,endsWith,1,boolean] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART PARENTHESESEND OP[bitwiseAnd] OP[bitwiseAnd]
CALL[javax.swing.JPanel,revalidate,0,void] +++$+++  PARENTHESESSTART VAR[javax.swing.JButton] PARENTHESESEND EOL
CALL[java.io.ByteArrayOutputStream,write,1,void] PARA[VAR[INT]] +++$+++  PARENTHESESSTART PARENTHESESEND EOL CURLYEND
CALL[java.io.InputStream,read,0,int] +++$+++  PARENTHESESEND EOL VAR[INT] OP[assign]
CALL[java.util.List,get,1,E] PARA[VAR[INT]] +++$+++  OP[assign] PARENTHESESSTART TYPE[String] PARENTHESESEND
CALL[java.lang.String,replace,2,java.lang.String] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND EOL VAR[java.lang.String] OP[assign]
CALL[java.io.FileWriter,write,1,void] PARA[VAR[java.lang.String]] +++$+++  VAR[java.lang.String] PARENTHESESEND PARENTHESESEND EOL
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[VAR[CHAR]] +++$+++  PARENTHESESEND EOL DEFAULT OP[ternaryFalse]
CALL[java.lang.StringBuffer,toString,0,java.lang.String] +++$+++  OP[assign] NEW TYPE[RE] PARENTHESESSTART
CALL[java.lang.StringBuffer,toString,0,java.lang.String] +++$+++  OP[greaterThan] PARENTHESESEND LEX[extensions.add] PARENTHESESSTART
CALL[java.lang.Exception,printStackTrace,0,void] +++$+++  TYPE[Exception] VAR[java.lang.Exception] PARENTHESESEND CURLYSTART
CALL[java.lang.Exception,printStackTrace,0,void] +++$+++  TYPE[Exception] VAR[java.lang.Exception] PARENTHESESEND CURLYSTART
CALL[java.lang.String,substring,2,java.lang.String] PARA[LIT[Integer]] PARA[VAR[INT]] +++$+++  OP[greaterThan] PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.String,lastIndexOf,1,int] PARA[LIT[Stirng]] +++$+++  ELSE CURLYSTART VAR[INT] OP[assign]
CALL[java.io.BufferedReader,readLine,0,java.lang.String] +++$+++  CURLYSTART TYPE[String] VAR[java.lang.String] OP[assign]
CALL[java.awt.event.ActionListener,actionPerformed,1,void] PARA[VAR[java.awt.event.ActionEvent]] +++$+++  LEX[ActionListener.class] PARENTHESESEND PARENTHESESEND CURLYSTART
CALL[javax.swing.JComponent,isOpaque,0,boolean] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[javax.swing.JComponent,isOpaque,0,boolean] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[javax.swing.JComponent,getHeight,0,int] +++$+++  EOL INT VAR[INT] OP[assign]
CALL[javax.swing.UIDefaults,keys,0,java.util.Enumeration<K>] +++$+++  TYPE[Object] OP[greaterThan] VAR[java.util.Enumeration] OP[assign]
CALL[java.awt.Color,getRed,0,int] +++$+++  PARENTHESESEND CURLYSTART RETURN PARENTHESESSTART
CALL[java.awt.Graphics,setColor,1,void] PARA[CALL[javax.swing.JComponent,getBackground]] +++$+++  CURLYEND CURLYEND ELSE CURLYSTART
CALL[java.awt.Graphics2D,dispose,0,void] +++$+++  COMMA COMMA PARENTHESESEND EOL
CALL[java.util.logging.Logger,info,1,void] PARA[LIT[Stirng]] +++$+++  LEX[Dimension] LEX[desiredWindowSize] PARENTHESESEND CURLYSTART
CALL[javax.swing.JLabel,setSize,2,void] PARA[VAR[INT]] PARA[VAR[INT]] +++$+++  VAR[java.awt.image.BufferedImage] PARENTHESESEND PARENTHESESEND EOL
CALL[java.awt.image.BufferedImage,createGraphics,0,java.awt.Graphics2D] +++$+++  EOL TYPE[Graphics2D] VAR[java.awt.Graphics2D] OP[assign]
CALL[java.awt.image.BufferedImage,getWidth,0,int] +++$+++  OP[assign] PARENTHESESSTART VAR[INT] OP[sub]
CALL[java.awt.image.BufferedImage,getWidth,0,int] +++$+++  COMMA PARENTHESESSTART VAR[INT] OP[sub]
CALL[java.awt.image.BufferedImage,getWidth,0,int] +++$+++  COMMA PARENTHESESSTART VAR[INT] OP[sub]
CALL[javax.swing.JTextArea,setEditable,1,void] PARA[LIT[Boolean]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.awt.geom.GeneralPath,transform,1,void] PARA[CALL[null,getTranslateInstance]] +++$+++  COMMA PARENTHESESEND PARENTHESESEND EOL
CALL[java.awt.geom.GeneralPath,transform,1,void] PARA[CALL[null,getTranslateInstance]] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND EOL
CALL[java.awt.Graphics2D,setColor,1,void] PARA[CALL[java.util.List,get]] +++$+++  OP[sum] OP[sum] PARENTHESESEND CURLYSTART
CALL[java.awt.Graphics2D,fill,1,void] PARA[VAR[java.awt.geom.Rectangle2D.Double]] +++$+++  COMMA VAR[DOUBLE] PARENTHESESEND EOL
CALL[java.awt.Graphics2D,setColor,1,void] PARA[CALL[java.util.List,get]] +++$+++  VAR[INT] ARRAYEND PARENTHESESEND EOL
CALL[java.awt.Graphics2D,fill,1,void] PARA[VAR[java.awt.geom.GeneralPath]] +++$+++  VAR[INT] PARENTHESESEND PARENTHESESEND EOL
CALL[java.awt.geom.GeneralPath,reset,0,void] +++$+++  PARENTHESESSTART VAR[java.awt.geom.GeneralPath] PARENTHESESEND EOL
CALL[java.awt.geom.GeneralPath,moveTo,2,void] PARA[LIT[Integer]] PARA[VAR[DOUBLE]] +++$+++  EOL CURLYEND ELSE CURLYSTART
CALL[javax.swing.JTextArea,setOpaque,1,void] PARA[LIT[Boolean]] +++$+++  PARENTHESESSTART VAR[java.lang.String] PARENTHESESEND EOL
CALL[javax.swing.JComponent,getBorder,0,javax.swing.border.Border] +++$+++  OP[assign] PARENTHESESSTART TYPE[TitledBorder] PARENTHESESEND
CALL[java.lang.String,substring,1,java.lang.String] PARA[LIT[Integer]] +++$+++  ARRAYSTART ARRAYEND CURLYSTART COMMA
CALL[java.util.concurrent.LinkedBlockingQueue,add,1,boolean] PARA[VAR[java.lang.Runnable]] +++$+++  LEX[Runnable] VAR[java.lang.Runnable] PARENTHESESEND CURLYSTART
CALL[java.util.Map,get,1,V] PARA[VAR[net.sf.freecol.common.util.CollectionUtils.incrementMapCount(java.util.Map<K, java.lang.Integer>, K).K]] +++$+++  PARENTHESESSTART VAR[net.sf.freecol.common.util.CollectionUtils.incrementMapCount(java.util.Map<K, java.lang.Integer>, K).K] PARENTHESESEND OP[ternaryTrue]
CALL[java.util.List,remove,1,E] PARA[LIT[Integer]] +++$+++  CURLYSTART TYPE[T] VAR[net.sf.freecol.common.util.CollectionUtils.rotate(java.util.List<T>, int).T] OP[assign]
CALL[java.util.List,set,2,E] PARA[VAR[INT]] PARA[VAR[net.sf.freecol.common.util.CollectionUtils.reverse(java.util.List<T>).T]] +++$+++  VAR[INT] PARENTHESESEND PARENTHESESEND EOL
CALL[java.util.List,iterator,0,java.util.Iterator<E>] +++$+++  TYPE[T] OP[greaterThan] VAR[java.util.Iterator] OP[assign]
CALL[java.util.stream.Stream,anyMatch,1,boolean] PARA[VAR[java.util.function.Predicate]] +++$+++  VAR[java.util.function.Predicate] PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.String,length,0,int] +++$+++  LEX[sb.length] PARENTHESESSTART PARENTHESESEND OP[sub]
CALL[java.lang.String,length,0,int] +++$+++  CURLYSTART INT VAR[INT] OP[assign]
CALL[java.lang.String,substring,2,java.lang.String] PARA[VAR[INT]] PARA[VAR[INT]] +++$+++  CURLYEND TYPE[String] VAR[java.lang.String] OP[assign]
CALL[java.util.List,add,1,boolean] PARA[VAR[java.lang.String]] +++$+++  LEX[top.isEmpty] PARENTHESESSTART PARENTHESESEND PARENTHESESEND
CALL[java.lang.Class,getName,0,java.lang.String] +++$+++  THROW NEW TYPE[IllegalArgumentException] PARENTHESESSTART
CALL[java.lang.reflect.Method,getReturnType,0,java.lang.Class<? extends java.lang.Object>] +++$+++  TRY CURLYSTART VAR[java.lang.Class] OP[assign]
CALL[java.lang.Object,hashCode,0,int] +++$+++  NULL PARENTHESESEND OP[ternaryTrue] OP[ternaryFalse]
CALL[java.util.Locale,getVariant,0,java.lang.String] +++$+++  EOL TYPE[String] VAR[java.lang.String] OP[assign]
CALL[java.io.File,canRead,0,boolean] +++$+++  PARENTHESESSTART PARENTHESESEND OP[bitwiseAnd] OP[bitwiseAnd]
CALL[java.lang.String,startsWith,1,boolean] PARA[LIT[Stirng]] +++$+++  CURLYSTART IF PARENTHESESSTART OP[not]
CALL[java.lang.String,startsWith,1,boolean] PARA[LIT[Stirng]] +++$+++  CURLYSTART IF PARENTHESESSTART OP[not]
CALL[java.io.BufferedReader,readLine,0,java.lang.String] +++$+++  EOL CURLYEND VAR[java.lang.String] OP[assign]
CALL[java.util.HashMap,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[net.sf.freecol.common.resources.FAFile.FAName]] +++$+++  ARRAYEND PARENTHESESEND EOL CURLYEND
CALL[java.lang.String,startsWith,1,boolean] PARA[LIT[Stirng]] +++$+++  NULL OP[bitwiseAnd] OP[bitwiseAnd] OP[not]
CALL[java.lang.String,isEmpty,0,boolean] +++$+++  OP[assign] NULL OP[bitwiseOr] OP[bitwiseOr]
CALL[java.io.Writer,close,0,void] +++$+++  PARENTHESESEND CURLYSTART TRY CURLYSTART
CALL[java.lang.String,isEmpty,0,boolean] +++$+++  NULL OP[bitwiseAnd] OP[bitwiseAnd] OP[not]
CALL[java.lang.StringBuilder,length,0,int] +++$+++  NULL EOL WHILE PARENTHESESSTART
CALL[java.util.List,add,1,boolean] PARA[VAR[net.sf.freecol.server.ai.ProductionCache.Entry]] +++$+++  OP[assign] LEX[workLocation] PARENTHESESEND CURLYSTART
CALL[java.util.ResourceBundle,getLocale,0,java.util.Locale] +++$+++  EOL CURLYEND VAR[java.util.Locale] OP[assign]
CALL[java.util.Map,remove,1,V] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART VAR[java.lang.Object] PARENTHESESEND EOL
CALL[java.lang.String,replaceAll,2,java.lang.String] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND CURLYSTART LEX[result.add] PARENTHESESSTART
CALL[java.lang.String,indexOf,1,int] PARA[VAR[CHAR]] +++$+++  OP[assign] NULL OP[bitwiseOr] OP[bitwiseOr]
CALL[java.lang.String,getBytes,0,byte[]] +++$+++  OP[assign] NEW TYPE[SecretKeySpec] PARENTHESESSTART
CALL[java.io.BufferedReader,readLine,0,java.lang.String] +++$+++  EOL TYPE[String] VAR[java.lang.String] OP[assign]
CALL[java.lang.String,indexOf,1,int] PARA[LIT[Character]] +++$+++  CURLYEND ELSE IF PARENTHESESSTART
CALL[java.lang.String,substring,2,java.lang.String] PARA[LIT[Integer]] PARA[CALL[java.lang.String,lastIndexOf]] +++$+++  CURLYSTART TYPE[String] VAR[java.lang.String] OP[assign]
CALL[java.lang.String,equals,1,boolean] PARA[LIT[Stirng]] +++$+++  EOL CURLYEND IF PARENTHESESSTART
CALL[java.awt.Polygon,addPoint,2,void] PARA[LIT[Integer]] PARA[LIT[Integer]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.awt.geom.GeneralPath,curveTo,6,void] PARA[VAR[INT]] PARA[VAR[INT]] PARA[VAR[INT]] PARA[VAR[INT]] PARA[VAR[INT]] PARA[VAR[INT]] +++$+++  COMMA VAR[INT] PARENTHESESEND EOL
CALL[java.awt.image.BufferedImage,createGraphics,0,java.awt.Graphics2D] +++$+++  EOL TYPE[Graphics2D] VAR[java.awt.Graphics2D] OP[assign]
CALL[java.awt.Graphics2D,dispose,0,void] +++$+++  PARENTHESESSTART VAR[java.awt.geom.Area] PARENTHESESEND EOL
CALL[javax.swing.JTree,expandRow,1,void] PARA[VAR[INT]] +++$+++  OP[sum] OP[sum] PARENTHESESEND CURLYSTART
CALL[java.util.Properties,getProperty,1,java.lang.String] PARA[VAR[java.lang.String]] +++$+++  LEX[systemProperties.put] PARENTHESESSTART VAR[java.lang.String] COMMA
CALL[java.awt.event.MouseEvent,getX,0,int] +++$+++  VAR[INT] OP[assign] LEX[tree.getRowForLocation] PARENTHESESSTART
CALL[java.io.File,delete,0,boolean] +++$+++  PARENTHESESEND OP[bitwiseAnd] OP[bitwiseAnd] OP[not]
CALL[java.util.StringTokenizer,nextToken,0,java.lang.String] +++$+++  EOL TYPE[String] VAR[java.lang.String] OP[assign]
CALL[java.io.File,mkdirs,0,boolean] +++$+++  PARENTHESESEND OP[bitwiseAnd] OP[bitwiseAnd] OP[not]
CALL[java.lang.String,length,0,int] +++$+++  PARENTHESESEND CURLYSTART VAR[INT] OP[assign]
CALL[java.lang.String,startsWith,1,boolean] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESEND CURLYSTART VAR[java.lang.String] OP[assign]
CALL[java.util.List,size,0,int] +++$+++  LEX[lines.subList] PARENTHESESSTART VAR[INT] COMMA
CALL[java.lang.String,substring,2,java.lang.String] PARA[VAR[INT]] PARA[CALL[java.lang.String,length]] +++$+++  PARENTHESESEND EOL VAR[java.lang.String] OP[assign]
CALL[java.lang.Object,hashCode,0,int] +++$+++  NULL PARENTHESESEND OP[ternaryTrue] OP[ternaryFalse]
CALL[java.util.Map,get,1,V] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESSTART PARENTHESESSTART TYPE[String] PARENTHESESEND
CALL[java.lang.String,substring,2,java.lang.String] PARA[VAR[INT]] PARA[VAR[INT]] +++$+++  PARENTHESESEND CURLYSTART VAR[java.lang.String] OP[assign]
CALL[java.util.concurrent.ScheduledFuture,cancel,1,boolean] PARA[LIT[Boolean]] +++$+++  LEX[Logger.info] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.lang.String,split,1,java.lang.String[]] PARA[LIT[Stirng]] +++$+++  ARRAYSTART ARRAYEND VAR[java.lang.String] OP[assign]
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESSTART PARENTHESESEND EOL CURLYEND
CALL[java.lang.String,indexOf,1,int] PARA[LIT[Character]] +++$+++  VAR[java.lang.String] OP[assign] LEX[uri.substring] PARENTHESESSTART
CALL[java.lang.String,split,1,java.lang.String[]] PARA[LIT[Stirng]] +++$+++  ARRAYSTART ARRAYEND VAR[java.lang.String] OP[assign]
CALL[java.util.List,remove,1,boolean] PARA[VAR[javax.swing.event.TableModelListener]] +++$+++  LEX[TableModelListener] VAR[javax.swing.event.TableModelListener] PARENTHESESEND CURLYSTART
CALL[java.util.Set,add,1,boolean] PARA[VAR[java.lang.String]] +++$+++  OP[ternaryFalse] LEX[seriesInfo.aliasNames] PARENTHESESEND CURLYSTART
CALL[java.util.Map.Entry,getKey,0,K] +++$+++  PARENTHESESEND CURLYSTART LEX[connection.addRequestProperty] PARENTHESESSTART
CALL[java.net.HttpURLConnection,addRequestProperty,2,void] PARA[CALL[java.util.Map.Entry,getKey]] PARA[CALL[java.util.Map.Entry,getValue]] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND CURLYSTART
CALL[java.util.List,size,0,int] +++$+++  OP[assign] NULL OP[bitwiseAnd] OP[bitwiseAnd]
CALL[java.util.regex.Matcher,group,1,java.lang.String] PARA[LIT[Integer]] +++$+++  TYPE[SimpleDate] PARENTHESESSTART LEX[Integer.parseInt] PARENTHESESSTART
CALL[java.util.Iterator,remove,0,void] +++$+++  LEX[remove] PARENTHESESSTART PARENTHESESEND CURLYSTART
CALL[java.lang.Throwable,getMessage,0,java.lang.String] +++$+++  CURLYSTART TYPE[String] VAR[java.lang.String] OP[assign]
CALL[java.lang.Thread,isDaemon,0,boolean] +++$+++  PARENTHESESSTART VAR[BOOLEAN] OP[not] OP[assign]
CALL[java.nio.ByteBuffer,remaining,0,int] +++$+++  PARENTHESESEND CURLYSTART VAR[INT] OP[assign]
CALL[java.nio.ByteBuffer,remaining,0,int] +++$+++  THROWS LEX[IOException] CURLYSTART RETURN
CALL[java.util.Map,get,1,V] PARA[VAR[java.lang.String]] +++$+++  TYPE[String] OP[greaterThan] VAR[java.util.Map] OP[assign]
CALL[java.io.File,getParentFile,0,java.io.File] +++$+++  OP[assign] NEW TYPE[File] PARENTHESESSTART
CALL[java.io.FileFilter,accept,1,boolean] PARA[VAR[java.io.File]] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.util.LinkedList,addLast,1,void] PARA[VAR[java.io.File]] +++$+++  PARENTHESESSTART VAR[BOOLEAN] PARENTHESESEND CURLYSTART
CALL[java.io.File,getParentFile,0,java.io.File] +++$+++  OP[sum] COMMA VAR[java.io.File] OP[assign]
CALL[java.util.SortedMap,get,1,V] PARA[VAR[java.io.File]] +++$+++  TYPE[File] OP[greaterThan] VAR[java.util.List] OP[assign]
CALL[java.nio.ByteBuffer,capacity,0,int] +++$+++  PARENTHESESSTART VAR[INT] OP[lessThan] OP[assign]
CALL[java.lang.Exception,toString,0,java.lang.String] +++$+++  COMMA COMMA VAR[java.lang.String] COMMA
CALL[java.awt.Graphics2D,setPaint,1,void] PARA[CALL[java.awt.Component,getBackground]] +++$+++  COMMA LEX[RenderingHints.VALUE_ANTIALIAS_ON] PARENTHESESEND EOL
CALL[java.awt.Graphics2D,setPaint,1,void] PARA[VAR[java.awt.Color]] +++$+++  COMMA VAR[INT] PARENTHESESEND EOL
CALL[javax.swing.JComponent,setVisible,1,void] PARA[LIT[Boolean]] +++$+++  EOL CURLYEND ELSE CURLYSTART
CALL[javax.swing.JComponent,setVisible,1,void] PARA[LIT[Boolean]] +++$+++  PARENTHESESSTART VAR[BOOLEAN] PARENTHESESEND CURLYSTART
CALL[java.awt.geom.RectangularShape,getCenterX,0,double] +++$+++  OP[assign] NEW LEX[Point2D.Double] PARENTHESESSTART
CALL[java.awt.geom.RectangularShape,getCenterY,0,double] +++$+++  LEX[shape.getMinX] PARENTHESESSTART PARENTHESESEND COMMA
CALL[java.awt.geom.RectangularShape,getMinX,0,double] +++$+++  OP[assign] NEW LEX[Point2D.Double] PARENTHESESSTART
CALL[java.awt.geom.RectangularShape,getMaxX,0,double] +++$+++  OP[assign] NEW LEX[Point2D.Double] PARENTHESESSTART
CALL[java.awt.geom.RectangularShape,getMinX,0,double] +++$+++  OP[assign] NEW LEX[Point2D.Double] PARENTHESESSTART
CALL[java.awt.geom.RectangularShape,getMinY,0,double] +++$+++  LEX[shape.getMinX] PARENTHESESSTART PARENTHESESEND COMMA
CALL[java.awt.geom.RectangularShape,getMaxY,0,double] +++$+++  LEX[shape.getMinX] PARENTHESESSTART PARENTHESESEND COMMA
CALL[javax.swing.Timer,restart,0,void] +++$+++  VAR[javax.swing.event.DocumentEvent] OP[assign] VAR[javax.swing.event.DocumentEvent] EOL
CALL[java.awt.Color,getBlue,0,int] +++$+++  LEX[c2.getGreen] PARENTHESESSTART PARENTHESESEND COMMA
CALL[java.awt.Frame,getExtendedState,0,int] +++$+++  PARENTHESESEND CURLYSTART RETURN PARENTHESESSTART
CALL[java.nio.file.attribute.UserDefinedFileAttributeView,list,0,java.util.List<java.lang.String>] +++$+++  PARENTHESESEND VAR[java.lang.Object] EOL RETURN
CALL[java.util.regex.Matcher,group,0,java.lang.String] +++$+++  PARENTHESESEND CURLYSTART VAR[java.lang.String] OP[assign]
CALL[java.lang.LinkageError,getMessage,0,java.lang.String] +++$+++  VAR[java.lang.String] COMMA VAR[java.lang.String] COMMA
CALL[java.lang.reflect.Method,invoke,2,java.lang.Object] PARA[VAR[java.lang.Object]] PARA[VAR[java.lang.Object]] +++$+++  THROWS LEX[Exception] CURLYSTART RETURN
CALL[java.lang.String,toUpperCase,0,java.lang.String] +++$+++  VAR[java.lang.String] PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.String,length,0,int] +++$+++  PARENTHESESSTART VAR[INT] OP[greaterThan] OP[assign]
CALL[java.util.Map,remove,1,V] PARA[VAR[java.lang.Object]] +++$+++  VAR[java.lang.Object] PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.Integer,compareTo,1,int] PARA[VAR[java.lang.Integer]] +++$+++  PARENTHESESEND RETURN EOL RETURN
CALL[javax.swing.JLabel,setText,1,void] PARA[VAR[java.lang.String]] +++$+++  STRING VAR[java.lang.String] PARENTHESESEND CURLYSTART
CALL[javax.swing.JButton,setContentAreaFilled,1,void] PARA[LIT[Boolean]] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND EOL
CALL[javax.swing.JList,getSelectedValue,0,E] +++$+++  PARENTHESESSTART VAR[java.lang.String] PARENTHESESEND OP[ternaryTrue]
CALL[net.filebot.ui.transfer.ArrayTransferable.T,getClass,0,java.lang.Class<? extends java.lang.Object>] +++$+++  CURLYSTART NEW TYPE[DataFlavor] PARENTHESESSTART
CALL[javax.swing.JTable,getModel,0,javax.swing.table.TableModel] +++$+++  OP[assign] PARENTHESESSTART TYPE[SubtitleMappingTableModel] PARENTHESESEND
CALL[javax.swing.JSpinner,getValue,0,java.lang.Object] +++$+++  RETURN PARENTHESESSTART TYPE[Integer] PARENTHESESEND
CALL[java.io.InputStream,read,0,int] +++$+++  PARENTHESESEND CURLYSTART VAR[INT] OP[assign]
CALL[java.io.File,getParent,0,java.lang.String] +++$+++  PARENTHESESSTART LEX[String.join] PARENTHESESSTART COMMA
CALL[java.lang.String,length,0,int] +++$+++  OP[assign] NULL OP[bitwiseAnd] OP[bitwiseAnd]
CALL[java.util.function.Function,apply,1,R] PARA[VAR[java.lang.String]] +++$+++  COMMA LEX[k] OP[sub] OP[greaterThan]
CALL[java.util.List,equals,1,boolean] PARA[FIELD[net.filebot.History]] +++$+++  PARENTHESESEND VAR[java.lang.Object] EOL RETURN
CALL[java.io.File,getParentFile,0,java.io.File] +++$+++  RETURN NEW TYPE[File] PARENTHESESSTART
CALL[java.io.File,getAbsoluteFile,0,java.io.File] +++$+++  LEX[IOException] CURLYSTART VAR[java.io.File] OP[assign]
CALL[java.lang.Float,floatValue,0,float] +++$+++  CURLYEND ELSE IF PARENTHESESSTART
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND PARENTHESESEND PARENTHESESEND CURLYSTART
CALL[java.lang.Float,floatValue,0,float] +++$+++  NULL OP[bitwiseAnd] OP[bitwiseAnd] PARENTHESESSTART
CALL[org.jcandle.analysis.IndicatorType,name,0,java.lang.String] +++$+++  IF PARENTHESESSTART LEX[ObjectUtils.equals] PARENTHESESSTART
CALL[java.util.Iterator,hasNext,0,boolean] +++$+++  PARENTHESESEND EOL WHILE PARENTHESESSTART
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[CALL[java.lang.String,charAt]] +++$+++  BREAK EOL DEFAULT OP[ternaryFalse]
CALL[java.lang.StringBuilder,toString,0,java.lang.String] +++$+++  VAR[java.lang.String] PARENTHESESEND EOL RETURN
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Stirng]] +++$+++  ARRAYEND ARRAYEND PARENTHESESEND EOL
CALL[java.io.ByteArrayOutputStream,close,0,void] +++$+++  LEX[b.flush] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Stirng]] +++$+++  OP[ternaryFalse] VAR[java.lang.Object] PARENTHESESEND CURLYSTART
CALL[java.util.GregorianCalendar,getFirstDayOfWeek,0,int] +++$+++  PARENTHESESSTART LEX[Calendar.DAY_OF_WEEK] PARENTHESESEND OP[sub]
CALL[javax.swing.JButton,setVisible,1,void] PARA[VAR[BOOLEAN]] +++$+++  BOOLEAN VAR[BOOLEAN] PARENTHESESEND CURLYSTART
CALL[java.util.GregorianCalendar,getTime,0,java.util.Date] +++$+++  PARENTHESESEND PARENTHESESEND EOL RETURN
CALL[java.util.Calendar,clear,0,void] +++$+++  LEX[Calendar.getInstance] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.awt.Graphics2D,getPaint,0,java.awt.Paint] +++$+++  EOL TYPE[Paint] VAR[java.awt.Paint] OP[assign]
CALL[java.awt.Component,getBackground,0,java.awt.Color] +++$+++  COMMA VAR[INT] COMMA COMMA
CALL[java.awt.Component,getBackground,0,java.awt.Color] +++$+++  TYPE[GradientPaint] PARENTHESESSTART COMMA COMMA
CALL[java.lang.String,equals,1,boolean] PARA[LIT[Stirng]] +++$+++  OP[assign] NULL OP[bitwiseOr] OP[bitwiseOr]
CALL[java.lang.String,equals,1,boolean] PARA[LIT[Stirng]] +++$+++  OP[assign] NULL OP[bitwiseOr] OP[bitwiseOr]
CALL[java.awt.Graphics2D,fillRect,4,void] PARA[LIT[Integer]] PARA[LIT[Integer]] PARA[VAR[INT]] PARA[VAR[INT]] +++$+++  PARENTHESESSTART LEX[Color.WHITE] PARENTHESESEND EOL
CALL[java.util.Properties,getProperty,1,java.lang.String] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[javax.swing.JButton,setEnabled,1,void] PARA[LIT[Boolean]] +++$+++  PARENTHESESSTART NULL PARENTHESESEND EOL
CALL[java.util.Iterator,hasNext,0,boolean] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.util.ArrayList,indexOf,1,int] PARA[VAR[javax.swing.tree.TreeNode]] +++$+++  VAR[javax.swing.tree.TreeNode] PARENTHESESEND CURLYSTART RETURN
CALL[java.util.Properties,setProperty,2,java.lang.Object] PARA[VAR[java.lang.String]] PARA[VAR[java.lang.String]] +++$+++  STRING VAR[java.lang.String] PARENTHESESEND CURLYSTART
CALL[java.lang.Double,doubleValue,0,double] +++$+++  PARENTHESESEND PARENTHESESEND CURLYSTART RETURN
CALL[java.awt.Font,deriveFont,1,java.awt.Font] PARA[VAR[java.awt.geom.AffineTransform]] +++$+++  PARENTHESESEND EOL VAR[java.awt.Font] OP[assign]
CALL[java.util.Vector,addElement,1,void] PARA[CALL[java.sql.ResultSetMetaData,getColumnLabel]] +++$+++  OP[sum] OP[sum] PARENTHESESEND CURLYSTART
CALL[java.util.Properties,getProperty,1,java.lang.String] PARA[VAR[java.lang.String]] +++$+++  CURLYSTART RETURN LEX[Integer.parseInt] PARENTHESESSTART
CALL[java.lang.CharSequence,charAt,1,char] PARA[VAR[INT]] +++$+++  PARENTHESESEND CURLYSTART LEX[builder.append] PARENTHESESSTART
CALL[java.io.Writer,write,1,void] PARA[VAR[java.lang.String]] +++$+++  VAR[INT] ARRAYEND PARENTHESESEND EOL
CALL[java.lang.CharSequence,length,0,int] +++$+++  OP[assign] EOL VAR[INT] OP[lessThan]
CALL[java.lang.Object,equals,1,boolean] PARA[VAR[java.lang.Object]] +++$+++  LEX[false] EOL ELSE RETURN
CALL[java.util.Stack,isEmpty,0,boolean] +++$+++  OP[ternaryFalse] IF PARENTHESESSTART OP[not]
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Character]] +++$+++  PARENTHESESEND EOL CURLYEND ELSE
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Character]] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND CURLYSTART
CALL[java.lang.StringBuilder,toString,0,java.lang.String] +++$+++  EOL CURLYEND CURLYEND RETURN
CALL[java.lang.String,length,0,int] +++$+++  OP[assign] EOL VAR[INT] OP[lessThan]
CALL[java.lang.CharSequence,length,0,int] +++$+++  OP[assign] COMMA VAR[INT] OP[assign]
CALL[java.awt.Color,getRed,0,int] +++$+++  PARENTHESESEND EOL LEX[cs.append] PARENTHESESSTART
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[CALL[java.awt.Color,getRed]] +++$+++  TYPE[StringBuilder] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND EOL
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[CALL[java.awt.Color,getBlue]] +++$+++  LEX[cs.append] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.util.List,iterator,0,java.util.Iterator<E>] +++$+++  TYPE[DisplayManager] OP[greaterThan] VAR[java.util.Iterator] OP[assign]
CALL[java.util.Iterator,hasNext,0,boolean] +++$+++  VAR[org.gjt.sp.jedit.textarea.DisplayManager] EOL WHILE PARENTHESESSTART
CALL[java.lang.CharSequence,charAt,1,char] PARA[LIT[Integer]] +++$+++  IF PARENTHESESSTART LEX[Character.isWhitespace] PARENTHESESSTART
CALL[java.io.File,getAbsolutePath,0,java.lang.String] +++$+++  PARENTHESESSTART PARENTHESESEND OP[sum] OP[sum]
CALL[java.lang.String,charAt,1,char] PARA[LIT[Integer]] +++$+++  OP[assign] EOL IF PARENTHESESSTART
CALL[java.lang.String,charAt,1,char] PARA[LIT[Integer]] +++$+++  EOL ELSE IF PARENTHESESSTART
CALL[java.util.Set,size,0,int] +++$+++  PARENTHESESSTART NEW TYPE[String] ARRAYSTART
CALL[java.io.StringWriter,toString,0,java.lang.String] +++$+++  PARENTHESESEND PARENTHESESEND EOL RETURN
CALL[java.lang.String,charAt,1,char] PARA[LIT[Integer]] +++$+++  OP[assign] OP[bitwiseAnd] OP[bitwiseAnd] PARENTHESESSTART
CALL[java.util.List,size,0,int] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.util.HashMap,keySet,0,java.util.Set<K>] +++$+++  PARENTHESESSTART TYPE[String] VAR[java.lang.String] OP[ternaryFalse]
CALL[java.lang.String,substring,2,java.lang.String] PARA[LIT[Integer]] PARA[LIT[Integer]] +++$+++  TYPE[ParserRule] PARENTHESESSTART VAR[INT] COMMA
CALL[java.util.Enumeration,nextElement,0,E] +++$+++  PARENTHESESEND EOL LEX[out.write] PARENTHESESSTART
CALL[java.lang.String,indexOf,2,int] PARA[LIT[Character]] PARA[VAR[INT]] +++$+++  CURLYSTART INT VAR[INT] OP[assign]
CALL[java.lang.String,length,0,int] +++$+++  PARENTHESESSTART VAR[INT] OP[not] OP[assign]
CALL[java.util.HashMap,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  LEX[initializeDeprecatedIcons] PARENTHESESSTART PARENTHESESEND CURLYSTART
CALL[java.util.HashMap,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.HashMap,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.HashMap,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.HashMap,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.HashMap,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.HashMap,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.HashMap,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.HashMap,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.HashMap,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.lang.StringBuilder,toString,0,java.lang.String] +++$+++  EOL CURLYEND VAR[java.lang.String] OP[assign]
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  OP[assign] LEX[File.separatorChar] OP[bitwiseOr] OP[bitwiseOr]
CALL[java.net.HttpURLConnection,getResponseCode,0,int] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.net.HttpURLConnection,getResponseCode,0,int] +++$+++  TYPE[Object] ARRAYSTART ARRAYEND CURLYSTART
CALL[java.util.List,add,1,boolean] PARA[VAR[org.gjt.sp.jedit.pluginmgr.MirrorList.Mirror]] +++$+++  LEX[Mirror] VAR[org.gjt.sp.jedit.pluginmgr.MirrorList.Mirror] PARENTHESESEND CURLYSTART
CALL[java.util.List,add,1,boolean] PARA[VAR[org.gjt.sp.jedit.pluginmgr.Roster.Operation]] +++$+++  PARENTHESESEND RETURN EOL CURLYEND
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[CALL[java.util.Iterator,next]] +++$+++  LEX[itr.hasNext] PARENTHESESSTART PARENTHESESEND PARENTHESESEND
CALL[java.util.Iterator,next,0,E] +++$+++  PARENTHESESEND EOL LEX[retval.append] PARENTHESESSTART
CALL[java.lang.StringBuilder,toString,0,java.lang.String] +++$+++  PARENTHESESEND EOL CURLYEND RETURN
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Character]] +++$+++  OP[greaterThan] VAR[INT] PARENTHESESEND CURLYSTART
CALL[java.util.StringTokenizer,hasMoreTokens,0,boolean] +++$+++  PARENTHESESEND EOL WHILE PARENTHESESSTART
CALL[java.util.StringTokenizer,nextToken,0,java.lang.String] +++$+++  CURLYSTART TYPE[String] VAR[java.lang.String] OP[assign]
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[LIT[Character]] +++$+++  EOL CURLYEND ELSE CURLYSTART
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART PARENTHESESEND EOL ELSE
CALL[java.util.Properties,load,1,void] PARA[VAR[java.io.Reader]] +++$+++  LEX[IOException] CURLYSTART TRY CURLYSTART
CALL[java.lang.String,length,0,int] +++$+++  OP[assign] LEX[line.substring] PARENTHESESSTART COMMA
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[VAR[java.lang.String]] +++$+++  OP[sub] PARENTHESESEND EOL CURLYEND
CALL[java.lang.String,equals,1,boolean] PARA[FIELD[SearchAndReplace]] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.lang.Object,toString,0,java.lang.String] +++$+++  RETURN EOL ELSE RETURN
CALL[org.gjt.sp.jedit.gui.FilteredTableModel.E,getColumnClass,1,java.lang.Class<? extends java.lang.Object>] PARA[VAR[INT]] +++$+++  VAR[INT] PARENTHESESEND CURLYSTART RETURN
CALL[javax.swing.JTextArea,getText,0,java.lang.String] +++$+++  EOL TYPE[String] VAR[java.lang.String] OP[assign]
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND CURLYSTART CASE OP[ternaryFalse]
CALL[java.awt.Graphics,setColor,1,void] PARA[VAR[java.awt.Color]] +++$+++  COMMA VAR[INT] PARENTHESESEND EOL
CALL[javax.swing.JList,getSelectedIndex,0,int] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[org.gjt.sp.jedit.gui.FilteredListModel.E,getSize,0,int] +++$+++  OP[assign] NULL PARENTHESESEND RETURN
CALL[javax.swing.JTable,getSelectedRows,0,int[]] +++$+++  ARRAYSTART ARRAYEND VAR[INT] OP[assign]
CALL[javax.swing.JTable,getSelectionModel,0,javax.swing.ListSelectionModel] +++$+++  EOL TYPE[ListSelectionModel] VAR[javax.swing.ListSelectionModel] OP[assign]
CALL[javax.swing.ListSelectionModel,getMinSelectionIndex,0,int] +++$+++  EOL INT VAR[INT] OP[assign]
CALL[java.lang.Object,equals,1,boolean] PARA[LIT[Stirng]] +++$+++  NULL OP[bitwiseAnd] OP[bitwiseAnd] OP[not]
CALL[javax.swing.table.DefaultTableModel,getRowCount,0,int] +++$+++  OP[assign] EOL VAR[INT] OP[lessThan]
CALL[javax.swing.text.JTextComponent,getDocument,0,javax.swing.text.Document] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.util.Hashtable,put,2,V] PARA[VAR[java.lang.Object]] PARA[LIT[Stirng]] +++$+++  OP[not] OP[assign] NULL PARENTHESESEND
CALL[java.util.Stack,peek,0,E] +++$+++  RETURN PARENTHESESSTART TYPE[Node] PARENTHESESEND
CALL[java.util.Hashtable,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.lang.Class]] +++$+++  OP[not] OP[assign] NULL PARENTHESESEND
CALL[java.util.Hashtable,get,1,V] PARA[VAR[org.gjt.sp.jedit.bsh.BshClassManager.SignatureKey]] +++$+++  OP[assign] PARENTHESESSTART TYPE[Method] PARENTHESESEND
CALL[java.util.Hashtable,get,1,V] PARA[VAR[org.gjt.sp.jedit.bsh.BshClassManager.SignatureKey]] +++$+++  OP[assign] PARENTHESESSTART TYPE[Method] PARENTHESESEND
CALL[java.util.Hashtable,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.lang.Object]] +++$+++  OP[sum] VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.util.Hashtable,get,1,V] PARA[VAR[java.lang.String]] +++$+++  VAR[java.lang.String] PARENTHESESEND CURLYSTART RETURN
CALL[java.util.Hashtable,remove,1,V] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESSTART VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Stirng]] +++$+++  CONTINUE EOL CASE OP[ternaryFalse]
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Stirng]] +++$+++  CONTINUE EOL CASE OP[ternaryFalse]
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Stirng]] +++$+++  CONTINUE EOL CASE OP[ternaryFalse]
CALL[java.lang.String,length,0,int] +++$+++  OP[assign] EOL VAR[INT] OP[lessThan]
CALL[java.lang.Class,getComponentType,0,java.lang.Class<? extends java.lang.Object>] +++$+++  PARENTHESESSTART PARENTHESESEND EOL RETURN
CALL[java.lang.Class,getName,0,java.lang.String] +++$+++  VAR[java.lang.Class] PARENTHESESEND OP[sum] OP[sum]
CALL[java.util.Vector,copyInto,1,void] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESSTART PARENTHESESEND ARRAYEND EOL
CALL[java.lang.String,regionMatches,4,boolean] PARA[LIT[Integer]] PARA[VAR[java.lang.String]] PARA[LIT[Integer]] PARA[VAR[INT]] +++$+++  OP[assign] EOL WHILE PARENTHESESSTART
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Character]] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND CURLYSTART
CALL[java.lang.String,getBytes,0,byte[]] +++$+++  LEX[IOException] CURLYSTART LEX[outPipe.write] PARENTHESESSTART
CALL[java.awt.event.ActionEvent,getActionCommand,0,java.lang.String] +++$+++  THIS COMMA LEX[ActionEvent.ACTION_PERFORMED] COMMA
CALL[java.awt.print.Paper,setSize,2,void] PARA[VAR[DOUBLE]] PARA[VAR[DOUBLE]] +++$+++  COMMA VAR[DOUBLE] PARENTHESESEND EOL
CALL[java.awt.print.PageFormat,setOrientation,1,void] PARA[VAR[INT]] +++$+++  VAR[java.awt.print.Paper] PARENTHESESEND EOL CURLYEND
CALL[java.awt.geom.Rectangle2D,getHeight,0,double] +++$+++  VAR[DOUBLE] COMMA VAR[DOUBLE] COMMA
CALL[java.awt.Graphics2D,setColor,1,void] PARA[VAR[java.awt.Color]] +++$+++  PARENTHESESSTART VAR[java.awt.geom.Rectangle2D] PARENTHESESEND EOL
CALL[java.awt.Graphics2D,getFontRenderContext,0,java.awt.font.FontRenderContext] +++$+++  EOL TYPE[FontRenderContext] VAR[java.awt.font.FontRenderContext] OP[assign]
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.lang.Object]] +++$+++  LEX[Object] VAR[java.lang.Object] PARENTHESESEND CURLYSTART
CALL[java.util.StringTokenizer,hasMoreTokens,0,boolean] +++$+++  PARENTHESESEND EOL WHILE PARENTHESESSTART
CALL[java.util.StringTokenizer,hasMoreTokens,0,boolean] +++$+++  PARENTHESESEND EOL WHILE PARENTHESESSTART
CALL[javax.swing.JList,ensureIndexIsVisible,1,void] PARA[VAR[INT]] +++$+++  PARENTHESESSTART VAR[INT] PARENTHESESEND EOL
CALL[java.util.HashMap,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[javax.swing.JRadioButtonMenuItem]] +++$+++  PARENTHESESSTART VAR[javax.swing.JRadioButtonMenuItem] PARENTHESESEND EOL
CALL[java.util.HashMap,get,1,V] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[javax.swing.ButtonGroup,add,1,void] PARA[VAR[javax.swing.JRadioButtonMenuItem]] +++$+++  PARENTHESESSTART VAR[org.gjt.sp.jedit.browser.BrowserCommandsMenu.ActionHandler] PARENTHESESEND EOL
CALL[javax.swing.JMenu,add,1,javax.swing.JMenuItem] PARA[VAR[javax.swing.JMenu]] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND EOL
CALL[java.util.StringTokenizer,nextToken,0,java.lang.String] +++$+++  LEX[MiscUtilities.constructPath] PARENTHESESSTART VAR[java.lang.String] COMMA
CALL[java.lang.String,startsWith,1,boolean] PARA[LIT[Stirng]] +++$+++  EOL IF PARENTHESESSTART OP[not]
CALL[java.util.Map.Entry,getKey,0,K] +++$+++  LEX[Log.DEBUG] COMMA LEX[JARClassLoader.class] COMMA
CALL[java.io.File,exists,0,boolean] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.util.Map.Entry,getKey,0,K] +++$+++  PARENTHESESEND CURLYSTART LEX[tempReplaceStore.putValue] PARENTHESESSTART
CALL[java.util.Map,keySet,0,java.util.Set<K>] +++$+++  PARENTHESESSTART TYPE[String] VAR[java.lang.String] OP[ternaryFalse]
CALL[java.lang.Throwable,printStackTrace,1,void] PARA[VAR[java.io.PrintStream]] +++$+++  OP[assign] NULL PARENTHESESEND CURLYSTART
CALL[java.io.FileInputStream,read,1,int] PARA[VAR[BYTE]] +++$+++  PARENTHESESSTART PARENTHESESSTART VAR[INT] OP[assign]
CALL[java.lang.String,lastIndexOf,2,int] PARA[LIT[Stirng]] PARA[VAR[INT]] +++$+++  PARENTHESESEND CURLYSTART VAR[INT] OP[assign]
CALL[java.util.ArrayList,size,0,int] +++$+++  OP[assign] EOL VAR[INT] OP[lessThan]
CALL[java.util.HashMap,get,1,V] PARA[VAR[java.lang.String]] +++$+++  LEX[pref.setValue] PARENTHESESSTART VAR[java.lang.String] COMMA
CALL[java.util.HashMap,get,1,V] PARA[VAR[java.lang.String]] +++$+++  LEX[pref.setValue] PARENTHESESSTART VAR[java.lang.String] COMMA
CALL[java.util.HashMap,get,1,V] PARA[VAR[java.lang.String]] +++$+++  LEX[pref.setValue] PARENTHESESSTART VAR[java.lang.String] COMMA
CALL[java.lang.StringBuffer,length,0,int] +++$+++  LEX[sb.length] PARENTHESESSTART PARENTHESESEND COMMA
CALL[java.lang.String,length,0,int] +++$+++  OP[assign] EOL VAR[INT] OP[lessThan]
CALL[java.util.StringTokenizer,nextToken,0,java.lang.String] +++$+++  CURLYSTART TYPE[String] VAR[java.lang.String] OP[assign]
CALL[java.lang.String,charAt,1,char] PARA[LIT[Integer]] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.lang.Integer,intValue,0,int] +++$+++  PARENTHESESEND CURLYSTART VAR[INT] OP[assign]
CALL[java.lang.String,endsWith,1,boolean] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.lang.String,endsWith,1,boolean] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.lang.String,lastIndexOf,1,int] PARA[LIT[Character]] +++$+++  CURLYSTART INT VAR[INT] OP[assign]
CALL[java.lang.String,length,0,int] +++$+++  EOL INT VAR[INT] OP[assign]
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  CURLYSTART CHAR VAR[CHAR] OP[assign]
CALL[java.lang.String,length,0,int] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  OP[assign] OP[assign] OP[bitwiseOr] OP[bitwiseOr]
CALL[java.lang.String,endsWith,1,boolean] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART PARENTHESESEND OP[bitwiseOr] OP[bitwiseOr]
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[VAR[CHAR]] +++$+++  OP[not] OP[assign] PARENTHESESEND CURLYSTART
CALL[java.lang.String,length,0,int] +++$+++  EOL ASSERT VAR[INT] OP[lessThan]
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Character]] +++$+++  PARENTHESESEND CURLYSTART CASE OP[ternaryFalse]
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  PARENTHESESEND EOL VAR[CHAR] OP[assign]
CALL[java.io.File,getName,0,java.lang.String] +++$+++  VAR[java.util.regex.Matcher] OP[assign] LEX[codeBaseNamePattern.matcher] PARENTHESESSTART
CALL[java.lang.ProcessBuilder,start,0,java.lang.Process] +++$+++  EOL TYPE[Process] VAR[java.lang.Process] OP[assign]
CALL[java.util.Map,clear,0,void] +++$+++  LEX[clear] PARENTHESESSTART PARENTHESESEND CURLYSTART
CALL[java.lang.Thread,start,0,void] +++$+++  PARENTHESESSTART LEX[true] PARENTHESESEND EOL
CALL[java.lang.Object,hashCode,0,int] +++$+++  RETURN EOL CURLYEND RETURN
CALL[java.util.regex.Pattern,matcher,1,java.util.regex.Matcher] PARA[VAR[java.lang.String]] +++$+++  CURLYEND TYPE[Matcher] VAR[java.util.regex.Matcher] OP[assign]
CALL[java.util.regex.Matcher,find,0,boolean] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.util.regex.Matcher,group,1,java.lang.String] PARA[LIT[Integer]] +++$+++  PARENTHESESEND PARENTHESESEND CURLYSTART RETURN
CALL[java.util.HashMap,putAll,1,void] PARA[VAR[java.util.Map]] +++$+++  PARENTHESESSTART LEX[m.size] PARENTHESESSTART PARENTHESESEND
CALL[java.lang.String,charAt,1,char] PARA[LIT[Integer]] +++$+++  EOL CURLYEND WHILE PARENTHESESSTART
CALL[java.lang.String,indexOf,1,int] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESEND OP[greaterThan] OP[bitwiseAnd] OP[bitwiseAnd]
CALL[javax.swing.JFrame,pack,0,void] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND EOL
CALL[java.lang.String,replace,2,java.lang.String] PARA[VAR[java.lang.String]] PARA[VAR[java.lang.String]] +++$+++  VAR[java.lang.String] PARENTHESESEND CURLYSTART RETURN
CALL[java.util.Map,get,1,V] PARA[VAR[edu.umd.cs.findbugs.util.Bag.E]] +++$+++  CURLYSTART TYPE[Integer] VAR[java.lang.Integer] OP[assign]
CALL[java.util.Map,containsKey,1,boolean] PARA[VAR[edu.umd.cs.findbugs.util.DualKeyHashMap.K2]] +++$+++  LEX[false] EOL CURLYEND RETURN
CALL[java.util.concurrent.CountDownLatch,await,2,boolean] PARA[VAR[LONG]] PARA[VAR[java.util.concurrent.TimeUnit]] +++$+++  CURLYSTART IF PARENTHESESSTART OP[not]
CALL[java.util.Set,contains,1,boolean] PARA[VAR[java.lang.String]] +++$+++  VAR[java.lang.String] PARENTHESESEND OP[bitwiseOr] OP[bitwiseOr]
CALL[java.lang.Class,getModifiers,0,int] +++$+++  PARENTHESESEND CURLYSTART RETURN PARENTHESESSTART
CALL[java.util.Enumeration,hasMoreElements,0,boolean] +++$+++  LEX[userDesignationBundle.getKeys] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.lang.String,hashCode,0,int] +++$+++  VAR[INT] OP[multiply] VAR[INT] OP[sum]
CALL[java.lang.String,getBytes,1,byte[]] PARA[LIT[Stirng]] +++$+++  OP[assign] NEW TYPE[ByteArrayInputStream] PARENTHESESSTART
CALL[java.lang.String,length,0,int] +++$+++  RETURN VAR[INT] OP[greaterThan] OP[assign]
CALL[java.util.Iterator,next,0,E] +++$+++  PARENTHESESEND CURLYSTART LEX[dest.add] PARENTHESESSTART
CALL[java.util.List,size,0,int] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.io.Writer,write,3,void] PARA[VAR[CHAR]] PARA[LIT[Integer]] PARA[VAR[INT]] +++$+++  OP[sub] OP[assign] VAR[INT] EOL
CALL[java.lang.reflect.Method,invoke,2,java.lang.Object] PARA[VAR[java.lang.Object]] PARA[VAR[java.lang.String]] +++$+++  EOL CURLYEND TRY CURLYSTART
CALL[java.lang.String,substring,2,java.lang.String] PARA[LIT[Integer]] PARA[VAR[INT]] +++$+++  PARENTHESESEND EOL LEX[out.print] PARENTHESESSTART
CALL[java.io.PrintStream,print,1,void] PARA[CALL[java.lang.String,substring]] +++$+++  COMMA VAR[INT] PARENTHESESEND EOL
CALL[java.lang.String,indexOf,1,int] PARA[VAR[CHAR]] +++$+++  CURLYSTART INT VAR[INT] OP[assign]
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[VAR[CHAR]] +++$+++  PARENTHESESEND EOL CURLYEND CURLYEND
CALL[java.util.Iterator,next,0,E] +++$+++  IF PARENTHESESSTART LEX[projectName.equals] PARENTHESESSTART
CALL[java.util.LinkedList,hashCode,0,int] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.String,substring,2,java.lang.String] PARA[LIT[Integer]] PARA[VAR[INT]] +++$+++  CURLYSTART TYPE[String] VAR[java.lang.String] OP[assign]
CALL[java.lang.String,equals,1,boolean] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.lang.StackTraceElement,toString,0,java.lang.String] +++$+++  PARENTHESESEND CURLYSTART LEX[arr.add] PARENTHESESSTART
CALL[edu.umd.cs.findbugs.ba.jsr305.FlowValue,ordinal,0,int] +++$+++  EOL INT VAR[INT] OP[assign]
CALL[java.util.List,add,1,boolean] PARA[VAR[edu.umd.cs.findbugs.ba.jsr305.TypeQualifierAnnotationLookupResult.PartialResult]] +++$+++  LEX[PartialResult] VAR[edu.umd.cs.findbugs.ba.jsr305.TypeQualifierAnnotationLookupResult.PartialResult] PARENTHESESEND CURLYSTART
CALL[java.util.Map,entrySet,0,java.util.Set<java.util.Map.Entry<K, V>>] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.util.Map,remove,1,V] PARA[VAR[edu.umd.cs.findbugs.ba.interproc.PropertyDatabase.KeyType]] +++$+++  VAR[edu.umd.cs.findbugs.ba.interproc.PropertyDatabase.KeyType] PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.StringBuilder,toString,0,java.lang.String] +++$+++  PARENTHESESEND EOL CURLYEND RETURN
CALL[java.lang.String,length,0,int] +++$+++  WHILE PARENTHESESSTART VAR[INT] OP[lessThan]
CALL[java.lang.String,lastIndexOf,1,int] PARA[LIT[Character]] +++$+++  EOL INT VAR[INT] OP[assign]
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[VAR[INT]] +++$+++  EOL CURLYEND ELSE CURLYSTART
CALL[java.lang.StringBuilder,toString,0,java.lang.String] +++$+++  PARENTHESESSTART PARENTHESESEND EOL RETURN
CALL[java.lang.String,hashCode,0,int] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.util.List,clear,0,void] +++$+++  PARENTHESESSTART PARENTHESESEND EOL CURLYEND
CALL[java.util.BitSet,set,1,void] PARA[VAR[INT]] +++$+++  OP[sum] VAR[INT] EOL CURLYEND
CALL[java.util.BitSet,clear,0,void] +++$+++  LEX[exceptionSet.clear] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.io.PushbackReader,unread,1,void] PARA[VAR[INT]] +++$+++  VAR[INT] PARENTHESESEND PARENTHESESEND CURLYSTART
CALL[java.util.StringTokenizer,hasMoreTokens,0,boolean] +++$+++  PARENTHESESEND EOL WHILE PARENTHESESSTART
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND OP[greaterThan] PARENTHESESEND CURLYSTART
CALL[java.util.regex.Pattern,toString,0,java.lang.String] +++$+++  PARENTHESESEND CURLYSTART RETURN OP[sum]
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND EOL
CALL[java.lang.StringBuilder,toString,0,java.lang.String] +++$+++  PARENTHESESSTART PARENTHESESEND EOL RETURN
CALL[java.util.Map,remove,1,V] PARA[VAR[edu.umd.cs.findbugs.props.WarningPropertySet.T]] +++$+++  LEX[T] VAR[edu.umd.cs.findbugs.props.WarningPropertySet.T] PARENTHESESEND CURLYSTART
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[VAR[java.lang.String]] +++$+++  OP[assign] NULL PARENTHESESEND CURLYSTART
CALL[java.util.Set,size,0,int] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.util.Iterator,hasNext,0,boolean] +++$+++  LEX[g.edgeIterator] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.io.InputStream,read,1,int] PARA[VAR[BYTE]] +++$+++  CURLYSTART INT VAR[INT] OP[assign]
CALL[java.util.zip.ZipEntry,setComment,1,void] PARA[CALL[java.util.zip.ZipEntry,getComment]] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND EOL
CALL[java.lang.String,lastIndexOf,1,int] PARA[LIT[Character]] +++$+++  CURLYSTART INT VAR[INT] OP[assign]
CALL[java.util.HashSet,contains,1,boolean] PARA[VAR[java.lang.String]] +++$+++  EOL CURLYEND IF PARENTHESESSTART
CALL[java.io.PrintStream,print,1,void] PARA[LIT[Character]] +++$+++  PARENTHESESSTART VAR[INT] PARENTHESESEND EOL
CALL[java.lang.String,length,0,int] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.lang.String,endsWith,1,boolean] PARA[LIT[Stirng]] +++$+++  VAR[java.lang.String] PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.String,indexOf,1,int] PARA[LIT[Stirng]] +++$+++  EOL INT VAR[INT] OP[assign]
CALL[java.lang.String,startsWith,1,boolean] PARA[LIT[Stirng]] +++$+++  OP[greaterThan] OP[assign] OP[bitwiseAnd] OP[bitwiseAnd]
CALL[javax.swing.table.TableColumn,setHeaderRenderer,1,void] PARA[VAR[edu.umd.cs.findbugs.gui2.SorterTableColumnModel.FBTableCellRenderer]] +++$+++  TYPE[FBTableCellRenderer] PARENTHESESSTART PARENTHESESEND EOL
CALL[javax.swing.table.TableColumn,setResizable,1,void] PARA[LIT[Boolean]] +++$+++  PARENTHESESSTART LEX[c] PARENTHESESEND EOL
CALL[javax.swing.JPanel,add,1,java.awt.Component] PARA[VAR[javax.swing.JCheckBox]] +++$+++  LEX[SwingConstants.HORIZONTAL] PARENTHESESEND PARENTHESESEND EOL
CALL[javax.swing.ActionMap,get,1,javax.swing.Action] PARA[VAR[java.lang.String]] +++$+++  FINAL TYPE[Action] VAR[javax.swing.Action] OP[assign]
CALL[javax.swing.table.JTableHeader,setReorderingAllowed,1,void] PARA[VAR[BOOLEAN]] +++$+++  BOOLEAN VAR[BOOLEAN] PARENTHESESEND CURLYSTART
CALL[javax.swing.JPanel,add,2,void] PARA[VAR[javax.swing.JComponent]] PARA[VAR[java.awt.GridBagConstraints]] +++$+++  EOL FIELD[weightx,java.awt.GridBagConstraints] OP[assign] EOL
CALL[javax.swing.JButton,setContentAreaFilled,1,void] PARA[LIT[Boolean]] +++$+++  PARENTHESESSTART LEX[false] PARENTHESESEND EOL
CALL[javax.swing.JPanel,getBackground,0,java.awt.Color] +++$+++  PARENTHESESEND EOL LEX[button.setBackground] PARENTHESESSTART
CALL[java.util.ArrayList,add,1,boolean] PARA[VAR[java.io.File]] +++$+++  PARENTHESESSTART VAR[java.io.File] PARENTHESESEND EOL
CALL[javax.swing.event.TableColumnModelEvent,getFromIndex,0,int] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[javax.swing.JPanel,add,1,java.awt.Component] PARA[VAR[javax.swing.JButton]] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND EOL
CALL[java.awt.Graphics2D,drawOval,4,void] PARA[LIT[Integer]] PARA[LIT[Integer]] PARA[LIT[Integer]] PARA[LIT[Integer]] +++$+++  PARENTHESESSTART LEX[Color.BLACK] PARENTHESESEND EOL
CALL[java.util.ArrayList,get,1,E] PARA[VAR[INT]] +++$+++  OP[assign] NEW TYPE[FilterMatcher] PARENTHESESSTART
CALL[java.lang.String,length,0,int] +++$+++  VAR[INT] OP[sum] OP[greaterThan] OP[assign]
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[VAR[CHAR]] +++$+++  VAR[CHAR] PARENTHESESEND PARENTHESESEND CURLYSTART
CALL[javax.swing.text.Segment,current,0,char] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.io.File,exists,0,boolean] +++$+++  PARENTHESESEND EOL LEX[Assume.assumeTrue] PARENTHESESSTART
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[CALL[jake2.util.PrintfFormat.ConversionSpecification,internalsprintf]] +++$+++  PARENTHESESSTART PARENTHESESEND EOL ELSE
CALL[java.util.Enumeration,hasMoreElements,0,boolean] +++$+++  PARENTHESESEND EOL WHILE PARENTHESESSTART
CALL[java.lang.StringBuffer,toString,0,java.lang.String] +++$+++  PARENTHESESEND EOL CURLYEND RETURN
CALL[java.nio.ByteBuffer,order,1,java.nio.ByteBuffer] PARA[VAR[java.nio.ByteOrder]] +++$+++  PARENTHESESSTART VAR[INT] PARENTHESESEND EOL
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  VAR[INT] PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.String,substring,2,java.lang.String] PARA[LIT[Integer]] PARA[LIT[Integer]] +++$+++  VAR[FLOAT] OP[assign] LEX[Float.parseFloat] PARENTHESESSTART
CALL[java.io.RandomAccessFile,readFloat,0,float] +++$+++  VAR[FLOAT] ARRAYSTART ARRAYEND OP[assign]
CALL[java.io.RandomAccessFile,readFloat,0,float] +++$+++  VAR[FLOAT] ARRAYSTART ARRAYEND OP[assign]
CALL[java.io.RandomAccessFile,readShort,0,short] +++$+++  ARRAYSTART VAR[INT] ARRAYEND OP[assign]
CALL[java.io.RandomAccessFile,writeInt,1,void] PARA[VAR[INT]] +++$+++  ARRAYSTART ARRAYEND PARENTHESESEND EOL
CALL[java.io.RandomAccessFile,readShort,0,short] +++$+++  VAR[SHORT] ARRAYSTART ARRAYEND OP[assign]
CALL[java.io.RandomAccessFile,readByte,0,byte] +++$+++  PARENTHESESEND EOL VAR[BYTE] OP[assign]
CALL[java.io.RandomAccessFile,writeShort,1,void] PARA[VAR[SHORT]] +++$+++  PARENTHESESSTART VAR[BYTE] PARENTHESESEND EOL
CALL[java.lang.String,length,0,int] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.util.StringTokenizer,nextToken,0,java.lang.String] +++$+++  CURLYEND TYPE[String] VAR[java.lang.String] OP[assign]
CALL[java.util.Hashtable,get,1,V] PARA[VAR[java.lang.String]] +++$+++  OP[assign] PARENTHESESSTART TYPE[SuperAdapter] PARENTHESESEND
CALL[java.lang.String,equals,1,boolean] PARA[LIT[Stirng]] +++$+++  EOL CURLYEND IF PARENTHESESSTART
CALL[java.lang.String,equals,1,boolean] PARA[LIT[Stirng]] +++$+++  EOL CURLYEND IF PARENTHESESSTART
CALL[java.lang.String,equals,1,boolean] PARA[LIT[Stirng]] +++$+++  EOL CURLYEND IF PARENTHESESSTART
CALL[java.lang.StringBuffer,toString,0,java.lang.String] +++$+++  EOL CURLYEND VAR[java.lang.String] OP[assign]
CALL[java.nio.IntBuffer,limit,1,java.nio.Buffer] PARA[VAR[INT]] +++$+++  LEX[f] PARENTHESESEND EOL CURLYEND
CALL[java.nio.IntBuffer,get,1,int] PARA[LIT[Integer]] +++$+++  EOL BOOLEAN VAR[BOOLEAN] OP[assign]
CALL[java.lang.String,equals,1,boolean] PARA[LIT[Stirng]] +++$+++  EOL ELSE IF PARENTHESESSTART
CALL[java.lang.String,equals,1,boolean] PARA[LIT[Stirng]] +++$+++  EOL ELSE IF PARENTHESESSTART
CALL[java.lang.String,equals,1,boolean] PARA[LIT[Stirng]] +++$+++  EOL ELSE IF PARENTHESESSTART
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[LIT[Stirng]] +++$+++  EOL CURLYEND ELSE CURLYSTART
CALL[javax.swing.JList,getSelectedValue,0,E] +++$+++  OP[assign] PARENTHESESSTART TYPE[String] PARENTHESESEND
CALL[java.lang.String,equals,1,boolean] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.lang.reflect.InvocationTargetException,getTargetException,0,java.lang.Throwable] +++$+++  EOL TYPE[Throwable] VAR[java.lang.Throwable] OP[assign]
CALL[java.lang.String,length,0,int] +++$+++  VAR[java.lang.Object] EOL IF PARENTHESESSTART
CALL[java.util.ArrayList,get,1,E] PARA[VAR[INT]] +++$+++  CURLYEND TYPE[FieldDefinition] VAR[org.h2.jaqu.TableDefinition.FieldDefinition] OP[assign]
CALL[java.util.ArrayList,add,1,boolean] PARA[VAR[java.lang.String]] +++$+++  LEX[Expr] LEX[value] PARENTHESESEND CURLYSTART
CALL[java.util.ArrayList,size,0,int] +++$+++  LEX[classObj] EOL LEX[t.arrayLevel] OP[assign]
CALL[org.h2.java.Expr,toString,0,java.lang.String] +++$+++  EOL CURLYEND LEX[buff.append] PARENTHESESSTART
CALL[java.lang.StringBuilder,toString,0,java.lang.String] +++$+++  CURLYEND CURLYEND VAR[java.lang.String] OP[assign]
CALL[java.util.HashMap,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.lang.String]] +++$+++  COMMA VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.lang.String,startsWith,1,boolean] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND OP[bitwiseAnd] OP[bitwiseAnd] OP[not]
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  CURLYSTART CHAR VAR[CHAR] OP[assign]
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  OP[assign] OP[assign] OP[bitwiseOr] OP[bitwiseOr]
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  OP[assign] OP[assign] OP[bitwiseOr] OP[bitwiseOr]
CALL[java.lang.String,substring,2,java.lang.String] PARA[LIT[Integer]] PARA[VAR[INT]] +++$+++  OP[assign] PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.String,indexOf,1,int] PARA[VAR[java.lang.String]] +++$+++  EOL INT VAR[INT] OP[assign]
CALL[java.io.File,length,0,long] +++$+++  OP[assign] PARENTHESESSTART INT PARENTHESESEND
CALL[java.io.FileReader,read,3,int] PARA[VAR[CHAR]] PARA[VAR[INT]] PARA[VAR[INT]] +++$+++  CURLYSTART INT VAR[INT] OP[assign]
CALL[java.io.OutputStream,write,1,void] PARA[VAR[BYTE]] +++$+++  COMMA LEX[false] PARENTHESESEND EOL
CALL[java.awt.image.BufferedImage,getHeight,0,int] +++$+++  EOL INT VAR[INT] OP[assign]
CALL[java.awt.Graphics2D,dispose,0,void] +++$+++  COMMA COMMA COMMA VAR[INT]
CALL[java.lang.String,length,0,int] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.util.Stack,size,0,int] +++$+++  CURLYEND CURLYEND IF PARENTHESESSTART
CALL[java.lang.String,replaceAll,2,java.lang.String] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND CURLYSTART VAR[java.lang.String] OP[assign]
CALL[java.lang.String,length,0,int] +++$+++  LEX[s.substring] PARENTHESESSTART VAR[INT] OP[sum]
CALL[java.lang.String,getBytes,1,byte[]] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND EOL LEX[f.write] PARENTHESESSTART
CALL[java.lang.String,startsWith,1,boolean] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.lang.String,startsWith,1,boolean] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.lang.String,length,0,int] +++$+++  VAR[INT] OP[assign] VAR[INT] OP[sum]
CALL[java.util.HashSet,add,1,boolean] PARA[VAR[java.lang.String]] +++$+++  OP[ternaryFalse] VAR[java.lang.String] PARENTHESESEND CURLYSTART
CALL[java.lang.String,indexOf,1,int] PARA[LIT[Character]] +++$+++  EOL CURLYEND IF PARENTHESESSTART
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[VAR[CHAR]] +++$+++  OP[not] OP[assign] PARENTHESESEND CURLYSTART
CALL[java.lang.String,length,0,int] +++$+++  OP[assign] EOL VAR[INT] OP[lessThan]
CALL[java.lang.StringBuilder,toString,0,java.lang.String] +++$+++  VAR[INT] EOL CURLYEND RETURN
CALL[java.io.PrintWriter,println,1,void] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND CURLYSTART
CALL[java.lang.String,indexOf,1,int] PARA[LIT[Character]] +++$+++  EOL INT VAR[INT] OP[assign]
CALL[java.lang.String,indexOf,1,int] PARA[LIT[Character]] +++$+++  CURLYSTART INT VAR[INT] OP[assign]
CALL[java.util.zip.Deflater,finished,0,boolean] +++$+++  EOL WHILE PARENTHESESSTART OP[not]
CALL[java.util.zip.Inflater,setInput,1,void] PARA[VAR[BYTE]] +++$+++  TYPE[Inflater] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.io.ByteArrayOutputStream,write,3,void] PARA[VAR[BYTE]] PARA[LIT[Integer]] PARA[VAR[INT]] +++$+++  PARENTHESESSTART VAR[BYTE] PARENTHESESEND EOL
CALL[java.util.zip.Inflater,finished,0,boolean] +++$+++  CURLYSTART WHILE PARENTHESESSTART OP[not]
CALL[java.util.ArrayList,size,0,int] +++$+++  OP[assign] EOL VAR[INT] OP[lessThan]
CALL[java.lang.StringBuilder,charAt,1,char] PARA[VAR[INT]] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.lang.StringBuilder,length,0,int] +++$+++  PARENTHESESSTART INT VAR[INT] OP[assign]
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Character]] +++$+++  OP[not] OP[assign] PARENTHESESEND CURLYSTART
CALL[java.util.HashMap,values,0,java.util.Collection<V>] +++$+++  PARENTHESESEND EOL LEX[list.addAll] PARENTHESESSTART
CALL[java.util.HashMap,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.lang.String]] +++$+++  COMMA VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.lang.String,endsWith,1,boolean] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART PARENTHESESEND OP[bitwiseOr] OP[bitwiseOr]
CALL[java.lang.String,indexOf,1,int] PARA[LIT[Character]] +++$+++  FINAL INT VAR[INT] OP[assign]
CALL[java.lang.String,length,0,int] +++$+++  CHAR ARRAYSTART VAR[BOOLEAN] OP[ternaryTrue]
CALL[java.lang.String,length,0,int] +++$+++  VAR[INT] EOL VAR[INT] OP[lessThan]
CALL[java.lang.String,length,0,int] +++$+++  PARENTHESESSTART PARENTHESESEND OP[greaterThan] OP[assign]
CALL[java.lang.String,equals,1,boolean] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.util.concurrent.atomic.AtomicBoolean,set,1,void] PARA[LIT[Boolean]] +++$+++  OP[assign] NULL PARENTHESESEND CURLYSTART
CALL[java.lang.Thread,setDaemon,1,void] PARA[LIT[Boolean]] +++$+++  THIS COMMA PARENTHESESEND EOL
CALL[java.lang.String,length,0,int] +++$+++  PARENTHESESSTART INT VAR[INT] OP[assign]
CALL[java.lang.String,substring,2,java.lang.String] PARA[LIT[Integer]] PARA[VAR[INT]] +++$+++  PARENTHESESEND EOL VAR[java.lang.String] OP[assign]
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[CALL[java.lang.String,charAt]] +++$+++  VAR[INT] OP[sub] PARENTHESESEND CURLYSTART
CALL[java.util.ArrayList,toArray,1,T[]] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESSTART PARENTHESESEND ARRAYEND EOL
CALL[java.lang.String,length,0,int] +++$+++  OP[assign] EOL VAR[INT] OP[lessThan]
CALL[java.lang.String,length,0,int] +++$+++  PARENTHESESSTART VAR[INT] OP[assign] OP[assign]
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  OP[greaterThan] OP[assign] OP[bitwiseAnd] OP[bitwiseAnd]
CALL[java.lang.String,length,0,int] +++$+++  EOL VAR[INT] OP[sub] OP[assign]
CALL[java.lang.String,startsWith,1,boolean] PARA[LIT[Stirng]] +++$+++  OP[assign] OP[bitwiseAnd] OP[bitwiseAnd] OP[not]
CALL[java.lang.String,length,0,int] +++$+++  OP[assign] NULL OP[bitwiseOr] OP[bitwiseOr]
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[VAR[java.lang.String]] +++$+++  STRING VAR[java.lang.String] PARENTHESESEND CURLYSTART
CALL[java.io.Writer,close,0,void] +++$+++  LEX[writer.flush] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.io.Reader,read,3,int] PARA[VAR[CHAR]] PARA[VAR[INT]] PARA[VAR[INT]] +++$+++  CURLYSTART INT VAR[INT] OP[assign]
CALL[java.lang.String,substring,2,java.lang.String] PARA[LIT[Integer]] PARA[VAR[INT]] +++$+++  PARENTHESESEND CURLYSTART LEX[p.put] PARENTHESESSTART
CALL[java.util.ArrayList,toArray,1,T[]] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESSTART PARENTHESESEND ARRAYEND EOL
CALL[java.util.ArrayList,size,0,int] +++$+++  OP[assign] NULL OP[bitwiseOr] OP[bitwiseOr]
CALL[java.lang.String,equalsIgnoreCase,1,boolean] PARA[VAR[java.lang.String]] +++$+++  OP[not] VAR[BOOLEAN] OP[bitwiseAnd] OP[bitwiseAnd]
CALL[java.nio.CharBuffer,compact,0,java.nio.CharBuffer] +++$+++  LEX[byteBuffer.flip] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.nio.CharBuffer,flip,0,java.nio.Buffer] +++$+++  LEX[charBuffer.compact] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.lang.Thread,start,0,void] +++$+++  LEX[startThread] PARENTHESESSTART PARENTHESESEND CURLYSTART
CALL[java.lang.String,equalsIgnoreCase,1,boolean] PARA[LIT[Stirng]] +++$+++  CURLYEND ELSE IF PARENTHESESSTART
CALL[java.lang.String,indexOf,1,int] PARA[LIT[Character]] +++$+++  VAR[INT] OP[assign] LEX[Math.max] PARENTHESESSTART
CALL[org.h2.store.fs.FileNioMemData.Cache,put,2,V] PARA[VAR[org.h2.store.fs.FileNioMemData.CompressItem]] PARA[VAR[org.h2.store.fs.FileNioMemData.CompressItem]] +++$+++  PARENTHESESSTART TYPE[LZF] PARENTHESESEND CURLYSTART
CALL[java.nio.ByteBuffer,put,3,java.nio.ByteBuffer] PARA[VAR[BYTE]] PARA[LIT[Integer]] PARA[VAR[INT]] +++$+++  PARENTHESESSTART VAR[INT] PARENTHESESEND EOL
CALL[java.nio.channels.FileChannel,read,1,int] PARA[VAR[java.nio.ByteBuffer]] +++$+++  CURLYSTART INT VAR[INT] OP[assign]
CALL[java.lang.String,toUpperCase,0,java.lang.String] +++$+++  PARENTHESESEND CURLYSTART VAR[java.lang.String] OP[assign]
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART VAR[BOOLEAN] PARENTHESESEND CURLYSTART
CALL[java.nio.ByteBuffer,get,0,byte] +++$+++  OP[lessThan] EOL VAR[INT] OP[assign]
CALL[java.lang.Object,toString,0,java.lang.String] +++$+++  OP[assign] NULL OP[ternaryTrue] OP[ternaryFalse]
CALL[java.lang.String,substring,2,java.lang.String] PARA[LIT[Integer]] PARA[LIT[Integer]] +++$+++  PARENTHESESEND CURLYSTART VAR[java.lang.String] OP[assign]
CALL[java.util.BitSet,set,1,void] PARA[VAR[INT]] +++$+++  OP[sub] PARENTHESESEND EOL CURLYEND
CALL[java.util.Map,containsKey,1,boolean] PARA[VAR[LONG]] +++$+++  OP[greaterThan] EOL IF PARENTHESESSTART
CALL[java.nio.ByteBuffer,hasRemaining,0,boolean] +++$+++  OP[assign] EOL WHILE PARENTHESESSTART
CALL[java.lang.String,startsWith,1,boolean] PARA[LIT[Stirng]] +++$+++  CURLYEND ELSE IF PARENTHESESSTART
CALL[java.io.DataOutputStream,write,1,void] PARA[VAR[INT]] +++$+++  PARENTHESESSTART VAR[java.io.OutputStream] PARENTHESESEND EOL
CALL[java.lang.String,indexOf,2,int] PARA[LIT[Stirng]] PARA[VAR[INT]] +++$+++  CURLYSTART INT VAR[INT] OP[assign]
CALL[java.lang.String,indexOf,2,int] PARA[LIT[Character]] PARA[VAR[INT]] +++$+++  EOL INT VAR[INT] OP[assign]
CALL[java.util.Properties,getProperty,2,java.lang.String] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND EOL LEX[info.name] OP[assign]
CALL[java.util.Properties,getProperty,2,java.lang.String] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND EOL LEX[info.driver] OP[assign]
CALL[java.lang.String,substring,1,java.lang.String] PARA[VAR[INT]] +++$+++  VAR[INT] PARENTHESESEND OP[sum] OP[sum]
CALL[java.util.List,size,0,int] +++$+++  PARENTHESESSTART NEW TYPE[String] ARRAYSTART
CALL[java.util.HashMap,put,2,V] PARA[FIELD[org.h2.value.DataType]] PARA[VAR[org.h2.value.DataType]] +++$+++  OP[sum] EOL CURLYEND CURLYEND
CALL[java.util.ArrayList,add,1,boolean] PARA[VAR[org.h2.value.DataType]] +++$+++  VAR[org.h2.value.DataType] PARENTHESESEND EOL CURLYEND
CALL[java.lang.Object,toString,0,java.lang.String] +++$+++  VAR[java.lang.String] OP[ternaryFalse] LEX[StringUtils.toUpperEnglish] PARENTHESESSTART
CALL[java.lang.String,compareTo,1,int] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESEND EOL CURLYEND RETURN
CALL[java.lang.Object,toString,0,java.lang.String] +++$+++  NULL OP[ternaryTrue] VAR[java.lang.String] OP[ternaryFalse]
CALL[java.io.DataOutputStream,writeInt,1,void] PARA[VAR[INT]] +++$+++  LEX[s.length] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[CALL[java.io.DataInputStream,readChar]] +++$+++  OP[sum] OP[sum] PARENTHESESEND CURLYSTART
CALL[java.lang.Throwable,toString,0,java.lang.String] +++$+++  RETURN NEW TYPE[IOException] PARENTHESESSTART
CALL[java.lang.String,equals,1,boolean] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART PARENTHESESEND OP[bitwiseOr] OP[bitwiseOr]
CALL[java.lang.String,split,1,java.lang.String[]] PARA[LIT[Stirng]] +++$+++  ARRAYSTART ARRAYEND VAR[java.lang.String] OP[assign]
CALL[java.lang.String,indexOf,1,int] PARA[LIT[Character]] +++$+++  OP[assign] LEX[value.substring] PARENTHESESSTART COMMA
CALL[javax.swing.tree.TreePath,getPath,0,java.lang.Object[]] +++$+++  VAR[java.lang.Object] ARRAYSTART ARRAYEND OP[assign]
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  EOL CHAR VAR[CHAR] OP[assign]
CALL[java.lang.String,substring,2,java.lang.String] PARA[VAR[INT]] PARA[VAR[INT]] +++$+++  EOL TYPE[String] VAR[java.lang.String] OP[assign]
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  EOL CURLYEND VAR[CHAR] OP[assign]
CALL[java.util.Map,get,1,V] PARA[VAR[java.lang.String]] +++$+++  CURLYSTART TYPE[Integer] VAR[java.lang.Integer] OP[assign]
CALL[java.util.ArrayList,size,0,int] +++$+++  PARENTHESESSTART VAR[INT] OP[greaterThan] OP[assign]
CALL[java.util.ArrayList,add,1,boolean] PARA[VAR[java.lang.String]] +++$+++  OP[assign] NULL PARENTHESESEND CURLYSTART
CALL[java.util.HashMap,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESSTART VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.lang.String,contains,1,boolean] PARA[LIT[Stirng]] +++$+++  EOL CURLYEND IF PARENTHESESSTART
CALL[java.lang.String,indexOf,1,int] PARA[LIT[Character]] +++$+++  OP[assign] LEX[languageTag.substring] PARENTHESESSTART COMMA
CALL[java.lang.String,substring,2,java.lang.String] PARA[LIT[Integer]] PARA[CALL[java.lang.String,indexOf]] +++$+++  PARENTHESESEND CURLYSTART VAR[java.lang.String] OP[assign]
CALL[java.lang.String,replaceAll,2,java.lang.String] PARA[VAR[java.lang.String]] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND CURLYSTART VAR[java.lang.String] OP[assign]
CALL[java.io.File,getName,0,java.lang.String] +++$+++  TYPE[File] PARENTHESESSTART VAR[java.io.File] COMMA
CALL[java.lang.String,matches,1,boolean] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.util.regex.Matcher,group,1,java.lang.String] PARA[LIT[Integer]] +++$+++  PARENTHESESEND CURLYSTART VAR[java.lang.String] OP[assign]
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[VAR[java.lang.String]] +++$+++  LEX[sb.append] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[VAR[CHAR]] +++$+++  PARENTHESESEND EOL DEFAULT OP[ternaryFalse]
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Stirng]] +++$+++  BREAK EOL CASE OP[ternaryFalse]
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Stirng]] +++$+++  CASE OP[ternaryFalse] CASE OP[ternaryFalse]
CALL[java.io.File,getName,0,java.lang.String] +++$+++  VAR[java.lang.String] OP[assign] LEX[FileUtil.renameForSorting] PARENTHESESSTART
CALL[javax.swing.text.Document,getLength,0,int] +++$+++  CURLYEND ELSE IF PARENTHESESSTART
CALL[java.util.regex.Matcher,hitEnd,0,boolean] +++$+++  OP[not] VAR[BOOLEAN] OP[bitwiseAnd] OP[bitwiseAnd]
CALL[java.util.regex.Matcher,start,0,int] +++$+++  VAR[java.awt.Rectangle] OP[assign] LEX[jList.modelToView] PARENTHESESSTART
CALL[java.awt.event.ItemEvent,getStateChange,0,int] +++$+++  CURLYSTART LEX[configuration.setThumbnailGenerationEnabled] PARENTHESESSTART PARENTHESESSTART
CALL[java.awt.event.ItemEvent,getStateChange,0,int] +++$+++  CURLYSTART LEX[configuration.setHideEmptyFolders] PARENTHESESSTART PARENTHESESSTART
CALL[java.awt.event.ItemEvent,getStateChange,0,int] +++$+++  CURLYSTART LEX[configuration.setResume] PARENTHESESSTART PARENTHESESSTART
CALL[javax.swing.JTable,setValueAt,3,void] PARA[CALL[javax.swing.JTable,getValueAt]] PARA[VAR[INT]] PARA[LIT[Integer]] +++$+++  VAR[INT] COMMA PARENTHESESEND EOL
CALL[javax.swing.JTable,getRowCount,0,int] +++$+++  OP[assign] EOL VAR[INT] OP[lessThan]
CALL[javax.swing.JTextField,getText,0,java.lang.String] +++$+++  CURLYSTART LEX[LOGGER.debug] PARENTHESESSTART OP[sum]
CALL[java.awt.event.ItemEvent,getStateChange,0,int] +++$+++  CURLYSTART LEX[configuration.setChapterSupport] PARENTHESESSTART PARENTHESESSTART
CALL[javax.swing.JTextField,getText,0,java.lang.String] +++$+++  PARENTHESESEND CURLYSTART LEX[configuration.setForceTranscodeForExtensions] PARENTHESESSTART
CALL[javax.swing.JCheckBox,setContentAreaFilled,1,void] PARA[LIT[Boolean]] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND EOL
CALL[javax.swing.JCheckBox,isSelected,0,boolean] +++$+++  PARENTHESESEND CURLYSTART LEX[configuration.setAudioEmbedDtsInPcm] PARENTHESESSTART
CALL[javax.swing.JTextField,getText,0,java.lang.String] +++$+++  PARENTHESESEND CURLYSTART LEX[configuration.setSubtitlesLanguages] PARENTHESESSTART
CALL[java.awt.event.ItemEvent,getItem,0,java.lang.Object] +++$+++  PARENTHESESSTART PARENTHESESSTART INT PARENTHESESEND
CALL[java.io.File,isDirectory,0,boolean] +++$+++  CURLYSTART RETURN LEX[UIManager.getIcon] PARENTHESESSTART
CALL[java.io.File,isHidden,0,boolean] +++$+++  VAR[java.io.File] PARENTHESESEND CURLYSTART RETURN
CALL[javax.swing.JCheckBox,isSelected,0,boolean] +++$+++  PARENTHESESEND CURLYSTART LEX[configuration.setRunWizard] PARENTHESESSTART
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.awt.event.ItemEvent,getStateChange,0,int] +++$+++  CURLYSTART LEX[configuration.setPreventsSleep] PARENTHESESSTART PARENTHESESSTART
CALL[javax.swing.JScrollBar,getModel,0,javax.swing.BoundedRangeModel] +++$+++  EOL TYPE[BoundedRangeModel] VAR[javax.swing.BoundedRangeModel] OP[assign]
CALL[java.awt.Graphics2D,dispose,0,void] +++$+++  COMMA NULL PARENTHESESEND EOL
CALL[javax.swing.JTable,getTableHeader,0,javax.swing.table.JTableHeader] +++$+++  CURLYSTART TYPE[JTableHeader] VAR[javax.swing.table.JTableHeader] OP[assign]
CALL[java.io.InputStream,close,0,void] +++$+++  FINALLY CURLYSTART TRY CURLYSTART
CALL[java.lang.String,substring,2,java.lang.String] PARA[LIT[Integer]] PARA[VAR[INT]] +++$+++  OP[assign] PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.String,equals,1,boolean] PARA[VAR[java.lang.String]] +++$+++  VAR[java.lang.String] PARENTHESESEND OP[bitwiseOr] OP[bitwiseOr]
CALL[java.io.InputStream,markSupported,0,boolean] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.io.InputStream,reset,0,void] +++$+++  OP[sub] OP[assign] VAR[LONG] EOL
CALL[java.io.BufferedReader,close,0,void] +++$+++  CURLYEND CURLYEND FINALLY CURLYSTART
CALL[java.lang.String,startsWith,1,boolean] PARA[LIT[Stirng]] +++$+++  VAR[BOOLEAN] OP[bitwiseAnd] OP[bitwiseAnd] OP[not]
CALL[java.lang.String,length,0,int] +++$+++  OP[assign] EOL VAR[INT] OP[lessThan]
CALL[java.util.Set,contains,1,boolean] PARA[VAR[java.lang.String]] +++$+++  EOL IF PARENTHESESSTART OP[not]
CALL[java.net.ServerSocket,accept,0,java.net.Socket] +++$+++  CURLYSTART TYPE[Socket] VAR[java.net.Socket] OP[assign]
CALL[java.lang.String,replace,2,java.lang.String] PARA[LIT[Character]] PARA[LIT[Character]] +++$+++  PARENTHESESEND CURLYSTART VAR[java.lang.String] OP[assign]
CALL[java.net.InetAddress,getHostAddress,0,java.lang.String] +++$+++  CURLYSTART RETURN LEX[speedStats.get] PARENTHESESSTART
CALL[java.net.InetAddress,getHostAddress,0,java.lang.String] +++$+++  VAR[java.util.concurrent.Future] OP[assign] LEX[speedStats.get] PARENTHESESSTART
CALL[java.util.Map,put,2,V] PARA[CALL[java.net.InetAddress,getHostAddress]] PARA[VAR[java.util.concurrent.Future]] +++$+++  VAR[java.lang.String] PARENTHESESEND PARENTHESESEND EOL
CALL[java.util.Map,get,1,V] PARA[CALL[java.net.NetworkInterface,getName]] +++$+++  TYPE[InetAddress] OP[greaterThan] VAR[java.util.Set] OP[assign]
CALL[net.pms.network.UPNPControl.DeviceMap,containsKey,1,boolean] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.sql.SQLException,getMessage,0,java.lang.String] +++$+++  CURLYSTART LEX[LOG.warning] PARENTHESESSTART OP[sum]
CALL[java.util.List,size,0,int] +++$+++  OP[sum] VAR[INT] OP[sum] OP[sum]
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.util.Date,getTime,0,long] +++$+++  RETURN NEW TYPE[Timestamp] PARENTHESESSTART
CALL[java.lang.String,length,0,int] +++$+++  EOL INT VAR[INT] OP[assign]
CALL[java.lang.String,contains,1,boolean] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.math.BigInteger,compareTo,1,int] PARA[VAR[java.math.BigInteger]] +++$+++  CURLYEND ELSE IF PARENTHESESSTART
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  CURLYSTART CHAR VAR[CHAR] OP[assign]
CALL[java.lang.StringBuilder,length,0,int] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.io.Writer,write,1,void] PARA[VAR[CHAR]] +++$+++  EOL CONTINUE EOL CURLYEND
CALL[java.util.Calendar,getTime,0,java.util.Date] +++$+++  VAR[java.util.TimeZone] PARENTHESESEND EOL RETURN
CALL[java.io.Writer,close,0,void] +++$+++  PARENTHESESEND THROWS LEX[IOException] CURLYSTART
CALL[javax.swing.table.TableModel,getValueAt,2,java.lang.Object] PARA[VAR[INT]] PARA[VAR[INT]] +++$+++  VAR[INT] PARENTHESESEND CURLYSTART RETURN
CALL[java.util.Enumeration,nextElement,0,E] +++$+++  OP[assign] PARENTHESESSTART TYPE[AbstractButton] PARENTHESESEND
CALL[javax.swing.DefaultListModel,set,2,E] PARA[VAR[INT]] PARA[VAR[java.lang.Object]] +++$+++  LEX[Object] VAR[java.lang.Object] PARENTHESESEND CURLYSTART
CALL[javax.swing.JComboBox,removeAllItems,0,void] +++$+++  LEX[JComboBox] VAR[javax.swing.JComboBox] PARENTHESESEND CURLYSTART
CALL[javax.swing.tree.MutableTreeNode,insert,2,void] PARA[VAR[javax.swing.tree.MutableTreeNode]] PARA[VAR[INT]] +++$+++  LEX[MutableTreeNode] VAR[javax.swing.tree.MutableTreeNode] PARENTHESESEND CURLYSTART
CALL[javax.swing.tree.DefaultMutableTreeNode,add,1,void] PARA[VAR[javax.swing.tree.DefaultMutableTreeNode]] +++$+++  LEX[DefaultMutableTreeNode] VAR[javax.swing.tree.DefaultMutableTreeNode] PARENTHESESEND CURLYSTART
CALL[javax.swing.JMenuBar,add,1,javax.swing.JMenu] PARA[VAR[javax.swing.JMenu]] +++$+++  LEX[JMenu] VAR[javax.swing.JMenu] PARENTHESESEND CURLYSTART
CALL[javax.swing.JPopupMenu,add,1,javax.swing.JMenuItem] PARA[VAR[java.lang.String]] +++$+++  STRING VAR[java.lang.String] PARENTHESESEND CURLYSTART
CALL[javax.swing.JTabbedPane,getTabCount,0,int] +++$+++  OP[bitwiseAnd] OP[bitwiseAnd] LEX[index] OP[lessThan]
CALL[java.lang.String,equals,1,boolean] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART VAR[BOOLEAN] OP[bitwiseAnd] OP[bitwiseAnd]
CALL[java.lang.String,contains,1,boolean] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART PARENTHESESEND OP[bitwiseOr] OP[bitwiseOr]
CALL[java.util.Map.Entry,getValue,0,V] +++$+++  TYPE[Object] OP[greaterThan] VAR[java.util.Map] OP[assign]
CALL[java.util.Map,get,1,V] PARA[LIT[Stirng]] +++$+++  OP[assign] PARENTHESESSTART TYPE[String] PARENTHESESEND
CALL[java.util.List,toArray,0,java.lang.Object[]] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.Class,getName,0,java.lang.String] +++$+++  NEW TYPE[GroovyCastException] PARENTHESESSTART OP[sum]
CALL[java.util.List,add,1,boolean] PARA[CALL[java.util.List,get]] +++$+++  OP[ternaryFalse] VAR[INT] PARENTHESESEND CURLYSTART
CALL[java.util.List,get,1,E] PARA[VAR[INT]] +++$+++  OP[assign] PARENTHESESSTART TYPE[List] PARENTHESESEND
CALL[java.util.Map,get,1,V] PARA[VAR[java.lang.Object]] +++$+++  OP[assign] NULL PARENTHESESEND OP[ternaryTrue]
CALL[java.util.List,add,1,boolean] PARA[CALL[java.lang.Object,toString]] +++$+++  TYPE[Node] PARENTHESESEND PARENTHESESEND CURLYSTART
CALL[java.util.Iterator,hasNext,0,boolean] +++$+++  PARENTHESESSTART VAR[java.lang.Object] PARENTHESESEND EOL
CALL[java.util.Iterator,next,0,E] +++$+++  CURLYSTART TYPE[Object] VAR[java.lang.Object] OP[assign]
CALL[java.lang.String,equals,1,boolean] PARA[VAR[java.lang.String]] +++$+++  CURLYSTART RETURN PARENTHESESSTART PARENTHESESSTART
CALL[java.util.Map,equals,1,boolean] PARA[VAR[java.lang.Object]] +++$+++  VAR[java.lang.Object] PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.String,equals,1,boolean] PARA[LIT[Stirng]] +++$+++  EOL CURLYEND IF PARENTHESESSTART
CALL[java.util.List,removeAll,1,boolean] PARA[VAR[java.util.Collection]] +++$+++  VAR[java.util.Collection] PARENTHESESEND CURLYSTART RETURN
CALL[java.util.List,retainAll,1,boolean] PARA[VAR[java.util.Collection]] +++$+++  VAR[java.util.Collection] PARENTHESESEND CURLYSTART RETURN
CALL[java.io.BufferedWriter,newLine,0,void] +++$+++  OP[assign] OP[assign] PARENTHESESEND CURLYSTART
CALL[java.lang.String,length,0,int] +++$+++  PARENTHESESSTART PARENTHESESEND OP[bitwiseAnd] OP[bitwiseAnd]
CALL[java.util.List,size,0,int] +++$+++  PARENTHESESSTART NEW TYPE[URL] ARRAYSTART
CALL[java.io.PrintWriter,print,1,void] PARA[LIT[Stirng]] +++$+++  OP[assign] LEX[ClassHelper.byte_TYPE] PARENTHESESEND CURLYSTART
CALL[java.io.PrintWriter,print,1,void] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND OP[not] OP[assign] PARENTHESESEND
CALL[java.util.Map,values,0,java.util.Collection<V>] +++$+++  CURLYEND ELSE CURLYSTART RETURN
CALL[java.lang.CharSequence,length,0,int] +++$+++  INT PARENTHESESEND LEX[Math.min] PARENTHESESSTART
CALL[java.lang.StringBuilder,append,3,java.lang.StringBuilder] PARA[VAR[java.lang.String]] PARA[LIT[Integer]] PARA[VAR[INT]] +++$+++  PARENTHESESEND OP[sum] PARENTHESESEND EOL
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Character]] +++$+++  VAR[INT] PARENTHESESEND EOL CURLYEND
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Stirng]] +++$+++  OP[sum] VAR[INT] PARENTHESESEND CURLYSTART
CALL[java.util.Map,get,1,V] PARA[VAR[INT]] +++$+++  PARENTHESESEND PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.ref.WeakReference,get,0,T] +++$+++  CURLYSTART TYPE[ThreadLocalMapHandler] VAR[org.codehaus.groovy.reflection.ClassInfo.ThreadLocalMapHandler] OP[assign]
CALL[java.lang.Exception,getMessage,0,java.lang.String] +++$+++  ELSE CURLYSTART RETURN OP[sum]
CALL[java.lang.reflect.Method,getReturnType,0,java.lang.Class<? extends java.lang.Object>] +++$+++  VAR[java.lang.String] OP[assign] LEX[BytecodeHelper.getMethodDescriptor] PARENTHESESSTART
CALL[java.lang.reflect.Method,getParameterTypes,0,java.lang.Class<? extends java.lang.Object>[]] +++$+++  LEX[method.getReturnType] PARENTHESESSTART PARENTHESESEND COMMA
CALL[java.lang.String,startsWith,1,boolean] PARA[LIT[Stirng]] +++$+++  CURLYEND ELSE IF PARENTHESESSTART
CALL[java.lang.String,substring,1,java.lang.String] PARA[LIT[Integer]] +++$+++  PARENTHESESEND CURLYSTART VAR[java.lang.String] OP[assign]
CALL[java.lang.String,substring,1,java.lang.String] PARA[LIT[Integer]] +++$+++  PARENTHESESEND CURLYSTART VAR[java.lang.String] OP[assign]
CALL[java.util.List,add,1,boolean] PARA[VAR[java.lang.StringBuffer]] +++$+++  TYPE[StringBuffer] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.lang.String,length,0,int] +++$+++  OP[assign] NEW BYTE ARRAYSTART
CALL[java.lang.ThreadLocal,get,0,T] +++$+++  RETURN PARENTHESESSTART TYPE[Matcher] PARENTHESESEND
CALL[java.lang.StackTraceElement,getLineNumber,0,int] +++$+++  PARENTHESESSTART PARENTHESESEND OP[sum] OP[sum]
CALL[java.lang.String,startsWith,1,boolean] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.lang.StringBuffer,append,3,java.lang.StringBuffer] PARA[VAR[CHAR]] PARA[VAR[INT]] PARA[VAR[INT]] +++$+++  CURLYSTART RETURN EOL CURLYEND
CALL[java.lang.StringBuffer,toString,0,java.lang.String] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.Class,getName,0,java.lang.String] +++$+++  CURLYSTART TYPE[String] VAR[java.lang.String] OP[assign]
CALL[java.lang.String,startsWith,1,boolean] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.lang.Class,getName,0,java.lang.String] +++$+++  CURLYEND TYPE[String] VAR[java.lang.String] OP[assign]
CALL[java.lang.Object,hashCode,0,int] +++$+++  CURLYSTART INT VAR[INT] OP[assign]
CALL[java.io.ObjectOutputStream,writeInt,1,void] PARA[VAR[INT]] +++$+++  PARENTHESESSTART FIELD[length,org.codehaus.groovy.runtime.metaclass.ConcurrentReaderHashMap.Entry] PARENTHESESEND EOL
CALL[java.util.Map,get,1,V] PARA[VAR[java.lang.String]] +++$+++  OP[assign] PARENTHESESSTART TYPE[Closure] PARENTHESESEND
CALL[java.util.Map,remove,1,V] PARA[VAR[java.lang.String]] +++$+++  OP[assign] NULL PARENTHESESEND CURLYSTART
CALL[java.lang.Class,getName,0,java.lang.String] +++$+++  TYPE[String] VAR[java.lang.String] OP[assign] OP[sum]
CALL[java.lang.Object,toString,0,java.lang.String] +++$+++  PARENTHESESEND VAR[java.lang.Object] EOL RETURN
CALL[java.lang.Number,toString,0,java.lang.String] +++$+++  OP[ternaryFalse] NEW TYPE[BigDecimal] PARENTHESESSTART
CALL[java.lang.Object,getClass,0,java.lang.Class<? extends java.lang.Object>] +++$+++  ARRAYSTART VAR[INT] ARRAYEND OP[assign]
CALL[java.lang.Object,getClass,0,java.lang.Class<? extends java.lang.Object>] +++$+++  OP[ternaryTrue] OP[greaterThan] VAR[java.lang.Class] OP[assign]
CALL[java.lang.Object,getClass,0,java.lang.Class<? extends java.lang.Object>] +++$+++  ARRAYSTART VAR[INT] ARRAYEND OP[assign]
CALL[java.net.URL,openStream,0,java.io.InputStream] +++$+++  PARENTHESESSTART NEW TYPE[InputStreamReader] PARENTHESESSTART
CALL[java.util.Map.Entry,getKey,0,K] +++$+++  LEX[entry.getValue] PARENTHESESSTART PARENTHESESEND COMMA
CALL[java.util.Map,get,1,V] PARA[VAR[java.lang.String]] +++$+++  OP[ternaryTrue] OP[greaterThan] VAR[java.lang.Class] OP[assign]
CALL[java.util.Map,containsKey,1,boolean] PARA[VAR[java.lang.String]] +++$+++  VAR[java.lang.String] PARENTHESESEND CURLYSTART RETURN
CALL[java.util.Map,get,1,V] PARA[VAR[java.lang.String]] +++$+++  VAR[java.lang.String] PARENTHESESEND CURLYSTART RETURN
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.Class]] PARA[VAR[java.lang.String]] +++$+++  OP[assign] NULL PARENTHESESEND CURLYSTART
CALL[java.net.URI,getFragment,0,java.lang.String] +++$+++  LEX[dburi.getPath] PARENTHESESSTART PARENTHESESEND COMMA
CALL[java.net.URI,getQuery,0,java.lang.String] +++$+++  LEX[dburi.getFragment] PARENTHESESSTART PARENTHESESEND COMMA
CALL[java.lang.String,length,0,int] +++$+++  OP[assign] VAR[java.lang.String] OP[bitwiseOr] OP[bitwiseOr]
CALL[java.io.File,exists,0,boolean] +++$+++  EOL IF PARENTHESESSTART OP[not]
CALL[java.io.File,isDirectory,0,boolean] +++$+++  CURLYEND IF PARENTHESESSTART OP[not]
CALL[javax.swing.JList,getSelectedValue,0,E] +++$+++  CURLYEND ELSE IF PARENTHESESSTART
CALL[javax.swing.undo.UndoManager,canRedo,0,boolean] +++$+++  TRY CURLYSTART IF PARENTHESESSTART
CALL[java.lang.Class,getName,0,java.lang.String] +++$+++  OP[assign] OP[assign] NULL OP[ternaryTrue]
CALL[java.lang.String,length,0,int] +++$+++  PARENTHESESSTART LEX[Math.max] PARENTHESESSTART COMMA
CALL[java.lang.String,indexOf,2,int] PARA[VAR[java.lang.String]] PARA[VAR[INT]] +++$+++  VAR[INT] EOL VAR[INT] OP[assign]
CALL[java.util.Iterator,next,0,E] +++$+++  EOL CURLYEND LEX[sb.append] PARENTHESESSTART
CALL[java.util.List,get,1,E] PARA[VAR[INT]] +++$+++  EOL CURLYEND LEX[sb.append] PARENTHESESSTART
CALL[java.lang.StringBuilder,toString,0,java.lang.String] +++$+++  PARENTHESESEND EOL CURLYEND RETURN
CALL[java.io.File,exists,0,boolean] +++$+++  CURLYSTART IF PARENTHESESSTART OP[not]
CALL[java.util.List,add,1,boolean] PARA[CALL[null,ruleRenamed]] +++$+++  STRING VAR[java.lang.String] PARENTHESESEND CURLYSTART
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[CALL[java.util.regex.Matcher,start]] +++$+++  VAR[java.lang.String] PARENTHESESEND EOL CURLYEND
CALL[java.util.List,add,1,boolean] PARA[CALL[java.lang.String,substring]] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND CURLYSTART
CALL[java.lang.String,substring,1,java.lang.String] PARA[LIT[Integer]] +++$+++  PARENTHESESEND CURLYSTART LEX[filteredLines.add] PARENTHESESSTART
CALL[java.lang.String,substring,1,java.lang.String] PARA[LIT[Integer]] +++$+++  PARENTHESESEND CURLYSTART LEX[filteredLines.add] PARENTHESESSTART
CALL[java.lang.ClassLoader,equals,1,boolean] PARA[VAR[java.lang.ClassLoader]] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.lang.String,equals,1,boolean] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.io.File,getName,0,java.lang.String] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.awt.Canvas,getWidth,0,int] +++$+++  EOL LEX[GL11.glOrtho] PARENTHESESSTART COMMA
CALL[java.awt.image.BufferedImage,getWidth,0,int] +++$+++  PARENTHESESSTART INT PARENTHESESEND PARENTHESESSTART
CALL[java.awt.Color,getAlpha,0,int] +++$+++  PARENTHESESEND DOUBLE VAR[DOUBLE] OP[assign]
CALL[java.awt.image.BufferedImage,getRGB,2,int] PARA[VAR[INT]] PARA[VAR[INT]] +++$+++  CURLYSTART INT VAR[INT] OP[assign]
CALL[net.sf.hale.swingeditor.SwingEditor,setVisible,1,void] PARA[LIT[Boolean]] +++$+++  PARENTHESESSTART VAR[net.sf.hale.swingeditor.SwingEditor] PARENTHESESEND EOL
CALL[java.io.InputStream,read,0,int] +++$+++  PARENTHESESSTART PARENTHESESSTART VAR[INT] OP[assign]
CALL[java.lang.StringBuilder,toString,0,java.lang.String] +++$+++  EOL CURLYEND CURLYEND RETURN
CALL[java.lang.StringBuilder,toString,0,java.lang.String] +++$+++  OP[ternaryFalse] CASE OP[ternaryFalse] RETURN
CALL[java.util.Set,add,1,boolean] PARA[VAR[java.lang.String]] +++$+++  INSTANCEOF TYPE[JSONArray] PARENTHESESEND CURLYSTART
CALL[javax.script.ScriptEngine,toString,0,java.lang.String] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.util.zip.ZipOutputStream,write,3,void] PARA[VAR[BYTE]] PARA[LIT[Integer]] PARA[VAR[INT]] +++$+++  PARENTHESESEND OP[greaterThan] PARENTHESESEND CURLYSTART
CALL[java.util.zip.ZipOutputStream,closeEntry,0,void] +++$+++  LEX[out.flush] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.io.FileReader,read,0,int] +++$+++  PARENTHESESSTART PARENTHESESSTART VAR[INT] OP[assign]
CALL[java.util.List,add,1,boolean] PARA[CALL[java.io.File,getName]] +++$+++  OP[assign] NULL PARENTHESESEND CURLYSTART
CALL[java.lang.ThreadGroup,enumerate,1,int] PARA[VAR[java.lang.Thread]] +++$+++  EOL INT VAR[INT] OP[assign]
CALL[java.util.Map,get,1,V] PARA[VAR[net.sf.hale.defaultability.MouseActionList.Condition]] +++$+++  VAR[net.sf.hale.defaultability.MouseActionList.Condition] PARENTHESESEND CURLYSTART RETURN
CALL[java.util.List,iterator,0,java.util.Iterator<E>] +++$+++  PARENTHESESEND CURLYSTART VAR[java.util.Iterator] OP[assign]
CALL[java.util.List,clear,0,void] +++$+++  PARENTHESESSTART PARENTHESESEND EOL CURLYEND
CALL[java.io.PrintWriter,append,1,java.io.PrintWriter] PARA[LIT[Character]] +++$+++  VAR[BOOLEAN] OP[assign] LEX[true] EOL
CALL[java.util.Map.Entry,getValue,0,V] +++$+++  PARENTHESESEND EOL LEX[SaveWriter.writeJSONValue] PARENTHESESSTART
CALL[java.util.Set,add,1,boolean] PARA[VAR[java.lang.Integer]] +++$+++  PARENTHESESSTART VAR[java.lang.Integer] PARENTHESESEND EOL
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND EOL
CALL[java.util.ArrayList,trimToSize,0,void] +++$+++  PARENTHESESEND PARENTHESESEND EOL CURLYEND
CALL[java.util.List,add,1,boolean] PARA[VAR[java.lang.String]] +++$+++  OP[ternaryFalse] VAR[java.util.List] PARENTHESESEND CURLYSTART
CALL[java.io.Reader,read,1,int] PARA[VAR[CHAR]] +++$+++  TRY CURLYSTART VAR[INT] OP[assign]
CALL[java.util.List,add,1,boolean] PARA[CALL[java.net.URI,toString]] +++$+++  OP[ternaryFalse] VAR[java.util.List] PARENTHESESEND CURLYSTART
CALL[java.net.URI,toURL,0,java.net.URL] +++$+++  PARENTHESESSTART VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.lang.String,length,0,int] +++$+++  OP[sum] VAR[java.lang.String] EOL ASSERT
CALL[java.lang.String,lastIndexOf,1,int] PARA[LIT[Stirng]] +++$+++  CURLYSTART INT VAR[INT] OP[assign]
CALL[java.net.URL,openStream,0,java.io.InputStream] +++$+++  CURLYSTART RETURN LEX[IOUtils.toString] PARENTHESESSTART
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.util.Map,get,1,V] PARA[VAR[java.lang.String]] +++$+++  LEX[true] EOL VAR[org.ambraproject.freemarker.AmbraFreemarkerConfig.JournalConfig] OP[assign]
CALL[java.util.Map,get,1,V] PARA[VAR[java.lang.String]] +++$+++  CURLYSTART TYPE[JournalConfig] VAR[org.ambraproject.freemarker.AmbraFreemarkerConfig.JournalConfig] OP[assign]
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[VAR[java.lang.String]] +++$+++  LEX[stringBuilder.append] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.lang.String,length,0,int] +++$+++  EOL INT VAR[INT] OP[assign]
CALL[java.lang.String,substring,1,java.lang.String] PARA[CALL[java.lang.String,length]] +++$+++  PARENTHESESEND CURLYSTART VAR[java.lang.String] OP[assign]
CALL[java.lang.String,hashCode,0,int] +++$+++  OP[not] OP[assign] NULL OP[ternaryTrue]
CALL[java.lang.String,hashCode,0,int] +++$+++  OP[not] OP[assign] NULL OP[ternaryTrue]
CALL[java.lang.String,hashCode,0,int] +++$+++  OP[not] OP[assign] NULL OP[ternaryTrue]
CALL[java.util.List,size,0,int] +++$+++  CURLYSTART INT VAR[INT] OP[assign]
CALL[java.lang.String,hashCode,0,int] +++$+++  OP[not] OP[assign] NULL OP[ternaryTrue]
CALL[java.util.Map,get,1,V] PARA[VAR[java.lang.String]] +++$+++  VAR[java.lang.String] PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.String,equals,1,boolean] PARA[VAR[java.lang.String]] +++$+++  OP[assign] OP[assign] NULL OP[ternaryFalse]
CALL[java.lang.String,length,0,int] +++$+++  RETURN LEX[temString.substring] PARENTHESESSTART COMMA
CALL[java.lang.String,concat,1,java.lang.String] PARA[VAR[java.lang.String]] +++$+++  OP[assign] EOL VAR[java.lang.String] OP[assign]
CALL[java.util.HashMap,putAll,1,void] PARA[FIELD[com.frostwire.content.ContentValues]] +++$+++  LEX[ContentValues] VAR[com.frostwire.content.ContentValues] PARENTHESESEND CURLYSTART
CALL[java.util.HashMap,get,1,V] PARA[VAR[java.lang.String]] +++$+++  CURLYSTART TYPE[Object] VAR[java.lang.Object] OP[assign]
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Character]] +++$+++  PARENTHESESEND EOL CURLYEND CURLYEND
CALL[java.util.Map.Entry,getValue,0,V] +++$+++  OP[sum] OP[sum] ARRAYEND OP[assign]
CALL[java.util.Iterator,hasNext,0,boolean] +++$+++  OP[assign] EOL WHILE PARENTHESESSTART
CALL[java.util.Map,get,1,V] PARA[VAR[java.lang.String]] +++$+++  EOL TYPE[String] VAR[java.lang.String] OP[assign]
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Character]] +++$+++  PARENTHESESSTART VAR[java.lang.String] PARENTHESESEND EOL
CALL[javax.swing.JLabel,setEnabled,1,void] PARA[VAR[BOOLEAN]] +++$+++  OP[assign] NULL PARENTHESESEND CURLYSTART
CALL[javax.swing.JPanel,add,2,void] PARA[VAR[javax.swing.JButton]] PARA[LIT[Stirng]] +++$+++  VAR[javax.swing.JButton] COMMA PARENTHESESEND EOL
CALL[java.awt.Container,add,2,void] PARA[VAR[javax.swing.JPanel]] PARA[LIT[Stirng]] +++$+++  VAR[javax.swing.JButton] COMMA PARENTHESESEND EOL
CALL[java.io.File,getCanonicalFile,0,java.io.File] +++$+++  TRY CURLYSTART VAR[java.io.File] OP[assign]
CALL[java.io.File,getAbsolutePath,0,java.lang.String] +++$+++  LEX[true] EOL VAR[java.lang.String] OP[assign]
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[VAR[java.lang.String]] +++$+++  OP[ternaryFalse] VAR[java.util.List] PARENTHESESEND CURLYSTART
CALL[java.lang.Exception,getMessage,0,java.lang.String] +++$+++  PARENTHESESEND CURLYSTART LEX[GUIMediator.showError] PARENTHESESSTART
CALL[javax.swing.JPanel,add,2,void] PARA[VAR[javax.swing.JPanel]] PARA[VAR[java.lang.String]] +++$+++  LEX[saButton] COMMA PARENTHESESEND EOL
CALL[java.util.concurrent.CountDownLatch,countDown,0,void] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND CURLYSTART
CALL[com.frostwire.gui.theme.FrostwireInputDialog,setVisible,1,void] PARA[LIT[Boolean]] +++$+++  COMMA LEX[listener] PARENTHESESEND EOL
CALL[javax.swing.UIDefaults,getFont,1,java.awt.Font] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART PARENTHESESEND EOL RETURN
CALL[java.lang.String,startsWith,1,boolean] PARA[LIT[Stirng]] +++$+++  CURLYEND ELSE IF PARENTHESESSTART
CALL[javax.swing.JSlider,repaint,0,void] +++$+++  VAR[BOOLEAN] OP[assign] VAR[BOOLEAN] EOL
CALL[javax.swing.JTable,getValueAt,2,java.lang.Object] PARA[VAR[INT]] PARA[VAR[INT]] +++$+++  EOL TYPE[Object] VAR[java.lang.Object] OP[assign]
CALL[javax.swing.table.TableCellRenderer,getTableCellRendererComponent,6,java.awt.Component] PARA[VAR[javax.swing.JTable]] PARA[VAR[java.lang.Object]] PARA[LIT[Boolean]] PARA[LIT[Boolean]] PARA[VAR[INT]] PARA[VAR[INT]] +++$+++  EOL TYPE[Component] VAR[java.awt.Component] OP[assign]
CALL[java.awt.Graphics2D,setColor,1,void] PARA[VAR[java.awt.Color]] +++$+++  COMMA LEX[RenderingHints.VALUE_ANTIALIAS_ON] PARENTHESESEND EOL
CALL[java.awt.geom.Path2D,reset,0,void] +++$+++  DOUBLE VAR[DOUBLE] PARENTHESESEND CURLYSTART
CALL[java.awt.geom.Path2D,closePath,0,void] +++$+++  OP[sum] VAR[DOUBLE] PARENTHESESEND EOL
CALL[java.awt.geom.Path2D,moveTo,2,void] PARA[VAR[DOUBLE]] PARA[VAR[DOUBLE]] +++$+++  LEX[path.reset] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.awt.geom.Path2D,closePath,0,void] +++$+++  VAR[DOUBLE] OP[sum] COMMA VAR[INT]
CALL[java.awt.geom.Path2D,closePath,0,void] +++$+++  COMMA VAR[DOUBLE] PARENTHESESEND EOL
CALL[java.awt.geom.Path2D,reset,0,void] +++$+++  OP[assign] VAR[INT] OP[sum] VAR[INT]
CALL[java.awt.geom.Path2D,closePath,0,void] +++$+++  OP[sub] VAR[DOUBLE] PARENTHESESEND EOL
CALL[java.awt.geom.Ellipse2D,setFrame,4,void] PARA[VAR[INT]] PARA[VAR[INT]] PARA[VAR[INT]] PARA[VAR[INT]] +++$+++  INT VAR[INT] PARENTHESESEND CURLYSTART
CALL[java.awt.geom.Path2D,lineTo,2,void] PARA[VAR[INT]] PARA[VAR[INT]] +++$+++  CURLYSTART CASE VAR[com.frostwire.gui.theme.ShapeGenerator.CornerStyle] OP[ternaryFalse]
CALL[java.awt.geom.Path2D,closePath,0,void] +++$+++  EOL BREAK EOL CURLYEND
CALL[java.awt.FontMetrics,getHeight,0,int] +++$+++  EOL INT VAR[INT] OP[assign]
CALL[javax.swing.text.JTextComponent,getClientProperty,1,java.lang.Object] PARA[VAR[java.lang.String]] +++$+++  OP[assign] PARENTHESESSTART TYPE[FocusBehavior] PARENTHESESEND
CALL[java.util.prefs.Preferences,clear,0,void] +++$+++  EOL CURLYEND TRY CURLYSTART
CALL[javax.swing.text.JTextComponent,updateUI,0,void] +++$+++  PARENTHESESSTART VAR[javax.swing.text.JTextComponent] PARENTHESESEND EOL
CALL[javax.swing.plaf.TextUI,installUI,1,void] PARA[VAR[javax.swing.JComponent]] +++$+++  LEX[JComponent] VAR[javax.swing.JComponent] PARENTHESESEND CURLYSTART
CALL[javax.swing.plaf.TextUI,damageRange,5,void] PARA[VAR[javax.swing.text.JTextComponent]] PARA[VAR[INT]] PARA[VAR[INT]] PARA[VAR[javax.swing.text.Position.Bias]] PARA[VAR[javax.swing.text.Position.Bias]] +++$+++  LEX[Bias] VAR[javax.swing.text.Position.Bias] PARENTHESESEND CURLYSTART
CALL[javax.swing.JTextField,putClientProperty,2,void] PARA[VAR[com.frostwire.gui.searchfield.BuddySupport.Position]] PARA[VAR[java.util.List]] +++$+++  LEX[JTextField] VAR[javax.swing.JTextField] PARENTHESESEND CURLYSTART
CALL[javax.swing.JTextField,getClientProperty,1,java.lang.Object] PARA[VAR[com.frostwire.gui.searchfield.BuddySupport.Position]] +++$+++  OP[lessThan] TYPE[Component] OP[greaterThan] PARENTHESESEND
CALL[java.io.PrintWriter,write,1,void] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND EOL
CALL[java.util.List,contains,1,boolean] PARA[VAR[java.lang.String]] +++$+++  VAR[java.lang.String] PARENTHESESEND CURLYSTART RETURN
CALL[java.util.Set,contains,1,boolean] PARA[VAR[INT]] +++$+++  VAR[INT] PARENTHESESEND CURLYSTART RETURN
CALL[java.util.Set,add,1,boolean] PARA[VAR[java.io.File]] +++$+++  OP[assign] NULL PARENTHESESEND CURLYSTART
CALL[java.awt.Graphics,dispose,0,void] +++$+++  PARENTHESESSTART VAR[java.awt.Graphics] PARENTHESESEND EOL
CALL[java.io.File,getParentFile,0,java.io.File] +++$+++  VAR[java.io.File] EOL VAR[java.io.File] OP[assign]
CALL[java.io.File,getName,0,java.lang.String] +++$+++  LEX[file.getAbsolutePath] PARENTHESESSTART PARENTHESESEND OP[ternaryFalse]
CALL[java.awt.datatransfer.DataFlavor,equals,1,boolean] PARA[VAR[java.awt.datatransfer.DataFlavor]] +++$+++  CURLYEND ELSE IF PARENTHESESSTART
CALL[javax.swing.JDialog,setVisible,1,void] PARA[LIT[Boolean]] +++$+++  OP[assign] NULL PARENTHESESEND CURLYSTART
CALL[java.lang.String,toLowerCase,0,java.lang.String] +++$+++  PARENTHESESEND CURLYSTART VAR[java.lang.String] OP[assign]
CALL[java.util.List,get,1,E] PARA[LIT[Integer]] +++$+++  TYPE[Object] OP[greaterThan] VAR[java.util.List] OP[assign]
CALL[java.util.List,size,0,int] +++$+++  CURLYSTART INT VAR[INT] OP[assign]
CALL[java.util.List,get,1,E] PARA[LIT[Integer]] +++$+++  OP[assign] PARENTHESESSTART TYPE[Float] PARENTHESESEND
CALL[java.util.List,get,1,E] PARA[LIT[Integer]] +++$+++  OP[assign] PARENTHESESSTART TYPE[String] PARENTHESESEND
CALL[java.util.List,get,1,E] PARA[LIT[Integer]] +++$+++  OP[assign] PARENTHESESSTART TYPE[String] PARENTHESESEND
CALL[java.lang.String,contains,1,boolean] PARA[VAR[java.lang.String]] +++$+++  VAR[java.lang.String] PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.StringBuilder,toString,0,java.lang.String] +++$+++  RETURN NEW TYPE[Token] PARENTHESESSTART
CALL[java.lang.String,startsWith,1,boolean] PARA[LIT[Stirng]] +++$+++  VAR[java.lang.String] PARENTHESESEND CURLYSTART RETURN
CALL[java.util.Set,equals,1,boolean] PARA[FIELD[com.limegroup.gnutella.MediaType]] +++$+++  FIELD[schema,com.limegroup.gnutella.MediaType] PARENTHESESEND OP[bitwiseAnd] OP[bitwiseAnd]
CALL[java.awt.Font,getStyle,0,int] +++$+++  TYPE[Font] PARENTHESESSTART VAR[java.lang.String] COMMA
CALL[java.lang.StringBuilder,toString,0,java.lang.String] +++$+++  PARENTHESESEND EOL CURLYEND RETURN
CALL[javax.swing.MenuSelectionManager,getSelectedPath,0,javax.swing.MenuElement[]] +++$+++  ARRAYSTART ARRAYEND VAR[javax.swing.MenuElement] OP[assign]
CALL[javax.swing.JTextField,setEnabled,1,void] PARA[VAR[BOOLEAN]] +++$+++  BOOLEAN VAR[BOOLEAN] PARENTHESESEND CURLYSTART
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[javax.swing.Icon]] +++$+++  VAR[java.lang.String] OP[sum] PARENTHESESEND EOL
CALL[java.util.List,add,1,boolean] PARA[LIT[Stirng]] +++$+++  OP[greaterThan] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.util.List,add,1,boolean] PARA[LIT[Stirng]] +++$+++  LEX[command.add] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.util.List,add,1,boolean] PARA[LIT[Stirng]] +++$+++  LEX[command.add] PARENTHESESSTART PARENTHESESEND EOL
CALL[com.limegroup.gnutella.gui.init.SetupManager.CancelAction,isEnabled,0,boolean] +++$+++  EOL CURLYEND IF PARENTHESESSTART
CALL[javax.swing.JLabel,addMouseListener,1,void] PARA[VAR[java.awt.event.MouseAdapter]] +++$+++  COMMA PARENTHESESEND PARENTHESESEND EOL
CALL[java.net.URI,isAbsolute,0,boolean] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.lang.String,equalsIgnoreCase,1,boolean] PARA[LIT[Stirng]] +++$+++  OP[assign] NULL OP[bitwiseAnd] OP[bitwiseAnd]
CALL[java.util.ArrayList,size,0,int] +++$+++  PARENTHESESSTART NEW TYPE[File] ARRAYSTART
CALL[java.util.List,add,1,boolean] PARA[VAR[java.io.File]] +++$+++  OP[not] OP[assign] NULL PARENTHESESEND
CALL[javax.swing.JComponent,setAutoscrolls,1,void] PARA[VAR[BOOLEAN]] +++$+++  TYPE[RuntimeException] VAR[java.lang.RuntimeException] PARENTHESESEND CURLYSTART
CALL[java.awt.datatransfer.Transferable,getTransferDataFlavors,0,java.awt.datatransfer.DataFlavor[]] +++$+++  LEX[flavors.addAll] PARENTHESESSTART LEX[Arrays.asList] PARENTHESESSTART
CALL[java.lang.Runnable,run,0,void] +++$+++  LEX[EventQueue.isDispatchThread] PARENTHESESSTART PARENTHESESEND PARENTHESESEND
CALL[java.util.Enumeration,nextElement,0,E] +++$+++  CURLYSTART TYPE[NetworkInterface] VAR[java.net.NetworkInterface] OP[assign]
CALL[javax.swing.JCheckBox,isSelected,0,boolean] +++$+++  PARENTHESESEND OP[bitwiseAnd] OP[bitwiseAnd] OP[not]
CALL[java.awt.FontMetrics,stringWidth,1,int] PARA[VAR[java.lang.String]] +++$+++  EOL INT VAR[INT] OP[assign]
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[CALL[java.lang.String,replace]] +++$+++  LEX[b.append] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.util.Set,contains,1,boolean] PARA[CALL[javax.swing.tree.TreeModel,getChild]] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[javax.swing.tree.TreeModel,getChild,2,java.lang.Object] PARA[VAR[java.lang.Object]] PARA[VAR[INT]] +++$+++  CURLYSTART TYPE[Object] VAR[java.lang.Object] OP[assign]
CALL[java.util.List,remove,1,boolean] PARA[VAR[javax.swing.event.TreeModelListener]] +++$+++  LEX[TreeModelListener] VAR[javax.swing.event.TreeModelListener] PARENTHESESEND CURLYSTART
CALL[javax.swing.JLabel,setText,1,void] PARA[VAR[java.lang.String]] +++$+++  LEX[OSUtils.isMacOSX] PARENTHESESSTART PARENTHESESEND PARENTHESESEND
CALL[javax.swing.JTextArea,selectAll,0,void] +++$+++  LEX[ActionEvent] LEX[e] PARENTHESESEND CURLYSTART
CALL[java.awt.Font,equals,1,boolean] PARA[CALL[javax.swing.JComponent,getFont]] +++$+++  NULL OP[bitwiseAnd] OP[bitwiseAnd] OP[not]
CALL[java.awt.event.MouseEvent,getID,0,int] +++$+++  LEX[e.getSource] PARENTHESESSTART PARENTHESESEND COMMA
CALL[javax.swing.JLabel,setIconTextGap,1,void] PARA[LIT[Integer]] +++$+++  PARENTHESESSTART VAR[INT] PARENTHESESEND EOL
CALL[javax.swing.JLabel,setHorizontalTextPosition,1,void] PARA[VAR[INT]] +++$+++  LEX[renderer.setIconTextGap] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.awt.event.MouseEvent,getPoint,0,java.awt.Point] +++$+++  PARENTHESESEND CURLYSTART LEX[hmo.handleHeaderPopupMenu] PARENTHESESSTART
CALL[java.awt.Graphics,setColor,1,void] PARA[VAR[java.awt.Color]] +++$+++  VAR[INT] COMMA PARENTHESESEND EOL
CALL[java.lang.Long,longValue,0,long] +++$+++  OP[bitwiseOr] VAR[LONG] OP[greaterThan] OP[assign]
CALL[javax.swing.JTextArea,setCaretPosition,1,void] PARA[LIT[Integer]] +++$+++  LEX[textArea.copy] PARENTHESESSTART PARENTHESESEND EOL
CALL[javax.swing.undo.UndoManager,undoOrRedo,0,void] +++$+++  OP[not] OP[assign] NULL PARENTHESESEND
CALL[java.util.Map,put,2,V] PARA[VAR[com.limegroup.gnutella.MagnetOptions.Option]] PARA[VAR[java.util.List]] +++$+++  OP[greaterThan] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.lang.String,startsWith,1,boolean] PARA[LIT[Stirng]] +++$+++  LEX[UnitValue.MIN] EOL IF PARENTHESESSTART
CALL[java.lang.String,length,0,int] +++$+++  EOL INT VAR[INT] OP[assign]
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  VAR[INT] OP[bitwiseAnd] OP[bitwiseAnd] PARENTHESESSTART
CALL[java.util.WeakHashMap,get,1,V] PARA[VAR[java.lang.Object]] +++$+++  OP[not] OP[assign] NULL OP[ternaryTrue]
CALL[java.io.PrintWriter,close,0,void] +++$+++  LEX[close] PARENTHESESSTART PARENTHESESEND CURLYSTART
CALL[org.gudy.azureus2.core3.util.AEThread2.threadWrapper,isAlive,0,boolean] +++$+++  NULL OP[ternaryTrue] LEX[false] OP[ternaryFalse]
CALL[java.io.File,listFiles,0,java.io.File[]] +++$+++  ARRAYSTART ARRAYEND VAR[java.io.File] OP[assign]
CALL[java.lang.String,substring,1,java.lang.String] PARA[LIT[Integer]] +++$+++  PARENTHESESEND CURLYSTART VAR[java.lang.String] OP[assign]
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  CURLYSTART CHAR VAR[CHAR] OP[assign]
CALL[java.util.Iterator,next,0,E] +++$+++  OP[assign] PARENTHESESSTART LEX[threadPoolWorker] PARENTHESESEND
CALL[java.util.List,add,1,boolean] PARA[VAR[org.gudy.azureus2.core3.util.CopyOnWriteList.T]] +++$+++  PARENTHESESSTART VAR[java.util.List] PARENTHESESEND EOL
CALL[java.util.List,remove,1,boolean] PARA[VAR[org.gudy.azureus2.core3.util.SystemTime.TickConsumer]] +++$+++  PARENTHESESSTART VAR[java.util.List] PARENTHESESEND EOL
CALL[java.util.List,remove,1,boolean] PARA[VAR[org.gudy.azureus2.core3.util.SystemTime.TickConsumer]] +++$+++  PARENTHESESSTART VAR[java.util.List] PARENTHESESEND EOL
CALL[java.lang.String,startsWith,1,boolean] PARA[LIT[Stirng]] +++$+++  EOL CURLYEND IF PARENTHESESSTART
CALL[java.lang.String,length,0,int] +++$+++  OP[assign] NULL OP[bitwiseOr] OP[bitwiseOr]
CALL[java.util.concurrent.ThreadFactory,newThread,1,java.lang.Thread] PARA[VAR[java.lang.Runnable]] +++$+++  VAR[java.lang.Runnable] PARENTHESESEND CURLYSTART RETURN
CALL[java.util.concurrent.ThreadPoolExecutor,allowCoreThreadTimeOut,1,void] PARA[LIT[Boolean]] +++$+++  COMMA VAR[java.util.concurrent.ThreadFactory] PARENTHESESEND EOL
CALL[java.lang.String,equals,1,boolean] PARA[LIT[Stirng]] +++$+++  OP[assign] NULL OP[bitwiseAnd] OP[bitwiseAnd]
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Stirng]] +++$+++  VAR[LONG] PARENTHESESEND PARENTHESESEND EOL
CALL[java.nio.charset.CharsetEncoder,encode,3,java.nio.charset.CoderResult] PARA[VAR[java.nio.CharBuffer]] PARA[VAR[java.nio.ByteBuffer]] PARA[LIT[Boolean]] +++$+++  EOL TYPE[CoderResult] VAR[java.nio.charset.CoderResult] OP[assign]
CALL[java.util.Properties,isEmpty,0,boolean] +++$+++  EOL IF PARENTHESESSTART OP[not]
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.List,add,1,boolean] PARA[VAR[java.io.File]] +++$+++  LEX[directory.isDirectory] PARENTHESESSTART PARENTHESESEND PARENTHESESEND
CALL[java.util.List,size,0,int] +++$+++  PARENTHESESEND EOL WHILE PARENTHESESSTART
CALL[java.io.File,exists,0,boolean] +++$+++  OP[assign] EOL WHILE PARENTHESESSTART
CALL[java.util.List,add,1,boolean] PARA[CALL[java.util.StringTokenizer,nextToken]] +++$+++  LEX[tokenizer.hasMoreTokens] PARENTHESESSTART PARENTHESESEND PARENTHESESEND
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[VAR[java.lang.String]] +++$+++  OP[sum] OP[sum] PARENTHESESEND CURLYSTART
CALL[java.lang.String,startsWith,1,boolean] PARA[LIT[Stirng]] +++$+++  CURLYSTART IF PARENTHESESSTART OP[not]
CALL[java.util.List,add,1,boolean] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND CURLYSTART
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  VAR[INT] PARENTHESESEND OP[not] OP[assign]
CALL[java.io.File,getAbsoluteFile,0,java.io.File] +++$+++  EOL LEX[LOG.debug] PARENTHESESSTART OP[sum]
CALL[java.io.File,mkdirs,0,boolean] +++$+++  CURLYSTART IF PARENTHESESSTART OP[not]
CALL[java.util.List,add,1,boolean] PARA[CALL[java.util.StringTokenizer,nextToken]] +++$+++  LEX[tokenizer.hasMoreTokens] PARENTHESESSTART PARENTHESESEND PARENTHESESEND
CALL[java.lang.String,length,0,int] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.util.StringTokenizer,hasMoreTokens,0,boolean] +++$+++  LEX[true] EOL WHILE PARENTHESESSTART
CALL[java.util.List,add,1,boolean] PARA[LIT[Stirng]] +++$+++  LEX[tokens.isEmpty] PARENTHESESSTART PARENTHESESEND PARENTHESESEND
CALL[java.lang.StringBuilder,toString,0,java.lang.String] +++$+++  PARENTHESESEND PARENTHESESEND EOL RETURN
CALL[java.util.Map,get,1,V] PARA[VAR[CHAR]] +++$+++  FINAL TYPE[String] VAR[java.lang.String] OP[assign]
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.logging.Logger,logp,4,void] PARA[VAR[java.util.logging.Level]] PARA[VAR[java.lang.String]] PARA[LIT[Stirng]] PARA[VAR[java.lang.String]] +++$+++  STRING VAR[java.lang.String] PARENTHESESEND CURLYSTART
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  PARENTHESESSTART OP[not] PARENTHESESSTART PARENTHESESSTART
CALL[java.nio.charset.CharsetDecoder,decode,1,java.nio.CharBuffer] PARA[CALL[null,wrap]] +++$+++  CURLYSTART TYPE[CharBuffer] VAR[java.nio.CharBuffer] OP[assign]
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  PARENTHESESEND CURLYSTART VAR[CHAR] OP[assign]
CALL[java.lang.String,length,0,int] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.lang.String,length,0,int] +++$+++  VAR[INT] OP[assign] VAR[INT] OP[sum]
CALL[java.lang.StringBuilder,toString,0,java.lang.String] +++$+++  CHAR PARENTHESESEND LEX[Long.parseLong] PARENTHESESSTART
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[VAR[CHAR]] +++$+++  CONTINUE EOL CURLYEND CURLYEND
CALL[java.lang.StringBuilder,toString,0,java.lang.String] +++$+++  PARENTHESESEND EOL CURLYEND RETURN
CALL[java.lang.String,replaceAll,2,java.lang.String] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND EOL VAR[java.lang.String] OP[assign]
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  PARENTHESESSTART OP[not] LEX[Character.isDigit] PARENTHESESSTART
CALL[java.lang.String,length,0,int] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[CALL[java.lang.Object,toString]] +++$+++  OP[ternaryFalse] VAR[java.lang.Object] PARENTHESESEND CURLYSTART
CALL[java.nio.ByteBuffer,remaining,0,int] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.nio.ByteBuffer,capacity,0,int] +++$+++  PARENTHESESSTART NEW BYTE ARRAYSTART
CALL[java.io.InputStream,read,1,int] PARA[VAR[BYTE]] +++$+++  PARENTHESESSTART PARENTHESESSTART VAR[INT] OP[assign]
CALL[java.util.Iterator,next,0,E] +++$+++  CURLYSTART TYPE[SearchTask] VAR[com.frostwire.search.SearchManager.SearchTask] OP[assign]
CALL[java.io.RandomAccessFile,getChannel,0,java.nio.channels.FileChannel] +++$+++  OP[assign] NEW TYPE[InputChannel] PARENTHESESSTART
CALL[java.io.RandomAccessFile,seek,1,void] PARA[LIT[Integer]] +++$+++  CURLYEND CURLYEND PARENTHESESEND EOL
CALL[java.nio.channels.WritableByteChannel,close,0,void] +++$+++  PARENTHESESEND THROWS LEX[IOException] CURLYSTART
CALL[java.nio.ByteBuffer,getInt,0,int] +++$+++  ARRAYSTART VAR[INT] ARRAYEND OP[assign]
CALL[java.io.ByteArrayOutputStream,toByteArray,0,byte[]] +++$+++  PARENTHESESEND EOL CURLYEND RETURN
CALL[java.lang.CharSequence,subSequence,2,java.lang.CharSequence] PARA[VAR[INT]] PARA[CALL[java.lang.CharSequence,length]] +++$+++  NULL OP[ternaryTrue] NULL OP[ternaryFalse]
CALL[DOUBLE,clone,0,java.lang.Object] +++$+++  NULL EOL CURLYEND RETURN
CALL[org.apache.commons.lang3.ArrayUtils.isSorted(T[]).T,compareTo,1,int] PARA[VAR[org.apache.commons.lang3.ArrayUtils.isSorted(T[]).T]] +++$+++  VAR[org.apache.commons.lang3.ArrayUtils.isSorted(T[]).T] PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.String,length,0,int] +++$+++  OP[bitwiseOr] PARENTHESESSTART VAR[INT] OP[assign]
CALL[java.lang.String,isEmpty,0,boolean] +++$+++  CURLYEND ELSE IF PARENTHESESSTART
CALL[java.lang.CharSequence,length,0,int] +++$+++  LEX[cs1.length] PARENTHESESSTART PARENTHESESEND COMMA
CALL[java.lang.CharSequence,length,0,int] +++$+++  LEX[str.length] PARENTHESESSTART PARENTHESESEND OP[sub]
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  IF PARENTHESESSTART LEX[separatorChars.indexOf] PARENTHESESSTART
CALL[java.util.List,add,1,boolean] PARA[CALL[java.lang.String,substring]] +++$+++  OP[assign] LEX[false] EOL CURLYEND
CALL[java.lang.String,substring,2,java.lang.String] PARA[VAR[INT]] PARA[VAR[INT]] +++$+++  EOL CURLYEND LEX[list.add] PARENTHESESSTART
CALL[java.util.List,add,1,boolean] PARA[CALL[java.lang.String,substring]] +++$+++  OP[assign] LEX[false] EOL CURLYEND
CALL[java.lang.StringBuilder,toString,0,java.lang.String] +++$+++  EOL CURLYEND CURLYEND RETURN
CALL[java.lang.StringBuilder,toString,0,java.lang.String] +++$+++  PARENTHESESEND EOL CURLYEND RETURN
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[VAR[java.lang.Object]] +++$+++  OP[assign] NULL PARENTHESESEND CURLYSTART
CALL[java.lang.String,toCharArray,0,char[]] +++$+++  ARRAYSTART ARRAYEND VAR[CHAR] OP[assign]
CALL[java.lang.CharSequence,length,0,int] +++$+++  FINAL INT VAR[INT] OP[assign]
CALL[java.lang.CharSequence,length,0,int] +++$+++  FINAL INT VAR[INT] OP[assign]
CALL[java.lang.String,charAt,1,char] PARA[LIT[Integer]] +++$+++  PARENTHESESEND EOL CURLYEND RETURN
CALL[java.lang.String,charAt,1,char] PARA[LIT[Integer]] +++$+++  VAR[CHAR] EOL CURLYEND RETURN
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[VAR[CHAR]] +++$+++  CHAR VAR[CHAR] PARENTHESESEND CURLYSTART
CALL[java.util.List,add,1,boolean] PARA[VAR[BYTE]] +++$+++  ARRAYSTART VAR[INT] ARRAYEND EOL
CALL[java.io.File,exists,0,boolean] +++$+++  TYPE[IOException] CURLYSTART IF PARENTHESESSTART
CALL[java.nio.channels.FileChannel,size,0,long] +++$+++  EOL LONG VAR[LONG] OP[assign]
CALL[java.io.File,isDirectory,0,boolean] +++$+++  CURLYSTART IF PARENTHESESSTART OP[not]
CALL[java.io.OutputStream,write,1,void] PARA[VAR[BYTE]] +++$+++  OP[assign] NULL PARENTHESESEND CURLYSTART
CALL[java.io.InputStream,read,1,int] PARA[VAR[BYTE]] +++$+++  OP[assign] PARENTHESESSTART VAR[INT] OP[assign]
CALL[java.lang.String,replace,2,java.lang.String] PARA[VAR[CHAR]] PARA[VAR[CHAR]] +++$+++  VAR[java.lang.String] EOL CURLYEND RETURN
CALL[java.lang.Throwable,getMessage,0,java.lang.String] +++$+++  PARENTHESESEND CURLYSTART LEX[LOG.error] PARENTHESESSTART
CALL[java.io.Writer,write,1,void] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.io.Writer,write,1,void] PARA[CALL[null,toString]] +++$+++  LEX[writer.write] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.lang.String,equals,1,boolean] PARA[VAR[java.lang.String]] +++$+++  VAR[java.lang.String] PARENTHESESEND OP[bitwiseOr] OP[bitwiseOr]
CALL[java.util.LinkedList,add,1,boolean] PARA[LIT[Stirng]] +++$+++  LEX[l.add] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.util.LinkedList,add,1,boolean] PARA[LIT[Stirng]] +++$+++  LEX[l.add] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.util.LinkedList,add,1,boolean] PARA[LIT[Stirng]] +++$+++  LEX[l.add] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[CALL[java.util.Map,get]] +++$+++  STRING VAR[java.lang.String] PARENTHESESEND CURLYSTART
CALL[java.util.Stack,pop,0,E] +++$+++  PARENTHESESEND CURLYSTART VAR[java.io.File] OP[assign]
CALL[java.io.File,isDirectory,0,boolean] +++$+++  OP[assign] NULL OP[bitwiseAnd] OP[bitwiseAnd]
CALL[java.util.Set,size,0,int] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  VAR[INT] PARENTHESESEND PARENTHESESEND OP[ternaryTrue]
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.Class]] PARA[VAR[org.luaj.vm2.lib.jse.CoerceLuaToJava.Coercion]] +++$+++  VAR[java.lang.Class] PARENTHESESEND EOL CURLYEND
CALL[java.lang.String,length,0,int] +++$+++  PARENTHESESSTART PARENTHESESEND OP[sub] COMMA
CALL[java.io.DataOutputStream,write,1,void] PARA[VAR[INT]] +++$+++  PARENTHESESSTART VAR[INT] PARENTHESESEND EOL
CALL[java.io.DataOutputStream,write,1,void] PARA[VAR[INT]] +++$+++  PARENTHESESSTART VAR[INT] PARENTHESESEND EOL
CALL[java.lang.String,substring,1,java.lang.String] PARA[LIT[Integer]] +++$+++  PARENTHESESEND CURLYSTART VAR[java.lang.String] OP[assign]
CALL[java.lang.String,length,0,int] +++$+++  CURLYEND INT VAR[INT] OP[assign]
CALL[java.lang.String,startsWith,1,boolean] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART PARENTHESESEND OP[bitwiseOr] OP[bitwiseOr]
CALL[java.io.DataInputStream,readByte,0,byte] +++$+++  PARENTHESESEND EOL VAR[INT] OP[assign]
CALL[java.util.HashMap,put,2,V] PARA[VAR[java.lang.String]] PARA[CALL[null,toString]] +++$+++  LEX[float] VAR[FLOAT] PARENTHESESEND CURLYSTART
CALL[java.util.HashMap,put,2,V] PARA[VAR[java.lang.String]] PARA[CALL[null,toString]] +++$+++  CHAR VAR[CHAR] PARENTHESESEND CURLYSTART
CALL[java.io.DataInputStream,close,0,void] +++$+++  CURLYSTART CURLYEND LEX[n--] EOL
CALL[java.lang.NoSuchFieldException,getMessage,0,java.lang.String] +++$+++  PARENTHESESEND CURLYSTART VAR[java.lang.String] OP[assign]
CALL[java.lang.ClassNotFoundException,getMessage,0,java.lang.String] +++$+++  PARENTHESESEND CURLYSTART VAR[java.lang.String] OP[assign]
CALL[java.lang.NoSuchMethodException,getMessage,0,java.lang.String] +++$+++  PARENTHESESEND CURLYSTART VAR[java.lang.String] OP[assign]
CALL[java.util.Map,isEmpty,0,boolean] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.io.ByteArrayOutputStream,write,3,void] PARA[VAR[BYTE]] PARA[LIT[Integer]] PARA[VAR[INT]] +++$+++  PARENTHESESSTART VAR[BYTE] PARENTHESESEND EOL
CALL[java.net.URL,openStream,0,java.io.InputStream] +++$+++  PARENTHESESSTART NEW TYPE[BufferedInputStream] PARENTHESESSTART
CALL[java.io.DataInputStream,close,0,void] +++$+++  PARENTHESESSTART PARENTHESESEND EOL CURLYEND
CALL[java.io.InputStream,close,0,void] +++$+++  VAR[INT] PARENTHESESEND EOL CURLYEND
CALL[java.io.FileInputStream,read,1,int] PARA[VAR[BYTE]] +++$+++  PARENTHESESEND EOL VAR[INT] OP[assign]
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[VAR[java.lang.String]] +++$+++  VAR[CHAR] PARENTHESESEND EOL CURLYEND
CALL[java.lang.Exception,printStackTrace,0,void] +++$+++  LEX[Exception] VAR[java.lang.Exception] PARENTHESESEND CURLYSTART
CALL[javax.swing.JFileChooser,getSelectedFile,0,java.io.File] +++$+++  CURLYSTART TYPE[File] VAR[java.io.File] OP[assign]
CALL[javax.swing.JPanel,add,1,java.awt.Component] PARA[CALL[null,createGlue]] +++$+++  PARENTHESESSTART VAR[javax.swing.JButton] PARENTHESESEND EOL
CALL[java.lang.ref.SoftReference,get,0,T] +++$+++  OP[assign] PARENTHESESSTART TYPE[Food] PARENTHESESEND
CALL[java.lang.String,substring,2,java.lang.String] PARA[LIT[Integer]] PARA[LIT[Integer]] +++$+++  OP[greaterThan] PARENTHESESEND CURLYSTART RETURN
CALL[java.util.HashMap,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.util.List]] +++$+++  TYPE[ArrayList] PARENTHESESSTART PARENTHESESEND EOL
CALL[javax.swing.JComboBox,getSelectedItem,0,java.lang.Object] +++$+++  RETURN PARENTHESESSTART TYPE[Measure] PARENTHESESEND
CALL[java.util.Vector,remove,1,boolean] PARA[VAR[java.awt.event.ActionListener]] +++$+++  LEX[ActionListener] VAR[java.awt.event.ActionListener] PARENTHESESEND CURLYSTART
CALL[java.awt.event.KeyEvent,getKeyCode,0,int] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.awt.event.KeyEvent,getKeyCode,0,int] +++$+++  OP[assign] LEX[KeyEvent.VK_UP] OP[bitwiseOr] OP[bitwiseOr]
CALL[java.awt.event.KeyEvent,getKeyCode,0,int] +++$+++  OP[assign] LEX[KeyEvent.VK_DOWN] OP[bitwiseOr] OP[bitwiseOr]
CALL[java.util.Vector,remove,1,boolean] PARA[VAR[javax.swing.event.ChangeListener]] +++$+++  LEX[ChangeListener] VAR[javax.swing.event.ChangeListener] PARENTHESESEND CURLYSTART
CALL[java.util.Vector,remove,1,boolean] PARA[VAR[javax.swing.event.ChangeListener]] +++$+++  LEX[ChangeListener] VAR[javax.swing.event.ChangeListener] PARENTHESESEND CURLYSTART
CALL[java.util.ArrayList,size,0,int] +++$+++  OP[assign] EOL VAR[INT] OP[lessThan]
CALL[java.util.List,add,1,boolean] PARA[VAR[ca.spaz.cron.metrics.Biomarker]] +++$+++  LEX[biomarker.setMin] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.lang.String,length,0,int] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.awt.Color,getGreen,0,int] +++$+++  PARENTHESESEND OP[multiply] VAR[DOUBLE] OP[sum]
CALL[java.awt.Toolkit,getScreenSize,0,java.awt.Dimension] +++$+++  EOL INT VAR[INT] OP[assign]
CALL[java.lang.String,length,0,int] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[javax.swing.JComponent,setName,1,void] PARA[VAR[java.lang.String]] +++$+++  COMMA VAR[javax.swing.JComponent] PARENTHESESEND EOL
CALL[ca.spaz.gui.WrapperDialog,setVisible,1,void] PARA[LIT[Boolean]] +++$+++  PARENTHESESSTART VAR[java.awt.Component] PARENTHESESEND EOL
CALL[java.util.List,get,1,E] PARA[VAR[INT]] +++$+++  CURLYSTART TYPE[Object] VAR[java.lang.Object] OP[assign]
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND OP[sub] PARENTHESESEND CURLYSTART
CALL[java.awt.Container,getComponent,1,java.awt.Component] PARA[VAR[INT]] +++$+++  CURLYSTART TYPE[Component] VAR[java.awt.Component] OP[assign]
CALL[java.io.IOException,printStackTrace,0,void] +++$+++  TYPE[IOException] VAR[java.io.IOException] PARENTHESESEND CURLYSTART
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[LIT[Character]] +++$+++  OP[bitwiseAnd] ARRAYEND PARENTHESESEND EOL
CALL[java.io.ByteArrayOutputStream,write,3,void] PARA[VAR[BYTE]] PARA[LIT[Integer]] PARA[VAR[INT]] +++$+++  CURLYSTART BREAK EOL CURLYEND
CALL[java.util.List,size,0,int] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.lang.Long,longValue,0,long] +++$+++  OP[assign] NULL OP[ternaryTrue] OP[ternaryFalse]
CALL[java.io.UnsupportedEncodingException,printStackTrace,0,void] +++$+++  TYPE[UnsupportedEncodingException] VAR[java.io.UnsupportedEncodingException] PARENTHESESEND CURLYSTART
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.lang.String]] +++$+++  OP[assign] NULL PARENTHESESEND CURLYSTART
CALL[java.lang.String,equals,1,boolean] PARA[VAR[java.lang.String]] +++$+++  CURLYSTART IF PARENTHESESSTART OP[not]
CALL[java.util.Set,size,0,int] +++$+++  OP[assign] NULL OP[bitwiseOr] OP[bitwiseOr]
CALL[java.util.Set,add,1,boolean] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESEND OP[greaterThan] PARENTHESESEND CURLYSTART
CALL[java.net.InetSocketAddress,getAddress,0,java.net.InetAddress] +++$+++  PARENTHESESEND CURLYSTART RETURN PARENTHESESSTART
CALL[java.util.List,add,1,boolean] PARA[VAR[java.lang.Long]] +++$+++  LEX[false] PARENTHESESEND EOL CURLYEND
CALL[java.lang.Throwable,getLocalizedMessage,0,java.lang.String] +++$+++  PARENTHESESSTART VAR[java.lang.String] OP[sum] OP[sum]
CALL[java.lang.String,length,0,int] +++$+++  OP[assign] NULL OP[bitwiseOr] OP[bitwiseOr]
CALL[java.net.URL,getHost,0,java.lang.String] +++$+++  PARENTHESESSTART PARENTHESESEND OP[sum] OP[sum]
CALL[java.io.InputStream,reset,0,void] +++$+++  PARENTHESESEND THROWS LEX[IOException] CURLYSTART
CALL[java.util.IdentityHashMap,put,2,V] PARA[VAR[com.aelitis.azureus.core.util.IdentityHashSet.E]] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND CURLYSTART RETURN PARENTHESESSTART
CALL[java.util.Map,get,1,V] PARA[VAR[java.lang.String]] +++$+++  CURLYEND TYPE[Object] VAR[java.lang.Object] OP[assign]
CALL[java.util.List,size,0,int] +++$+++  PARENTHESESEND CURLYSTART RETURN PARENTHESESSTART
CALL[java.util.List,toArray,1,T[]] PARA[VAR[com.aelitis.azureus.core.util.CopyOnWriteList.T]] +++$+++  PARENTHESESEND CURLYSTART RETURN PARENTHESESSTART
CALL[java.util.Map,get,1,V] PARA[VAR[INT]] +++$+++  CURLYSTART TYPE[Entry] VAR[com.aelitis.azureus.core.util.LinkFileMap.Entry] OP[assign]
CALL[java.util.Map,size,0,int] +++$+++  CURLYSTART CURLYEND IF PARENTHESESSTART
CALL[java.lang.String,length,0,int] +++$+++  VAR[java.lang.String] OP[sum] OP[assign] PARENTHESESSTART
CALL[java.io.InputStream,close,0,void] +++$+++  LEX[true] EOL TRY CURLYSTART
CALL[java.lang.String,length,0,int] +++$+++  OP[assign] NEW TYPE[StringBuffer] PARENTHESESSTART
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESEND PARENTHESESEND EOL CURLYEND
CALL[java.lang.String,toCharArray,0,char[]] +++$+++  ARRAYSTART ARRAYEND VAR[CHAR] OP[assign]
CALL[java.util.Set,remove,1,boolean] PARA[VAR[com.aelitis.azureus.core.util.CopyOnWriteSet.T]] +++$+++  ELSE CURLYSTART RETURN PARENTHESESSTART
CALL[java.util.Set,remove,1,boolean] PARA[VAR[com.aelitis.azureus.core.util.CopyOnWriteSet.T]] +++$+++  CURLYEND BOOLEAN VAR[BOOLEAN] OP[assign]
CALL[java.lang.String,split,1,java.lang.String[]] PARA[LIT[Stirng]] +++$+++  ARRAYSTART ARRAYEND VAR[java.lang.String] OP[assign]
CALL[java.util.LinkedList,isEmpty,0,boolean] +++$+++  EOL CURLYEND IF PARENTHESESSTART
CALL[java.util.LinkedList,clear,0,void] +++$+++  LEX[non_pub_download_infos1.clear] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.util.concurrent.atomic.AtomicInteger,decrementAndGet,0,int] +++$+++  CURLYSTART INT VAR[INT] OP[assign]
CALL[java.util.ArrayList,get,1,E] PARA[VAR[INT]] +++$+++  OP[assign] PARENTHESESSTART TYPE[ClientConnection] PARENTHESESEND
CALL[java.util.ArrayList,size,0,int] +++$+++  OP[assign] EOL VAR[INT] OP[lessThan]
CALL[java.lang.Throwable,toString,0,java.lang.String] +++$+++  PARENTHESESEND CURLYSTART LEX[SpeedManagerLogger.log] PARENTHESESSTART
CALL[java.util.Map,get,1,V] PARA[LIT[Stirng]] +++$+++  OP[assign] PARENTHESESSTART TYPE[Boolean] PARENTHESESEND
CALL[java.lang.Boolean,booleanValue,0,boolean] +++$+++  LEX[date.longValue] PARENTHESESSTART PARENTHESESEND COMMA
CALL[java.util.Map,get,1,V] PARA[LIT[Stirng]] +++$+++  COMMA PARENTHESESSTART TYPE[Map] PARENTHESESEND
CALL[java.lang.ref.WeakReference,get,0,T] +++$+++  PARENTHESESEND CURLYSTART RETURN PARENTHESESSTART
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART VAR[INT] PARENTHESESEND EOL
CALL[java.lang.StringBuffer,toString,0,java.lang.String] +++$+++  EOL CURLYEND CURLYEND RETURN
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.util.Map]] +++$+++  TYPE[HashMap] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.lang.Object]] +++$+++  EOL CURLYEND ELSE CURLYSTART
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESSTART VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESSTART VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.util.List,size,0,int] +++$+++  PARENTHESESEND CURLYSTART RETURN PARENTHESESSTART
CALL[java.util.List,size,0,int] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.util.TreeMap,get,1,V] PARA[VAR[java.lang.Integer]] +++$+++  OP[assign] PARENTHESESSTART TYPE[Long] PARENTHESESEND
CALL[java.net.InetSocketAddress,getHostName,0,java.lang.String] +++$+++  PARENTHESESEND CURLYSTART VAR[java.lang.String] OP[assign]
CALL[java.lang.String,length,0,int] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.nio.ByteBuffer,get,0,byte] +++$+++  EOL BYTE VAR[BYTE] OP[assign]
CALL[java.nio.channels.SelectionKey,attachment,0,java.lang.Object] +++$+++  OP[assign] PARENTHESESSTART TYPE[RegistrationData] PARENTHESESEND
CALL[java.nio.channels.SelectionKey,interestOps,0,int] +++$+++  EOL CURLYEND LEX[key.interestOps] PARENTHESESSTART
CALL[java.util.Iterator,next,0,E] +++$+++  TYPE[Object] ARRAYSTART ARRAYEND PARENTHESESEND
CALL[java.util.List,iterator,0,java.util.Iterator<E>] +++$+++  CURLYSTART TYPE[Iterator] VAR[java.util.Iterator] OP[assign]
CALL[java.util.Iterator,next,0,E] +++$+++  OP[assign] PARENTHESESSTART TYPE[UDPPacket] PARENTHESESEND
CALL[java.util.Iterator,hasNext,0,boolean] +++$+++  PARENTHESESEND EOL WHILE PARENTHESESSTART
CALL[java.util.List,size,0,int] +++$+++  CURLYEND BOOLEAN VAR[BOOLEAN] OP[assign]
CALL[java.util.List,remove,1,E] PARA[LIT[Integer]] +++$+++  EOL CURLYEND ELSE CURLYSTART
CALL[java.util.ArrayList,clear,0,void] +++$+++  LEX[pending_haves_mon.enter] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.lang.String,length,0,int] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.util.HashMap,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.lang.String]] +++$+++  VAR[java.lang.String] PARENTHESESEND EOL CURLYEND
CALL[java.lang.String,length,0,int] +++$+++  OP[assign] EOL VAR[INT] OP[lessThan]
CALL[java.util.ArrayList,size,0,int] +++$+++  EOL CURLYEND IF PARENTHESESSTART
CALL[java.lang.String,toLowerCase,0,java.lang.String] +++$+++  EOL CURLYEND VAR[java.lang.String] OP[assign]
CALL[java.net.URL,toExternalForm,0,java.lang.String] +++$+++  VAR[INT] EOL LEX[feedUrl.setText] PARENTHESESSTART
CALL[java.util.Set,size,0,int] +++$+++  LEX[sniffer_cookies.size] PARENTHESESSTART PARENTHESESEND OP[greaterThan]
CALL[java.util.Map,get,1,V] PARA[VAR[java.lang.String]] +++$+++  OP[assign] PARENTHESESSTART TYPE[List] PARENTHESESEND
CALL[java.util.List,add,1,boolean] PARA[VAR[com.aelitis.azureus.ui.common.table.impl.DataSourceCallBackUtil.addDataSourceCallback]] +++$+++  VAR[com.aelitis.azureus.ui.common.table.impl.DataSourceCallBackUtil.addDataSourceCallback] PARENTHESESEND PARENTHESESEND CURLYSTART
CALL[java.util.List,remove,1,boolean] PARA[VAR[com.aelitis.azureus.ui.common.table.impl.DataSourceCallBackUtil.addDataSourceCallback]] +++$+++  OP[assign] NULL PARENTHESESEND CURLYSTART
CALL[java.lang.String,length,0,int] +++$+++  VAR[java.lang.String] OP[assign] LEX[text.substring] PARENTHESESSTART
CALL[java.lang.String,length,0,int] +++$+++  OP[assign] LEX[text.substring] PARENTHESESSTART COMMA
CALL[java.util.StringTokenizer,hasMoreTokens,0,boolean] +++$+++  LEX[false] EOL WHILE PARENTHESESSTART
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[VAR[CHAR]] +++$+++  VAR[INT] OP[sum] OP[sum] PARENTHESESEND
CALL[java.lang.String,length,0,int] +++$+++  VAR[BYTE] ARRAYSTART LEX[data.charAt] PARENTHESESSTART
CALL[java.lang.String,replaceAll,2,java.lang.String] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  CURLYSTART LEX[sysout.println] PARENTHESESSTART OP[sum]
CALL[java.lang.String,replaceAll,2,java.lang.String] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  CURLYSTART LEX[sysout.println] PARENTHESESSTART OP[sum]
CALL[java.io.ByteArrayOutputStream,toByteArray,0,byte[]] +++$+++  PARENTHESESEND EOL LEX[out.write] PARENTHESESSTART
CALL[java.util.Map,containsKey,1,boolean] PARA[VAR[java.lang.String]] +++$+++  VAR[java.lang.String] EOL RETURN PARENTHESESSTART
CALL[java.lang.Long,longValue,0,long] +++$+++  PARENTHESESEND VAR[java.lang.Object] EOL RETURN
CALL[java.lang.reflect.Method,invoke,2,java.lang.Object] PARA[VAR[java.lang.Object]] PARA[VAR[java.lang.Object]] +++$+++  LEX[true] PARENTHESESEND EOL RETURN
CALL[java.lang.Class,getMethod,2,java.lang.reflect.Method] PARA[VAR[java.lang.String]] PARA[VAR[java.lang.Class]] +++$+++  CURLYSTART TYPE[Method] VAR[java.lang.reflect.Method] OP[assign]
CALL[java.lang.String,startsWith,1,boolean] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND EOL RETURN PARENTHESESSTART
CALL[java.lang.String,startsWith,1,boolean] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART PARENTHESESEND OP[bitwiseOr] OP[bitwiseOr]
CALL[java.net.ServerSocket,close,0,void] +++$+++  OP[assign] NULL PARENTHESESEND CURLYSTART
CALL[java.io.File,getAbsolutePath,0,java.lang.String] +++$+++  OP[assign] LEX[constTCHAR3.newInstance] PARENTHESESSTART COMMA
CALL[java.lang.String,length,0,int] +++$+++  OP[assign] NULL OP[bitwiseOr] OP[bitwiseOr]
CALL[java.util.Stack,isEmpty,0,boolean] +++$+++  PARENTHESESSTART LEX[false] OP[assign] OP[assign]
CALL[java.util.List,add,1,boolean] PARA[VAR[org.gudy.azureus2.ui.swt.TextViewerWindow.TextViewerWindowListener]] +++$+++  LEX[TextViewerWindowListener] VAR[org.gudy.azureus2.ui.swt.TextViewerWindow.TextViewerWindowListener] PARENTHESESEND CURLYSTART
CALL[java.io.IOException,printStackTrace,0,void] +++$+++  TYPE[IOException] VAR[java.io.IOException] PARENTHESESEND CURLYSTART
CALL[java.util.Comparator,compare,2,int] PARA[VAR[java.lang.String]] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESEND CURLYSTART RETURN PARENTHESESSTART
CALL[java.io.File,getAbsolutePath,0,java.lang.String] +++$+++  PARENTHESESSTART PARENTHESESEND OP[sum] OP[sum]
CALL[java.lang.String,indexOf,1,int] PARA[LIT[Character]] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.lang.Throwable,printStackTrace,0,void] +++$+++  TYPE[Throwable] VAR[java.lang.Throwable] PARENTHESESEND CURLYSTART
CALL[java.lang.StringBuffer,toString,0,java.lang.String] +++$+++  PARENTHESESEND EOL CURLYEND RETURN
CALL[java.util.Map,get,1,V] PARA[VAR[java.lang.String]] +++$+++  RETURN PARENTHESESSTART TYPE[IConsoleCommand] PARENTHESESEND
CALL[java.util.regex.Matcher,group,1,java.lang.String] PARA[LIT[Integer]] +++$+++  VAR[INT] OP[assign] LEX[Integer.parseInt] PARENTHESESSTART
CALL[java.io.PrintStream,println,1,void] PARA[LIT[Stirng]] +++$+++  OP[assign] NULL PARENTHESESEND CURLYSTART
CALL[java.lang.String,equals,1,boolean] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.lang.Object,hashCode,0,int] +++$+++  OP[assign] NULL OP[bitwiseAnd] OP[bitwiseAnd]
CALL[java.util.List,get,1,E] PARA[VAR[INT]] +++$+++  OP[assign] PARENTHESESSTART TYPE[AESemaphore] PARENTHESESEND
CALL[java.io.File,getParent,0,java.lang.String] +++$+++  OP[assign] NEW TYPE[File] PARENTHESESSTART
CALL[java.lang.String,equals,1,boolean] PARA[VAR[java.lang.String]] +++$+++  EOL CURLYEND IF PARENTHESESSTART
CALL[java.io.File,equals,1,boolean] PARA[CALL[java.io.File,getParentFile]] +++$+++  PARENTHESESSTART PARENTHESESEND OP[bitwiseAnd] OP[bitwiseAnd]
CALL[java.io.File,canRead,0,boolean] +++$+++  EOL IF PARENTHESESSTART OP[not]
CALL[java.io.File,isDirectory,0,boolean] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.util.Iterator,next,0,E] +++$+++  ARRAYSTART ARRAYEND VAR[BYTE] OP[assign]
CALL[java.util.List,add,1,boolean] PARA[VAR[java.lang.String]] +++$+++  VAR[java.lang.String] PARENTHESESEND PARENTHESESEND CURLYSTART
CALL[java.util.List,contains,1,boolean] PARA[VAR[org.gudy.azureus2.core3.util.ListenerManager.T]] +++$+++  PARENTHESESEND CURLYSTART RETURN PARENTHESESSTART
CALL[java.io.File,canRead,0,boolean] +++$+++  PARENTHESESSTART PARENTHESESEND OP[bitwiseAnd] OP[bitwiseAnd]
CALL[java.lang.Object,equals,1,boolean] PARA[VAR[java.lang.Object]] +++$+++  PARENTHESESSTART PARENTHESESEND OP[bitwiseAnd] OP[bitwiseAnd]
CALL[java.nio.ByteBuffer,clear,0,java.nio.Buffer] +++$+++  PARENTHESESSTART VAR[INT] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.lang.Integer]] +++$+++  OP[sum] PARENTHESESEND PARENTHESESEND EOL
CALL[java.lang.Integer,intValue,0,int] +++$+++  EOL CURLYEND RETURN PARENTHESESSTART
CALL[java.util.Random,nextDouble,0,double] +++$+++  PARENTHESESSTART INT PARENTHESESEND PARENTHESESSTART
CALL[java.lang.String,length,0,int] +++$+++  LEX[RANDOM.nextDouble] PARENTHESESSTART PARENTHESESEND OP[multiply]
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  PARENTHESESEND EOL LEX[buff.append] PARENTHESESSTART
CALL[java.lang.String,toCharArray,0,char[]] +++$+++  ARRAYSTART ARRAYEND VAR[CHAR] OP[assign]
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  CURLYSTART CHAR VAR[CHAR] OP[assign]
CALL[java.util.Map,get,1,V] PARA[VAR[java.lang.String]] +++$+++  CURLYSTART TYPE[Formatter] VAR[org.gudy.azureus2.core3.util.DisplayFormatters.Formatter] OP[assign]
CALL[java.util.List,size,0,int] +++$+++  RETURN PARENTHESESSTART LEX[values.get] PARENTHESESSTART
CALL[java.util.LinkedList,remove,1,boolean] PARA[VAR[org.gudy.azureus2.core3.util.protocol.magnet.MagnetConnection2.MagnetOutputStream]] +++$+++  PARENTHESESSTART VAR[java.util.LinkedList] PARENTHESESEND CURLYSTART
CALL[java.io.OutputStream,close,0,void] +++$+++  PARENTHESESEND CURLYSTART TRY CURLYSTART
CALL[java.net.URL,openConnection,0,java.net.URLConnection] +++$+++  TRY CURLYSTART RETURN PARENTHESESSTART
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND EOL
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND OP[greaterThan] PARENTHESESEND CURLYSTART
CALL[java.lang.String,substring,2,java.lang.String] PARA[LIT[Integer]] PARA[VAR[INT]] +++$+++  ELSE CURLYSTART LEX[result.append] PARENTHESESSTART
CALL[java.net.URL,getQuery,0,java.lang.String] +++$+++  PARENTHESESEND EOL LEX[result.append] PARENTHESESSTART
CALL[java.lang.StringBuffer,toString,0,java.lang.String] +++$+++  PARENTHESESSTART NEW TYPE[URL] PARENTHESESSTART
CALL[java.lang.String,lastIndexOf,1,int] PARA[LIT[Character]] +++$+++  EOL CURLYEND VAR[INT] OP[assign]
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[CALL[java.net.URL,getProtocol]] +++$+++  TYPE[StringBuffer] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.net.URL,getHost,0,java.lang.String] +++$+++  VAR[java.net.InetAddress] OP[assign] LEX[AddressUtils.getAllByName] PARENTHESESSTART
CALL[java.net.URLConnection,getHeaderField,1,java.lang.String] PARA[LIT[Stirng]] +++$+++  CURLYSTART TYPE[String] VAR[java.lang.String] OP[assign]
CALL[java.lang.String,endsWith,1,boolean] PARA[VAR[java.lang.String]] +++$+++  OP[sum] EOL IF PARENTHESESSTART
CALL[java.util.List,size,0,int] +++$+++  OP[sum] VAR[BOOLEAN] OP[sum] OP[sum]
CALL[java.util.concurrent.ConcurrentHashMap,put,2,V] PARA[VAR[org.gudy.azureus2.core3.util.ConcurrentHashMapWrapper.S]] PARA[VAR[org.gudy.azureus2.core3.util.ConcurrentHashMapWrapper.T]] +++$+++  OP[assign] VAR[org.gudy.azureus2.core3.util.ConcurrentHashMapWrapper.T] EOL CURLYEND
CALL[java.util.concurrent.ConcurrentHashMap,entrySet,0,java.util.Set<java.util.Map.Entry<K, V>>] +++$+++  TYPE[T] OP[greaterThan] VAR[java.util.Map.Entry] OP[ternaryFalse]
CALL[java.net.InetSocketAddress,isUnresolved,0,boolean] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.net.InetAddress,getAddress,0,byte[]] +++$+++  ARRAYSTART ARRAYEND VAR[BYTE] OP[assign]
CALL[java.util.List,size,0,int] +++$+++  PARENTHESESEND EOL WHILE PARENTHESESSTART
CALL[java.io.File,createNewFile,0,boolean] +++$+++  PARENTHESESEND EOL VAR[BOOLEAN] OP[assign]
CALL[java.io.InputStream,read,1,int] PARA[VAR[BYTE]] +++$+++  CURLYSTART INT VAR[INT] OP[assign]
CALL[java.lang.String,substring,1,java.lang.String] PARA[CALL[java.lang.String,length]] +++$+++  CURLYEND TYPE[String] VAR[java.lang.String] OP[assign]
CALL[java.util.regex.Matcher,find,0,boolean] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.lang.String,substring,1,java.lang.String] PARA[VAR[INT]] +++$+++  RETURN EOL CURLYEND RETURN
CALL[java.lang.StringBuffer,setLength,1,void] PARA[VAR[INT]] +++$+++  OP[greaterThan] VAR[INT] PARENTHESESEND CURLYSTART
CALL[java.lang.StringBuffer,toString,0,java.lang.String] +++$+++  CURLYSTART CURLYEND RETURN PARENTHESESSTART
CALL[java.io.ByteArrayOutputStream,write,3,void] PARA[VAR[BYTE]] PARA[LIT[Integer]] PARA[VAR[INT]] +++$+++  CURLYSTART BREAK EOL CURLYEND
CALL[java.io.File,isDirectory,0,boolean] +++$+++  CURLYSTART IF PARENTHESESSTART OP[not]
CALL[java.lang.String,length,0,int] +++$+++  CURLYEND CURLYEND IF PARENTHESESSTART
CALL[java.lang.String,replaceAll,2,java.lang.String] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND CURLYSTART VAR[java.lang.String] OP[assign]
CALL[java.lang.String,replaceAll,2,java.lang.String] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND EOL VAR[java.lang.String] OP[assign]
CALL[java.util.List,size,0,int] +++$+++  OP[assign] NEW TYPE[LocaleUtilDecoderCandidate] ARRAYSTART
CALL[java.lang.String,equals,1,boolean] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.io.File,delete,0,boolean] +++$+++  OP[assign] NULL PARENTHESESEND CURLYSTART
CALL[java.io.FileOutputStream,close,0,void] +++$+++  VAR[java.io.FileOutputStream] COMMA PARENTHESESEND EOL
CALL[java.util.Map,size,0,int] +++$+++  OP[assign] NULL OP[ternaryTrue] OP[ternaryFalse]
CALL[java.lang.String,indexOf,2,int] PARA[LIT[Stirng]] PARA[VAR[INT]] +++$+++  CURLYEND INT VAR[INT] OP[assign]
CALL[java.util.List,toArray,1,T[]] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESSTART PARENTHESESEND ARRAYEND EOL
CALL[java.lang.String,replaceAll,2,java.lang.String] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND EOL VAR[java.lang.String] OP[assign]
CALL[java.lang.String,length,0,int] +++$+++  VAR[INT] OP[assign] VAR[INT] OP[sum]
CALL[java.lang.String,length,0,int] +++$+++  PARENTHESESEND OP[greaterThan] OP[bitwiseAnd] OP[bitwiseAnd]
CALL[java.lang.String,substring,2,java.lang.String] PARA[VAR[INT]] PARA[VAR[INT]] +++$+++  CURLYEND VAR[java.lang.String] OP[sum] OP[assign]
CALL[java.lang.String,replaceAll,2,java.lang.String] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND EOL VAR[java.lang.String] OP[assign]
CALL[java.lang.String,startsWith,1,boolean] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.net.URL,getHost,0,java.lang.String] +++$+++  CURLYSTART TYPE[String] VAR[java.lang.String] OP[assign]
CALL[java.lang.String,indexOf,2,int] PARA[LIT[Stirng]] PARA[VAR[INT]] +++$+++  CURLYEND INT VAR[INT] OP[assign]
CALL[java.util.concurrent.atomic.AtomicInteger,get,0,int] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.io.ByteArrayOutputStream,toByteArray,0,byte[]] +++$+++  COMMA NEW TYPE[ByteArrayInputStream] PARENTHESESSTART
CALL[java.util.Iterator,hasNext,0,boolean] +++$+++  PARENTHESESEND EOL WHILE PARENTHESESSTART
CALL[java.util.HashMap,keySet,0,java.util.Set<K>] +++$+++  CURLYSTART TYPE[Set] VAR[java.util.Set] OP[assign]
CALL[java.math.BigInteger,multiply,1,java.math.BigInteger] PARA[VAR[java.math.BigInteger]] +++$+++  EOL TYPE[BigInteger] VAR[java.math.BigInteger] OP[assign]
CALL[java.math.BigInteger,shiftRight,1,java.math.BigInteger] PARA[VAR[INT]] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.math.BigInteger,hashCode,0,int] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.security.NoSuchAlgorithmException,toString,0,java.lang.String] +++$+++  NEW TYPE[SecurityException] PARENTHESESSTART OP[sum]
CALL[java.io.IOException,toString,0,java.lang.String] +++$+++  THROW NEW TYPE[CertificateEncodingException] PARENTHESESSTART
CALL[java.io.InputStream,read,0,int] +++$+++  PARENTHESESSTART PARENTHESESSTART VAR[INT] OP[assign]
CALL[java.util.Iterator,hasNext,0,boolean] +++$+++  VAR[java.lang.Object] EOL WHILE PARENTHESESSTART
CALL[java.io.ByteArrayOutputStream,size,0,int] +++$+++  LEX[Cipher.UNWRAP_MODE] PARENTHESESEND CURLYSTART RETURN
CALL[java.util.Enumeration,nextElement,0,E] +++$+++  OP[assign] PARENTHESESSTART TYPE[DERObjectIdentifier] PARENTHESESEND
CALL[java.io.IOException,toString,0,java.lang.String] +++$+++  THROW NEW TYPE[CRLException] PARENTHESESSTART
CALL[java.lang.String,length,0,int] +++$+++  VAR[BYTE] ARRAYSTART LEX[data.charAt] PARENTHESESSTART
CALL[java.lang.String,length,0,int] +++$+++  VAR[BYTE] ARRAYSTART LEX[data.charAt] PARENTHESESSTART
CALL[java.lang.String,length,0,int] +++$+++  IF PARENTHESESSTART LEX[data.charAt] PARENTHESESSTART
CALL[java.lang.String,length,0,int] +++$+++  IF PARENTHESESSTART LEX[data.charAt] PARENTHESESSTART
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  CURLYSTART CHAR VAR[CHAR] OP[assign]
CALL[java.lang.String,substring,2,java.lang.String] PARA[LIT[Integer]] PARA[VAR[INT]] +++$+++  PARENTHESESEND CURLYSTART VAR[java.lang.String] OP[assign]
CALL[java.util.Vector,elementAt,1,E] PARA[VAR[INT]] +++$+++  RETURN PARENTHESESSTART TYPE[DEREncodable] PARENTHESESEND
CALL[java.util.Enumeration,hasMoreElements,0,boolean] +++$+++  PARENTHESESEND EOL WHILE PARENTHESESSTART
CALL[java.math.BigInteger,modPow,2,java.math.BigInteger] PARA[VAR[java.math.BigInteger]] PARA[VAR[java.math.BigInteger]] +++$+++  VAR[BYTE] PARENTHESESEND EOL RETURN
CALL[java.util.Hashtable,containsKey,1,boolean] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.io.InputStream,read,1,int] PARA[VAR[BYTE]] +++$+++  PARENTHESESSTART PARENTHESESSTART VAR[INT] OP[assign]
CALL[java.io.File,getName,0,java.lang.String] +++$+++  CURLYSTART TYPE[String] VAR[java.lang.String] OP[assign]
CALL[java.lang.String,lastIndexOf,1,int] PARA[LIT[Character]] +++$+++  EOL INT VAR[INT] OP[assign]
CALL[java.io.File,lastModified,0,long] +++$+++  LEX[System.currentTimeMillis] PARENTHESESSTART PARENTHESESEND COMMA
CALL[java.awt.datatransfer.DataFlavor,equals,1,boolean] PARA[VAR[java.awt.datatransfer.DataFlavor]] +++$+++  VAR[java.awt.datatransfer.DataFlavor] PARENTHESESEND CURLYSTART RETURN
CALL[javax.swing.JComponent,setBorder,1,void] PARA[VAR[javax.swing.border.Border]] +++$+++  OP[assign] VAR[javax.swing.border.Border] PARENTHESESEND CURLYSTART
CALL[javax.swing.text.JTextComponent,setSelectionStart,1,void] PARA[VAR[INT]] +++$+++  LEX[run] PARENTHESESSTART PARENTHESESEND CURLYSTART
CALL[java.awt.image.BufferedImage,getGraphics,0,java.awt.Graphics] +++$+++  EOL TYPE[Graphics] VAR[java.awt.Graphics] OP[assign]
CALL[java.awt.Graphics,dispose,0,void] +++$+++  COMMA NULL PARENTHESESEND EOL
CALL[java.io.File,delete,0,boolean] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND CURLYSTART
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  CURLYSTART CHAR VAR[CHAR] OP[assign]
CALL[java.util.Map,entrySet,0,java.util.Set<java.util.Map.Entry<K, V>>] +++$+++  TYPE[Object] OP[greaterThan] VAR[java.util.Map.Entry] OP[ternaryFalse]
CALL[java.awt.geom.GeneralPath,moveTo,2,void] PARA[VAR[FLOAT]] PARA[VAR[FLOAT]] +++$+++  PARENTHESESSTART PARENTHESESEND EOL CURLYEND
CALL[java.util.Set,contains,1,boolean] PARA[VAR[com.eteks.sweethome3d.j3d.PhotoRenderer.Triangle]] +++$+++  EOL IF PARENTHESESSTART OP[not]
CALL[java.util.Iterator,hasNext,0,boolean] +++$+++  LEX[textStylesCache.iterator] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.net.URLConnection,getInputStream,0,java.io.InputStream] +++$+++  OP[assign] NEW TYPE[DefaultHomeInputStream] PARENTHESESSTART
CALL[java.io.DataInputStream,readInt,0,int] +++$+++  TYPE[IOException] CURLYSTART IF PARENTHESESSTART
CALL[java.io.DataInputStream,readInt,0,int] +++$+++  FINAL INT VAR[INT] OP[assign]
CALL[java.io.DataInputStream,readUTF,0,java.lang.String] +++$+++  ARRAYSTART VAR[INT] ARRAYEND OP[assign]
CALL[java.util.Vector,size,0,int] +++$+++  OP[assign] COMMA VAR[INT] OP[assign]
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.awt.Color]] +++$+++  COMMA VAR[java.awt.Color] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.awt.Color]] +++$+++  COMMA VAR[java.awt.Color] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.awt.Color]] +++$+++  COMMA VAR[java.awt.Color] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.awt.Color]] +++$+++  COMMA VAR[java.awt.Color] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.awt.Color]] +++$+++  COMMA VAR[java.awt.Color] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.awt.Color]] +++$+++  COMMA VAR[java.awt.Color] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.awt.Color]] +++$+++  COMMA VAR[java.awt.Color] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.awt.Color]] +++$+++  COMMA VAR[java.awt.Color] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.awt.Color]] +++$+++  COMMA VAR[java.awt.Color] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.awt.Color]] +++$+++  COMMA VAR[java.awt.Color] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.awt.Color]] +++$+++  COMMA VAR[java.awt.Color] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.awt.Color]] +++$+++  COMMA VAR[java.awt.Color] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.awt.Color]] +++$+++  COMMA VAR[java.awt.Color] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.awt.Color]] +++$+++  COMMA VAR[java.awt.Color] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.awt.Color]] PARA[VAR[java.lang.String]] +++$+++  COMMA VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.awt.Color]] PARA[VAR[java.lang.String]] +++$+++  COMMA VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.awt.Color]] PARA[VAR[java.lang.String]] +++$+++  COMMA VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.awt.Color]] PARA[VAR[java.lang.String]] +++$+++  COMMA VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.awt.Color]] PARA[VAR[java.lang.String]] +++$+++  COMMA VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.awt.Color]] PARA[VAR[java.lang.String]] +++$+++  COMMA VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.awt.Color]] PARA[VAR[java.lang.String]] +++$+++  COMMA VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.awt.Color]] PARA[VAR[java.lang.String]] +++$+++  COMMA VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.awt.Color]] PARA[VAR[java.lang.String]] +++$+++  COMMA VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.awt.Color]] PARA[VAR[java.lang.String]] +++$+++  COMMA VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.awt.Color]] PARA[VAR[java.lang.String]] +++$+++  COMMA VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.awt.Color]] PARA[VAR[java.lang.String]] +++$+++  COMMA VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.awt.Color]] PARA[VAR[java.lang.String]] +++$+++  COMMA VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.awt.Color]] PARA[VAR[java.lang.String]] +++$+++  COMMA VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.awt.Color]] PARA[VAR[java.lang.String]] +++$+++  COMMA VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.awt.Color]] PARA[VAR[java.lang.String]] +++$+++  COMMA VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.awt.Color]] PARA[VAR[java.lang.String]] +++$+++  COMMA VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.awt.Color]] PARA[VAR[java.lang.String]] +++$+++  COMMA VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.awt.Color]] PARA[VAR[java.lang.String]] +++$+++  COMMA VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.awt.Color]] PARA[VAR[java.lang.String]] +++$+++  COMMA VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.awt.Color]] PARA[VAR[java.lang.String]] +++$+++  COMMA VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.awt.Color]] PARA[VAR[java.lang.String]] +++$+++  COMMA VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.awt.Color]] PARA[VAR[java.lang.String]] +++$+++  COMMA VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.awt.Color]] PARA[VAR[java.lang.String]] +++$+++  COMMA VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.lang.String,isEmpty,0,boolean] +++$+++  OP[assign] NULL OP[bitwiseOr] OP[bitwiseOr]
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.awt.Color]] +++$+++  COMMA VAR[java.awt.Color] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.awt.Color]] +++$+++  COMMA VAR[java.awt.Color] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.awt.Color]] +++$+++  COMMA VAR[java.awt.Color] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.awt.Color]] +++$+++  COMMA VAR[java.awt.Color] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.awt.Color]] +++$+++  COMMA VAR[java.awt.Color] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.awt.Color]] +++$+++  COMMA VAR[java.awt.Color] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.awt.Color]] +++$+++  COMMA VAR[java.awt.Color] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.awt.Color]] +++$+++  COMMA VAR[java.awt.Color] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.awt.Color]] +++$+++  COMMA VAR[java.awt.Color] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.awt.Color]] PARA[VAR[java.lang.String]] +++$+++  COMMA VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.awt.Color]] PARA[VAR[java.lang.String]] +++$+++  COMMA VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.awt.Color]] PARA[VAR[java.lang.String]] +++$+++  COMMA VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.awt.Color]] PARA[VAR[java.lang.String]] +++$+++  COMMA VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.awt.Color]] PARA[VAR[java.lang.String]] +++$+++  COMMA VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.awt.Color]] PARA[VAR[java.lang.String]] +++$+++  COMMA VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.awt.Color]] PARA[VAR[java.lang.String]] +++$+++  COMMA VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.lang.String,isEmpty,0,boolean] +++$+++  OP[assign] NULL OP[bitwiseOr] OP[bitwiseOr]
CALL[java.awt.Image,flush,0,void] +++$+++  LEX[flush] PARENTHESESSTART PARENTHESESEND CURLYSTART
CALL[java.lang.String,replace,2,java.lang.String] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND EOL VAR[java.lang.String] OP[assign]
CALL[java.lang.String,replace,2,java.lang.String] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND EOL VAR[java.lang.String] OP[assign]
CALL[java.lang.String,replace,2,java.lang.String] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND EOL VAR[java.lang.String] OP[assign]
CALL[java.lang.String,replace,2,java.lang.String] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND EOL VAR[java.lang.String] OP[assign]
CALL[java.lang.StringBuffer,charAt,1,char] PARA[LIT[Integer]] +++$+++  PARENTHESESEND OP[greaterThan] OP[bitwiseAnd] OP[bitwiseAnd]
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[CALL[java.util.ArrayList,get]] +++$+++  OP[sum] OP[sum] PARENTHESESEND CURLYSTART
CALL[java.lang.Thread,setDaemon,1,void] PARA[LIT[Boolean]] +++$+++  PARENTHESESSTART LEX[Thread.MIN_PRIORITY] PARENTHESESEND EOL
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[VAR[CHAR]] +++$+++  CURLYEND CURLYEND ELSE CURLYSTART
CALL[java.lang.String,replaceAll,2,java.lang.String] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  CURLYSTART TYPE[String] VAR[java.lang.String] OP[assign]
CALL[java.lang.String,charAt,1,char] PARA[LIT[Integer]] +++$+++  PARENTHESESEND CURLYSTART LEX[buf.append] PARENTHESESSTART
CALL[java.net.URISyntaxException,getMessage,0,java.lang.String] +++$+++  OP[sum] VAR[java.net.URL] OP[sum] OP[sum]
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[VAR[CHAR]] +++$+++  EOL CURLYEND ELSE CURLYSTART
CALL[java.io.PrintStream,println,1,void] PARA[VAR[java.lang.StringBuffer]] +++$+++  OP[assign] VAR[CHAR] PARENTHESESEND CURLYSTART
CALL[java.lang.String,length,0,int] +++$+++  OP[assign] NULL OP[bitwiseAnd] OP[bitwiseAnd]
CALL[java.lang.Throwable,getCause,0,java.lang.Throwable] +++$+++  EOL TYPE[Throwable] VAR[java.lang.Throwable] OP[assign]
CALL[java.lang.String,substring,2,java.lang.String] PARA[LIT[Integer]] PARA[VAR[INT]] +++$+++  OP[sub] PARENTHESESEND CURLYSTART RETURN
CALL[java.io.ObjectOutputStream,writeObject,1,void] PARA[VAR[java.lang.Object]] +++$+++  PARENTHESESSTART VAR[java.io.ByteArrayOutputStream] PARENTHESESEND EOL
CALL[java.io.ObjectInputStream,close,0,void] +++$+++  LEX[oIn.readObject] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.util.regex.Matcher,matches,0,boolean] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.util.Set,remove,1,boolean] PARA[VAR[java.io.File]] +++$+++  VAR[java.io.File] PARENTHESESEND CURLYSTART RETURN
CALL[javax.swing.JPanel,add,2,void] PARA[VAR[javax.swing.JRadioButton]] PARA[VAR[java.awt.GridBagConstraints]] +++$+++  COMMA COMMA PARENTHESESEND EOL
CALL[java.lang.String,lastIndexOf,1,int] PARA[LIT[Character]] +++$+++  VAR[java.lang.String] OP[assign] LEX[buf.substring] PARENTHESESSTART
CALL[java.lang.String,length,0,int] +++$+++  PARENTHESESSTART PARENTHESESEND OP[sum] COMMA
CALL[java.awt.Component,setCursor,1,void] PARA[VAR[java.awt.Cursor]] +++$+++  LEX[show] PARENTHESESSTART PARENTHESESEND CURLYSTART
CALL[java.lang.Runnable,run,0,void] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND CURLYSTART
CALL[java.awt.Component,getLocationOnScreen,0,java.awt.Point] +++$+++  PARENTHESESEND CURLYSTART VAR[java.awt.Point] OP[assign]
CALL[java.awt.Graphics,setColor,1,void] PARA[VAR[java.awt.Color]] +++$+++  COMMA LEX[f] PARENTHESESEND EOL
CALL[java.lang.String,length,0,int] +++$+++  OP[assign] EOL VAR[INT] OP[lessThan]
CALL[java.lang.String,length,0,int] +++$+++  OP[assign] NULL OP[bitwiseAnd] OP[bitwiseAnd]
CALL[java.awt.Point,setLocation,2,void] PARA[VAR[INT]] PARA[VAR[INT]] +++$+++  INSTANCEOF TYPE[FindMarkColor] PARENTHESESEND CURLYSTART
CALL[java.awt.Component,setBackground,1,void] PARA[VAR[java.awt.Color]] +++$+++  OP[assign] VAR[java.awt.Color] PARENTHESESEND CURLYSTART
CALL[java.awt.Point,setLocation,2,void] PARA[VAR[INT]] PARA[VAR[INT]] +++$+++  INSTANCEOF TYPE[FindMarkColor] PARENTHESESEND CURLYSTART
CALL[javax.swing.JButton,doClick,0,void] +++$+++  PARENTHESESSTART VAR[BOOLEAN] PARENTHESESEND CURLYSTART
CALL[javax.swing.Timer,restart,0,void] +++$+++  LEX[runTimer] PARENTHESESSTART PARENTHESESEND CURLYSTART
CALL[java.lang.StringBuffer,length,0,int] +++$+++  EOL CURLYEND IF PARENTHESESSTART
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[VAR[java.lang.String]] +++$+++  LEX[result.append] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.awt.event.KeyEvent,consume,0,void] +++$+++  LEX[_textComponent.restoreText] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.lang.Object,toString,0,java.lang.String] +++$+++  NULL PARENTHESESEND CURLYSTART RETURN
CALL[java.io.File,exists,0,boolean] +++$+++  PARENTHESESSTART LEX[false] OP[assign] OP[assign]
CALL[java.io.File,getPath,0,java.lang.String] +++$+++  OP[assign] NEW TYPE[File] PARENTHESESSTART
CALL[java.lang.String,startsWith,1,boolean] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART PARENTHESESEND OP[bitwiseOr] OP[bitwiseOr]
CALL[java.lang.String,equalsIgnoreCase,1,boolean] PARA[LIT[Stirng]] +++$+++  OP[assign] NULL OP[bitwiseAnd] OP[bitwiseAnd]
CALL[javax.swing.JPanel,add,2,void] PARA[VAR[javax.swing.JLabel]] PARA[VAR[java.awt.GridBagConstraints]] +++$+++  PARENTHESESSTART LEX[i18n.LINE_COMMENT_LABEL_TT] PARENTHESESEND EOL
CALL[javax.swing.JPanel,add,2,void] PARA[VAR[javax.swing.JTextField]] PARA[VAR[java.awt.GridBagConstraints]] +++$+++  PARENTHESESSTART LEX[i18n.LINE_COMMENT_LABEL_TT] PARENTHESESEND EOL
CALL[javax.swing.JPanel,add,2,void] PARA[VAR[javax.swing.JTextField]] PARA[VAR[java.awt.GridBagConstraints]] +++$+++  PARENTHESESSTART LEX[i18n.PROC_SEP_LABEL_TT] PARENTHESESEND EOL
CALL[javax.swing.JTextField,getText,0,java.lang.String] +++$+++  PARENTHESESEND EOL LEX[_prefs.setLineComment] PARENTHESESSTART
CALL[javax.swing.DefaultListModel,remove,1,E] PARA[VAR[INT]] +++$+++  LEX[wikiConfigList.setSelectedIndex] PARENTHESESSTART PARENTHESESEND EOL
CALL[javax.swing.JTextField,getText,0,java.lang.String] +++$+++  LEX[IllegalArgumentException] CURLYSTART LEX[config.setTableEndTag] PARENTHESESSTART
CALL[javax.swing.JCheckBox,isSelected,0,boolean] +++$+++  PARENTHESESEND EOL LEX[proxySettings.setHttpUseProxy] PARENTHESESSTART
CALL[javax.swing.JTextField,getText,0,java.lang.String] +++$+++  PARENTHESESEND EOL LEX[proxySettings.setHttpProxyServer] PARENTHESESSTART
CALL[javax.swing.JTextField,getText,0,java.lang.String] +++$+++  PARENTHESESEND EOL LEX[proxySettings.setHttpProxyPort] PARENTHESESSTART
CALL[javax.swing.JTextField,setEnabled,1,void] PARA[VAR[BOOLEAN]] +++$+++  PARENTHESESSTART VAR[BOOLEAN] PARENTHESESEND EOL
CALL[javax.swing.JPanel,add,2,void] PARA[VAR[javax.swing.JLabel]] PARA[VAR[java.awt.GridBagConstraints]] +++$+++  OP[sum] OP[sum] FIELD[gridy,java.awt.GridBagConstraints] EOL
CALL[javax.swing.JPanel,add,2,void] PARA[VAR[javax.swing.JLabel]] PARA[VAR[java.awt.GridBagConstraints]] +++$+++  OP[sum] OP[sum] FIELD[gridy,java.awt.GridBagConstraints] EOL
CALL[javax.swing.JPanel,add,2,void] PARA[VAR[javax.swing.JTextField]] PARA[VAR[java.awt.GridBagConstraints]] +++$+++  OP[sum] OP[sum] FIELD[gridy,java.awt.GridBagConstraints] EOL
CALL[javax.swing.JTextField,getText,0,java.lang.String] +++$+++  IF PARENTHESESSTART LEX[StringUtilities.isEmpty] PARENTHESESSTART
CALL[javax.swing.JTabbedPane,getTabCount,0,int] +++$+++  OP[assign] EOL VAR[INT] OP[lessThan]
CALL[java.awt.dnd.DropTargetDragEvent,getLocation,0,java.awt.Point] +++$+++  PARENTHESESEND CURLYSTART LEX[DndTabUtils.initGlassPane] PARENTHESESSTART
CALL[java.awt.Component,isVisible,0,boolean] +++$+++  OP[assign] NULL OP[bitwiseAnd] OP[bitwiseAnd]
CALL[java.awt.event.MouseEvent,getX,0,int] +++$+++  LEX[evt.getComponent] PARENTHESESSTART PARENTHESESEND COMMA
CALL[java.util.ArrayList,remove,1,boolean] PARA[VAR[java.lang.String]] +++$+++  OP[greaterThan] VAR[java.util.ArrayList] PARENTHESESEND CURLYSTART
CALL[java.util.ArrayList,add,2,void] PARA[LIT[Integer]] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESSTART VAR[java.lang.String] PARENTHESESEND EOL
CALL[javax.swing.JPanel,add,2,void] PARA[VAR[javax.swing.JCheckBox]] PARA[VAR[java.awt.GridBagConstraints]] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND EOL
CALL[java.io.File,delete,0,boolean] +++$+++  PARENTHESESEND EOL TRY CURLYSTART
CALL[javax.swing.JTextArea,getText,0,java.lang.String] +++$+++  PARENTHESESEND EOL LEX[_props.setKeepAliveSqlStatement] PARENTHESESSTART
CALL[javax.swing.JPanel,add,2,void] PARA[VAR[javax.swing.JLabel]] PARA[VAR[java.awt.GridBagConstraints]] +++$+++  EOL FIELD[weightx,java.awt.GridBagConstraints] OP[assign] EOL
CALL[javax.swing.JPanel,add,2,void] PARA[VAR[javax.swing.JComboBox]] PARA[VAR[java.awt.GridBagConstraints]] +++$+++  COMMA COMMA PARENTHESESEND EOL
CALL[javax.swing.JLabel,setEnabled,1,void] PARA[LIT[Boolean]] +++$+++  PARENTHESESSTART LEX[false] PARENTHESESEND EOL
CALL[javax.swing.JPanel,setEnabled,1,void] PARA[LIT[Boolean]] +++$+++  PARENTHESESSTART LEX[true] PARENTHESESEND EOL
CALL[javax.swing.JButton,setEnabled,1,void] PARA[LIT[Boolean]] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND CURLYSTART
CALL[javax.swing.JToggleButton,isSelected,0,boolean] +++$+++  PARENTHESESSTART LEX[true] OP[assign] OP[assign]
CALL[javax.swing.JCheckBoxMenuItem,setSelected,1,void] PARA[LIT[Boolean]] +++$+++  LEX[onChkMnuShowFileName] PARENTHESESSTART PARENTHESESEND CURLYSTART
CALL[javax.swing.JPanel,add,2,void] PARA[VAR[javax.swing.JButton]] PARA[VAR[java.awt.GridBagConstraints]] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND EOL
CALL[java.awt.Graphics2D,setColor,1,void] PARA[VAR[java.awt.Color]] +++$+++  OP[assign] VAR[java.lang.String] PARENTHESESEND CURLYSTART
CALL[java.lang.String,lastIndexOf,1,int] PARA[LIT[Character]] +++$+++  FINAL INT VAR[INT] OP[assign]
CALL[java.lang.String,substring,2,java.lang.String] PARA[LIT[Integer]] PARA[VAR[INT]] +++$+++  PARENTHESESEND CURLYSTART VAR[java.lang.String] OP[assign]
CALL[javax.swing.JTree,setSelectionPath,1,void] PARA[VAR[javax.swing.tree.TreePath]] +++$+++  PARENTHESESSTART VAR[javax.swing.tree.TreePath] PARENTHESESEND EOL
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  OP[assign] OP[assign] LEX[Character.isWhitespace] PARENTHESESSTART
CALL[java.util.HashMap,get,1,V] PARA[VAR[java.lang.String]] +++$+++  TYPE[String] OP[greaterThan] VAR[java.util.HashMap] OP[assign]
CALL[java.lang.String,startsWith,1,boolean] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART PARENTHESESEND OP[bitwiseOr] OP[bitwiseOr]
CALL[javax.swing.JCheckBox,isSelected,0,boolean] +++$+++  EOL CURLYEND LEX[_sqlFetchSizeField.setEnabled] PARENTHESESSTART
CALL[javax.swing.JList,setListData,1,void] PARA[VAR[java.lang.Object]] +++$+++  PARENTHESESSTART VAR[java.lang.Object] PARENTHESESEND EOL
CALL[javax.swing.ListModel,getElementAt,1,E] PARA[VAR[INT]] +++$+++  PARENTHESESSTART PARENTHESESSTART TYPE[String] PARENTHESESEND
CALL[java.util.SortedSet,add,1,boolean] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESSTART VAR[INT] PARENTHESESEND PARENTHESESEND
CALL[javax.swing.JCheckBox,isSelected,0,boolean] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.util.Date,getTime,0,long] +++$+++  PARENTHESESEND CURLYSTART VAR[LONG] OP[assign]
CALL[java.lang.String,endsWith,1,boolean] PARA[LIT[Stirng]] +++$+++  EOL CURLYEND IF PARENTHESESSTART
CALL[java.lang.String,equals,1,boolean] PARA[VAR[java.lang.String]] +++$+++  LEX[true] EOL CURLYEND RETURN
CALL[javax.swing.JLabel,setText,1,void] PARA[LIT[Stirng]] +++$+++  CURLYSTART VAR[java.lang.String] OP[assign] EOL
CALL[javax.swing.JTextField,setColumns,1,void] PARA[LIT[Integer]] +++$+++  PARENTHESESSTART LEX[false] PARENTHESESEND EOL
CALL[javax.swing.MutableComboBoxModel,addElement,1,void] PARA[VAR[java.lang.Object]] +++$+++  LEX[Object] VAR[java.lang.Object] PARENTHESESEND CURLYSTART
CALL[javax.swing.MutableComboBoxModel,getSize,0,int] +++$+++  OP[assign] COMMA VAR[INT] OP[assign]
CALL[javax.swing.JLabel,setVisible,1,void] PARA[LIT[Boolean]] +++$+++  PARENTHESESEND CURLYSTART TRY CURLYSTART
CALL[javax.swing.JTabbedPane,getTabCount,0,int] +++$+++  OP[bitwiseAnd] OP[bitwiseAnd] VAR[java.lang.Integer] OP[lessThan]
CALL[javax.swing.JTabbedPane,removeTabAt,1,void] PARA[VAR[java.lang.Integer]] +++$+++  PARENTHESESEND PARENTHESESEND PARENTHESESEND CURLYSTART
CALL[java.lang.String,indexOf,1,int] PARA[LIT[Stirng]] +++$+++  VAR[java.lang.String] EOL IF PARENTHESESSTART
CALL[javax.swing.JPopupMenu,add,1,javax.swing.JMenuItem] PARA[CALL[java.util.Iterator,next]] +++$+++  PARENTHESESEND EOL PARENTHESESEND CURLYSTART
CALL[java.util.Iterator,hasNext,0,boolean] +++$+++  LEX[_globalActions.iterator] PARENTHESESSTART PARENTHESESEND EOL
CALL[javax.swing.JComboBox,getSelectedItem,0,java.lang.Object] +++$+++  PARENTHESESSTART NULL OP[assign] OP[assign]
CALL[java.awt.event.MouseEvent,getComponent,0,java.awt.Component] +++$+++  VAR[javax.swing.JButton] EOL LEX[popup.show] PARENTHESESSTART
CALL[java.lang.String,replaceAll,2,java.lang.String] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND EOL VAR[java.lang.String] OP[assign]
CALL[java.util.Vector,add,1,boolean] PARA[VAR[INT]] +++$+++  ARRAYEND OP[assign] VAR[INT] EOL
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  IF PARENTHESESSTART OP[assign] OP[assign]
CALL[java.io.PrintWriter,close,0,void] +++$+++  LEX[pw.flush] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.lang.management.ThreadInfo,getThreadName,0,java.lang.String] +++$+++  CURLYSTART LEX[pw.println] PARENTHESESSTART OP[sum]
CALL[java.net.URLConnection,getInputStream,0,java.io.InputStream] +++$+++  PARENTHESESSTART NEW TYPE[InputStreamReader] PARENTHESESSTART
CALL[java.net.URLConnection,getInputStream,0,java.io.InputStream] +++$+++  PARENTHESESSTART NEW TYPE[InputStreamReader] PARENTHESESSTART
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[LIT[Stirng]] +++$+++  OP[bitwiseAnd] LEX[xff] PARENTHESESEND EOL
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[LIT[Stirng]] +++$+++  OP[greaterThan] PARENTHESESEND PARENTHESESEND EOL
CALL[java.net.InetAddress,getAddress,0,byte[]] +++$+++  ARRAYSTART ARRAYEND VAR[BYTE] OP[assign]
CALL[java.util.Map,containsKey,1,boolean] PARA[VAR[java.lang.String]] +++$+++  VAR[java.lang.String] PARENTHESESEND CURLYSTART RETURN
CALL[java.net.InetAddress,isSiteLocalAddress,0,boolean] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.util.prefs.Preferences,putLong,2,void] PARA[LIT[Stirng]] PARA[VAR[LONG]] +++$+++  COMMA VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.util.prefs.Preferences,putInt,2,void] PARA[LIT[Stirng]] PARA[VAR[INT]] +++$+++  COMMA VAR[LONG] PARENTHESESEND EOL
CALL[java.util.prefs.Preferences,putInt,2,void] PARA[LIT[Stirng]] PARA[VAR[INT]] +++$+++  COMMA VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[CALL[java.util.Map,get]] +++$+++  OP[ternaryFalse] VAR[java.lang.String] PARENTHESESEND CURLYSTART
CALL[java.io.ByteArrayOutputStream,write,3,void] PARA[VAR[BYTE]] PARA[LIT[Integer]] PARA[VAR[INT]] +++$+++  OP[not] OP[assign] PARENTHESESEND CURLYSTART
CALL[java.lang.StringBuilder,append,3,java.lang.StringBuilder] PARA[VAR[CHAR]] PARA[LIT[Integer]] PARA[VAR[INT]] +++$+++  OP[not] OP[assign] PARENTHESESEND CURLYSTART
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Character]] +++$+++  PARENTHESESSTART VAR[BOOLEAN] PARENTHESESEND CURLYSTART
CALL[org.python.modules._threading.Mutex.Sync,acquire,1,void] PARA[LIT[Integer]] +++$+++  LEX[lock] PARENTHESESSTART PARENTHESESEND CURLYSTART
CALL[org.python.modules._threading.Mutex.Sync,acquireInterruptibly,1,void] PARA[LIT[Integer]] +++$+++  PARENTHESESEND THROWS LEX[InterruptedException] CURLYSTART
CALL[java.lang.Runnable,run,0,void] +++$+++  PARENTHESESEND CURLYSTART TRY CURLYSTART
CALL[java.lang.Thread,interrupt,0,void] +++$+++  OP[assign] NULL PARENTHESESEND CURLYSTART
CALL[java.lang.StringBuilder,toString,0,java.lang.String] +++$+++  RETURN NEW TYPE[PyString] PARENTHESESSTART
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[VAR[CHAR]] +++$+++  PARENTHESESSTART VAR[CHAR] PARENTHESESEND EOL
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  EOL VAR[INT] OP[assign] PARENTHESESSTART
CALL[java.io.DataOutputStream,writeShort,1,void] PARA[VAR[INT]] +++$+++  PARENTHESESEND THROWS LEX[IOException] CURLYSTART
CALL[java.lang.Short,shortValue,0,short] +++$+++  PARENTHESESEND EOL LEX[stream.writeShort] PARENTHESESSTART
CALL[java.lang.Short,shortValue,0,short] +++$+++  PARENTHESESEND EOL LEX[stream.writeShort] PARENTHESESSTART
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[LIT[Stirng]] +++$+++  VAR[INT] PARENTHESESEND PARENTHESESEND EOL
CALL[java.lang.String,substring,2,java.lang.String] PARA[VAR[INT]] PARA[CALL[java.lang.String,length]] +++$+++  EOL CURLYEND LEX[buf.append] PARENTHESESSTART
CALL[java.nio.ByteBuffer,remaining,0,int] +++$+++  THROWS LEX[IOException] CURLYSTART RETURN
CALL[java.io.OutputStream,write,1,void] PARA[VAR[INT]] +++$+++  PARENTHESESEND VAR[INT] PARENTHESESEND EOL
CALL[java.nio.ByteBuffer,flip,0,java.nio.Buffer] +++$+++  LEX[Charset] VAR[java.nio.charset.Charset] PARENTHESESEND CURLYSTART
CALL[java.io.BufferedReader,reset,0,void] +++$+++  NULL EOL TRY CURLYSTART
CALL[java.util.regex.Pattern,matcher,1,java.util.regex.Matcher] PARA[VAR[java.lang.String]] +++$+++  CURLYSTART TYPE[Matcher] VAR[java.util.regex.Matcher] OP[assign]
CALL[java.lang.String,length,0,int] +++$+++  OP[assign] NULL OP[bitwiseAnd] OP[bitwiseAnd]
CALL[java.lang.StringBuilder,toString,0,java.lang.String] +++$+++  PARENTHESESEND EOL CURLYEND RETURN
CALL[java.lang.String,charAt,1,char] PARA[LIT[Integer]] +++$+++  OP[bitwiseAnd] OP[bitwiseAnd] LEX[Character.isUpperCase] PARENTHESESSTART
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  EOL CHAR VAR[CHAR] OP[assign]
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  CURLYSTART CHAR VAR[CHAR] OP[assign]
CALL[java.lang.StringBuilder,length,0,int] +++$+++  EOL CURLYEND LEX[v.setLength] PARENTHESESSTART
CALL[java.lang.StringBuilder,appendCodePoint,1,java.lang.StringBuilder] PARA[VAR[INT]] +++$+++  VAR[INT] PARENTHESESEND PARENTHESESEND CURLYSTART
CALL[java.util.Iterator,hasNext,0,boolean] +++$+++  LEX[input.iterator] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.lang.String,charAt,1,char] PARA[LIT[Integer]] +++$+++  RETURN PARENTHESESSTART INT PARENTHESESEND
CALL[java.io.InputStream,close,0,void] +++$+++  EOL CURLYEND FINALLY CURLYSTART
CALL[java.io.PrintStream,println,1,void] PARA[LIT[Stirng]] +++$+++  TYPE[JyAttribute] PARENTHESESEND PARENTHESESEND CURLYSTART
CALL[java.lang.String,length,0,int] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.lang.String,lastIndexOf,1,int] PARA[LIT[Character]] +++$+++  EOL INT VAR[INT] OP[assign]
CALL[java.lang.String,contains,1,boolean] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.lang.String,charAt,1,char] PARA[LIT[Integer]] +++$+++  EOL CHAR VAR[CHAR] OP[assign]
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Stirng]] +++$+++  OP[sum] OP[sum] PARENTHESESEND EOL
CALL[java.util.Map,get,1,V] PARA[VAR[java.lang.String]] +++$+++  CURLYSTART TYPE[NativeModule] VAR[org.python.indexer.Builtins.NativeModule] OP[assign]
CALL[java.util.logging.Logger,log,2,void] PARA[VAR[java.util.logging.Level]] PARA[VAR[java.lang.String]] +++$+++  VAR[java.util.logging.Level] PARENTHESESEND PARENTHESESEND CURLYSTART
CALL[java.util.ResourceBundle,getString,1,java.lang.String] PARA[VAR[java.lang.String]] +++$+++  CURLYSTART RETURN LEX[MessageFormat.format] PARENTHESESSTART
CALL[java.io.File,getCanonicalPath,0,java.lang.String] +++$+++  LEX[Installation.getText] PARENTHESESSTART LEX[TextKeys.UNABLE_CREATE_FILE] COMMA
CALL[java.util.List,add,1,boolean] PARA[LIT[Stirng]] +++$+++  LEX[coreLibFiles.add] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.util.List,add,1,boolean] PARA[LIT[Stirng]] +++$+++  LEX[coreLibFiles.add] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.util.List,add,1,boolean] PARA[LIT[Stirng]] +++$+++  LEX[coreLibFiles.add] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.lang.String,endsWith,1,boolean] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.io.FileReader,close,0,void] +++$+++  EOL CURLYEND FINALLY CURLYSTART
CALL[java.lang.Throwable,printStackTrace,0,void] +++$+++  TYPE[Throwable] VAR[java.lang.Throwable] PARENTHESESEND CURLYSTART
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.io.BufferedReader,readLine,0,java.lang.String] +++$+++  EOL PARENTHESESSTART VAR[java.lang.String] OP[assign]
CALL[java.lang.StringBuffer,toString,0,java.lang.String] +++$+++  EOL CURLYEND VAR[java.lang.String] OP[assign]
CALL[java.io.BufferedReader,close,0,void] +++$+++  OP[not] OP[assign] NULL PARENTHESESEND
CALL[java.io.BufferedWriter,newLine,0,void] +++$+++  VAR[java.lang.String] PARENTHESESEND EOL CURLYEND
CALL[java.util.List,size,0,int] +++$+++  OP[assign] NEW TYPE[String] ARRAYSTART
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  OP[bitwiseAnd] PARENTHESESSTART VAR[CHAR] OP[assign]
CALL[java.lang.StringBuffer,toString,0,java.lang.String] +++$+++  PARENTHESESEND EOL CURLYEND RETURN
CALL[java.lang.String,length,0,int] +++$+++  NULL EOL IF PARENTHESESSTART
CALL[java.lang.String,startsWith,1,boolean] PARA[LIT[Stirng]] +++$+++  CURLYEND ELSE IF PARENTHESESSTART
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND EOL
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART VAR[java.util.Map] PARENTHESESEND EOL
CALL[java.lang.StringBuffer,toString,0,java.lang.String] +++$+++  PARENTHESESSTART PARENTHESESEND EOL RETURN
CALL[java.lang.StringBuilder,append,3,java.lang.StringBuilder] PARA[VAR[CHAR]] PARA[LIT[Integer]] PARA[VAR[INT]] +++$+++  VAR[INT] OP[greaterThan] PARENTHESESEND CURLYSTART
CALL[java.io.File,canRead,0,boolean] +++$+++  EOL IF PARENTHESESSTART OP[not]
CALL[java.io.InputStream,close,0,void] +++$+++  NULL PARENTHESESEND TRY CURLYSTART
CALL[java.io.InputStream,read,3,int] PARA[VAR[BYTE]] PARA[LIT[Integer]] PARA[VAR[INT]] +++$+++  EOL INT VAR[INT] OP[assign]
CALL[java.nio.ByteBuffer,get,3,java.nio.ByteBuffer] PARA[VAR[BYTE]] PARA[LIT[Integer]] PARA[VAR[INT]] +++$+++  OP[sub] VAR[INT] PARENTHESESEND EOL
CALL[java.nio.CharBuffer,remaining,0,int] +++$+++  LEX[in.remaining] PARENTHESESSTART PARENTHESESEND COMMA
CALL[java.nio.CharBuffer,remaining,0,int] +++$+++  LEX[CoderResult.UNDERFLOW] EOL CURLYEND RETURN
CALL[java.io.File,getPath,0,java.lang.String] +++$+++  THROW NEW TYPE[FileNotFoundException] PARENTHESESSTART
CALL[java.io.File,getPath,0,java.lang.String] +++$+++  NEW TYPE[FileNotFoundException] PARENTHESESSTART OP[sum]
CALL[java.io.File,deleteOnExit,0,void] +++$+++  COMMA VAR[java.io.File] PARENTHESESEND EOL
CALL[javax.swing.JTextArea,getText,0,java.lang.String] +++$+++  PARENTHESESEND CURLYSTART LEX[dataModel.setSearchStringContent] PARENTHESESSTART
CALL[java.util.List,add,1,boolean] PARA[VAR[javax.swing.event.ListDataListener]] +++$+++  LEX[ListDataListener] VAR[javax.swing.event.ListDataListener] PARENTHESESEND CURLYSTART
CALL[javax.swing.event.ListDataListener,intervalAdded,1,void] PARA[VAR[javax.swing.event.ListDataEvent]] +++$+++  OP[ternaryFalse] VAR[java.util.List] PARENTHESESEND CURLYSTART
CALL[java.awt.event.ItemEvent,getStateChange,0,int] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.util.List,add,1,boolean] PARA[VAR[java.awt.Component]] +++$+++  OP[assign] NULL PARENTHESESEND CURLYSTART
CALL[java.util.List,add,1,boolean] PARA[VAR[java.awt.Component]] +++$+++  OP[not] OP[assign] NULL PARENTHESESEND
CALL[javax.swing.JTable,getSelectedRowCount,0,int] +++$+++  OP[assign] EOL IF PARENTHESESSTART
CALL[javax.swing.JTable,getSelectedRowCount,0,int] +++$+++  PARENTHESESEND EOL VAR[INT] OP[assign]
CALL[javax.swing.DefaultListModel,addListDataListener,1,void] PARA[VAR[javax.swing.event.ListDataListener]] +++$+++  LEX[ListDataListener] VAR[javax.swing.event.ListDataListener] PARENTHESESEND CURLYSTART
CALL[java.lang.String,length,0,int] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.util.ArrayList,contains,1,boolean] PARA[VAR[java.lang.String]] +++$+++  RETURN LEX[false] EOL RETURN
CALL[javax.swing.JMenu,add,1,javax.swing.JMenuItem] PARA[VAR[javax.swing.JMenuItem]] +++$+++  PARENTHESESEND PARENTHESESEND PARENTHESESEND EOL
CALL[java.util.List,size,0,int] +++$+++  LEX[itemList.size] PARENTHESESSTART PARENTHESESEND COMMA
CALL[java.io.Writer,write,1,void] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.io.Writer,flush,0,void] +++$+++  LEX[writer.write] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.util.Properties,getProperty,1,java.lang.String] PARA[VAR[java.lang.String]] +++$+++  CURLYSTART TYPE[String] VAR[java.lang.String] OP[assign]
CALL[java.util.Properties,getProperty,1,java.lang.String] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESEND PARENTHESESEND LEX[form.setSearchStringContent] PARENTHESESSTART
CALL[java.io.InputStream,available,0,int] +++$+++  OP[assign] EOL WHILE PARENTHESESSTART
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  IF PARENTHESESSTART LEX[Character.isWhitespace] PARENTHESESSTART
CALL[java.lang.StringBuilder,toString,0,java.lang.String] +++$+++  EOL CURLYEND CURLYEND RETURN
CALL[java.util.List,size,0,int] +++$+++  PARENTHESESSTART NEW TYPE[Charset] ARRAYSTART
CALL[java.lang.String,equals,1,boolean] PARA[FIELD[net.pandoragames.far.ui.model.FileNamePattern]] +++$+++  PARENTHESESEND VAR[java.lang.Object] EOL RETURN
CALL[java.lang.String,toCharArray,0,char[]] +++$+++  LEX[graphics2D.getFontRenderContext] PARENTHESESSTART PARENTHESESEND COMMA
CALL[java.awt.Graphics2D,fill,1,void] PARA[VAR[java.awt.Shape]] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.lang.String]] +++$+++  OP[assign] NULL PARENTHESESEND CURLYSTART
CALL[java.util.Iterator,hasNext,0,boolean] +++$+++  LEX[files.iterator] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.awt.Color,getRed,0,int] +++$+++  RETURN LEX[String.format] PARENTHESESSTART COMMA
CALL[java.awt.Color,getGreen,0,int] +++$+++  LEX[c.getRed] PARENTHESESSTART PARENTHESESEND COMMA
CALL[java.lang.String,length,0,int] +++$+++  FINAL INT VAR[INT] OP[assign]
CALL[java.lang.String,substring,2,java.lang.String] PARA[LIT[Integer]] PARA[LIT[Integer]] +++$+++  TYPE[Color] PARENTHESESSTART LEX[Integer.valueOf] PARENTHESESSTART
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.lang.Object]] +++$+++  VAR[INT] OP[sum] ARRAYEND EOL
CALL[java.lang.String,length,0,int] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.lang.String,substring,2,java.lang.String] PARA[LIT[Integer]] PARA[VAR[INT]] +++$+++  CURLYSTART TYPE[String] VAR[java.lang.String] OP[assign]
CALL[java.util.List,add,1,boolean] PARA[FIELD[EoLayerType]] +++$+++  PARENTHESESSTART LEX[EoLayerType.GEOPHYSICAL_PARAMETER] PARENTHESESEND EOL
CALL[java.awt.Graphics2D,fillRect,4,void] PARA[LIT[Integer]] PARA[LIT[Integer]] PARA[VAR[INT]] PARA[VAR[INT]] +++$+++  COMMA PARENTHESESEND PARENTHESESEND EOL
CALL[java.awt.image.BufferedImage,getHeight,0,int] +++$+++  PARENTHESESSTART DOUBLE PARENTHESESEND VAR[INT]
CALL[java.util.Iterator,hasNext,0,boolean] +++$+++  EOL IF PARENTHESESSTART OP[not]
CALL[java.util.Iterator,next,0,E] +++$+++  OP[assign] PARENTHESESSTART TYPE[ImageWriter] PARENTHESESEND
CALL[java.awt.Graphics2D,dispose,0,void] +++$+++  COMMA VAR[INT] PARENTHESESEND EOL
CALL[java.awt.Graphics2D,setFont,1,void] PARA[VAR[java.awt.Font]] +++$+++  COMMA VAR[java.util.Map] PARENTHESESEND EOL
CALL[java.awt.image.BufferedImage,getHeight,0,int] +++$+++  COMMA NULL COMMA COMMA
CALL[java.awt.image.BufferedImage,getHeight,0,int] +++$+++  OP[not] OP[assign] NULL OP[ternaryTrue]
CALL[java.lang.String,substring,2,java.lang.String] PARA[LIT[Integer]] PARA[LIT[Integer]] +++$+++  VAR[INT] OP[assign] LEX[Integer.valueOf] PARENTHESESSTART
CALL[java.lang.String,substring,2,java.lang.String] PARA[LIT[Integer]] PARA[LIT[Integer]] +++$+++  VAR[INT] OP[assign] LEX[Integer.valueOf] PARENTHESESSTART
CALL[java.lang.String,substring,2,java.lang.String] PARA[LIT[Integer]] PARA[LIT[Integer]] +++$+++  VAR[INT] OP[assign] LEX[Integer.valueOf] PARENTHESESSTART
CALL[java.util.Timer,purge,0,int] +++$+++  LEX[timer.cancel] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND PARENTHESESEND EOL CURLYEND
CALL[java.lang.StringBuilder,length,0,int] +++$+++  RETURN LEX[sb.substring] PARENTHESESSTART COMMA
CALL[java.util.Map,get,1,V] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESSTART PARENTHESESSTART VAR[java.lang.String] OP[assign]
CALL[java.lang.String,length,0,int] +++$+++  EOL CURLYEND IF PARENTHESESSTART
CALL[java.io.OutputStream,close,0,void] +++$+++  OP[assign] NULL PARENTHESESEND CURLYSTART
CALL[java.util.Map.Entry,getKey,0,K] +++$+++  CURLYSTART LEX[escapedMap.put] PARENTHESESSTART OP[sum]
CALL[java.util.zip.ZipInputStream,read,1,int] PARA[VAR[BYTE]] +++$+++  PARENTHESESSTART PARENTHESESSTART VAR[INT] OP[assign]
CALL[java.io.OutputStream,write,3,void] PARA[VAR[BYTE]] PARA[LIT[Integer]] PARA[VAR[INT]] +++$+++  TYPE[IOException] CURLYSTART TRY CURLYSTART
CALL[java.lang.String,equals,1,boolean] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.lang.Class,getDeclaredField,1,java.lang.reflect.Field] PARA[LIT[Stirng]] +++$+++  EOL TYPE[Field] VAR[java.lang.reflect.Field] OP[assign]
CALL[java.lang.SecurityException,getMessage,0,java.lang.String] +++$+++  PARENTHESESEND CURLYSTART VAR[java.lang.String] OP[assign]
CALL[java.lang.IllegalAccessException,getMessage,0,java.lang.String] +++$+++  PARENTHESESEND CURLYSTART VAR[java.lang.String] OP[assign]
CALL[java.lang.NoSuchMethodException,getMessage,0,java.lang.String] +++$+++  PARENTHESESEND CURLYSTART VAR[java.lang.String] OP[assign]
CALL[java.lang.Exception,getMessage,0,java.lang.String] +++$+++  OP[sum] VAR[java.lang.String] OP[sum] OP[sum]
CALL[java.util.Map,putAll,1,void] PARA[VAR[java.util.Map]] +++$+++  LEX[oldValue.clear] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.util.Set,contains,1,boolean] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.util.Map,entrySet,0,java.util.Set<java.util.Map.Entry<K, V>>] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.String,indexOf,1,int] PARA[LIT[Character]] +++$+++  PARENTHESESEND OP[bitwiseAnd] OP[bitwiseAnd] PARENTHESESSTART
CALL[java.lang.String,endsWith,1,boolean] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.lang.String,lastIndexOf,1,int] PARA[LIT[Character]] +++$+++  CURLYEND INT VAR[INT] OP[assign]
CALL[java.lang.String,lastIndexOf,1,int] PARA[LIT[Stirng]] +++$+++  CURLYEND INT VAR[INT] OP[assign]
CALL[java.lang.String,lastIndexOf,1,int] PARA[LIT[Character]] +++$+++  CURLYSTART INT VAR[INT] OP[assign]
CALL[java.lang.StringBuilder,toString,0,java.lang.String] +++$+++  EOL CURLYEND LEX[ret.add] PARENTHESESSTART
CALL[java.util.Map.Entry,getValue,0,V] +++$+++  LEX[entry.getKey] PARENTHESESSTART PARENTHESESEND COMMA
CALL[java.lang.String,equalsIgnoreCase,1,boolean] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.util.Iterator,next,0,E] +++$+++  FINAL TYPE[Object] VAR[java.lang.Object] OP[assign]
CALL[java.util.Iterator,remove,0,void] +++$+++  PARENTHESESSTART LEX[local] PARENTHESESEND PARENTHESESEND
CALL[java.io.OutputStream,flush,0,void] +++$+++  TYPE[ClientStreamAbortedException] CURLYSTART TRY CURLYSTART
CALL[java.lang.String,length,0,int] +++$+++  RETURN LEX[result.substring] PARENTHESESSTART COMMA
CALL[java.util.concurrent.ConcurrentHashMap,remove,1,V] PARA[VAR[org.geoserver.monitor.PipeliningTaskQueue.K]] +++$+++  LEX[K] VAR[org.geoserver.monitor.PipeliningTaskQueue.K] PARENTHESESEND CURLYSTART
CALL[java.lang.String,hashCode,0,int] +++$+++  NULL PARENTHESESEND OP[ternaryTrue] OP[ternaryFalse]
CALL[java.lang.String,hashCode,0,int] +++$+++  NULL PARENTHESESEND OP[ternaryTrue] OP[ternaryFalse]
CALL[java.util.List,remove,1,boolean] PARA[VAR[org.geoserver.importer.transform.TransformChain.remove(X).X]] +++$+++  VAR[org.geoserver.importer.transform.TransformChain.remove(X).X] PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.String,getBytes,0,byte[]] +++$+++  PARENTHESESEND EOL LEX[md.update] PARENTHESESSTART
CALL[java.util.Map,put,2,V] PARA[CALL[org.geoserver.csw.store.internal.FeatureCustomizer,getTypeName]] PARA[VAR[org.geoserver.csw.store.internal.FeatureCustomizer]] +++$+++  OP[ternaryFalse] VAR[java.util.List] PARENTHESESEND CURLYSTART
CALL[java.lang.String,split,1,java.lang.String[]] PARA[LIT[Stirng]] +++$+++  ARRAYSTART ARRAYEND VAR[java.lang.String] OP[assign]
CALL[java.net.URL,getPort,0,int] +++$+++  LEX[casUrlPrefix.getHost] PARENTHESESSTART PARENTHESESEND COMMA
CALL[java.lang.String,endsWith,1,boolean] PARA[LIT[Stirng]] +++$+++  EOL TYPE[String] VAR[java.lang.String] OP[assign]
CALL[java.util.Date,hashCode,0,int] +++$+++  NULL PARENTHESESEND OP[ternaryTrue] OP[ternaryFalse]
CALL[java.util.Set,size,0,int] +++$+++  OP[assign] NULL OP[bitwiseAnd] OP[bitwiseAnd]
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[CALL[java.util.Iterator,next]] +++$+++  PARENTHESESEND EOL PARENTHESESEND CURLYSTART
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND CURLYSTART
CALL[java.util.HashSet,isEmpty,0,boolean] +++$+++  PARENTHESESEND OP[bitwiseAnd] OP[bitwiseAnd] OP[not]
CALL[java.util.Map,get,1,V] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART PARENTHESESSTART TYPE[String] PARENTHESESEND
CALL[java.lang.String,equals,1,boolean] PARA[LIT[Stirng]] +++$+++  CURLYEND ELSE IF PARENTHESESSTART
CALL[java.lang.String,indexOf,1,int] PARA[LIT[Stirng]] +++$+++  FINAL INT VAR[INT] OP[assign]
CALL[java.lang.String,equals,1,boolean] PARA[CALL[org.vfny.geoserver.Request,getRequest]] +++$+++  OP[assign] NULL PARENTHESESEND OP[ternaryFalse]
CALL[java.util.Map,get,1,V] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART PARENTHESESSTART TYPE[String] PARENTHESESEND
CALL[java.util.Map,containsKey,1,boolean] PARA[VAR[java.lang.Object]] +++$+++  VAR[java.lang.Object] PARENTHESESEND CURLYSTART RETURN
CALL[java.util.logging.Level,intValue,0,int] +++$+++  VAR[java.util.logging.Level] PARENTHESESEND OP[bitwiseAnd] OP[bitwiseAnd]
CALL[java.io.BufferedInputStream,reset,0,void] +++$+++  PARENTHESESSTART VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.lang.StringBuffer,length,0,int] +++$+++  EOL CURLYEND LEX[sb.setLength] PARENTHESESSTART
CALL[java.lang.String,substring,2,java.lang.String] PARA[VAR[INT]] PARA[VAR[INT]] +++$+++  PARENTHESESEND CURLYSTART LEX[list.add] PARENTHESESSTART
CALL[java.util.List,add,1,boolean] PARA[CALL[java.lang.String,substring]] +++$+++  PARENTHESESSTART VAR[BOOLEAN] PARENTHESESEND CURLYSTART
CALL[java.lang.String,indexOf,1,int] PARA[VAR[java.lang.String]] +++$+++  CURLYEND INT VAR[INT] OP[assign]
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[VAR[java.lang.String]] +++$+++  OP[ternaryFalse] VAR[java.util.Set] PARENTHESESEND CURLYSTART
CALL[java.lang.StringBuffer,length,0,int] +++$+++  EOL CURLYEND LEX[sb.setLength] PARENTHESESSTART
CALL[java.lang.String,indexOf,1,int] PARA[LIT[Stirng]] +++$+++  CURLYSTART INT VAR[INT] OP[assign]
CALL[java.lang.Class,equals,1,boolean] PARA[VAR[java.lang.Class]] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.util.Map.Entry,getValue,0,V] +++$+++  OP[assign] PARENTHESESSTART TYPE[AttributeType] PARENTHESESEND
CALL[java.util.Map.Entry,getValue,0,V] +++$+++  OP[assign] PARENTHESESSTART TYPE[AttributeType] PARENTHESESEND
CALL[java.lang.Class,isAssignableFrom,1,boolean] PARA[VAR[java.lang.Class]] +++$+++  EOL CURLYEND IF PARENTHESESSTART
CALL[java.math.BigInteger,intValue,0,int] +++$+++  CURLYEND INT VAR[INT] OP[assign]
CALL[java.io.File,getAbsolutePath,0,java.lang.String] +++$+++  CURLYSTART TYPE[String] VAR[java.lang.String] OP[assign]
CALL[java.lang.String,startsWith,1,boolean] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.util.Set,contains,1,boolean] PARA[VAR[java.lang.String]] +++$+++  VAR[java.lang.String] PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.Number,getClass,0,java.lang.Class<? extends java.lang.Object>] +++$+++  RETURN NEW TYPE[NumberRange] PARENTHESESSTART
CALL[java.util.List,add,1,boolean] PARA[VAR[java.lang.String]] +++$+++  OP[not] VAR[BOOLEAN] PARENTHESESEND CURLYSTART
CALL[java.lang.String,hashCode,0,int] +++$+++  NULL PARENTHESESEND OP[ternaryTrue] OP[ternaryFalse]
