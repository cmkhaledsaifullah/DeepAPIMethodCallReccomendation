CALL[java.util.Hashtable,put,2,V] PARA[CALL[java.sql.ResultSet,getString]] PARA[CALL[java.sql.ResultSet,getString]] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND CURLYSTART
CALL[java.util.Vector,add,1,boolean] PARA[VAR[java.lang.String]] +++$+++  VAR[java.lang.String] PARENTHESESEND PARENTHESESEND CURLYSTART
CALL[java.util.Hashtable,size,0,int] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.util.Hashtable,get,1,V] PARA[VAR[java.lang.String]] +++$+++  OP[assign] PARENTHESESSTART TYPE[Vector] PARENTHESESEND
CALL[java.util.Hashtable,put,2,V] PARA[VAR[java.lang.String]] PARA[CALL[null,valueOf]] +++$+++  INT VAR[INT] PARENTHESESEND CURLYSTART
CALL[java.util.Hashtable,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[be.mxs.common.util.db.MedwanQuery.NationalBarcodeID]] +++$+++  TYPE[Date] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.util.Hashtable,get,1,V] PARA[VAR[java.lang.String]] +++$+++  RETURN PARENTHESESSTART TYPE[String] PARENTHESESEND
CALL[java.lang.Exception,printStackTrace,0,void] +++$+++  TYPE[Exception] VAR[java.lang.Exception] PARENTHESESEND CURLYSTART
CALL[java.util.Date,getTime,0,long] +++$+++  LEX[endDate.getTime] PARENTHESESSTART PARENTHESESEND OP[sub]
CALL[java.util.Vector,iterator,0,java.util.Iterator<E>] +++$+++  CURLYSTART TYPE[Iterator] VAR[java.util.Iterator] OP[assign]
CALL[java.lang.String,length,0,int] +++$+++  OP[assign] EOL VAR[INT] OP[lessThan]
CALL[java.lang.String,replaceAll,2,java.lang.String] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  VAR[java.lang.String] PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.String,indexOf,1,int] PARA[LIT[Stirng]] +++$+++  OP[assign] LEX[sRow.substring] PARENTHESESSTART COMMA
CALL[java.lang.String,indexOf,1,int] PARA[LIT[Stirng]] +++$+++  VAR[java.lang.String] OP[assign] LEX[sRow.substring] PARENTHESESSTART
CALL[java.lang.String,indexOf,1,int] PARA[LIT[Stirng]] +++$+++  VAR[java.lang.String] OP[assign] LEX[sRow.substring] PARENTHESESSTART
CALL[java.util.Vector,get,1,E] PARA[VAR[INT]] +++$+++  OP[assign] PARENTHESESSTART TYPE[String] PARENTHESESEND
CALL[java.lang.String,indexOf,1,int] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND EOL WHILE PARENTHESESSTART
CALL[java.lang.String,length,0,int] +++$+++  CURLYEND ELSE IF PARENTHESESSTART
CALL[java.lang.String,replaceAll,2,java.lang.String] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND CURLYSTART VAR[java.lang.String] OP[assign]
CALL[java.lang.String,replaceAll,2,java.lang.String] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND EOL VAR[java.lang.String] OP[assign]
CALL[java.lang.String,replaceAll,2,java.lang.String] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND EOL VAR[java.lang.String] OP[assign]
CALL[java.lang.String,replaceAll,2,java.lang.String] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND EOL VAR[java.lang.String] OP[assign]
CALL[java.lang.String,replaceAll,2,java.lang.String] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND EOL VAR[java.lang.String] OP[assign]
CALL[java.lang.String,indexOf,1,int] PARA[VAR[java.lang.String]] +++$+++  EOL INT VAR[INT] OP[assign]
CALL[java.lang.String,toLowerCase,0,java.lang.String] +++$+++  PARENTHESESEND CURLYSTART VAR[java.lang.String] OP[assign]
CALL[java.lang.String,length,0,int] +++$+++  EOL CURLYEND IF PARENTHESESSTART
CALL[java.lang.String,replaceAll,2,java.lang.String] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND EOL VAR[java.lang.String] OP[assign]
CALL[java.awt.Graphics2D,fillRect,4,void] PARA[VAR[INT]] PARA[VAR[INT]] PARA[LIT[Integer]] PARA[LIT[Integer]] +++$+++  VAR[INT] PARENTHESESEND PARENTHESESEND CURLYSTART
CALL[java.io.PrintStream,checkError,0,boolean] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.lang.Exception,printStackTrace,0,void] +++$+++  TYPE[Exception] VAR[java.lang.Exception] PARENTHESESEND CURLYSTART
CALL[java.util.Date,getTime,0,long] +++$+++  LEX[pdatValue1.getTime] PARENTHESESSTART PARENTHESESEND OP[sub]
CALL[java.util.Calendar,getTimeInMillis,0,long] +++$+++  LEX[end.getTimeInMillis] PARENTHESESSTART PARENTHESESEND OP[sub]
CALL[java.util.StringTokenizer,hasMoreTokens,0,boolean] +++$+++  OP[assign] EOL WHILE PARENTHESESSTART
CALL[java.io.File,isDirectory,0,boolean] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.lang.Exception,printStackTrace,0,void] +++$+++  TYPE[Exception] VAR[java.lang.Exception] PARENTHESESEND CURLYSTART
CALL[javax.swing.JFrame,setVisible,1,void] PARA[LIT[Boolean]] +++$+++  COMMA COMMA PARENTHESESEND EOL
CALL[java.util.Hashtable,get,1,V] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESSTART VAR[java.lang.String] OP[sum] OP[sum]
CALL[java.util.Hashtable,get,1,V] PARA[VAR[java.lang.String]] +++$+++  VAR[java.lang.String] PARENTHESESEND CURLYSTART RETURN
CALL[java.util.Vector,clear,0,void] +++$+++  LEX[resetErrorMessage] PARENTHESESSTART PARENTHESESEND CURLYSTART
CALL[java.util.Hashtable,values,0,java.util.Collection<V>] +++$+++  OP[assign] NEW TYPE[Vector] PARENTHESESSTART
CALL[java.lang.String,split,1,java.lang.String[]] PARA[LIT[Stirng]] +++$+++  CURLYSTART RETURN LEX[Integer.parseInt] PARENTHESESSTART
CALL[java.util.Hashtable,get,1,V] PARA[LIT[Stirng]] +++$+++  INT ARRAYSTART ARRAYEND PARENTHESESEND
CALL[java.util.Hashtable,get,1,V] PARA[LIT[Stirng]] +++$+++  TYPE[KeyValue] ARRAYSTART ARRAYEND PARENTHESESEND
CALL[java.util.Hashtable,elements,0,java.util.Enumeration<V>] +++$+++  EOL TYPE[Enumeration] VAR[java.util.Enumeration] OP[assign]
CALL[java.util.Enumeration,hasMoreElements,0,boolean] +++$+++  LEX[encounter] EOL WHILE PARENTHESESSTART
CALL[java.util.Hashtable,elements,0,java.util.Enumeration<V>] +++$+++  EOL TYPE[Enumeration] VAR[java.util.Enumeration] OP[assign]
CALL[java.util.Hashtable,get,1,V] PARA[LIT[Stirng]] +++$+++  TYPE[KeyValue] ARRAYSTART ARRAYEND PARENTHESESEND
CALL[java.util.Hashtable,get,1,V] PARA[LIT[Stirng]] +++$+++  TYPE[KeyValue] ARRAYSTART ARRAYEND PARENTHESESEND
CALL[java.util.Hashtable,keys,0,java.util.Enumeration<K>] +++$+++  EOL TYPE[Enumeration] VAR[java.util.Enumeration] OP[assign]
CALL[java.util.Hashtable,get,1,V] PARA[VAR[java.lang.String]] +++$+++  OP[assign] PARENTHESESSTART TYPE[DepartmentIncome] PARENTHESESEND
CALL[java.util.SortedSet,size,0,int] +++$+++  OP[assign] NEW TYPE[String] ARRAYSTART
CALL[java.util.SortedSet,iterator,0,java.util.Iterator<E>] +++$+++  EOL TYPE[Iterator] VAR[java.util.Iterator] OP[assign]
CALL[java.util.Date,getTime,0,long] +++$+++  PARENTHESESSTART LONG VAR[LONG] OP[assign]
CALL[java.util.Hashtable,get,1,V] PARA[LIT[Stirng]] +++$+++  TYPE[KeyValue] ARRAYSTART ARRAYEND PARENTHESESEND
CALL[java.util.Enumeration,nextElement,0,E] +++$+++  OP[assign] PARENTHESESSTART TYPE[Encounter] PARENTHESESEND
CALL[java.util.Enumeration,hasMoreElements,0,boolean] +++$+++  PARENTHESESEND EOL WHILE PARENTHESESSTART
CALL[java.util.Hashtable,elements,0,java.util.Enumeration<V>] +++$+++  EOL TYPE[Enumeration] VAR[java.util.Enumeration] OP[assign]
CALL[java.util.Vector,elementAt,1,E] PARA[VAR[INT]] +++$+++  RETURN PARENTHESESSTART TYPE[KeyValue] PARENTHESESEND
CALL[java.lang.String,indexOf,1,int] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND OP[greaterThan] OP[bitwiseAnd] OP[bitwiseAnd]
CALL[java.util.Vector,size,0,int] +++$+++  IF PARENTHESESSTART VAR[INT] OP[greaterThan]
CALL[java.util.Vector,elementAt,1,E] PARA[VAR[INT]] +++$+++  RETURN PARENTHESESSTART TYPE[KeyValue] PARENTHESESEND
CALL[java.io.OutputStream,write,3,void] PARA[VAR[BYTE]] PARA[LIT[Integer]] PARA[VAR[INT]] +++$+++  PARENTHESESEND OP[greaterThan] PARENTHESESEND CURLYSTART
CALL[java.util.Calendar,setTime,1,void] PARA[VAR[java.util.Date]] +++$+++  TYPE[GregorianCalendar] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.util.Vector,add,1,boolean] PARA[VAR[java.lang.String]] +++$+++  VAR[java.lang.String] OP[sum] OP[assign] EOL
CALL[java.lang.String,matches,1,boolean] PARA[LIT[Stirng]] +++$+++  CURLYSTART IF PARENTHESESSTART OP[not]
CALL[java.util.Date,before,1,boolean] PARA[VAR[java.util.Date]] +++$+++  VAR[java.util.Date] PARENTHESESEND CURLYSTART RETURN
CALL[java.util.Vector,size,0,int] +++$+++  OP[assign] EOL VAR[INT] OP[lessThan]
CALL[java.io.File,isDirectory,0,boolean] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.lang.StringBuffer,length,0,int] +++$+++  CURLYSTART LEX[display.replace] PARENTHESESSTART COMMA
CALL[java.awt.Container,add,1,java.awt.Component] PARA[VAR[javax.swing.JButton]] +++$+++  PARENTHESESSTART VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.lang.String,equals,1,boolean] PARA[LIT[Stirng]] +++$+++  EOL ELSE IF PARENTHESESSTART
CALL[java.lang.String,equals,1,boolean] PARA[LIT[Stirng]] +++$+++  EOL ELSE IF PARENTHESESSTART
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESSTART VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND EOL
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND EOL
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[LIT[Character]] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND EOL
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[LIT[Stirng]] +++$+++  VAR[java.lang.String] PARENTHESESEND EOL CURLYEND
CALL[java.awt.geom.Point2D,getX,0,double] +++$+++  PARENTHESESEND COMMA LEX[AffineTransform.getTranslateInstance] PARENTHESESSTART
CALL[java.awt.Shape,getBounds2D,0,java.awt.geom.Rectangle2D] +++$+++  CURLYSTART TYPE[Rectangle2D] VAR[java.awt.geom.Rectangle2D] OP[assign]
CALL[java.awt.geom.Point2D,equals,1,boolean] PARA[VAR[java.awt.geom.Point2D]] +++$+++  PARENTHESESEND OP[ternaryFalse] IF PARENTHESESSTART
CALL[java.awt.geom.Point2D,distance,1,double] PARA[VAR[java.awt.geom.Point2D]] +++$+++  CURLYSTART DOUBLE VAR[DOUBLE] OP[assign]
CALL[java.awt.geom.Point2D,getY,0,double] +++$+++  LEX[vectorB.getY] PARENTHESESSTART PARENTHESESEND OP[sub]
CALL[java.awt.geom.Point2D,getX,0,double] +++$+++  PARENTHESESSTART PARENTHESESEND OP[sum] PARENTHESESSTART
CALL[java.awt.geom.Point2D,getY,0,double] +++$+++  LEX[p2.getY] PARENTHESESSTART PARENTHESESEND OP[sub]
CALL[java.awt.geom.Point2D,getY,0,double] +++$+++  LEX[vectorB.getY] PARENTHESESSTART PARENTHESESEND OP[sum]
CALL[java.awt.geom.Point2D,getY,0,double] +++$+++  EOL DOUBLE VAR[DOUBLE] OP[assign]
CALL[java.awt.geom.Point2D,getY,0,double] +++$+++  EOL DOUBLE VAR[DOUBLE] OP[assign]
CALL[java.util.Properties,getProperty,1,java.lang.String] PARA[VAR[java.lang.String]] +++$+++  CURLYSTART TYPE[String] VAR[java.lang.String] OP[assign]
CALL[java.awt.geom.Rectangle2D,getMinX,0,double] +++$+++  EOL DOUBLE VAR[DOUBLE] OP[assign]
CALL[javax.swing.JMenuBar,add,1,javax.swing.JMenu] PARA[VAR[javax.swing.JMenu]] +++$+++  PARENTHESESSTART VAR[javax.swing.JMenu] PARENTHESESEND EOL
CALL[javax.swing.JSpinner,setEditor,1,void] PARA[VAR[javax.swing.JSpinner.NumberEditor]] +++$+++  PARENTHESESSTART VAR[javax.swing.JSpinner.NumberEditor] PARENTHESESEND EOL
CALL[java.awt.geom.Rectangle2D,getHeight,0,double] +++$+++  CURLYSTART LEX[r.setRect] PARENTHESESSTART OP[sub]
CALL[java.awt.geom.Rectangle2D,getY,0,double] +++$+++  VAR[DOUBLE] OP[assign] LEX[Math.max] PARENTHESESSTART
CALL[javax.swing.JPopupMenu,removeAll,0,void] +++$+++  LEX[removeItems] PARENTHESESSTART PARENTHESESEND CURLYSTART
CALL[java.awt.Container,getInsets,0,java.awt.Insets] +++$+++  CURLYSTART TYPE[Insets] VAR[java.awt.Insets] OP[assign]
CALL[javax.swing.JList,getSelectedValue,0,E] +++$+++  RETURN PARENTHESESSTART TYPE[T] PARENTHESESEND
CALL[javax.swing.JList,getSelectedIndex,0,int] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.util.Stack,push,1,E] PARA[CALL[java.awt.Graphics2D,getTransform]] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND EOL
CALL[java.util.List,size,0,int] +++$+++  OP[assign] EOL VAR[INT] OP[lessThan]
CALL[javax.swing.table.TableModel,getRowCount,0,int] +++$+++  NULL PARENTHESESEND OP[ternaryTrue] OP[ternaryFalse]
CALL[java.lang.Throwable,getMessage,0,java.lang.String] +++$+++  OP[sum] VAR[java.lang.String] OP[sum] OP[sum]
CALL[java.util.Map,get,1,V] PARA[VAR[java.io.File]] +++$+++  CURLYSTART TYPE[Registry] VAR[genj.util.Registry] OP[assign]
CALL[java.lang.String,length,0,int] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.io.FileInputStream,close,0,void] +++$+++  PARENTHESESSTART VAR[java.io.FileInputStream] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.io.File]] PARA[THIS[null]] +++$+++  OP[sum] PARENTHESESEND EOL CURLYEND
CALL[java.lang.String,length,0,int] +++$+++  VAR[INT] OP[assign] VAR[INT] OP[sum]
CALL[java.io.InputStream,available,0,int] +++$+++  THROWS LEX[IOException] CURLYSTART RETURN
CALL[java.util.List,add,1,boolean] PARA[VAR[javax.swing.event.ChangeListener]] +++$+++  VAR[BOOLEAN] OP[assign] LEX[false] EOL
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  CURLYSTART CHAR VAR[CHAR] OP[assign]
CALL[java.lang.String,substring,1,java.lang.String] PARA[VAR[INT]] +++$+++  OP[assign] OP[ternaryTrue] VAR[java.lang.String] OP[ternaryFalse]
CALL[java.lang.String,indexOf,1,int] PARA[LIT[Character]] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.util.Map,get,1,V] PARA[VAR[genj.util.ReferenceSet.KEY]] +++$+++  TYPE[REF] OP[greaterThan] VAR[java.util.Set] OP[assign]
CALL[java.util.Set,remove,1,boolean] PARA[VAR[genj.util.ReferenceSet.REF]] +++$+++  EOL IF PARENTHESESSTART OP[not]
CALL[java.util.Map,containsValue,1,boolean] PARA[VAR[java.lang.Object]] +++$+++  VAR[java.lang.Object] PARENTHESESEND CURLYSTART RETURN
CALL[java.util.Map,size,0,int] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.io.File,lastModified,0,long] +++$+++  EOL LONG VAR[LONG] OP[assign]
CALL[java.lang.Throwable,getCause,0,java.lang.Throwable] +++$+++  VAR[java.lang.Throwable] PARENTHESESEND VAR[java.lang.Throwable] OP[assign]
CALL[java.util.List,add,1,boolean] PARA[VAR[genj.fo.Format]] +++$+++  PARENTHESESSTART VAR[genj.fo.Format] PARENTHESESEND PARENTHESESEND
CALL[javax.swing.JComboBox,getSelectedItem,0,java.lang.Object] +++$+++  RETURN PARENTHESESSTART TYPE[Format] PARENTHESESEND
CALL[java.lang.String,trim,0,java.lang.String] +++$+++  VAR[INT] PARENTHESESEND EOL RETURN
CALL[javax.swing.JSpinner,setEditor,1,void] PARA[VAR[javax.swing.JSpinner.NumberEditor]] +++$+++  VAR[javax.swing.JSpinner] COMMA PARENTHESESEND EOL
CALL[javax.swing.JComboBox,getItemCount,0,int] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[javax.swing.JComboBox,getSelectedItem,0,java.lang.Object] +++$+++  CURLYSTART TYPE[Object] VAR[java.lang.Object] OP[assign]
CALL[java.awt.geom.Point2D.Float,getX,0,double] +++$+++  VAR[java.awt.geom.Point2D.Float] EOL IF PARENTHESESSTART
CALL[java.util.LinkedList,size,0,int] +++$+++  OP[assign] EOL VAR[INT] OP[lessThan]
CALL[java.util.Collection,size,0,int] +++$+++  PARENTHESESSTART NEW TYPE[IndexedSeries] ARRAYSTART
CALL[java.io.BufferedWriter,write,1,void] PARA[CALL[null,toString]] +++$+++  EOL CURLYEND ELSE CURLYSTART
CALL[java.lang.String,startsWith,1,boolean] PARA[VAR[java.lang.String]] +++$+++  VAR[java.lang.String] PARENTHESESEND CURLYSTART RETURN
CALL[java.awt.geom.Dimension2D,getHeight,0,double] +++$+++  PARENTHESESEND OP[multiply] VAR[INT] COMMA
CALL[java.io.BufferedWriter,close,0,void] +++$+++  LEX[bout.close] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.util.Iterator,hasNext,0,boolean] +++$+++  PARENTHESESEND EOL WHILE PARENTHESESSTART
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[LIT[Stirng]] +++$+++  OP[not] OP[assign] VAR[INT] PARENTHESESEND
CALL[java.lang.String,substring,2,java.lang.String] PARA[LIT[Integer]] PARA[VAR[INT]] +++$+++  OP[greaterThan] VAR[INT] PARENTHESESEND RETURN
CALL[java.util.List,size,0,int] +++$+++  OP[assign] EOL VAR[INT] OP[lessThan]
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[LIT[Character]] +++$+++  OP[greaterThan] OP[assign] PARENTHESESEND CURLYSTART
CALL[java.lang.String,equals,1,boolean] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.lang.String,startsWith,1,boolean] PARA[LIT[Stirng]] +++$+++  NULL EOL IF PARENTHESESSTART
CALL[java.io.Writer,write,1,void] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND EOL
CALL[java.util.StringTokenizer,nextToken,0,java.lang.String] +++$+++  ARRAYSTART VAR[INT] ARRAYEND OP[assign]
CALL[java.util.regex.Matcher,end,0,int] +++$+++  PARENTHESESEND EOL VAR[INT] OP[assign]
CALL[java.lang.String,substring,1,java.lang.String] PARA[VAR[INT]] +++$+++  EOL CURLYEND LEX[result.append] PARENTHESESSTART
CALL[java.lang.Exception,printStackTrace,0,void] +++$+++  TYPE[Exception] VAR[java.lang.Exception] PARENTHESESEND CURLYSTART
CALL[java.awt.image.BufferedImage,createGraphics,0,java.awt.Graphics2D] +++$+++  FINAL TYPE[Graphics2D] VAR[java.awt.Graphics2D] OP[assign]
CALL[java.lang.Exception,printStackTrace,0,void] +++$+++  TYPE[Exception] VAR[java.lang.Exception] PARENTHESESEND CURLYSTART
CALL[java.lang.String,equalsIgnoreCase,1,boolean] PARA[LIT[Stirng]] +++$+++  NULL EOL IF PARENTHESESSTART
CALL[org.zoz.cd.source.discogs.DiscogsOAuthUIWorkflow.AccessValidationThread,start,0,void] +++$+++  PARENTHESESSTART LEX[accessToken] PARENTHESESEND EOL
CALL[org.zoz.cd.source.discogs.DiscogsOAuthUIWorkflow.AccessTokenThread,start,0,void] +++$+++  PARENTHESESSTART VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.io.FileOutputStream,write,3,void] PARA[VAR[BYTE]] PARA[LIT[Integer]] PARA[VAR[INT]] +++$+++  PARENTHESESEND BREAK LEX[loop] EOL
CALL[java.util.prefs.Preferences,put,2,void] PARA[VAR[java.lang.String]] PARA[VAR[java.lang.String]] +++$+++  STRING VAR[java.lang.String] PARENTHESESEND CURLYSTART
CALL[javax.swing.JRadioButton,isSelected,0,boolean] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.util.Map,get,1,V] PARA[VAR[java.lang.String]] +++$+++  COMMA PARENTHESESSTART TYPE[String] PARENTHESESEND
CALL[java.util.prefs.Preferences,putBoolean,2,void] PARA[VAR[java.lang.String]] PARA[VAR[BOOLEAN]] +++$+++  BOOLEAN VAR[BOOLEAN] PARENTHESESEND CURLYSTART
CALL[java.io.Reader,read,0,int] +++$+++  PARENTHESESSTART PARENTHESESSTART VAR[INT] OP[assign]
CALL[java.util.Map,get,1,V] PARA[VAR[java.lang.String]] +++$+++  CURLYSTART TYPE[Entry] VAR[net.sf.jabref.collab.FileUpdateMonitor.Entry] OP[assign]
CALL[javax.swing.text.JTextComponent,getSelectedText,0,java.lang.String] +++$+++  EOL TYPE[String] VAR[java.lang.String] OP[assign]
CALL[javax.swing.JCheckBox,isSelected,0,boolean] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[javax.swing.JTable,getFontMetrics,1,java.awt.FontMetrics] PARA[CALL[javax.swing.JTable,getFont]] +++$+++  CURLYSTART TYPE[FontMetrics] VAR[java.awt.FontMetrics] OP[assign]
CALL[java.util.concurrent.atomic.AtomicBoolean,set,1,void] PARA[LIT[Boolean]] +++$+++  LEX[WindowEvent] LEX[e] PARENTHESESEND CURLYSTART
CALL[javax.swing.JDialog,dispose,0,void] +++$+++  OP[assign] OP[assign] PARENTHESESEND CURLYSTART
CALL[javax.swing.JTextField,setEnabled,1,void] PARA[CALL[javax.swing.JCheckBox,isSelected]] +++$+++  LEX[updateEnableState] PARENTHESESSTART PARENTHESESEND CURLYSTART
CALL[javax.swing.JCheckBox,isSelected,0,boolean] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[javax.swing.JCheckBox,isSelected,0,boolean] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.io.File,exists,0,boolean] +++$+++  PARENTHESESEND OP[bitwiseOr] OP[bitwiseOr] OP[not]
CALL[java.io.File,getName,0,java.lang.String] +++$+++  PARENTHESESEND CURLYSTART VAR[java.lang.String] OP[assign]
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESSTART PARENTHESESEND EOL CURLYEND
CALL[javax.swing.JPopupMenu,add,1,javax.swing.JMenuItem] PARA[VAR[net.sf.jabref.gui.plaintextimport.TextInputDialog.ClearAction]] +++$+++  PARENTHESESSTART VAR[net.sf.jabref.gui.plaintextimport.TextInputDialog.PasteAction] PARENTHESESEND EOL
CALL[javax.swing.JPopupMenu,show,3,void] PARA[CALL[java.awt.event.MouseEvent,getComponent]] PARA[CALL[java.awt.event.MouseEvent,getX]] PARA[CALL[java.awt.event.MouseEvent,getY]] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND CURLYSTART
CALL[java.util.List,clear,0,void] +++$+++  EOL CURLYEND ELSE CURLYSTART
CALL[javax.swing.JList,getSelectedValue,0,E] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[javax.swing.DefaultListModel,size,0,int] +++$+++  PARENTHESESSTART COMMA LEX[Math.min] PARENTHESESSTART
CALL[javax.swing.JSplitPane,setDividerLocation,1,void] PARA[LIT[Double]] +++$+++  LEX[WindowEvent] LEX[e] PARENTHESESEND CURLYSTART
CALL[javax.swing.JFrame,setVisible,1,void] PARA[VAR[BOOLEAN]] +++$+++  BOOLEAN VAR[BOOLEAN] PARENTHESESEND CURLYSTART
CALL[javax.swing.JTable,getRowCount,0,int] +++$+++  OP[bitwiseAnd] OP[bitwiseAnd] VAR[INT] OP[lessThan]
CALL[javax.swing.JTable,requestFocus,0,void] +++$+++  LEX[focus] PARENTHESESSTART PARENTHESESEND CURLYSTART
CALL[java.awt.datatransfer.DataFlavor,equals,1,boolean] PARA[VAR[java.awt.datatransfer.DataFlavor]] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.util.List,get,1,E] PARA[VAR[INT]] +++$+++  VAR[INT] PARENTHESESEND CURLYSTART RETURN
CALL[javax.swing.text.JTextComponent,getText,0,java.lang.String] +++$+++  IF PARENTHESESSTART LEX[URLUtil.isURL] PARENTHESESSTART
CALL[javax.swing.JComboBox,getSelectedIndex,0,int] +++$+++  LEX[fieldEditor.setText] PARENTHESESSTART VAR[java.lang.String] ARRAYSTART
CALL[javax.swing.JDialog,dispose,0,void] +++$+++  LEX[ActionEvent] LEX[event] PARENTHESESEND CURLYSTART
CALL[javax.swing.JCheckBox,isSelected,0,boolean] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.awt.Font,isItalic,0,boolean] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[javax.swing.JTextField,setFont,1,void] PARA[VAR[java.awt.Font]] +++$+++  OP[ternaryFalse] LEX[Font.PLAIN] PARENTHESESEND EOL
CALL[javax.swing.JRadioButton,isSelected,0,boolean] +++$+++  EOL CURLYEND IF PARENTHESESSTART
CALL[javax.swing.JRadioButton,setSelected,1,void] PARA[LIT[Boolean]] +++$+++  OP[assign] LEX[GroupHierarchyType.INCLUDING] PARENTHESESEND CURLYSTART
CALL[java.awt.datatransfer.DataFlavor,equals,1,boolean] PARA[FIELD[TransferableEntrySelection]] +++$+++  VAR[java.awt.datatransfer.DataFlavor] PARENTHESESEND CURLYSTART RETURN
CALL[javax.swing.text.JTextComponent,unregisterKeyboardAction,1,void] PARA[CALL[null,getKeyStroke]] +++$+++  LEX[PopupMenuEvent] LEX[e] PARENTHESESEND CURLYSTART
CALL[javax.swing.text.JTextComponent,getSelectionStart,0,int] +++$+++  EOL INT VAR[INT] OP[assign]
CALL[java.lang.String,length,0,int] +++$+++  LEX[comp.getSelectionStart] PARENTHESESSTART PARENTHESESEND OP[sub]
CALL[javax.swing.event.ListDataEvent,getIndex0,0,int] +++$+++  PARENTHESESEND CURLYSTART LEX[actionsList.setSelectedIndex] PARENTHESESSTART
CALL[javax.swing.JTextArea,setOpaque,1,void] PARA[LIT[Boolean]] +++$+++  PARENTHESESSTART LEX[false] PARENTHESESEND EOL
CALL[javax.swing.JTextArea,setFont,1,void] PARA[CALL[null,getFont]] +++$+++  PARENTHESESSTART NULL PARENTHESESEND EOL
CALL[java.awt.Color,getBlue,0,int] +++$+++  LEX[one.getBlue] PARENTHESESSTART PARENTHESESEND OP[sum]
CALL[java.util.concurrent.ExecutorService,submit,1,java.util.concurrent.Future<? extends java.lang.Object>] PARA[VAR[java.lang.Runnable]] +++$+++  OP[ternaryTrue] OP[greaterThan] VAR[java.util.concurrent.Future] OP[assign]
CALL[java.util.LinkedList,size,0,int] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.util.LinkedList,isEmpty,0,boolean] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.util.regex.Pattern,matcher,1,java.util.regex.Matcher] PARA[VAR[java.lang.String]] +++$+++  CURLYSTART TYPE[Matcher] VAR[java.util.regex.Matcher] OP[assign]
CALL[java.util.StringJoiner,toString,0,java.lang.String] +++$+++  PARENTHESESEND EOL CURLYEND RETURN
CALL[java.util.List,add,1,boolean] PARA[CALL[null,asList]] +++$+++  COMMA VAR[INT] PARENTHESESEND EOL
CALL[java.util.Map,clear,0,void] +++$+++  LEX[clearCustomExportNameFormatters] PARENTHESESSTART PARENTHESESEND CURLYSTART
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[VAR[java.lang.String]] +++$+++  VAR[java.lang.String] OP[assign] EOL CURLYEND
CALL[java.util.List,isEmpty,0,boolean] +++$+++  CURLYEND IF PARENTHESESSTART OP[not]
CALL[java.lang.String,length,0,int] +++$+++  LEX[StringUtil.repeatSpaces] PARENTHESESSTART VAR[INT] OP[sub]
CALL[java.io.OutputStream,write,1,void] PARA[CALL[java.lang.String,getBytes]] +++$+++  PARENTHESESEND THROWS LEX[IOException] CURLYSTART
CALL[java.io.InputStream,read,0,int] +++$+++  PARENTHESESSTART PARENTHESESSTART VAR[INT] OP[assign]
CALL[java.io.OutputStream,close,0,void] +++$+++  CURLYSTART CURLYEND TRY CURLYSTART
CALL[java.net.ServerSocket,close,0,void] +++$+++  PARENTHESESEND CURLYSTART TRY CURLYSTART
CALL[java.lang.StringBuilder,toString,0,java.lang.String] +++$+++  PARENTHESESEND EOL CURLYEND RETURN
CALL[java.util.regex.Matcher,matches,0,boolean] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.lang.String,replaceAll,2,java.lang.String] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND EOL VAR[java.lang.String] OP[assign]
CALL[java.lang.String,matches,1,boolean] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.lang.String,toCharArray,0,char[]] +++$+++  ARRAYSTART ARRAYEND VAR[CHAR] OP[assign]
CALL[java.lang.String,substring,2,java.lang.String] PARA[LIT[Integer]] PARA[VAR[INT]] +++$+++  CURLYEND CURLYEND LEX[sb.append] PARENTHESESSTART
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[CALL[null,toLowerCase]] +++$+++  OP[ternaryFalse] CASE VAR[net.sf.jabref.logic.bst.BibtexCaseChanger.FORMAT_MODE] OP[ternaryFalse]
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[LIT[Stirng]] +++$+++  COMMA NULL PARENTHESESEND EOL
CALL[java.util.Map,get,1,V] PARA[VAR[java.lang.String]] +++$+++  RETURN PARENTHESESSTART TYPE[Boolean] PARENTHESESEND
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Character]] +++$+++  PARENTHESESSTART VAR[BOOLEAN] PARENTHESESEND CURLYSTART
CALL[java.util.Map,values,0,java.util.Collection<V>] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.String,replaceFirst,2,java.lang.String] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND EOL VAR[java.lang.String] OP[assign]
CALL[java.util.List,get,1,E] PARA[VAR[INT]] +++$+++  ELSE CURLYSTART LEX[stringBuilder.append] PARENTHESESSTART
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[CALL[java.util.List,get]] +++$+++  EOL CURLYEND ELSE CURLYSTART
CALL[java.lang.String,indexOf,1,int] PARA[VAR[CHAR]] +++$+++  PARENTHESESEND OP[bitwiseAnd] OP[bitwiseAnd] PARENTHESESSTART
CALL[java.lang.String,length,0,int] +++$+++  WHILE PARENTHESESSTART VAR[INT] OP[lessThan]
CALL[java.lang.StringBuilder,deleteCharAt,1,java.lang.StringBuilder] PARA[VAR[INT]] +++$+++  CURLYSTART BREAK EOL CURLYEND
CALL[java.util.regex.Matcher,appendTail,1,java.lang.StringBuffer] PARA[VAR[java.lang.StringBuffer]] +++$+++  PARENTHESESEND PARENTHESESEND EOL CURLYEND
CALL[java.lang.String,toCharArray,0,char[]] +++$+++  PARENTHESESSTART CHAR VAR[CHAR] OP[ternaryFalse]
CALL[java.lang.String,charAt,1,char] PARA[LIT[Integer]] +++$+++  PARENTHESESSTART PARENTHESESSTART VAR[CHAR] OP[assign]
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[CALL[null,split]] +++$+++  STRING VAR[java.lang.String] PARENTHESESEND CURLYSTART
CALL[java.util.Map,remove,1,V] PARA[VAR[java.lang.String]] +++$+++  VAR[java.lang.String] PARENTHESESEND PARENTHESESEND CURLYSTART
CALL[java.util.Optional,get,0,T] +++$+++  PARENTHESESEND CURLYSTART VAR[net.sf.jabref.model.groups.TreeNode.T] OP[assign]
CALL[java.util.List,size,0,int] +++$+++  OP[bitwiseAnd] PARENTHESESSTART VAR[INT] OP[lessThan]
CALL[java.lang.String,replaceAll,2,java.lang.String] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND EOL VAR[java.lang.String] OP[assign]
CALL[java.lang.StringBuffer,toString,0,java.lang.String] +++$+++  EOL CURLYEND CURLYEND RETURN
CALL[java.lang.Class,getName,0,java.lang.String] +++$+++  PARENTHESESSTART PARENTHESESEND OP[sum] OP[sum]
CALL[javax.swing.JDialog,dispose,0,void] +++$+++  LEX[WindowEvent] LEX[e] PARENTHESESEND CURLYSTART
CALL[javax.swing.JTable,setColumnSelectionAllowed,1,void] PARA[LIT[Boolean]] +++$+++  VAR[javax.swing.JTable] OP[assign] VAR[javax.swing.JTable] EOL
CALL[java.awt.event.MouseEvent,getModifiers,0,int] +++$+++  CURLYSTART INT VAR[INT] OP[assign]
CALL[javax.swing.JLabel,setText,1,void] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESSTART VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.lang.Exception,printStackTrace,0,void] +++$+++  TYPE[Exception] VAR[java.lang.Exception] PARENTHESESEND CURLYSTART
CALL[java.util.Vector,elementAt,1,E] PARA[VAR[INT]] +++$+++  OP[assign] PARENTHESESSTART TYPE[BeanInstance] PARENTHESESEND
CALL[java.util.Vector,elementAt,1,E] PARA[VAR[INT]] +++$+++  OP[assign] PARENTHESESSTART TYPE[BeanInstance] PARENTHESESEND
CALL[java.util.Vector,elementAt,1,E] PARA[VAR[INT]] +++$+++  OP[assign] PARENTHESESSTART TYPE[BeanInstance] PARENTHESESEND
CALL[java.lang.Exception,printStackTrace,0,void] +++$+++  TYPE[Exception] VAR[java.lang.Exception] PARENTHESESEND CURLYSTART
CALL[java.lang.String,substring,2,java.lang.String] PARA[LIT[Integer]] PARA[VAR[INT]] +++$+++  CURLYSTART TYPE[String] VAR[java.lang.String] OP[assign]
CALL[javax.swing.JPanel,add,1,java.awt.Component] PARA[VAR[javax.swing.JLabel]] +++$+++  PARENTHESESSTART LEX[JLabel.CENTER] PARENTHESESEND EOL
CALL[javax.swing.JComponent,revalidate,0,void] +++$+++  EOL CURLYEND CURLYEND CURLYEND
CALL[javax.swing.JComponent,revalidate,0,void] +++$+++  EOL CURLYEND CURLYEND CURLYEND
CALL[javax.swing.JRadioButton,setEnabled,1,void] PARA[LIT[Boolean]] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND EOL
CALL[javax.swing.JCheckBox,addActionListener,1,void] PARA[VAR[java.awt.event.ActionListener]] +++$+++  LEX[ActionListener] VAR[java.awt.event.ActionListener] PARENTHESESEND CURLYSTART
CALL[javax.swing.JComboBox,setPreferredSize,1,void] PARA[VAR[java.awt.Dimension]] +++$+++  LEX[setComboSizes] PARENTHESESSTART PARENTHESESEND CURLYSTART
CALL[javax.swing.JComboBox,setMinimumSize,1,void] PARA[VAR[java.awt.Dimension]] +++$+++  PARENTHESESSTART VAR[java.awt.Dimension] PARENTHESESEND EOL
CALL[java.util.Properties,getProperty,2,java.lang.String] PARA[VAR[java.lang.String]] PARA[VAR[java.lang.String]] +++$+++  VAR[java.lang.String] PARENTHESESEND CURLYSTART RETURN
CALL[javax.swing.DefaultListModel,size,0,int] +++$+++  OP[assign] NEW TYPE[Classifier] ARRAYSTART
CALL[javax.swing.JComboBox,getSelectedItem,0,java.lang.Object] +++$+++  CURLYEND CURLYEND IF PARENTHESESSTART
CALL[javax.swing.JTextField,isEnabled,0,boolean] +++$+++  NULL OP[bitwiseOr] OP[bitwiseOr] OP[not]
CALL[java.util.Hashtable,get,1,V] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESSTART TYPE[StringBuffer] PARENTHESESEND PARENTHESESSTART
CALL[javax.swing.text.JTextComponent,setText,1,void] PARA[CALL[java.lang.StringBuffer,toString]] +++$+++  OP[assign] NULL PARENTHESESEND CURLYSTART
CALL[java.lang.Exception,printStackTrace,0,void] +++$+++  TYPE[Exception] VAR[java.lang.Exception] PARENTHESESEND CURLYSTART
CALL[java.util.StringTokenizer,hasMoreTokens,0,boolean] +++$+++  PARENTHESESEND EOL WHILE PARENTHESESSTART
CALL[java.lang.String,indexOf,1,int] PARA[VAR[java.lang.String]] +++$+++  CURLYSTART INT VAR[INT] OP[assign]
CALL[java.awt.Dialog,setVisible,1,void] PARA[LIT[Boolean]] +++$+++  OP[not] OP[assign] NULL PARENTHESESEND
CALL[java.lang.StringBuffer,toString,0,java.lang.String] +++$+++  PARENTHESESEND EOL CURLYEND RETURN
CALL[java.awt.event.MouseEvent,getY,0,int] +++$+++  LEX[e.getX] PARENTHESESSTART PARENTHESESEND COMMA
CALL[java.lang.String,equalsIgnoreCase,1,boolean] PARA[LIT[Stirng]] +++$+++  CURLYEND ELSE IF PARENTHESESSTART
CALL[java.io.StreamTokenizer,resetSyntax,0,void] +++$+++  LEX[setSyntax] PARENTHESESSTART PARENTHESESEND CURLYSTART
CALL[java.io.StreamTokenizer,ordinaryChar,1,void] PARA[LIT[Character]] +++$+++  LEX[m_st.ordinaryChar] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.io.StreamTokenizer,ordinaryChar,1,void] PARA[LIT[Character]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.io.StreamTokenizer,ordinaryChar,1,void] PARA[LIT[Character]] +++$+++  LEX[m_st.ordinaryChar] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.util.Vector,elementAt,1,E] PARA[VAR[INT]] +++$+++  RETURN PARENTHESESSTART TYPE[Edge] PARENTHESESEND
CALL[java.io.PrintWriter,print,1,void] PARA[LIT[Character]] +++$+++  PARENTHESESSTART VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.io.PrintWriter,print,1,void] PARA[LIT[Stirng]] +++$+++  LEX[memberSpecification.annotationType] PARENTHESESEND PARENTHESESEND EOL
CALL[java.lang.String,indexOf,1,int] PARA[LIT[Character]] +++$+++  OP[greaterThan] OP[assign] OP[bitwiseOr] OP[bitwiseOr]
CALL[java.lang.String,length,0,int] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.lang.String,length,0,int] +++$+++  WHILE PARENTHESESSTART VAR[INT] OP[lessThan]
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  OP[bitwiseAnd] OP[bitwiseAnd] LEX[Character.isWhitespace] PARENTHESESSTART
CALL[java.lang.Object,equals,1,boolean] PARA[VAR[java.lang.Object]] +++$+++  OP[assign] OP[assign] NULL OP[ternaryFalse]
CALL[java.util.Set,contains,1,boolean] PARA[CALL[java.lang.String,substring]] +++$+++  EOL WHILE PARENTHESESSTART OP[not]
CALL[java.lang.String,startsWith,1,boolean] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART PARENTHESESEND OP[bitwiseOr] OP[bitwiseOr]
CALL[java.lang.String,startsWith,1,boolean] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART PARENTHESESEND OP[bitwiseOr] OP[bitwiseOr]
CALL[java.lang.String,startsWith,1,boolean] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART PARENTHESESEND OP[bitwiseOr] OP[bitwiseOr]
CALL[java.lang.String,startsWith,1,boolean] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART PARENTHESESEND OP[bitwiseOr] OP[bitwiseOr]
CALL[java.lang.String,startsWith,1,boolean] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART PARENTHESESEND OP[bitwiseOr] OP[bitwiseOr]
CALL[java.util.regex.Pattern,matcher,1,java.util.regex.Matcher] PARA[VAR[java.lang.String]] +++$+++  CURLYSTART TYPE[Matcher] VAR[java.util.regex.Matcher] OP[assign]
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  PARENTHESESSTART PARENTHESESEND OP[bitwiseAnd] OP[bitwiseAnd]
CALL[java.util.List,isEmpty,0,boolean] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.util.List,size,0,int] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.String,charAt,1,char] PARA[LIT[Integer]] +++$+++  PARENTHESESEND CURLYSTART SWITCH PARENTHESESSTART
CALL[java.util.List,get,1,E] PARA[VAR[INT]] +++$+++  OP[assign] PARENTHESESSTART TYPE[ClassSpecification] PARENTHESESEND
CALL[java.util.List,size,0,int] +++$+++  OP[assign] EOL VAR[INT] OP[lessThan]
CALL[java.util.List,size,0,int] +++$+++  OP[assign] EOL VAR[INT] OP[lessThan]
CALL[java.lang.String,equals,1,boolean] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESSTART PARENTHESESEND EOL RETURN
CALL[javax.swing.JTextField,getText,0,java.lang.String] +++$+++  CURLYSTART TYPE[String] VAR[java.lang.String] OP[assign]
CALL[javax.swing.JTextField,getText,0,java.lang.String] +++$+++  CURLYSTART TYPE[String] VAR[java.lang.String] OP[assign]
CALL[javax.swing.ButtonGroup,add,1,void] PARA[VAR[javax.swing.JRadioButton]] +++$+++  TYPE[ButtonGroup] PARENTHESESSTART PARENTHESESEND EOL
CALL[javax.swing.JPanel,add,2,void] PARA[CALL[null,createGlue]] PARA[VAR[java.awt.GridBagConstraints]] +++$+++  COMMA VAR[java.awt.GridBagConstraints] PARENTHESESEND EOL
CALL[java.awt.Graphics2D,getStroke,0,java.awt.Stroke] +++$+++  NULL OP[ternaryTrue] VAR[java.awt.Stroke] OP[ternaryFalse]
CALL[java.awt.Graphics2D,draw,1,void] PARA[VAR[java.awt.Shape]] +++$+++  LEX[Shape] VAR[java.awt.Shape] PARENTHESESEND CURLYSTART
CALL[java.awt.Graphics2D,drawImage,11,boolean] PARA[VAR[java.awt.Image]] PARA[VAR[INT]] PARA[VAR[INT]] PARA[VAR[INT]] PARA[VAR[INT]] PARA[VAR[INT]] PARA[VAR[INT]] PARA[VAR[INT]] PARA[VAR[INT]] PARA[VAR[java.awt.Color]] PARA[VAR[java.awt.image.ImageObserver]] +++$+++  VAR[java.awt.image.ImageObserver] PARENTHESESEND CURLYSTART RETURN
CALL[java.awt.Graphics2D,drawImage,10,boolean] PARA[VAR[java.awt.Image]] PARA[VAR[INT]] PARA[VAR[INT]] PARA[VAR[INT]] PARA[VAR[INT]] PARA[VAR[INT]] PARA[VAR[INT]] PARA[VAR[INT]] PARA[VAR[INT]] PARA[VAR[java.awt.image.ImageObserver]] +++$+++  VAR[java.awt.image.ImageObserver] PARENTHESESEND CURLYSTART RETURN
CALL[java.awt.Graphics2D,drawImage,4,boolean] PARA[VAR[java.awt.Image]] PARA[VAR[INT]] PARA[VAR[INT]] PARA[VAR[java.awt.image.ImageObserver]] +++$+++  VAR[java.awt.image.ImageObserver] PARENTHESESEND CURLYSTART RETURN
CALL[java.awt.Graphics2D,getClip,0,java.awt.Shape] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.awt.Graphics2D,getClipRect,0,java.awt.Rectangle] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.awt.Graphics2D,getRenderingHint,1,java.lang.Object] PARA[VAR[java.awt.RenderingHints.Key]] +++$+++  VAR[java.awt.RenderingHints.Key] PARENTHESESEND CURLYSTART RETURN
CALL[java.awt.Graphics2D,hitClip,4,boolean] PARA[VAR[INT]] PARA[VAR[INT]] PARA[VAR[INT]] PARA[VAR[INT]] +++$+++  VAR[INT] PARENTHESESEND CURLYSTART RETURN
CALL[java.awt.Graphics2D,shear,2,void] PARA[VAR[DOUBLE]] PARA[VAR[DOUBLE]] +++$+++  DOUBLE VAR[DOUBLE] PARENTHESESEND CURLYSTART
CALL[java.awt.Graphics2D,toString,0,java.lang.String] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[javax.swing.JPanel,add,2,void] PARA[CALL[null,createGlue]] PARA[VAR[java.awt.GridBagConstraints]] +++$+++  COMMA VAR[java.awt.GridBagConstraints] PARENTHESESEND EOL
CALL[java.lang.Runnable,run,0,void] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND CURLYSTART
CALL[java.util.List,size,0,int] +++$+++  OP[assign] EOL VAR[INT] OP[lessThan]
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[LIT[Character]] +++$+++  EOL CURLYEND ELSE CURLYSTART
CALL[java.io.DataOutput,write,1,void] PARA[VAR[BYTE]] +++$+++  PARENTHESESEND CURLYSTART TRY CURLYSTART
CALL[java.io.IOException,getMessage,0,java.lang.String] +++$+++  THROW NEW TYPE[RuntimeException] PARENTHESESSTART
CALL[java.io.DataOutput,writeBytes,1,void] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESEND CURLYSTART TRY CURLYSTART
CALL[java.io.IOException,getMessage,0,java.lang.String] +++$+++  THROW NEW TYPE[RuntimeException] PARENTHESESSTART
CALL[java.io.IOException,getMessage,0,java.lang.String] +++$+++  THROW NEW TYPE[RuntimeException] PARENTHESESSTART
CALL[java.io.IOException,getMessage,0,java.lang.String] +++$+++  THROW NEW TYPE[RuntimeException] PARENTHESESSTART
CALL[java.io.IOException,getMessage,0,java.lang.String] +++$+++  THROW NEW TYPE[RuntimeException] PARENTHESESSTART
CALL[java.io.IOException,getMessage,0,java.lang.String] +++$+++  THROW NEW TYPE[RuntimeException] PARENTHESESSTART
CALL[java.io.IOException,getMessage,0,java.lang.String] +++$+++  THROW NEW TYPE[RuntimeException] PARENTHESESSTART
CALL[java.util.Map,size,0,int] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[javax.xml.parsers.ParserConfigurationException,printStackTrace,0,void] +++$+++  TYPE[ParserConfigurationException] VAR[java.io.IOException] PARENTHESESEND CURLYSTART
CALL[java.lang.String,length,0,int] +++$+++  OP[bitwiseAnd] OP[bitwiseAnd] VAR[INT] OP[lessThan]
CALL[javax.swing.JPanel,add,1,java.awt.Component] PARA[CALL[null,createRigidArea]] +++$+++  PARENTHESESEND PARENTHESESEND PARENTHESESEND EOL
CALL[javax.swing.JComponent,setBackground,1,void] PARA[CALL[null,getColor]] +++$+++  PARENTHESESSTART VAR[BOOLEAN] PARENTHESESEND CURLYSTART
CALL[java.lang.Class,isAssignableFrom,1,boolean] PARA[CALL[java.lang.Object,getClass]] +++$+++  OP[assign] NULL OP[bitwiseAnd] OP[bitwiseAnd]
CALL[java.awt.event.MouseWheelEvent,getWheelRotation,0,int] +++$+++  VAR[java.awt.event.MouseWheelEvent] PARENTHESESEND CURLYSTART RETURN
CALL[java.util.Hashtable,get,1,V] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESSTART PARENTHESESEND EOL RETURN
CALL[java.util.Hashtable,keys,0,java.util.Enumeration<K>] +++$+++  TYPE[String] OP[greaterThan] VAR[java.util.Enumeration] OP[assign]
CALL[java.awt.Graphics,fillPolygon,3,void] PARA[VAR[INT]] PARA[VAR[INT]] PARA[LIT[Integer]] +++$+++  OP[sub] VAR[INT] OP[sum] VAR[INT]
CALL[java.io.IOException,printStackTrace,0,void] +++$+++  TYPE[IOException] VAR[java.io.IOException] PARENTHESESEND CURLYSTART
CALL[java.util.List,get,1,E] PARA[VAR[INT]] +++$+++  PARENTHESESEND CURLYSTART LEX[result.add] PARENTHESESSTART
CALL[java.lang.String,trim,0,java.lang.String] +++$+++  OP[assign] NULL OP[ternaryTrue] OP[ternaryFalse]
CALL[java.lang.String,trim,0,java.lang.String] +++$+++  OP[assign] NULL OP[ternaryTrue] OP[ternaryFalse]
CALL[javax.swing.JLabel,setEnabled,1,void] PARA[LIT[Boolean]] +++$+++  PARENTHESESSTART LEX[false] PARENTHESESEND EOL
CALL[javax.swing.JTextField,getText,0,java.lang.String] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[javax.swing.JTextField,getText,0,java.lang.String] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.text.ParseException,printStackTrace,0,void] +++$+++  TYPE[ParseException] VAR[java.text.ParseException] PARENTHESESEND CURLYSTART
CALL[java.lang.String,equals,1,boolean] PARA[FIELD[net.sourceforge.ganttproject.gui.NotificationItem]] +++$+++  PARENTHESESEND VAR[java.lang.Object] EOL RETURN
CALL[java.awt.Window,invalidate,0,void] +++$+++  OP[assign] NULL PARENTHESESEND CURLYSTART
CALL[javax.swing.JLabel,setText,1,void] PARA[VAR[java.lang.String]] +++$+++  COMMA PARENTHESESEND PARENTHESESEND EOL
CALL[javax.swing.JLabel,setForeground,1,void] PARA[CALL[null,getColor]] +++$+++  PARENTHESESSTART NULL PARENTHESESEND EOL
CALL[javax.swing.JList,getSelectedValue,0,E] +++$+++  CURLYSTART TYPE[ListItem] VAR[net.sourceforge.ganttproject.gui.AbstractPagesDialog.ListItem] OP[assign]
CALL[java.awt.image.BufferedImage,getRaster,0,java.awt.image.WritableRaster] +++$+++  PARENTHESESEND EOL LEX[image.copyData] PARENTHESESSTART
CALL[javax.swing.TransferHandler.TransferSupport,getDropLocation,0,javax.swing.TransferHandler.DropLocation] +++$+++  OP[assign] PARENTHESESSTART LEX[JXTreeTable.DropLocation] PARENTHESESEND
CALL[java.util.List,get,1,E] PARA[VAR[INT]] +++$+++  LEX[buf.append] PARENTHESESSTART LEX[String.valueOf] PARENTHESESSTART
CALL[java.util.List,size,0,int] +++$+++  OP[assign] EOL VAR[INT] OP[lessThan]
CALL[javax.swing.tree.TreeNode,getIndex,1,int] PARA[VAR[javax.swing.tree.TreeNode]] +++$+++  CURLYEND INT VAR[INT] OP[assign]
CALL[java.util.Locale,getLanguage,0,java.lang.String] +++$+++  VAR[java.lang.String] OP[assign] LEX[myExtraLocales.getProperty] PARENTHESESSTART
CALL[java.util.GregorianCalendar,getTime,0,java.util.Date] +++$+++  VAR[java.lang.StringBuffer] OP[assign] LEX[dateFormat.format] PARENTHESESSTART
CALL[java.io.OutputStream,write,1,void] PARA[VAR[BYTE]] +++$+++  ARRAYEND OP[assign] VAR[BYTE] EOL
CALL[java.util.List,add,1,boolean] PARA[VAR[biz.ganttproject.core.chart.canvas.Canvas.TextGroup]] +++$+++  COMMA VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.util.List,size,0,int] +++$+++  OP[bitwiseOr] VAR[INT] OP[greaterThan] OP[assign]
CALL[java.util.List,add,1,boolean] PARA[VAR[biz.ganttproject.core.chart.canvas.Canvas]] +++$+++  TYPE[Canvas] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.awt.Font]] +++$+++  PARENTHESESSTART VAR[FLOAT] PARENTHESESEND EOL
CALL[java.util.Date,hashCode,0,int] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[biz.ganttproject.core.time.GanttCalendar,set,2,void] PARA[FIELD[Calendar]] PARA[CALL[null,parseInt]] +++$+++  PARENTHESESEND OP[sub] PARENTHESESEND EOL
CALL[java.util.List,size,0,int] +++$+++  OP[bitwiseAnd] OP[bitwiseAnd] VAR[INT] OP[lessThan]
CALL[java.util.List,contains,1,boolean] PARA[VAR[java.lang.Object]] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.util.List,get,1,E] PARA[LIT[Integer]] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.Class,newInstance,0,T] +++$+++  OP[assign] PARENTHESESSTART TYPE[ModelImplementation] PARENTHESESEND
CALL[java.lang.String,length,0,int] +++$+++  VAR[CHAR] EOL VAR[INT] OP[assign]
CALL[java.lang.StringBuffer,toString,0,java.lang.String] +++$+++  PARENTHESESSTART PARENTHESESEND EOL RETURN
CALL[java.util.List,get,1,E] PARA[VAR[INT]] +++$+++  EOL CURLYEND LEX[sb.append] PARENTHESESSTART
CALL[java.lang.StringBuffer,toString,0,java.lang.String] +++$+++  PARENTHESESEND EOL CURLYEND RETURN
CALL[java.util.Date,setTime,1,void] PARA[CALL[null,currentTimeMillis]] +++$+++  LEX[getNow] PARENTHESESSTART PARENTHESESEND CURLYSTART
CALL[java.util.List,remove,1,boolean] PARA[VAR[java.lang.Object]] +++$+++  OP[assign] NULL PARENTHESESEND CURLYSTART
CALL[java.util.List,remove,1,boolean] PARA[VAR[java.lang.String]] +++$+++  VAR[java.lang.String] PARENTHESESEND PARENTHESESEND CURLYSTART
CALL[java.lang.String,substring,2,java.lang.String] PARA[LIT[Integer]] PARA[VAR[INT]] +++$+++  OP[greaterThan] PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.String,substring,2,java.lang.String] PARA[LIT[Integer]] PARA[LIT[Integer]] +++$+++  PARENTHESESEND CURLYSTART VAR[java.lang.String] OP[assign]
CALL[java.util.List,add,1,boolean] PARA[VAR[java.lang.Object]] +++$+++  VAR[java.lang.Object] PARENTHESESEND PARENTHESESEND CURLYSTART
CALL[java.awt.datatransfer.DataFlavor,match,1,boolean] PARA[VAR[java.awt.datatransfer.DataFlavor]] +++$+++  LEX[IOException] CURLYSTART IF PARENTHESESSTART
CALL[java.awt.Graphics2D,fillRect,4,void] PARA[LIT[Integer]] PARA[LIT[Integer]] PARA[VAR[INT]] PARA[VAR[INT]] +++$+++  PARENTHESESSTART LEX[AlphaComposite.Src] PARENTHESESEND EOL
CALL[java.awt.image.BufferedImage,getProperty,1,java.lang.Object] PARA[VAR[java.lang.String]] +++$+++  VAR[java.lang.String] PARENTHESESEND CURLYSTART RETURN
CALL[java.awt.Rectangle,getHeight,0,double] +++$+++  LEX[rect.getY] PARENTHESESSTART PARENTHESESEND OP[sum]
CALL[java.awt.Rectangle,getY,0,double] +++$+++  PARENTHESESEND CURLYSTART VAR[DOUBLE] OP[assign]
CALL[java.awt.Rectangle,getWidth,0,double] +++$+++  LEX[rect.getX] PARENTHESESSTART PARENTHESESEND OP[sum]
CALL[java.awt.Point,getY,0,double] +++$+++  COMMA PARENTHESESSTART INT PARENTHESESEND
CALL[java.awt.Point,getY,0,double] +++$+++  VAR[DOUBLE] OP[assign] LEX[Math.min] PARENTHESESSTART
CALL[java.util.Set,isEmpty,0,boolean] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.util.Set,toArray,1,T[]] PARA[VAR[java.lang.Object]] +++$+++  VAR[java.lang.Object] PARENTHESESEND CURLYSTART RETURN
CALL[java.util.Set,iterator,0,java.util.Iterator<E>] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[javax.swing.JList,getModel,0,javax.swing.ListModel<E>] +++$+++  EOL TYPE[ListModel] VAR[javax.swing.ListModel] OP[assign]
CALL[java.awt.Container,getComponent,1,java.awt.Component] PARA[VAR[INT]] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[javax.swing.JComboBox,setEnabled,1,void] PARA[VAR[BOOLEAN]] +++$+++  BOOLEAN VAR[BOOLEAN] PARENTHESESEND CURLYSTART
CALL[java.util.Collection,iterator,0,java.util.Iterator<E>] +++$+++  CURLYEND CURLYEND VAR[java.util.Iterator] OP[assign]
CALL[java.util.Iterator,hasNext,0,boolean] +++$+++  PARENTHESESEND EOL WHILE PARENTHESESSTART
CALL[java.lang.String,indexOf,1,int] PARA[LIT[Character]] +++$+++  VAR[java.lang.String] PARENTHESESEND OP[bitwiseAnd] OP[bitwiseAnd]
CALL[java.util.Iterator,hasNext,0,boolean] +++$+++  PARENTHESESEND EOL WHILE PARENTHESESSTART
CALL[javax.swing.Action,putValue,2,void] PARA[VAR[java.lang.String]] PARA[VAR[java.lang.Object]] +++$+++  LEX[Object] VAR[java.lang.Object] PARENTHESESEND CURLYSTART
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[LIT[Stirng]] +++$+++  OP[ternaryFalse] VAR[java.util.Collection] PARENTHESESEND CURLYSTART
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.util.List,add,1,boolean] PARA[CALL[org.argouml.language.java.reveng.classfile.ParserUtils.Token,getValue]] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND CURLYSTART
CALL[java.lang.String,charAt,1,char] PARA[LIT[Integer]] +++$+++  PARENTHESESEND CURLYSTART SWITCH PARENTHESESSTART
CALL[java.util.StringTokenizer,nextToken,0,java.lang.String] +++$+++  ARRAYEND OP[assign] LEX[Integer.parseInt] PARENTHESESSTART
CALL[java.lang.String,equals,1,boolean] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART PARENTHESESEND OP[bitwiseOr] OP[bitwiseOr]
CALL[java.util.jar.JarFile,entries,0,java.util.Enumeration<java.util.jar.JarEntry>] +++$+++  TYPE[JarEntry] OP[greaterThan] VAR[java.util.Enumeration] OP[assign]
CALL[java.lang.String,replace,2,java.lang.String] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND EOL VAR[java.lang.String] OP[assign]
CALL[java.lang.StringBuffer,length,0,int] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[VAR[java.lang.String]] +++$+++  VAR[java.lang.String] PARENTHESESEND EOL CURLYEND
CALL[java.lang.String,substring,2,java.lang.String] PARA[LIT[Integer]] PARA[VAR[INT]] +++$+++  CURLYEND TYPE[String] VAR[java.lang.String] OP[assign]
CALL[java.lang.Object,toString,0,java.lang.String] +++$+++  NULL OP[ternaryTrue] NULL OP[ternaryFalse]
CALL[java.util.Properties,getProperty,1,java.lang.String] PARA[VAR[java.lang.String]] +++$+++  VAR[java.lang.String] PARENTHESESEND CURLYSTART RETURN
CALL[java.util.Properties,containsKey,1,boolean] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.util.Properties,getProperty,1,java.lang.String] PARA[VAR[java.lang.String]] +++$+++  VAR[FLOAT] OP[assign] LEX[ConvertUtils.toFloat] PARENTHESESSTART
CALL[javax.swing.JTextField,getText,0,java.lang.String] +++$+++  VAR[java.lang.Integer] OP[assign] LEX[ConvertUtils.toInteger] PARENTHESESSTART
CALL[javax.swing.JTextField,getText,0,java.lang.String] +++$+++  ARRAYEND OP[assign] LEX[Float.parseFloat] PARENTHESESSTART
CALL[javax.swing.JCheckBox,isSelected,0,boolean] +++$+++  CURLYSTART LEX[taL2Text.setEnabled] PARENTHESESSTART OP[not]
CALL[java.lang.StringBuilder,toString,0,java.lang.String] +++$+++  PARENTHESESEND EOL CURLYEND RETURN
CALL[java.util.Map,keySet,0,java.util.Set<K>] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[jmemorize.core.ImageRepository.ImageItem]] +++$+++  LEX[item.getId] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.util.List,remove,1,boolean] PARA[VAR[jmemorize.core.Settings.CardFontObserver]] +++$+++  LEX[CardFontObserver] VAR[jmemorize.core.Settings.CardFontObserver] PARENTHESESEND CURLYSTART
CALL[java.util.List,addAll,1,boolean] PARA[VAR[java.util.List]] +++$+++  LEX[m_imageIDs.clear] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.util.List,remove,1,boolean] PARA[VAR[jmemorize.core.CardSide.CardSideObserver]] +++$+++  LEX[CardSideObserver] VAR[jmemorize.core.CardSide.CardSideObserver] PARENTHESESEND CURLYSTART
CALL[javax.swing.text.Document,insertString,3,void] PARA[VAR[INT]] PARA[LIT[Stirng]] PARA[VAR[javax.swing.text.SimpleAttributeSet]] +++$+++  COMMA VAR[javax.swing.JLabel] PARENTHESESEND EOL
CALL[java.util.List,size,0,int] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.lang.String,length,0,int] +++$+++  EOL VAR[INT] OP[sum] OP[assign]
CALL[javax.swing.JTextPane,setEditorKit,1,void] PARA[CALL[javax.swing.JTextPane,getEditorKit]] +++$+++  PARENTHESESSTART VAR[javax.swing.event.CaretListener] PARENTHESESEND EOL
CALL[javax.swing.JCheckBox,isSelected,0,boolean] +++$+++  PARENTHESESEND CURLYSTART LEX[m_fixedExpirationTimeSpinner.setEnabled] PARENTHESESSTART
CALL[javax.swing.JCheckBox,isSelected,0,boolean] +++$+++  PARENTHESESEND CURLYSTART LEX[m_timeLimitSpinner.setEnabled] PARENTHESESSTART
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[LIT[Stirng]] +++$+++  LEX[LC.DECK] PARENTHESESEND PARENTHESESEND EOL
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND EOL
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[VAR[java.lang.String]] +++$+++  LEX[sb.append] PARENTHESESSTART PARENTHESESEND EOL
CALL[javax.swing.JToolBar,setFloatable,1,void] PARA[LIT[Boolean]] +++$+++  PARENTHESESSTART LEX[ColorConstants.CARD_SIDE_BAR_COLOR] PARENTHESESEND EOL
CALL[java.util.Map,get,1,V] PARA[VAR[java.lang.String]] +++$+++  OP[assign] PARENTHESESSTART TYPE[String] PARENTHESESEND
CALL[java.util.Map,get,1,V] PARA[VAR[java.lang.String]] +++$+++  OP[assign] PARENTHESESSTART TYPE[String] PARENTHESESEND
CALL[java.util.zip.ZipOutputStream,closeEntry,0,void] +++$+++  PARENTHESESSTART PARENTHESESEND EOL CURLYEND
CALL[java.util.Map,put,2,V] PARA[VAR[java.io.File]] PARA[VAR[java.lang.String]] +++$+++  OP[not] OP[assign] NULL EOL
CALL[java.util.List,add,1,boolean] PARA[VAR[java.lang.String]] +++$+++  COMMA VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.io.FileWriter,close,0,void] +++$+++  EOL CURLYEND FINALLY CURLYSTART
CALL[java.awt.image.BufferedImage,getHeight,0,int] +++$+++  LEX[Color.BLUE] COMMA LEX[image.getWidth] PARENTHESESSTART
CALL[java.util.Iterator,next,0,E] +++$+++  OP[assign] PARENTHESESSTART TYPE[ImageWriter] PARENTHESESEND
CALL[java.awt.image.renderable.ParameterBlock,addSource,1,java.awt.image.renderable.ParameterBlock] PARA[VAR[java.awt.image.RenderedImage]] +++$+++  TYPE[ParameterBlock] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.awt.image.renderable.ParameterBlock,addSource,1,java.awt.image.renderable.ParameterBlock] PARA[VAR[java.awt.image.RenderedImage]] +++$+++  PARENTHESESSTART NULL PARENTHESESEND EOL
CALL[java.awt.geom.GeneralPath,closePath,0,void] +++$+++  COMMA VAR[INT] PARENTHESESEND EOL
CALL[java.awt.image.BufferedImage,getColorModel,0,java.awt.image.ColorModel] +++$+++  PARENTHESESEND CURLYSTART VAR[java.awt.image.ColorModel] OP[assign]
CALL[java.awt.image.BufferedImage,getWidth,0,int] +++$+++  VAR[java.awt.image.ColorModel] COMMA LEX[dstCM.createCompatibleWritableRaster] PARENTHESESSTART
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[VAR[java.lang.String]] +++$+++  OP[not] OP[assign] PARENTHESESEND CURLYSTART
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[VAR[CHAR]] +++$+++  EOL CURLYEND ELSE CURLYSTART
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[LIT[Stirng]] +++$+++  OP[assign] OP[assign] PARENTHESESEND CURLYSTART
CALL[java.util.Iterator,next,0,E] +++$+++  OP[assign] PARENTHESESSTART TYPE[Integer] PARENTHESESEND
CALL[java.util.Locale,toString,0,java.lang.String] +++$+++  PARENTHESESSTART PARENTHESESEND OP[sum] OP[sum]
CALL[java.io.File,delete,0,boolean] +++$+++  EOL IF PARENTHESESSTART OP[not]
CALL[java.util.Iterator,hasNext,0,boolean] +++$+++  PARENTHESESEND EOL WHILE PARENTHESESSTART
CALL[java.util.Map,get,1,V] PARA[VAR[java.lang.String]] +++$+++  OP[assign] PARENTHESESSTART TYPE[List] PARENTHESESEND
CALL[java.util.Iterator,next,0,E] +++$+++  OP[assign] PARENTHESESSTART TYPE[File] PARENTHESESEND
CALL[java.util.Iterator,hasNext,0,boolean] +++$+++  PARENTHESESEND EOL WHILE PARENTHESESSTART
CALL[java.io.File,getAbsolutePath,0,java.lang.String] +++$+++  CURLYSTART TYPE[String] VAR[java.lang.String] OP[assign]
CALL[java.io.File,getAbsolutePath,0,java.lang.String] +++$+++  EOL TYPE[String] VAR[java.lang.String] OP[assign]
CALL[java.lang.String,length,0,int] +++$+++  VAR[java.lang.String] OP[assign] LEX[filePath.substring] PARENTHESESSTART
CALL[java.io.File,exists,0,boolean] +++$+++  CURLYEND ELSE IF PARENTHESESSTART
CALL[java.lang.String,equalsIgnoreCase,1,boolean] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.Object]] PARA[VAR[java.util.List]] +++$+++  TYPE[ArrayList] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.util.List,add,1,boolean] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESSTART VAR[java.util.List] PARENTHESESEND CURLYSTART
CALL[java.lang.StringBuffer,charAt,1,char] PARA[VAR[INT]] +++$+++  PARENTHESESEND OP[bitwiseAnd] OP[bitwiseAnd] PARENTHESESSTART
CALL[java.lang.String,toLowerCase,0,java.lang.String] +++$+++  NULL EOL VAR[java.lang.String] OP[assign]
CALL[java.awt.Graphics2D,setColor,1,void] PARA[VAR[java.awt.Color]] +++$+++  LEX[BasicStroke.JOIN_ROUND] PARENTHESESEND PARENTHESESEND EOL
CALL[java.awt.Graphics2D,setColor,1,void] PARA[VAR[java.awt.Color]] +++$+++  PARENTHESESEND EOL TRY CURLYSTART
CALL[java.lang.String,equals,1,boolean] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESEND EOL ASSERT OP[not]
CALL[java.util.List,size,0,int] +++$+++  CURLYSTART INT VAR[INT] OP[assign]
CALL[java.lang.String,equals,1,boolean] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.util.Iterator,hasNext,0,boolean] +++$+++  PARENTHESESEND EOL WHILE PARENTHESESSTART
CALL[java.lang.String,equals,1,boolean] PARA[VAR[java.lang.String]] +++$+++  OP[assign] NULL EOL RETURN
CALL[java.awt.image.RenderedImage,getWidth,0,int] +++$+++  OP[assign] NEW TYPE[Dimension] PARENTHESESSTART
CALL[javax.swing.JButton,addActionListener,1,void] PARA[THIS[null]] +++$+++  PARENTHESESSTART VAR[java.lang.String] PARENTHESESEND EOL
CALL[javax.swing.JFileChooser,setFileFilter,1,void] PARA[VAR[javax.swing.filechooser.FileFilter]] +++$+++  PARENTHESESSTART VAR[java.lang.String] PARENTHESESEND EOL
CALL[javax.swing.JFileChooser,setMultiSelectionEnabled,1,void] PARA[LIT[Boolean]] +++$+++  PARENTHESESSTART VAR[javax.swing.filechooser.FileFilter] PARENTHESESEND EOL
CALL[javax.swing.JMenu,add,1,javax.swing.JMenuItem] PARA[VAR[javax.swing.JMenuItem]] +++$+++  PARENTHESESSTART LEX[KeyEvent.VK_C] PARENTHESESEND EOL
CALL[javax.swing.JButton,setEnabled,1,void] PARA[LIT[Boolean]] +++$+++  PARENTHESESSTART LEX[false] PARENTHESESEND EOL
CALL[javax.swing.ListSelectionModel,setAnchorSelectionIndex,1,void] PARA[VAR[INT]] +++$+++  INT VAR[INT] PARENTHESESEND CURLYSTART
CALL[javax.swing.JFormattedTextField,setEnabled,1,void] PARA[VAR[BOOLEAN]] +++$+++  PARENTHESESSTART VAR[BOOLEAN] PARENTHESESEND EOL
CALL[java.awt.image.RenderedImage,getHeight,0,int] +++$+++  PARENTHESESEND EOL VAR[INT] OP[assign]
CALL[java.util.HashMap,containsKey,1,boolean] PARA[VAR[java.lang.Object]] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.io.File,canRead,0,boolean] +++$+++  PARENTHESESSTART PARENTHESESEND OP[bitwiseAnd] OP[bitwiseAnd]
CALL[javax.swing.JSplitPane,setActionMap,1,void] PARA[VAR[javax.swing.ActionMap]] +++$+++  TYPE[ActionMap] PARENTHESESSTART PARENTHESESEND EOL
CALL[javax.swing.JList,getSelectedIndex,0,int] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.util.prefs.Preferences,sync,0,void] +++$+++  PARENTHESESEND CURLYSTART TRY CURLYSTART
CALL[javax.swing.JProgressBar,setValue,1,void] PARA[VAR[INT]] +++$+++  PARENTHESESSTART VAR[LONG] OP[multiply] PARENTHESESEND
CALL[java.io.OutputStream,close,0,void] +++$+++  LEX[in.close] PARENTHESESSTART PARENTHESESEND EOL
CALL[javax.swing.JTextField,getText,0,java.lang.String] +++$+++  PARENTHESESEND CURLYSTART VAR[java.lang.String] OP[assign]
CALL[javax.swing.JCheckBox,isSelected,0,boolean] +++$+++  LEX[caseSensitiveCheckBox.isSelected] PARENTHESESSTART PARENTHESESEND COMMA
CALL[java.util.ArrayList,size,0,int] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.io.FileNotFoundException,printStackTrace,0,void] +++$+++  TYPE[FileNotFoundException] VAR[java.io.FileNotFoundException] PARENTHESESEND CURLYSTART
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.lang.StringBuilder,toString,0,java.lang.String] +++$+++  PARENTHESESEND EOL CURLYEND RETURN
CALL[java.awt.Checkbox,setState,1,void] PARA[LIT[Boolean]] +++$+++  LEX[stopElm] OP[assign] LEX[ce] EOL
CALL[java.awt.Scrollbar,getValue,0,int] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.util.HashMap,get,1,V] PARA[VAR[INT]] +++$+++  CURLYSTART TYPE[String] VAR[java.lang.String] OP[assign]
CALL[java.util.HashMap,put,2,V] PARA[VAR[INT]] PARA[VAR[java.lang.String]] +++$+++  INT VAR[INT] PARENTHESESEND CURLYSTART
CALL[java.util.Calendar,setTimeInMillis,1,void] PARA[LIT[Integer]] +++$+++  LEX[DateTime.calendarInstance] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.util.Calendar,getTimeInMillis,0,long] +++$+++  COMMA PARENTHESESEND EOL RETURN
CALL[java.util.Calendar,getTimeInMillis,0,long] +++$+++  COMMA PARENTHESESEND EOL RETURN
CALL[java.lang.StringBuffer,toString,0,java.lang.String] +++$+++  PARENTHESESEND EOL CURLYEND RETURN
CALL[java.lang.String,trim,0,java.lang.String] +++$+++  PARENTHESESEND EOL VAR[java.lang.String] OP[assign]
CALL[java.util.LinkedList,addLast,1,void] PARA[VAR[java.lang.Object]] +++$+++  LEX[Object] VAR[java.lang.Object] PARENTHESESEND CURLYSTART
CALL[java.util.LinkedList,indexOf,1,int] PARA[VAR[java.lang.Object]] +++$+++  VAR[java.lang.Object] PARENTHESESEND CURLYSTART RETURN
CALL[java.util.ResourceBundle,getString,1,java.lang.String] PARA[VAR[java.lang.String]] +++$+++  EOL CURLYEND CURLYEND RETURN
CALL[java.lang.StringBuffer,toString,0,java.lang.String] +++$+++  PARENTHESESEND EOL CURLYEND RETURN
CALL[java.util.Iterator,next,0,E] +++$+++  OP[assign] PARENTHESESSTART TYPE[Field] PARENTHESESEND
CALL[java.util.Iterator,hasNext,0,boolean] +++$+++  PARENTHESESEND EOL WHILE PARENTHESESSTART
CALL[java.lang.Number,doubleValue,0,double] +++$+++  VAR[java.lang.Number] OP[assign] LEX[Double.valueOf] PARENTHESESSTART
CALL[java.util.Iterator,hasNext,0,boolean] +++$+++  PARENTHESESEND EOL WHILE PARENTHESESSTART
CALL[java.util.Iterator,hasNext,0,boolean] +++$+++  PARENTHESESEND EOL WHILE PARENTHESESSTART
CALL[java.util.Enumeration,nextElement,0,E] +++$+++  OP[assign] PARENTHESESSTART TYPE[PertLayoutTreeNode] PARENTHESESEND
CALL[com.projity.pm.criticalpath.PredecessorTaskTree.PertLayoutTreeNode,add,1,void] PARA[VAR[com.projity.pm.criticalpath.PredecessorTaskTree.PertLayoutTreeNode]] +++$+++  PARENTHESESSTART LEX[task] PARENTHESESEND PARENTHESESEND
CALL[com.projity.pm.criticalpath.PredecessorTaskTree.PertLayoutTreeNode,preorderEnumeration,0,java.util.Enumeration<E>] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.util.Iterator,hasNext,0,boolean] +++$+++  VAR[com.projity.pm.criticalpath.PredecessorTaskList.TaskReference] EOL WHILE PARENTHESESSTART
CALL[java.util.LinkedList,listIterator,1,java.util.ListIterator<E>] PARA[CALL[java.util.LinkedList,size]] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.util.GregorianCalendar,setTime,1,void] PARA[VAR[java.util.Date]] +++$+++  LEX[Date] VAR[java.util.Date] PARENTHESESEND CURLYSTART
CALL[java.util.Iterator,next,0,E] +++$+++  PARENTHESESEND PARENTHESESEND LEX[toRemove.add] PARENTHESESSTART
CALL[java.util.ListIterator,next,0,E] +++$+++  OP[assign] PARENTHESESSTART TYPE[FormBoxLayout] PARENTHESESEND
CALL[java.util.Calendar,get,1,int] PARA[FIELD[Calendar]] +++$+++  PARENTHESESSTART LEX[Calendar.MONTH] COMMA PARENTHESESSTART
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[LIT[Stirng]] +++$+++  OP[sum] PARENTHESESEND EOL CURLYEND
CALL[java.lang.StringBuffer,toString,0,java.lang.String] +++$+++  PARENTHESESSTART PARENTHESESEND EOL RETURN
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[LIT[Stirng]] +++$+++  OP[not] VAR[BOOLEAN] PARENTHESESEND CURLYSTART
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[VAR[java.lang.String]] +++$+++  ARRAYSTART VAR[INT] ARRAYEND EOL
CALL[java.io.ObjectOutputStream,writeInt,1,void] PARA[VAR[INT]] +++$+++  PARENTHESESSTART VAR[DOUBLE] PARENTHESESEND EOL
CALL[java.util.LinkedList,add,1,boolean] PARA[VAR[java.lang.Object]] +++$+++  OP[not] OP[assign] NULL PARENTHESESEND
CALL[javax.swing.undo.UndoableEditSupport,beginUpdate,0,void] +++$+++  OP[not] OP[assign] NULL PARENTHESESEND
CALL[java.util.List,add,1,boolean] PARA[CALL[javax.swing.undo.UndoableEdit,getPresentationName]] +++$+++  OP[not] OP[assign] NULL PARENTHESESEND
CALL[java.util.StringTokenizer,hasMoreTokens,0,boolean] +++$+++  PARENTHESESEND EOL WHILE PARENTHESESSTART
CALL[java.lang.String,equals,1,boolean] PARA[VAR[java.lang.String]] +++$+++  OP[assign] NULL OP[bitwiseOr] OP[bitwiseOr]
CALL[java.util.Collection,size,0,int] +++$+++  OP[assign] NEW TYPE[ArrayList] PARENTHESESSTART
CALL[java.lang.String,endsWith,1,boolean] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART PARENTHESESEND OP[bitwiseOr] OP[bitwiseOr]
CALL[java.lang.String,endsWith,1,boolean] PARA[LIT[Stirng]] +++$+++  VAR[java.lang.String] PARENTHESESEND OP[bitwiseOr] OP[bitwiseOr]
CALL[java.lang.String,endsWith,1,boolean] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.lang.String,equals,1,boolean] PARA[LIT[Stirng]] +++$+++  EOL ELSE IF PARENTHESESSTART
CALL[java.lang.StringBuilder,toString,0,java.lang.String] +++$+++  PARENTHESESEND EOL RETURN PARENTHESESSTART
CALL[java.io.OutputStreamWriter,write,1,void] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND EOL
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Stirng]] +++$+++  OP[sum] OP[sum] PARENTHESESEND CURLYSTART
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[VAR[CHAR]] +++$+++  VAR[CHAR] OP[assign] EOL CURLYEND
CALL[java.lang.Number,doubleValue,0,double] +++$+++  INT PARENTHESESEND LEX[Math.round] PARENTHESESSTART
CALL[java.util.Calendar,setTime,1,void] PARA[VAR[java.util.Date]] +++$+++  LEX[Calendar.getInstance] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.util.Date,getTime,0,long] +++$+++  CURLYSTART LONG VAR[LONG] OP[assign]
CALL[java.util.TimeZone,inDaylightTime,1,boolean] PARA[VAR[java.util.Date]] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.util.Date,getTime,0,long] +++$+++  EOL LONG VAR[LONG] OP[assign]
CALL[java.lang.StringBuilder,toString,0,java.lang.String] +++$+++  PARENTHESESSTART PARENTHESESEND EOL RETURN
CALL[java.lang.Double,doubleValue,0,double] +++$+++  CURLYSTART VAR[DOUBLE] OP[sum] OP[assign]
CALL[java.io.InputStream,read,1,int] PARA[VAR[BYTE]] +++$+++  PARENTHESESEND CURLYSTART VAR[INT] OP[assign]
CALL[java.lang.StringBuilder,toString,0,java.lang.String] +++$+++  EOL CURLYEND LEX[pw.print] PARENTHESESSTART
CALL[java.io.ByteArrayOutputStream,toString,0,java.lang.String] +++$+++  PARENTHESESEND EOL RETURN PARENTHESESSTART
CALL[java.io.PrintWriter,flush,0,void] +++$+++  LEX[pw.println] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.io.PrintWriter,println,1,void] PARA[LIT[Stirng]] +++$+++  LEX[gi] PARENTHESESEND EOL CURLYEND
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Character]] +++$+++  OP[sum] OP[sum] PARENTHESESEND CURLYSTART
CALL[java.lang.StringBuilder,toString,0,java.lang.String] +++$+++  EOL CURLYEND VAR[java.lang.String] OP[assign]
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Stirng]] +++$+++  OP[ternaryFalse] CASE OP[ternaryFalse] CURLYSTART
CALL[java.util.HashMap,get,1,V] PARA[VAR[java.lang.String]] +++$+++  CURLYSTART TYPE[Integer] VAR[java.lang.Integer] OP[assign]
CALL[java.lang.StringBuilder,toString,0,java.lang.String] +++$+++  VAR[INT] OP[assign] LEX[Integer.parseInt] PARENTHESESSTART
CALL[java.io.InputStream,read,1,int] PARA[VAR[BYTE]] +++$+++  ARRAYEND EOL IF PARENTHESESSTART
CALL[java.util.List,remove,1,E] PARA[LIT[Integer]] +++$+++  ARRAYSTART ARRAYEND VAR[BYTE] OP[assign]
CALL[java.io.ByteArrayOutputStream,toString,0,java.lang.String] +++$+++  PARENTHESESEND EOL RETURN PARENTHESESSTART
CALL[java.util.HashMap,get,1,V] PARA[VAR[java.lang.Integer]] +++$+++  ARRAYSTART ARRAYEND VAR[BYTE] OP[assign]
CALL[java.lang.String,length,0,int] +++$+++  IF PARENTHESESSTART VAR[INT] OP[lessThan]
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[VAR[CHAR]] +++$+++  VAR[CHAR] PARENTHESESEND PARENTHESESEND CURLYSTART
CALL[java.util.ArrayList,get,1,E] PARA[LIT[Integer]] +++$+++  VAR[INT] OP[assign] LEX[Integer.parseInt] PARENTHESESSTART
CALL[java.util.Calendar,setTime,1,void] PARA[VAR[java.util.Date]] +++$+++  LEX[Calendar.getInstance] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.util.Map,containsKey,1,boolean] PARA[VAR[java.lang.String]] +++$+++  OP[assign] OP[bitwiseAnd] OP[bitwiseAnd] OP[not]
CALL[javax.swing.JLabel,setText,1,void] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESSTART VAR[INT] PARENTHESESEND EOL
CALL[java.util.Map,get,1,V] PARA[VAR[java.lang.String]] +++$+++  RETURN PARENTHESESSTART TYPE[String] PARENTHESESEND
CALL[java.util.ArrayList,size,0,int] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.util.ArrayList,size,0,int] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.util.ArrayList,listIterator,0,java.util.ListIterator<E>] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[javax.swing.JViewport,getViewPosition,0,java.awt.Point] +++$+++  EOL TYPE[Point] VAR[java.awt.Point] OP[assign]
CALL[java.awt.Point,getX,0,double] +++$+++  PARENTHESESSTART PARENTHESESSTART INT PARENTHESESEND
CALL[javax.swing.JFormattedTextField,setValue,1,void] PARA[VAR[DOUBLE]] +++$+++  PARENTHESESSTART VAR[DOUBLE] PARENTHESESEND EOL
CALL[java.awt.print.PageFormat,getImageableWidth,0,double] +++$+++  PARENTHESESEND LEX[Math.ceil] PARENTHESESSTART PARENTHESESSTART
CALL[javax.swing.Timer,getInitialDelay,0,int] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[javax.swing.Popup,hide,0,void] +++$+++  OP[assign] NULL PARENTHESESEND CURLYSTART
CALL[java.awt.image.BufferedImage,getWidth,0,int] +++$+++  OP[assign] PARENTHESESSTART LEX[float] PARENTHESESEND
CALL[java.awt.geom.GeneralPath,quadTo,4,void] PARA[VAR[FLOAT]] PARA[VAR[FLOAT]] PARA[VAR[FLOAT]] PARA[LIT[Integer]] +++$+++  COMMA VAR[FLOAT] PARENTHESESEND EOL
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  VAR[java.lang.String] OP[assign] VAR[java.lang.String] OP[sum]
CALL[java.awt.Color,getRed,0,int] +++$+++  RETURN NEW TYPE[Color] PARENTHESESSTART
CALL[java.awt.image.ColorModel,createCompatibleWritableRaster,2,java.awt.image.WritableRaster] PARA[CALL[java.awt.image.BufferedImage,getWidth]] PARA[CALL[java.awt.image.BufferedImage,getHeight]] +++$+++  TYPE[BufferedImage] PARENTHESESSTART VAR[java.awt.image.ColorModel] COMMA
CALL[javax.swing.AbstractButton,setOpaque,1,void] PARA[LIT[Boolean]] +++$+++  PARENTHESESSTART LEX[false] PARENTHESESEND EOL
CALL[java.awt.Component,isShowing,0,boolean] +++$+++  PARENTHESESSTART PARENTHESESEND OP[bitwiseAnd] OP[bitwiseAnd]
CALL[java.util.Iterator,hasNext,0,boolean] +++$+++  LEX[tasks.iterator] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[VAR[INT]] +++$+++  EOL CURLYEND ELSE CURLYSTART
CALL[java.lang.StringBuffer,toString,0,java.lang.String] +++$+++  LEX[Math.floor] PARENTHESESSTART LEX[Double.parseDouble] PARENTHESESSTART
CALL[java.io.ObjectOutputStream,close,0,void] +++$+++  PARENTHESESSTART LEX[data] PARENTHESESEND EOL
CALL[java.util.Calendar,getTimeZone,0,java.util.TimeZone] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.util.Calendar,setTimeZone,1,void] PARA[VAR[java.util.TimeZone]] +++$+++  LEX[TimeZone] VAR[java.util.TimeZone] PARENTHESESEND CURLYSTART
CALL[java.util.Calendar,setTimeInMillis,1,void] PARA[VAR[LONG]] +++$+++  VAR[INT] PARENTHESESEND EOL CURLYEND
CALL[java.util.Calendar,getTimeInMillis,0,long] +++$+++  EOL LONG VAR[LONG] OP[assign]
CALL[java.lang.StringBuffer,length,0,int] +++$+++  CURLYEND CURLYEND IF PARENTHESESSTART
CALL[java.lang.reflect.Method,getName,0,java.lang.String] +++$+++  OP[bitwiseAnd] OP[bitwiseAnd] LEX[proxySignature.equals] PARENTHESESSTART
CALL[java.util.Iterator,hasNext,0,boolean] +++$+++  PARENTHESESEND EOL WHILE PARENTHESESSTART
CALL[java.util.Enumeration,nextElement,0,E] +++$+++  OP[assign] PARENTHESESSTART TYPE[String] PARENTHESESEND
CALL[java.lang.String,substring,2,java.lang.String] PARA[LIT[Integer]] PARA[CALL[java.lang.String,indexOf]] +++$+++  PARENTHESESEND EOL VAR[java.lang.String] OP[assign]
CALL[java.lang.String,indexOf,1,int] PARA[LIT[Stirng]] +++$+++  OP[assign] LEX[file.substring] PARENTHESESSTART COMMA
CALL[java.awt.Point,getX,0,double] +++$+++  OP[assign] PARENTHESESSTART INT PARENTHESESEND
CALL[java.lang.String,indexOf,1,int] PARA[VAR[java.lang.String]] +++$+++  BREAK EOL IF PARENTHESESSTART
CALL[java.lang.String,substring,2,java.lang.String] PARA[LIT[Integer]] PARA[CALL[java.lang.String,indexOf]] +++$+++  CURLYSTART TYPE[String] VAR[java.lang.String] OP[assign]
CALL[java.lang.Exception,printStackTrace,0,void] +++$+++  TYPE[Exception] VAR[java.lang.Exception] PARENTHESESEND CURLYSTART
CALL[java.net.Socket,isClosed,0,boolean] +++$+++  PARENTHESESEND OP[bitwiseAnd] OP[bitwiseAnd] OP[not]
CALL[java.net.Socket,getLocalPort,0,int] +++$+++  PARENTHESESEND EOL VAR[INT] OP[assign]
CALL[java.net.URL,getHost,0,java.lang.String] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.util.ResourceBundle,getString,1,java.lang.String] PARA[VAR[java.lang.String]] +++$+++  OP[assign] NEW TYPE[MessageFormat] PARENTHESESSTART
CALL[java.io.PrintWriter,print,1,void] PARA[LIT[Stirng]] +++$+++  LEX[out.print] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.io.PrintWriter,flush,0,void] +++$+++  LEX[out.print] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.lang.String,length,0,int] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.lang.String,lastIndexOf,1,int] PARA[LIT[Stirng]] +++$+++  CURLYSTART INT VAR[INT] OP[assign]
CALL[java.util.Properties,setProperty,2,java.lang.Object] PARA[VAR[java.lang.String]] PARA[VAR[java.lang.String]] +++$+++  VAR[java.lang.String] PARENTHESESEND CURLYSTART RETURN
CALL[java.util.Properties,getProperty,1,java.lang.String] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESEND CURLYSTART RETURN OP[sum]
CALL[java.util.Properties,setProperty,2,java.lang.Object] PARA[VAR[java.lang.String]] PARA[VAR[java.lang.String]] +++$+++  OP[assign] EOL CURLYEND RETURN
CALL[javax.swing.JTable,getTableHeader,0,javax.swing.table.JTableHeader] +++$+++  CURLYSTART TYPE[JTableHeader] VAR[javax.swing.table.JTableHeader] OP[assign]
CALL[javax.swing.JTable,getColumnModel,0,javax.swing.table.TableColumnModel] +++$+++  EOL TYPE[TableColumnModel] VAR[javax.swing.table.TableColumnModel] OP[assign]
CALL[java.awt.GridBagLayout,setConstraints,2,void] PARA[VAR[javax.swing.JLabel]] PARA[VAR[java.awt.GridBagConstraints]] +++$+++  EOL FIELD[gridy,java.awt.GridBagConstraints] OP[assign] EOL
CALL[javax.swing.JPanel,add,1,java.awt.Component] PARA[VAR[javax.swing.JTextField]] +++$+++  PARENTHESESSTART VAR[javax.swing.JLabel] PARENTHESESEND EOL
CALL[javax.swing.JTextField,setEnabled,1,void] PARA[LIT[Boolean]] +++$+++  EOL CURLYEND ELSE CURLYSTART
CALL[javax.swing.JTextField,setEnabled,1,void] PARA[LIT[Boolean]] +++$+++  PARENTHESESSTART LEX[true] PARENTHESESEND EOL
CALL[javax.swing.JTextField,setEnabled,1,void] PARA[LIT[Boolean]] +++$+++  LEX[jtfPort.setText] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.io.PrintStream,println,1,void] PARA[VAR[java.lang.String]] +++$+++  LEX[out.println] PARENTHESESSTART PARENTHESESEND EOL
CALL[javax.swing.JTextArea,append,1,void] PARA[LIT[Stirng]] +++$+++  LEX[info.append] PARENTHESESSTART PARENTHESESEND EOL
CALL[javax.swing.JTextArea,append,1,void] PARA[LIT[Stirng]] +++$+++  LEX[info.append] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.io.PrintStream,flush,0,void] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND EOL
CALL[javax.swing.JComboBox,addActionListener,1,void] PARA[VAR[java.awt.event.ActionListener]] +++$+++  LEX[java.awt.event.ActionListener] VAR[java.awt.event.ActionListener] PARENTHESESEND CURLYSTART
CALL[java.util.Set,add,1,boolean] PARA[VAR[java.lang.String]] +++$+++  RETURN NULL EOL CURLYEND
CALL[java.lang.String,equals,1,boolean] PARA[LIT[Stirng]] +++$+++  OP[assign] EOL IF PARENTHESESSTART
CALL[java.lang.String,startsWith,1,boolean] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.util.Queue,offer,1,boolean] PARA[VAR[java.lang.Runnable]] +++$+++  LEX[Runnable] VAR[java.lang.Runnable] PARENTHESESEND CURLYSTART
CALL[java.io.File,exists,0,boolean] +++$+++  PARENTHESESSTART PARENTHESESEND OP[bitwiseOr] OP[bitwiseOr]
CALL[java.lang.String,length,0,int] +++$+++  OP[assign] LEX[projectDir.substring] PARENTHESESSTART COMMA
CALL[java.lang.String,startsWith,1,boolean] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[CALL[java.util.Iterator,next]] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND CURLYSTART
CALL[java.lang.StringBuilder,toString,0,java.lang.String] +++$+++  EOL CURLYEND CURLYEND RETURN
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[LIT[Stirng]] +++$+++  CONTINUE EOL CASE OP[ternaryFalse]
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[LIT[Stirng]] +++$+++  CONTINUE EOL CASE OP[ternaryFalse]
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  PARENTHESESSTART PARENTHESESSTART VAR[CHAR] OP[assign]
CALL[java.lang.Throwable,getMessage,0,java.lang.String] +++$+++  THROW NEW TYPE[Error] PARENTHESESSTART
CALL[javax.swing.JLabel,setToolTipText,1,void] PARA[VAR[java.lang.String]] +++$+++  VAR[java.lang.String] OP[sum] PARENTHESESEND EOL
CALL[javax.swing.JComponent,setToolTipText,1,void] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESSTART VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[LIT[Stirng]] +++$+++  CONTINUE EOL CASE OP[ternaryFalse]
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[VAR[CHAR]] +++$+++  EOL CURLYEND ELSE CURLYSTART
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[VAR[CHAR]] +++$+++  EOL CURLYEND ELSE CURLYSTART
CALL[java.util.Map,remove,1,V] PARA[VAR[java.lang.String]] +++$+++  VAR[java.lang.String] PARENTHESESEND CURLYSTART RETURN
CALL[java.util.logging.LogRecord,getLoggerName,0,java.lang.String] +++$+++  CURLYSTART TYPE[String] VAR[java.lang.String] OP[assign]
CALL[javax.swing.JFrame,setTitle,1,void] PARA[VAR[java.lang.String]] +++$+++  STRING VAR[java.lang.String] PARENTHESESEND CURLYSTART
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[javax.swing.JTextArea]] +++$+++  LEX[run] PARENTHESESSTART PARENTHESESEND CURLYSTART
CALL[java.io.InputStream,read,0,int] +++$+++  EOL INT VAR[INT] OP[assign]
CALL[java.io.ByteArrayOutputStream,write,1,void] PARA[VAR[INT]] +++$+++  PARENTHESESSTART PARENTHESESEND EOL CURLYEND
CALL[java.io.File,listFiles,0,java.io.File[]] +++$+++  ARRAYSTART ARRAYEND VAR[java.io.File] OP[assign]
CALL[java.io.File,listFiles,0,java.io.File[]] +++$+++  PARENTHESESSTART TYPE[File] VAR[java.io.File] OP[ternaryFalse]
CALL[java.util.List,add,1,boolean] PARA[CALL[jia.Vec,sub]] +++$+++  OP[ternaryFalse] VAR[java.util.Collection] PARENTHESESEND CURLYSTART
CALL[java.util.Collection,isEmpty,0,boolean] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.util.Collection,size,0,int] +++$+++  EOL CURLYEND VAR[DOUBLE] OP[assign]
CALL[java.util.HashMap,get,1,V] PARA[VAR[jasdl.bridge.mapping.MappingManager.Y]] +++$+++  CURLYSTART TYPE[X] VAR[jasdl.bridge.mapping.MappingManager.X] OP[assign]
CALL[java.util.HashMap,containsKey,1,boolean] PARA[VAR[jasdl.bridge.mapping.MappingManager.Y]] +++$+++  VAR[jasdl.bridge.mapping.MappingManager.Y] PARENTHESESEND CURLYSTART RETURN
CALL[java.util.List,get,1,E] PARA[VAR[INT]] +++$+++  PARENTHESESSTART PARENTHESESSTART TYPE[AgentParameters] PARENTHESESEND
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[LIT[Character]] +++$+++  BREAK EOL CASE OP[ternaryFalse]
CALL[java.lang.StringBuffer,toString,0,java.lang.String] +++$+++  CURLYSTART TYPE[String] VAR[java.lang.String] OP[assign]
CALL[java.util.Set,add,1,boolean] PARA[CALL[java.lang.StringBuffer,toString]] +++$+++  PARENTHESESSTART PARENTHESESEND OP[greaterThan] PARENTHESESEND
CALL[java.io.File,getCanonicalPath,0,java.lang.String] +++$+++  TRY CURLYSTART VAR[java.lang.String] OP[assign]
CALL[java.lang.String,lastIndexOf,1,int] PARA[LIT[Stirng]] +++$+++  CURLYSTART INT VAR[INT] OP[assign]
CALL[java.lang.String,substring,2,java.lang.String] PARA[LIT[Integer]] PARA[VAR[INT]] +++$+++  PARENTHESESEND PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.String,indexOf,1,int] PARA[LIT[Character]] +++$+++  CURLYSTART INT VAR[INT] OP[assign]
CALL[java.util.List,add,1,boolean] PARA[VAR[java.awt.Color]] +++$+++  OP[assign] NULL PARENTHESESEND CURLYSTART
CALL[net.sf.freecol.tools.FlagTest,setVisible,1,void] PARA[LIT[Boolean]] +++$+++  LEX[frame.pack] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.lang.String,indexOf,1,int] PARA[LIT[Character]] +++$+++  OP[assign] LEX[localFile.substring] PARENTHESESSTART COMMA
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART VAR[INT] OP[lessThan] PARENTHESESEND
CALL[java.lang.String,indexOf,1,int] PARA[LIT[Character]] +++$+++  CURLYSTART INT VAR[INT] OP[assign]
CALL[java.lang.String,indexOf,1,int] PARA[LIT[Integer]] +++$+++  EOL INT VAR[INT] OP[assign]
CALL[java.lang.String,startsWith,1,boolean] PARA[LIT[Stirng]] +++$+++  VAR[java.lang.String] PARENTHESESEND CURLYSTART RETURN
CALL[javax.swing.Timer,isRunning,0,boolean] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.awt.Graphics2D,setComposite,1,void] PARA[CALL[null,getInstance]] +++$+++  LEX[g2.getComposite] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.util.Enumeration,hasMoreElements,0,boolean] +++$+++  PARENTHESESEND EOL WHILE PARENTHESESSTART
CALL[java.awt.image.BufferedImage,createGraphics,0,java.awt.Graphics2D] +++$+++  EOL TYPE[Graphics2D] VAR[java.awt.Graphics2D] OP[assign]
CALL[java.awt.Graphics2D,setColor,1,void] PARA[VAR[java.awt.Color]] +++$+++  COMMA LEX[RenderingHints.VALUE_ANTIALIAS_ON] PARENTHESESEND EOL
CALL[java.awt.Graphics2D,draw,1,void] PARA[VAR[java.awt.geom.GeneralPath]] +++$+++  LEX[BasicStroke.JOIN_ROUND] PARENTHESESEND PARENTHESESEND EOL
CALL[java.awt.Graphics2D,dispose,0,void] +++$+++  PARENTHESESSTART VAR[java.awt.geom.GeneralPath] PARENTHESESEND EOL
CALL[java.awt.Graphics2D,dispose,0,void] +++$+++  PARENTHESESSTART VAR[java.awt.geom.GeneralPath] PARENTHESESEND EOL
CALL[java.awt.image.BufferedImage,getHeight,0,int] +++$+++  VAR[INT] OP[assign] VAR[INT] OP[sub]
CALL[java.awt.geom.GeneralPath,lineTo,2,void] PARA[LIT[Integer]] PARA[LIT[Integer]] +++$+++  OP[sub] VAR[DOUBLE] PARENTHESESEND EOL
CALL[java.awt.geom.GeneralPath,moveTo,2,void] PARA[LIT[Integer]] PARA[VAR[DOUBLE]] +++$+++  OP[assign] LEX[UnionPosition.RIGHT] PARENTHESESEND CURLYSTART
CALL[java.awt.geom.GeneralPath,transform,1,void] PARA[CALL[null,getScaleInstance]] +++$+++  VAR[DOUBLE] OP[greaterThan] PARENTHESESEND CURLYSTART
CALL[java.awt.event.MouseEvent,getSource,0,java.lang.Object] +++$+++  PARENTHESESSTART PARENTHESESSTART TYPE[Component] PARENTHESESEND
CALL[javax.swing.JTextPane,setEditable,1,void] PARA[LIT[Boolean]] +++$+++  PARENTHESESSTART LEX[false] PARENTHESESEND EOL
CALL[java.util.Set,add,1,boolean] PARA[VAR[net.sf.freecol.common.util.CollectionUtils.makeUnmodifiableSet(T...).T]] +++$+++  VAR[net.sf.freecol.common.util.CollectionUtils.makeUnmodifiableSet(T...).T] OP[ternaryFalse] VAR[net.sf.freecol.common.util.CollectionUtils.makeUnmodifiableSet(T...).T] PARENTHESESEND
CALL[java.util.List,add,1,boolean] PARA[CALL[java.util.List,remove]] +++$+++  INT VAR[INT] OP[assign] VAR[INT]
CALL[java.util.List,add,2,void] PARA[LIT[Integer]] PARA[VAR[net.sf.freecol.common.util.CollectionUtils.rotate(java.util.List<T>, int).T]] +++$+++  PARENTHESESSTART LEX[n-1] PARENTHESESEND EOL
CALL[java.util.Iterator,hasNext,0,boolean] +++$+++  ELSE CURLYSTART RETURN OP[not]
CALL[java.util.stream.Stream,noneMatch,1,boolean] PARA[VAR[java.util.function.Predicate]] +++$+++  VAR[java.util.function.Predicate] PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.StringBuilder,length,0,int] +++$+++  PARENTHESESEND CURLYSTART LEX[sb.setLength] PARENTHESESSTART
CALL[java.lang.String,length,0,int] +++$+++  LEX[s.substring] PARENTHESESSTART VAR[INT] OP[sum]
CALL[java.lang.String,indexOf,1,int] PARA[CALL[java.lang.String,charAt]] +++$+++  OP[assign] PARENTHESESSTART BYTE PARENTHESESEND
CALL[java.io.ObjectInputStream,readObject,0,java.lang.Object] +++$+++  RETURN PARENTHESESSTART TYPE[Random] PARENTHESESEND
CALL[java.util.List,clear,0,void] +++$+++  OP[not] OP[assign] NULL PARENTHESESEND
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  PARENTHESESEND CURLYSTART SWITCH PARENTHESESSTART
CALL[java.util.Map,isEmpty,0,boolean] +++$+++  PARENTHESESEND CURLYSTART RETURN OP[not]
CALL[java.lang.String,isEmpty,0,boolean] +++$+++  EOL IF PARENTHESESSTART OP[not]
CALL[java.util.List,contains,1,boolean] PARA[VAR[java.lang.String]] +++$+++  EOL IF PARENTHESESSTART OP[not]
CALL[java.util.List,contains,1,boolean] PARA[VAR[java.lang.String]] +++$+++  EOL IF PARENTHESESSTART OP[not]
CALL[java.io.File,canWrite,0,boolean] +++$+++  PARENTHESESSTART PARENTHESESEND OP[bitwiseAnd] OP[bitwiseAnd]
CALL[java.io.File,getPath,0,java.lang.String] +++$+++  EOL LEX[lb.add] PARENTHESESSTART COMMA
CALL[java.lang.String,startsWith,1,boolean] PARA[LIT[Stirng]] +++$+++  CURLYSTART IF PARENTHESESSTART OP[not]
CALL[java.io.BufferedReader,readLine,0,java.lang.String] +++$+++  PARENTHESESSTART PARENTHESESSTART VAR[java.lang.String] OP[assign]
CALL[java.util.StringTokenizer,nextToken,0,java.lang.String] +++$+++  VAR[INT] OP[assign] LEX[Integer.parseInt] PARENTHESESSTART
CALL[net.sf.freecol.common.debug.FreeColDebugger.DebugMode,ordinal,0,int] +++$+++  OP[bitwiseOr] OP[assign] OP[lessThan] OP[lessThan]
CALL[java.lang.String,startsWith,1,boolean] PARA[VAR[java.lang.String]] +++$+++  EOL IF PARENTHESESSTART OP[not]
CALL[java.util.Map,isEmpty,0,boolean] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.String,length,0,int] +++$+++  VAR[java.lang.String] OP[assign] LEX[desc.substring] PARENTHESESSTART
CALL[java.util.Iterator,remove,0,void] +++$+++  PARENTHESESSTART LEX[fcgo] PARENTHESESEND PARENTHESESEND
CALL[java.util.jar.JarFile,getEntry,1,java.util.zip.ZipEntry] PARA[VAR[java.lang.String]] +++$+++  EOL TYPE[ZipEntry] VAR[java.util.zip.ZipEntry] OP[assign]
CALL[java.lang.reflect.Method,invoke,2,java.lang.Object] PARA[VAR[java.lang.Object]] PARA[VAR[java.lang.Object]] +++$+++  CURLYSTART TRY CURLYSTART RETURN
CALL[java.io.File,isDirectory,0,boolean] +++$+++  VAR[java.io.File] PARENTHESESEND CURLYSTART RETURN
CALL[java.io.File,exists,0,boolean] +++$+++  NULL OP[bitwiseOr] OP[bitwiseOr] OP[not]
CALL[java.lang.String,startsWith,1,boolean] PARA[LIT[Stirng]] +++$+++  CURLYEND ELSE IF PARENTHESESSTART
CALL[java.lang.String,substring,1,java.lang.String] PARA[LIT[Integer]] +++$+++  CURLYSTART VAR[java.lang.String] OP[sum] OP[assign]
CALL[java.io.ByteArrayOutputStream,toByteArray,0,byte[]] +++$+++  PARENTHESESSTART PARENTHESESEND EOL RETURN
CALL[java.lang.String,indexOf,1,int] PARA[LIT[Character]] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.lang.String,indexOf,1,int] PARA[LIT[Character]] +++$+++  PARENTHESESSTART LEX[secondpart.substring] PARENTHESESSTART COMMA
CALL[java.net.ServerSocket,close,0,void] +++$+++  PARENTHESESEND CURLYSTART TRY CURLYSTART
CALL[java.io.FileOutputStream,flush,0,void] +++$+++  COMMA NULL PARENTHESESEND EOL
CALL[java.util.Properties,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  OP[ternaryTrue] OP[ternaryFalse] PARENTHESESEND EOL
CALL[java.util.Enumeration,nextElement,0,E] +++$+++  CURLYSTART TYPE[String] VAR[java.lang.String] OP[assign]
CALL[java.awt.Polygon,addPoint,2,void] PARA[LIT[Integer]] PARA[LIT[Integer]] +++$+++  TYPE[Polygon] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.awt.Polygon,addPoint,2,void] PARA[LIT[Integer]] PARA[LIT[Integer]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.awt.Polygon,addPoint,2,void] PARA[LIT[Integer]] PARA[LIT[Integer]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.awt.Polygon,addPoint,2,void] PARA[LIT[Integer]] PARA[LIT[Integer]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.awt.geom.GeneralPath,moveTo,2,void] PARA[VAR[INT]] PARA[VAR[INT]] +++$+++  TYPE[GeneralPath] PARENTHESESSTART PARENTHESESEND EOL
CALL[javax.swing.JComponent,setBackground,1,void] PARA[CALL[null,getColor]] +++$+++  PARENTHESESSTART VAR[BOOLEAN] PARENTHESESEND CURLYSTART
CALL[java.awt.Window,setVisible,1,void] PARA[LIT[Boolean]] +++$+++  LEX[ActionEvent] LEX[e] PARENTHESESEND CURLYSTART
CALL[java.lang.IllegalAccessException,getMessage,0,java.lang.String] +++$+++  LEX[Logger.info] PARENTHESESSTART VAR[java.lang.String] COMMA
CALL[javax.swing.JPanel,setOpaque,1,void] PARA[LIT[Boolean]] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND EOL
CALL[java.io.BufferedWriter,append,1,java.io.Writer] PARA[CALL[null,getProperty]] +++$+++  LEX[bw.append] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.io.BufferedWriter,flush,0,void] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND EOL
CALL[java.util.regex.Matcher,group,1,java.lang.String] PARA[LIT[Integer]] +++$+++  PARENTHESESEND EOL VAR[java.lang.String] OP[assign]
CALL[java.awt.event.MouseEvent,getY,0,int] +++$+++  LEX[e.getX] PARENTHESESSTART PARENTHESESEND COMMA
CALL[java.lang.String,trim,0,java.lang.String] +++$+++  CURLYSTART TYPE[String] VAR[java.lang.String] OP[assign]
CALL[java.lang.String,substring,2,java.lang.String] PARA[LIT[Integer]] PARA[CALL[java.lang.String,indexOf]] +++$+++  TRY CURLYSTART VAR[java.lang.String] OP[assign]
CALL[java.lang.String,length,0,int] +++$+++  CURLYSTART RETURN VAR[INT] OP[sum]
CALL[java.util.List,subList,2,java.util.List<E>] PARA[VAR[INT]] PARA[CALL[java.util.List,size]] +++$+++  EOL CURLYEND CURLYEND RETURN
CALL[java.util.List,add,1,boolean] PARA[VAR[java.lang.String]] +++$+++  LEX[in.readLine] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.io.BufferedReader,ready,0,boolean] +++$+++  PARENTHESESEND EOL WHILE PARENTHESESSTART
CALL[java.lang.String,indexOf,1,int] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND EOL VAR[INT] OP[assign]
CALL[java.lang.Object,getClass,0,java.lang.Class<? extends java.lang.Object>] +++$+++  VAR[java.lang.reflect.Method] OP[assign] LEX[ReflectionUtils.getMethod] PARENTHESESSTART
CALL[java.util.List,size,0,int] +++$+++  OP[bitwiseAnd] OP[bitwiseAnd] VAR[INT] OP[lessThan]
CALL[java.util.Map,get,1,V] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESSTART PARENTHESESSTART TYPE[String] PARENTHESESEND
CALL[java.util.Map,containsKey,1,boolean] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.util.Map,containsKey,1,boolean] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.util.Map,containsKey,1,boolean] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.util.Map,get,1,V] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESSTART PARENTHESESSTART TYPE[String] PARENTHESESEND
CALL[java.util.Map,get,1,V] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESSTART PARENTHESESSTART TYPE[String] PARENTHESESEND
CALL[java.lang.String,matches,1,boolean] PARA[LIT[Stirng]] +++$+++  VAR[java.lang.String] PARENTHESESEND OP[bitwiseAnd] OP[bitwiseAnd]
CALL[java.lang.String,substring,2,java.lang.String] PARA[LIT[Integer]] PARA[CALL[java.lang.String,indexOf]] +++$+++  PARENTHESESEND CURLYSTART VAR[java.lang.String] OP[assign]
CALL[java.lang.String,indexOf,1,int] PARA[LIT[Character]] +++$+++  NULL EOL IF PARENTHESESSTART
CALL[java.net.HttpURLConnection,setRequestMethod,1,void] PARA[LIT[Stirng]] +++$+++  COMMA VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.net.HttpURLConnection,getInputStream,0,java.io.InputStream] +++$+++  EOL TYPE[InputStream] VAR[java.io.InputStream] OP[assign]
CALL[java.lang.String,equalsIgnoreCase,1,boolean] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.net.HttpURLConnection,getResponseCode,0,int] +++$+++  PARENTHESESSTART PARENTHESESEND EOL RETURN
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[CALL[java.lang.Object,toString]] +++$+++  LEX[pos] PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.String,equals,1,boolean] PARA[VAR[java.lang.String]] +++$+++  OP[assign] NULL OP[bitwiseOr] OP[bitwiseOr]
CALL[java.lang.String,isEmpty,0,boolean] +++$+++  OP[assign] NULL OP[bitwiseOr] OP[bitwiseOr]
CALL[java.lang.Throwable,toString,0,java.lang.String] +++$+++  PARENTHESESEND PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.Thread,setDaemon,1,void] PARA[VAR[BOOLEAN]] +++$+++  LEX[thread.isDaemon] PARENTHESESSTART PARENTHESESEND PARENTHESESEND
CALL[java.nio.ByteBuffer,position,0,int] +++$+++  EOL CURLYEND IF PARENTHESESSTART
CALL[java.util.Map,toString,0,java.lang.String] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.io.File,isAbsolute,0,boolean] +++$+++  CURLYSTART IF PARENTHESESSTART OP[not]
CALL[java.lang.String,length,0,int] +++$+++  LEX[it.length] PARENTHESESSTART PARENTHESESEND COMMA
CALL[java.util.regex.Pattern,matcher,1,java.util.regex.Matcher] PARA[VAR[java.lang.String]] +++$+++  CURLYSTART TYPE[Matcher] VAR[java.util.regex.Matcher] OP[assign]
CALL[java.util.List,add,1,boolean] PARA[VAR[java.io.File]] +++$+++  VAR[java.io.File] PARENTHESESEND PARENTHESESEND CURLYSTART
CALL[java.util.List,add,1,boolean] PARA[VAR[java.io.File]] +++$+++  VAR[java.util.List] PARENTHESESEND EOL CURLYEND
CALL[java.nio.ByteBuffer,flip,0,java.nio.Buffer] +++$+++  LEX[buffer.duplicate] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.nio.ByteBuffer,position,0,int] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.nio.file.Path,getNameCount,0,int] +++$+++  EOL CURLYEND IF PARENTHESESSTART
CALL[java.awt.geom.RectangularShape,getMaxY,0,double] +++$+++  LEX[shape.getMinX] PARENTHESESSTART PARENTHESESEND COMMA
CALL[java.awt.geom.RectangularShape,getMaxX,0,double] +++$+++  OP[assign] NEW LEX[Point2D.Double] PARENTHESESSTART
CALL[java.awt.geom.RectangularShape,getMinY,0,double] +++$+++  LEX[shape.getMaxX] PARENTHESESSTART PARENTHESESEND COMMA
CALL[java.lang.Runnable,run,0,void] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND CURLYSTART
CALL[java.awt.Color,getRed,0,int] +++$+++  VAR[FLOAT] OP[assign] LEX[Color.RGBtoHSB] PARENTHESESSTART
CALL[java.awt.Color,getGreen,0,int] +++$+++  LEX[c2.getRed] PARENTHESESSTART PARENTHESESEND COMMA
CALL[java.util.HashMap,remove,1,V] PARA[CALL[net.filebot.util.WeakValueHashMap.WeakValue,getKey]] +++$+++  OP[assign] NULL PARENTHESESEND CURLYSTART
CALL[java.lang.ref.ReferenceQueue,poll,0,java.lang.ref.Reference<? extends T>] +++$+++  OP[lessThan] OP[ternaryTrue] OP[greaterThan] PARENTHESESEND
CALL[java.util.List,iterator,0,java.util.Iterator<E>] +++$+++  OP[lessThan] TYPE[K] OP[greaterThan] PARENTHESESEND
CALL[java.lang.Throwable,getMessage,0,java.lang.String] +++$+++  LEX[debug.log] PARENTHESESSTART LEX[Level.WARNING] COMMA
CALL[java.lang.String,length,0,int] +++$+++  OP[assign] NULL OP[bitwiseAnd] OP[bitwiseAnd]
CALL[java.lang.String,substring,2,java.lang.String] PARA[LIT[Integer]] PARA[VAR[INT]] +++$+++  OP[greaterThan] PARENTHESESEND CURLYSTART RETURN
CALL[java.util.List,isEmpty,0,boolean] +++$+++  EOL IF PARENTHESESSTART OP[not]
CALL[java.nio.charset.Charset,encode,1,java.nio.ByteBuffer] PARA[VAR[java.lang.String]] +++$+++  LEX[attributeView.write] PARENTHESESSTART VAR[java.lang.String] COMMA
CALL[java.util.prefs.Preferences,remove,1,void] PARA[VAR[java.lang.String]] +++$+++  STRING VAR[java.lang.String] PARENTHESESEND CURLYSTART
CALL[java.io.PrintWriter,format,1,java.io.PrintWriter] PARA[LIT[Stirng]] +++$+++  COMMA VAR[java.nio.charset.Charset] PARENTHESESEND EOL
CALL[java.util.regex.Matcher,find,0,boolean] +++$+++  NULL EOL WHILE PARENTHESESSTART
CALL[java.io.File,getName,0,java.lang.String] +++$+++  NULL OP[ternaryTrue] NULL OP[ternaryFalse]
CALL[java.lang.String,substring,2,java.lang.String] PARA[LIT[Integer]] PARA[VAR[INT]] +++$+++  RETURN VAR[java.lang.String] EOL RETURN
CALL[java.util.Map,containsKey,1,boolean] PARA[VAR[java.lang.Object]] +++$+++  VAR[java.lang.Object] PARENTHESESEND CURLYSTART RETURN
CALL[java.awt.datatransfer.Transferable,isDataFlavorSupported,1,boolean] PARA[VAR[java.awt.datatransfer.DataFlavor]] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.util.concurrent.atomic.AtomicInteger,get,0,int] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.util.concurrent.atomic.AtomicInteger,get,0,int] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[javax.swing.JPanel,setVisible,1,void] PARA[LIT[Boolean]] +++$+++  PARENTHESESSTART VAR[java.awt.Color] PARENTHESESEND EOL
CALL[java.util.concurrent.ExecutorService,submit,1,java.util.concurrent.Future<? extends java.lang.Object>] PARA[VAR[net.filebot.ui.subtitle.SubtitleAutoMatchDialog.QueryTask]] +++$+++  LEX[Executors.newSingleThreadExecutor] PARENTHESESSTART PARENTHESESEND EOL
CALL[javax.swing.table.TableRowSorter,getRowFilter,0,javax.swing.RowFilter<? super M, ? super I>] +++$+++  PARENTHESESSTART PARENTHESESEND EOL RETURN
CALL[java.io.File,getName,0,java.lang.String] +++$+++  VAR[java.util.regex.Matcher] OP[assign] LEX[CDI_PATTERN.matcher] PARENTHESESSTART
CALL[java.util.Set,toArray,0,java.lang.Object[]] +++$+++  PARENTHESESSTART NEW TYPE[DefaultComboBoxModel] PARENTHESESSTART
CALL[javax.swing.JComboBox,getSelectedItem,0,java.lang.Object] +++$+++  RETURN PARENTHESESSTART TYPE[Charset] PARENTHESESEND
CALL[java.io.InputStream,close,0,void] +++$+++  EOL CURLYEND FINALLY CURLYSTART
CALL[java.nio.charset.Charset,decode,1,java.nio.CharBuffer] PARA[CALL[null,wrap]] +++$+++  EOL TYPE[CharBuffer] VAR[java.nio.CharBuffer] OP[assign]
CALL[java.util.function.Function,apply,1,R] PARA[VAR[java.lang.String]] +++$+++  CURLYSTART TYPE[String] VAR[java.lang.String] OP[assign]
CALL[java.util.Calendar,getTime,0,java.util.Date] +++$+++  PARENTHESESEND PARENTHESESEND EOL RETURN
CALL[java.io.BufferedReader,readLine,0,java.lang.String] +++$+++  THROWS LEX[IOException] CURLYSTART RETURN
CALL[java.lang.String,isEmpty,0,boolean] +++$+++  OP[assign] NULL OP[bitwiseOr] OP[bitwiseOr]
CALL[java.util.Collection,toArray,0,java.lang.Object[]] +++$+++  VAR[java.util.List] OP[assign] LEX[FileUtilities.asFileList] PARENTHESESSTART
CALL[javax.swing.Action,setEnabled,1,void] PARA[LIT[Boolean]] +++$+++  PARENTHESESSTART LEX[true] PARENTHESESEND EOL
CALL[java.awt.Color,getBlue,0,int] +++$+++  LEX[color.getGreen] PARENTHESESSTART PARENTHESESEND COMMA
CALL[java.util.Map,put,2,V] PARA[VAR[org.jcandle.util.FundamentalStatus]] PARA[CALL[null,valueOf]] +++$+++  EOL CURLYEND ELSE CURLYSTART
CALL[java.util.Map,put,2,V] PARA[VAR[org.jcandle.util.FundamentalStatus]] PARA[CALL[null,valueOf]] +++$+++  PARENTHESESSTART VAR[org.jcandle.util.FundamentalStatus] PARENTHESESEND EOL
CALL[java.lang.Float,floatValue,0,float] +++$+++  OP[greaterThan] VAR[INT] OP[bitwiseOr] OP[bitwiseOr]
CALL[javax.swing.Icon,paintIcon,4,void] PARA[VAR[java.awt.Component]] PARA[VAR[java.awt.Graphics]] PARA[VAR[INT]] PARA[VAR[INT]] +++$+++  INT VAR[INT] PARENTHESESEND CURLYSTART
CALL[java.util.List,remove,1,boolean] PARA[VAR[java.lang.Object]] +++$+++  LEX[Object] VAR[java.lang.Object] PARENTHESESEND CURLYSTART
CALL[java.util.List,get,1,E] PARA[VAR[INT]] +++$+++  VAR[INT] PARENTHESESEND CURLYSTART RETURN
CALL[java.awt.image.BufferedImage,getWidth,0,int] +++$+++  EOL INT VAR[INT] OP[assign]
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Stirng]] +++$+++  TYPE[StringBuilder] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.lang.StringBuilder,toString,0,java.lang.String] +++$+++  PARENTHESESEND EOL LEX[sent.append] PARENTHESESSTART
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND EOL
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Stirng]] +++$+++  ARRAYEND ARRAYEND PARENTHESESEND EOL
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[CALL[java.lang.Object,toString]] +++$+++  LEX[sreturn.append] PARENTHESESSTART PARENTHESESEND EOL
CALL[javax.swing.JButton,setVisible,1,void] PARA[VAR[BOOLEAN]] +++$+++  PARENTHESESSTART VAR[BOOLEAN] PARENTHESESEND EOL
CALL[java.util.Calendar,setTime,1,void] PARA[VAR[java.util.Date]] +++$+++  LEX[Calendar.getInstance] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.util.Calendar,setTime,1,void] PARA[VAR[java.util.Date]] +++$+++  LEX[Calendar.getInstance] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.util.Calendar,set,6,void] PARA[CALL[java.util.Calendar,get]] PARA[CALL[java.util.Calendar,get]] PARA[CALL[java.util.Calendar,get]] PARA[CALL[java.util.Calendar,get]] PARA[CALL[java.util.Calendar,get]] PARA[CALL[java.util.Calendar,get]] +++$+++  LEX[dNow.clear] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.util.Date,compareTo,1,int] PARA[VAR[java.util.Date]] +++$+++  OP[assign] NULL OP[bitwiseOr] OP[bitwiseOr]
CALL[java.awt.Graphics2D,setPaint,1,void] PARA[VAR[java.awt.Color]] +++$+++  VAR[FLOAT] PARENTHESESEND PARENTHESESEND EOL
CALL[java.lang.String,getBytes,1,byte[]] PARA[LIT[Stirng]] +++$+++  LEX[StringUtils.byte2hex] PARENTHESESSTART LEX[cipherEncrypt.doFinal] PARENTHESESSTART
CALL[javax.swing.Action,actionPerformed,1,void] PARA[VAR[java.awt.event.ActionEvent]] +++$+++  LEX[ActionEvent] VAR[java.awt.event.ActionEvent] PARENTHESESEND CURLYSTART
CALL[javax.swing.Timer,stop,0,void] +++$+++  OP[greaterThan] OP[assign] PARENTHESESEND CURLYSTART
CALL[javax.swing.Timer,setRepeats,1,void] PARA[LIT[Boolean]] +++$+++  COMMA NULL PARENTHESESEND EOL
CALL[javax.swing.Timer,start,0,void] +++$+++  LEX[dialog.setOpacity] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.awt.image.BufferedImage,createGraphics,0,java.awt.Graphics2D] +++$+++  EOL TYPE[Graphics2D] VAR[java.awt.Graphics2D] OP[assign]
CALL[java.lang.String,substring,1,java.lang.String] PARA[VAR[INT]] +++$+++  CURLYEND ELSE CURLYSTART RETURN
CALL[java.lang.StringBuilder,toString,0,java.lang.String] +++$+++  EOL CURLYEND CURLYEND RETURN
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  CURLYSTART CHAR VAR[CHAR] OP[assign]
CALL[java.io.InputStream,close,0,void] +++$+++  PARENTHESESSTART VAR[java.io.InputStream] PARENTHESESEND EOL
CALL[java.lang.String,indexOf,1,int] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND CURLYSTART RETURN PARENTHESESSTART
CALL[java.lang.String,indexOf,1,int] PARA[LIT[Stirng]] +++$+++  OP[greaterThan] OP[assign] OP[bitwiseOr] OP[bitwiseOr]
CALL[java.util.Iterator,next,0,E] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[javax.swing.JList,getSelectedValue,0,E] +++$+++  PARENTHESESEND CURLYSTART LEX[jcmdOK.setEnabled] PARENTHESESSTART
CALL[java.util.ArrayList,iterator,0,java.util.Iterator<E>] +++$+++  RETURN NEW TYPE[EnumerationIter] PARENTHESESSTART
CALL[java.util.List,size,0,int] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.util.Set,add,1,boolean] PARA[VAR[java.lang.Object]] +++$+++  LEX[Object] VAR[java.lang.Object] PARENTHESESEND CURLYSTART
CALL[java.io.OutputStream,flush,0,void] +++$+++  VAR[java.io.InputStream] OP[assign] NULL EOL
CALL[java.util.Iterator,hasNext,0,boolean] +++$+++  PARENTHESESEND EOL WHILE PARENTHESESSTART
CALL[java.lang.String,startsWith,1,boolean] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART PARENTHESESEND OP[bitwiseOr] OP[bitwiseOr]
CALL[java.util.Set,add,1,boolean] PARA[LIT[Stirng]] +++$+++  LEX[m_apermissions.add] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.util.HashMap,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.HashMap,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.HashMap,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.HashMap,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.HashMap,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  OP[assign] PARENTHESESSTART BYTE PARENTHESESEND
CALL[java.lang.String,indexOf,1,int] PARA[LIT[Stirng]] +++$+++  EOL ELSE IF PARENTHESESSTART
CALL[java.lang.StringBuffer,length,0,int] +++$+++  OP[bitwiseAnd] OP[bitwiseAnd] VAR[INT] OP[lessThan]
CALL[java.lang.StringBuilder,toString,0,java.lang.String] +++$+++  PARENTHESESEND EOL CURLYEND RETURN
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Character]] +++$+++  PARENTHESESSTART LEX[len--] OP[greaterThan] PARENTHESESEND
CALL[java.lang.String,startsWith,1,boolean] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Stirng]] +++$+++  BREAK EOL CASE OP[ternaryFalse]
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Character]] +++$+++  PARENTHESESSTART PARENTHESESEND EOL ELSE
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Stirng]] +++$+++  IF PARENTHESESSTART VAR[BOOLEAN] PARENTHESESEND
CALL[java.lang.String,length,0,int] +++$+++  VAR[INT] OP[sum] OP[not] OP[assign]
CALL[java.awt.TextArea,getCaretPosition,0,int] +++$+++  PARENTHESESEND EOL VAR[INT] OP[assign]
CALL[java.util.List,iterator,0,java.util.Iterator<E>] +++$+++  TYPE[DisplayManager] OP[greaterThan] VAR[java.util.Iterator] OP[assign]
CALL[java.util.Iterator,next,0,E] +++$+++  CURLYSTART TYPE[DisplayManager] VAR[org.gjt.sp.jedit.textarea.DisplayManager] OP[assign]
CALL[java.awt.Graphics,translate,2,void] PARA[VAR[INT]] PARA[VAR[INT]] +++$+++  INT VAR[INT] PARENTHESESEND CURLYSTART
CALL[java.io.File,exists,0,boolean] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.util.List,contains,1,boolean] PARA[LIT[Boolean]] +++$+++  CURLYSTART RETURN PARENTHESESSTART OP[not]
CALL[java.io.File,renameTo,1,boolean] PARA[VAR[java.io.File]] +++$+++  EOL IF PARENTHESESSTART OP[not]
CALL[java.lang.String,startsWith,1,boolean] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[VAR[CHAR]] +++$+++  BREAK EOL DEFAULT OP[ternaryFalse]
CALL[java.lang.String,substring,2,java.lang.String] PARA[LIT[Integer]] PARA[LIT[Integer]] +++$+++  VAR[INT] OP[assign] LEX[Integer.parseInt] PARENTHESESSTART
CALL[java.lang.String,charAt,1,char] PARA[LIT[Integer]] +++$+++  EOL ELSE IF PARENTHESESSTART
CALL[java.lang.String,length,0,int] +++$+++  PARENTHESESSTART PARENTHESESEND OP[bitwiseAnd] OP[bitwiseAnd]
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Stirng]] +++$+++  OP[sum] OP[sum] PARENTHESESEND CURLYSTART
CALL[java.util.Hashtable,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[org.gjt.sp.jedit.JEditActionContext.E]] +++$+++  PARENTHESESSTART VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.lang.Runnable,run,0,void] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND CURLYSTART
CALL[java.util.Vector,size,0,int] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.StringBuilder,length,0,int] +++$+++  EOL LEX[buf.getChars] PARENTHESESSTART COMMA
CALL[java.lang.String,toCharArray,0,char[]] +++$+++  PARENTHESESEND COMMA VAR[INT] COMMA
CALL[java.awt.Window,removeWindowFocusListener,1,void] PARA[THIS[null]] +++$+++  CURLYEND CURLYEND PARENTHESESEND EOL
CALL[java.util.HashMap,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.HashMap,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.HashMap,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.HashMap,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.HashMap,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.HashMap,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.net.URL,openStream,0,java.io.InputStream] +++$+++  TRY CURLYSTART VAR[java.io.InputStream] OP[assign]
CALL[java.util.Map,remove,1,V] PARA[VAR[org.gjt.sp.jedit.ServiceManager.Descriptor]] +++$+++  COMMA VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.util.List,add,2,void] PARA[VAR[INT]] PARA[VAR[org.gjt.sp.jedit.buffer.JEditBuffer.Listener]] +++$+++  OP[lessThan] VAR[INT] PARENTHESESEND CURLYSTART
CALL[java.lang.CharSequence,charAt,1,char] PARA[VAR[INT]] +++$+++  CURLYSTART CHAR VAR[CHAR] OP[assign]
CALL[java.lang.String,length,0,int] +++$+++  EOL INT VAR[INT] OP[assign]
CALL[java.io.ByteArrayOutputStream,toString,0,java.lang.String] +++$+++  PARENTHESESEND EOL VAR[java.lang.String] OP[assign]
CALL[java.io.File,getPath,0,java.lang.String] +++$+++  PARENTHESESEND EOL CURLYEND RETURN
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Character]] +++$+++  VAR[INT] OP[greaterThan] OP[assign] PARENTHESESEND
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[CALL[java.lang.String,charAt]] +++$+++  OP[ternaryFalse] VAR[INT] OP[assign] EOL
CALL[java.lang.String,replace,2,java.lang.String] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  CURLYSTART TYPE[String] VAR[java.lang.String] OP[assign]
CALL[java.util.StringTokenizer,nextToken,0,java.lang.String] +++$+++  CURLYSTART TYPE[String] VAR[java.lang.String] OP[assign]
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[LIT[Character]] +++$+++  OP[greaterThan] VAR[INT] PARENTHESESEND CURLYSTART
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[VAR[java.lang.String]] +++$+++  OP[sum] OP[sum] EOL CURLYEND
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Character]] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND EOL
CALL[java.util.Deque,size,0,int] +++$+++  PARENTHESESEND EOL WHILE PARENTHESESSTART
CALL[java.util.List,remove,1,boolean] PARA[VAR[java.util.Properties]] +++$+++  LEX[Properties] VAR[java.util.Properties] PARENTHESESEND CURLYSTART
CALL[java.util.Properties,getProperty,1,java.lang.String] PARA[VAR[java.lang.String]] +++$+++  CURLYSTART TYPE[String] VAR[java.lang.String] OP[assign]
CALL[java.lang.String,endsWith,1,boolean] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.lang.StringBuilder,toString,0,java.lang.String] +++$+++  OP[sub] PARENTHESESEND EOL RETURN
CALL[org.gjt.sp.jedit.gui.FilteredTableModel.E,getRowCount,0,int] +++$+++  OP[assign] NULL PARENTHESESEND RETURN
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  CURLYSTART CHAR VAR[CHAR] OP[assign]
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[org.gjt.sp.jedit.gui.DockableWindowFactory.Window]] +++$+++  COMMA VAR[BOOLEAN] PARENTHESESEND EOL
CALL[java.util.Map,get,1,V] PARA[VAR[java.lang.String]] +++$+++  VAR[java.lang.String] PARENTHESESEND CURLYSTART RETURN
CALL[java.awt.Component,getPreferredSize,0,java.awt.Dimension] +++$+++  EOL TYPE[Dimension] VAR[java.awt.Dimension] OP[assign]
CALL[java.awt.Component,getPreferredSize,0,java.awt.Dimension] +++$+++  EOL TYPE[Dimension] VAR[java.awt.Dimension] OP[assign]
CALL[java.awt.Component,getPreferredSize,0,java.awt.Dimension] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND OP[ternaryFalse]
CALL[java.lang.Integer,intValue,0,int] +++$+++  PARENTHESESEND RETURN EOL RETURN
CALL[javax.swing.ListSelectionModel,getMaxSelectionIndex,0,int] +++$+++  EOL INT VAR[INT] OP[assign]
CALL[javax.swing.DefaultListModel,size,0,int] +++$+++  OP[assign] NEW TYPE[String] ARRAYSTART
CALL[java.util.Stack,removeAllElements,0,void] +++$+++  LEX[reset] PARENTHESESSTART PARENTHESESEND CURLYSTART
CALL[java.lang.Class,newInstance,0,T] +++$+++  OP[assign] PARENTHESESSTART TYPE[BshClassManager] PARENTHESESEND
CALL[java.util.Hashtable,put,2,V] PARA[VAR[org.gjt.sp.jedit.bsh.BshClassManager.SignatureKey]] PARA[VAR[java.lang.reflect.Method]] +++$+++  VAR[java.lang.reflect.Method] PARENTHESESEND EOL ELSE
CALL[java.lang.Class,getSuperclass,0,java.lang.Class<? super T>] +++$+++  CURLYSTART CURLYEND VAR[java.lang.Class] OP[assign]
CALL[java.lang.String,substring,2,java.lang.String] PARA[LIT[Integer]] PARA[VAR[INT]] +++$+++  PARENTHESESEND OP[ternaryTrue] VAR[java.lang.String] OP[ternaryFalse]
CALL[java.lang.Class,isPrimitive,0,boolean] +++$+++  PARENTHESESSTART PARENTHESESEND OP[bitwiseAnd] OP[bitwiseAnd]
CALL[java.util.StringTokenizer,hasMoreTokens,0,boolean] +++$+++  PARENTHESESEND EOL WHILE PARENTHESESSTART
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  CURLYSTART CHAR VAR[CHAR] OP[assign]
CALL[javax.swing.JTree,expandPath,1,void] PARA[VAR[javax.swing.tree.TreePath]] +++$+++  VAR[javax.swing.tree.DefaultMutableTreeNode] PARENTHESESEND PARENTHESESEND EOL
CALL[java.awt.Graphics2D,fill,1,void] PARA[VAR[java.awt.geom.Rectangle2D]] +++$+++  PARENTHESESSTART VAR[java.awt.Color] PARENTHESESEND EOL
CALL[java.awt.Graphics2D,setColor,1,void] PARA[VAR[java.awt.Color]] +++$+++  PARENTHESESSTART VAR[java.awt.geom.Rectangle2D] PARENTHESESEND EOL
CALL[java.util.StringTokenizer,hasMoreTokens,0,boolean] +++$+++  PARENTHESESEND EOL WHILE PARENTHESESSTART
CALL[java.lang.Runnable,run,0,void] +++$+++  OP[not] OP[assign] NULL PARENTHESESEND
CALL[javax.swing.JList,setSelectedIndex,1,void] PARA[VAR[INT]] +++$+++  PARENTHESESSTART PARENTHESESEND OP[sub] EOL
CALL[javax.swing.JMenu,add,1,javax.swing.JMenuItem] PARA[VAR[javax.swing.JCheckBoxMenuItem]] +++$+++  PARENTHESESSTART VAR[org.gjt.sp.jedit.browser.BrowserCommandsMenu.ActionHandler] PARENTHESESEND EOL
CALL[javax.swing.JRadioButtonMenuItem,addActionListener,1,void] PARA[VAR[org.gjt.sp.jedit.browser.BrowserCommandsMenu.ActionHandler]] +++$+++  OP[sum] VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.util.StringTokenizer,nextToken,0,java.lang.String] +++$+++  PARENTHESESEND CURLYSTART LEX[jarPaths.add] PARENTHESESSTART
CALL[java.util.Collection,add,1,boolean] PARA[CALL[java.util.StringTokenizer,nextToken]] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND CURLYSTART
CALL[java.util.StringTokenizer,hasMoreTokens,0,boolean] +++$+++  PARENTHESESEND EOL WHILE PARENTHESESSTART
CALL[java.util.Set,size,0,int] +++$+++  PARENTHESESSTART NEW TYPE[String] ARRAYSTART
CALL[java.util.Set,size,0,int] +++$+++  PARENTHESESSTART NEW TYPE[String] ARRAYSTART
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Character]] +++$+++  EOL CURLYEND ELSE CURLYSTART
CALL[java.lang.StringBuilder,length,0,int] +++$+++  PARENTHESESEND EOL LEX[sb.append] PARENTHESESSTART
CALL[java.lang.String,split,1,java.lang.String[]] PARA[LIT[Stirng]] +++$+++  ARRAYSTART ARRAYEND VAR[java.lang.String] OP[assign]
CALL[java.util.List,isEmpty,0,boolean] +++$+++  OP[assign] NULL OP[bitwiseOr] OP[bitwiseOr]
CALL[java.util.Map,entrySet,0,java.util.Set<java.util.Map.Entry<K, V>>] +++$+++  OP[greaterThan] OP[greaterThan] VAR[java.util.Set] OP[assign]
CALL[java.lang.String,replace,2,java.lang.String] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  COMMA PARENTHESESEND EOL RETURN
CALL[java.lang.String,indexOf,2,int] PARA[LIT[Stirng]] PARA[VAR[INT]] +++$+++  CURLYSTART INT VAR[INT] OP[assign]
CALL[java.lang.String,substring,2,java.lang.String] PARA[LIT[Integer]] PARA[VAR[INT]] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND RETURN
CALL[java.util.ListIterator,hasNext,0,boolean] +++$+++  LEX[oldNodes.listIterator] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.util.ListIterator,hasNext,0,boolean] +++$+++  LEX[outline.listIterator] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.lang.String,lastIndexOf,1,int] PARA[LIT[Character]] +++$+++  RETURN LEX[sourceFile.substring] PARENTHESESSTART COMMA
CALL[java.lang.String,substring,2,java.lang.String] PARA[LIT[Integer]] PARA[VAR[INT]] +++$+++  CURLYSTART TYPE[String] VAR[java.lang.String] OP[assign]
CALL[java.lang.String,length,0,int] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[VAR[CHAR]] +++$+++  OP[assign] OP[assign] PARENTHESESEND CURLYSTART
CALL[java.util.Properties,size,0,int] +++$+++  OP[assign] NEW TYPE[String] ARRAYSTART
CALL[java.lang.String,substring,1,java.lang.String] PARA[LIT[Integer]] +++$+++  PARENTHESESEND EOL LEX[sb.append] PARENTHESESSTART
CALL[java.util.List,add,1,boolean] PARA[CALL[java.lang.StringBuffer,toString]] +++$+++  PARENTHESESEND PARENTHESESEND PARENTHESESEND EOL
CALL[java.io.ByteArrayOutputStream,toString,0,java.lang.String] +++$+++  OP[assign] NEW TYPE[StringTokenizer] PARENTHESESSTART
CALL[java.lang.String,lastIndexOf,1,int] PARA[LIT[Character]] +++$+++  EOL INT VAR[INT] OP[assign]
CALL[java.lang.String,length,0,int] +++$+++  EOL VAR[INT] OP[sub] OP[assign]
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  OP[bitwiseAnd] PARENTHESESSTART LEX[Character.isWhitespace] PARENTHESESSTART
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  PARENTHESESEND OP[bitwiseAnd] OP[bitwiseAnd] PARENTHESESSTART
CALL[java.lang.StringBuilder,append,3,java.lang.StringBuilder] PARA[VAR[CHAR]] PARA[LIT[Integer]] PARA[VAR[INT]] +++$+++  VAR[INT] OP[greaterThan] PARENTHESESEND CURLYSTART
CALL[java.lang.String,endsWith,1,boolean] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART PARENTHESESEND EOL RETURN
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Character]] +++$+++  BREAK EOL CASE OP[ternaryFalse]
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Character]] +++$+++  BREAK EOL CASE OP[ternaryFalse]
CALL[java.util.Map,get,1,V] PARA[VAR[edu.umd.cs.findbugs.util.MergeMap.K]] +++$+++  VAR[edu.umd.cs.findbugs.util.MergeMap.K] PARENTHESESEND CURLYSTART RETURN
CALL[java.util.StringTokenizer,nextToken,0,java.lang.String] +++$+++  CURLYSTART TYPE[String] VAR[java.lang.String] OP[assign]
CALL[java.lang.Integer,intValue,0,int] +++$+++  OP[assign] NULL OP[bitwiseOr] OP[bitwiseOr]
CALL[java.util.Map,remove,1,V] PARA[VAR[edu.umd.cs.findbugs.util.Multiset.K]] +++$+++  OP[assign] OP[assign] PARENTHESESEND CURLYSTART
CALL[java.util.Map,entrySet,0,java.util.Set<java.util.Map.Entry<K, V>>] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.RuntimeException,printStackTrace,0,void] +++$+++  TYPE[RuntimeException] VAR[java.lang.RuntimeException] PARENTHESESEND CURLYSTART
CALL[java.io.InputStream,reset,0,void] +++$+++  EOL CURLYEND FINALLY CURLYSTART
CALL[java.io.BufferedReader,readLine,0,java.lang.String] +++$+++  PARENTHESESEND CURLYSTART VAR[java.lang.String] OP[assign]
CALL[java.lang.String,length,0,int] +++$+++  VAR[INT] OP[assign] LEX[Math.min] PARENTHESESSTART
CALL[java.lang.String,lastIndexOf,1,int] PARA[LIT[Character]] +++$+++  CURLYSTART INT VAR[INT] OP[assign]
CALL[java.util.Map,keySet,0,java.util.Set<K>] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.util.Map,put,2,V] PARA[VAR[edu.umd.cs.findbugs.util.Bag.E]] PARA[VAR[INT]] +++$+++  OP[assign] NULL PARENTHESESEND CURLYSTART
CALL[java.util.Map,get,1,V] PARA[VAR[java.lang.String]] +++$+++  VAR[java.lang.String] PARENTHESESEND CURLYSTART RETURN
CALL[java.util.Collection,add,1,boolean] PARA[CALL[java.util.Iterator,next]] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND CURLYSTART
CALL[java.lang.String,lastIndexOf,1,int] PARA[LIT[Character]] +++$+++  CURLYSTART INT VAR[INT] OP[assign]
CALL[java.util.Map,remove,1,V] PARA[VAR[java.net.URI]] +++$+++  LEX[URI] VAR[java.net.URI] PARENTHESESEND CURLYSTART
CALL[java.util.Map,put,2,V] PARA[VAR[java.net.URI]] PARA[VAR[edu.umd.cs.findbugs.Plugin]] +++$+++  VAR[edu.umd.cs.findbugs.Plugin] PARENTHESESEND CURLYSTART RETURN
CALL[java.util.List,add,1,boolean] PARA[VAR[edu.umd.cs.findbugs.ResourceCollection.Resource]] +++$+++  LEX[Resource] VAR[edu.umd.cs.findbugs.ResourceCollection.Resource] PARENTHESESEND CURLYSTART
CALL[java.lang.String,length,0,int] +++$+++  PARENTHESESEND CURLYSTART VAR[INT] OP[assign]
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESSTART VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.util.Set,add,1,boolean] PARA[VAR[java.lang.String]] +++$+++  STRING VAR[java.lang.String] PARENTHESESEND CURLYSTART
CALL[java.lang.String,length,0,int] +++$+++  VAR[INT] OP[assign] LEX[Math.min] PARENTHESESSTART
CALL[java.util.LinkedList,iterator,0,java.util.Iterator<E>] +++$+++  TYPE[String] OP[greaterThan] VAR[java.util.Iterator] OP[assign]
CALL[java.lang.String,equals,1,boolean] PARA[CALL[java.util.Iterator,next]] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.lang.String,equals,1,boolean] PARA[FIELD[edu.umd.cs.findbugs.AnalysisError]] +++$+++  ELSE IF PARENTHESESSTART OP[not]
CALL[edu.umd.cs.findbugs.ba.jsr305.FlowValue,ordinal,0,int] +++$+++  CURLYSTART INT VAR[INT] OP[assign]
CALL[java.lang.ThreadLocal,remove,0,void] +++$+++  LEX[clearInstance] PARENTHESESSTART PARENTHESESEND CURLYSTART
CALL[java.util.Set,add,1,boolean] PARA[VAR[edu.umd.cs.findbugs.ba.AnnotationDatabase.AnnotationEnum]] +++$+++  COMMA VAR[edu.umd.cs.findbugs.ba.AnnotationDatabase.AnnotationEnum] PARENTHESESEND EOL
CALL[java.util.Map,get,1,V] PARA[VAR[java.lang.Object]] +++$+++  VAR[java.lang.Object] PARENTHESESEND CURLYSTART RETURN
CALL[java.util.HashMap,put,2,V] PARA[VAR[java.lang.String]] PARA[CALL[null,valueOf]] +++$+++  BOOLEAN VAR[BOOLEAN] PARENTHESESEND CURLYSTART
CALL[java.util.Map,put,2,V] PARA[VAR[edu.umd.cs.findbugs.ba.interproc.PropertyDatabase.KeyType]] PARA[VAR[edu.umd.cs.findbugs.ba.interproc.PropertyDatabase.ValueType]] +++$+++  LEX[ValueType] VAR[edu.umd.cs.findbugs.ba.interproc.PropertyDatabase.ValueType] PARENTHESESEND CURLYSTART
CALL[java.util.Map,get,1,V] PARA[VAR[edu.umd.cs.findbugs.ba.interproc.PropertyDatabase.KeyType]] +++$+++  VAR[edu.umd.cs.findbugs.ba.interproc.PropertyDatabase.KeyType] PARENTHESESEND CURLYSTART RETURN
CALL[java.util.Map,isEmpty,0,boolean] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND EOL
CALL[java.lang.String,replaceAll,2,java.lang.String] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND CURLYSTART VAR[java.lang.String] OP[assign]
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART VAR[BOOLEAN] PARENTHESESEND CURLYSTART
CALL[java.lang.StringBuilder,toString,0,java.lang.String] +++$+++  CURLYEND CURLYEND CURLYEND RETURN
CALL[java.lang.String,substring,2,java.lang.String] PARA[LIT[Integer]] PARA[VAR[INT]] +++$+++  OP[assign] NEW TYPE[StringBuilder] PARENTHESESSTART
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  CURLYEND CHAR VAR[CHAR] OP[assign]
CALL[java.lang.String,replace,2,java.lang.String] PARA[LIT[Character]] PARA[LIT[Character]] +++$+++  CURLYSTART TYPE[String] VAR[java.lang.String] OP[assign]
CALL[java.lang.String,substring,2,java.lang.String] PARA[LIT[Integer]] PARA[VAR[INT]] +++$+++  PARENTHESESEND CURLYSTART VAR[java.lang.String] OP[assign]
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Character]] +++$+++  TYPE[StringBuilder] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Character]] +++$+++  EOL CURLYEND ELSE CURLYSTART
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Character]] +++$+++  PARENTHESESSTART VAR[INT] PARENTHESESEND EOL
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Stirng]] +++$+++  OP[assign] VAR[INT] PARENTHESESEND CURLYSTART
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Character]] +++$+++  PARENTHESESEND EOL CURLYEND CURLYEND
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Character]] +++$+++  PARENTHESESEND OP[greaterThan] PARENTHESESEND CURLYSTART
CALL[java.util.BitSet,set,2,void] PARA[VAR[INT]] PARA[VAR[INT]] +++$+++  OP[assign] VAR[INT] PARENTHESESEND CURLYSTART
CALL[java.util.BitSet,get,1,boolean] PARA[VAR[INT]] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.util.BitSet,hashCode,0,int] +++$+++  LEX[exceptionSet.hashCode] PARENTHESESSTART PARENTHESESEND OP[sum]
CALL[java.util.HashSet,iterator,0,java.util.Iterator<E>] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.io.PushbackReader,read,0,int] +++$+++  PARENTHESESEND CURLYSTART VAR[INT] OP[assign]
CALL[java.io.PushbackReader,unread,1,void] PARA[VAR[INT]] +++$+++  OP[assign] OP[assign] PARENTHESESEND CURLYSTART
CALL[java.io.PushbackReader,read,0,int] +++$+++  CURLYSTART INT VAR[INT] OP[assign]
CALL[java.util.Set,contains,1,boolean] PARA[CALL[java.lang.String,trim]] +++$+++  VAR[java.lang.String] PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND EOL
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART PARENTHESESEND EOL CURLYEND
CALL[java.util.Map,entrySet,0,java.util.Set<java.util.Map.Entry<K, V>>] +++$+++  TYPE[Object] OP[greaterThan] VAR[java.util.Map.Entry] OP[ternaryFalse]
CALL[java.util.Iterator,hasNext,0,boolean] +++$+++  LEX[orig.edgeIterator] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.io.BufferedReader,close,0,void] +++$+++  OP[assign] NULL PARENTHESESEND CURLYSTART
CALL[java.util.Collection,add,1,boolean] PARA[VAR[java.lang.String]] +++$+++  EOL RETURN EOL CURLYEND
CALL[java.io.PrintStream,print,1,void] PARA[LIT[Stirng]] +++$+++  EOL CURLYEND ELSE CURLYSTART
CALL[java.lang.String,charAt,1,char] PARA[LIT[Integer]] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.net.URL,toURI,0,java.net.URI] +++$+++  CURLYSTART TRY CURLYSTART RETURN
CALL[java.net.URL,getPath,0,java.lang.String] +++$+++  CURLYSTART TYPE[String] VAR[java.lang.String] OP[assign]
CALL[java.net.URL,getPath,0,java.lang.String] +++$+++  CURLYSTART TYPE[String] VAR[java.lang.String] OP[assign]
CALL[java.lang.String,endsWith,1,boolean] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART PARENTHESESEND OP[bitwiseOr] OP[bitwiseOr]
CALL[java.net.URL,toString,0,java.lang.String] +++$+++  RETURN NEW TYPE[URL] PARENTHESESSTART
CALL[javax.swing.JButton,setCursor,1,void] PARA[CALL[null,getPredefinedCursor]] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND EOL
CALL[java.net.URL,toURI,0,java.net.URI] +++$+++  CURLYSTART RETURN LEX[customPlugins.add] PARENTHESESSTART
CALL[javax.swing.event.TableColumnModelEvent,getToIndex,0,int] +++$+++  PARENTHESESSTART PARENTHESESEND OP[assign] OP[assign]
CALL[java.util.ArrayList,iterator,0,java.util.Iterator<E>] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[VAR[CHAR]] +++$+++  CURLYSTART BREAK EOL CURLYEND
CALL[javax.swing.text.Segment,next,0,char] +++$+++  PARENTHESESEND PARENTHESESEND CURLYSTART RETURN
CALL[java.util.Enumeration,hasMoreElements,0,boolean] +++$+++  PARENTHESESEND EOL WHILE PARENTHESESSTART
CALL[java.lang.StringBuffer,toString,0,java.lang.String] +++$+++  PARENTHESESEND EOL CURLYEND RETURN
CALL[java.lang.String,compareTo,1,int] PARA[VAR[java.lang.String]] +++$+++  VAR[java.lang.String] PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.String,getBytes,1,byte[]] PARA[LIT[Stirng]] +++$+++  CURLYSTART TRY CURLYSTART RETURN
CALL[java.nio.ByteBuffer,order,1,java.nio.ByteBuffer] PARA[CALL[null,nativeOrder]] +++$+++  PARENTHESESSTART VAR[INT] PARENTHESESEND EOL
CALL[java.io.RandomAccessFile,seek,1,void] PARA[LIT[Integer]] +++$+++  EOL CURLYEND TRY CURLYSTART
CALL[java.lang.Object,wait,0,void] +++$+++  PARENTHESESEND CURLYSTART TRY CURLYSTART
CALL[java.io.RandomAccessFile,readFloat,0,float] +++$+++  VAR[FLOAT] ARRAYSTART ARRAYEND OP[assign]
CALL[java.io.RandomAccessFile,readFloat,0,float] +++$+++  VAR[FLOAT] ARRAYSTART ARRAYEND OP[assign]
CALL[java.lang.String,equals,1,boolean] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESEND OP[bitwiseAnd] OP[bitwiseAnd] OP[not]
CALL[java.lang.String,length,0,int] +++$+++  CURLYSTART INT VAR[INT] OP[assign]
CALL[java.util.StringTokenizer,hasMoreTokens,0,boolean] +++$+++  EOL IF PARENTHESESSTART OP[not]
CALL[java.lang.String,equals,1,boolean] PARA[LIT[Stirng]] +++$+++  EOL CURLYEND IF PARENTHESESSTART
CALL[java.lang.StringBuffer,setLength,1,void] PARA[LIT[Integer]] +++$+++  VAR[jake2.qcommon.Com.RD_Flusher] OP[assign] VAR[jake2.qcommon.Com.RD_Flusher] EOL
CALL[java.lang.String,contains,1,boolean] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.lang.String,equals,1,boolean] PARA[LIT[Stirng]] +++$+++  EOL ELSE IF PARENTHESESSTART
CALL[java.io.FileOutputStream,write,1,void] PARA[VAR[INT]] +++$+++  PARENTHESESSTART VAR[INT] PARENTHESESEND EOL
CALL[java.awt.event.ActionEvent,getSource,0,java.lang.Object] +++$+++  PARENTHESESSTART TYPE[JList] PARENTHESESEND PARENTHESESSTART
CALL[javax.swing.JTable,repaint,0,void] +++$+++  ARRAYEND OP[assign] VAR[java.lang.String] EOL
CALL[javax.swing.event.ListSelectionEvent,getValueIsAdjusting,0,boolean] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[javax.swing.ListSelectionModel,getMinSelectionIndex,0,int] +++$+++  CURLYSTART INT VAR[INT] OP[assign]
CALL[javax.swing.JTable,repaint,0,void] +++$+++  ARRAYEND OP[assign] LEX[false] EOL
CALL[java.lang.Class,newInstance,0,T] +++$+++  CURLYSTART TRY CURLYSTART RETURN
CALL[java.util.ArrayList,size,0,int] +++$+++  OP[assign] EOL VAR[INT] OP[lessThan]
CALL[java.util.ArrayList,add,1,boolean] PARA[VAR[org.h2.java.MethodObj]] +++$+++  CURLYEND ELSE CURLYSTART CURLYEND
CALL[java.lang.String,equals,1,boolean] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART PARENTHESESEND OP[bitwiseOr] OP[bitwiseOr]
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  CURLYEND ELSE IF PARENTHESESSTART
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  EOL CURLYEND IF PARENTHESESSTART
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  OP[assign] OP[assign] OP[bitwiseOr] OP[bitwiseOr]
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  EOL CURLYEND IF PARENTHESESSTART
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  OP[assign] OP[assign] OP[bitwiseOr] OP[bitwiseOr]
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Character]] +++$+++  OP[sum] OP[sum] PARENTHESESEND CURLYSTART
CALL[java.lang.StringBuilder,toString,0,java.lang.String] +++$+++  PARENTHESESEND EOL CURLYEND RETURN
CALL[java.awt.image.BufferedImage,getWidth,0,int] +++$+++  CURLYSTART INT VAR[INT] OP[assign]
CALL[java.lang.String,substring,2,java.lang.String] PARA[LIT[Integer]] PARA[LIT[Integer]] +++$+++  PARENTHESESEND CURLYSTART VAR[java.lang.String] OP[assign]
CALL[java.lang.String,length,0,int] +++$+++  PARENTHESESSTART INT VAR[INT] OP[assign]
CALL[java.io.OutputStream,write,1,void] PARA[VAR[BYTE]] +++$+++  PARENTHESESSTART VAR[BOOLEAN] PARENTHESESEND CURLYSTART
CALL[java.io.PrintStream,println,1,void] PARA[VAR[java.lang.String]] +++$+++  OP[not] VAR[BOOLEAN] PARENTHESESEND CURLYSTART
CALL[java.lang.String,length,0,int] +++$+++  OP[assign] LEX[s.substring] PARENTHESESSTART COMMA
CALL[java.lang.String,lastIndexOf,1,int] PARA[LIT[Character]] +++$+++  EOL INT VAR[INT] OP[assign]
CALL[java.lang.String,length,0,int] +++$+++  OP[assign] LEX[s.substring] PARENTHESESSTART COMMA
CALL[java.io.File,mkdirs,0,boolean] +++$+++  CURLYSTART IF PARENTHESESSTART OP[not]
CALL[java.util.concurrent.atomic.AtomicBoolean,getAndSet,1,boolean] PARA[LIT[Boolean]] +++$+++  OP[greaterThan] VAR[INT] OP[bitwiseAnd] OP[bitwiseAnd]
CALL[java.util.zip.Deflater,setInput,1,void] PARA[VAR[BYTE]] +++$+++  PARENTHESESSTART LEX[Deflater.HUFFMAN_ONLY] PARENTHESESEND EOL
CALL[java.util.zip.Deflater,finish,0,void] +++$+++  PARENTHESESSTART VAR[BYTE] PARENTHESESEND EOL
CALL[java.util.zip.Inflater,inflate,1,int] PARA[VAR[BYTE]] +++$+++  CURLYSTART INT VAR[INT] OP[assign]
CALL[java.util.zip.Inflater,finished,0,boolean] +++$+++  CURLYSTART WHILE PARENTHESESSTART OP[not]
CALL[java.io.File,getAbsolutePath,0,java.lang.String] +++$+++  PARENTHESESEND CURLYSTART LEX[files.add] PARENTHESESSTART
CALL[java.io.InputStream,read,0,int] +++$+++  CURLYSTART LONG VAR[LONG] OP[assign]
CALL[java.lang.Object,toString,0,java.lang.String] +++$+++  CURLYEND RETURN LEX[ValueString.get] PARENTHESESSTART
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Character]] +++$+++  COMMA VAR[LONG] PARENTHESESEND EOL
CALL[java.lang.StringBuilder,deleteCharAt,1,java.lang.StringBuilder] PARA[VAR[INT]] +++$+++  CURLYSTART BREAK EOL CURLYEND
CALL[java.lang.String,length,0,int] +++$+++  OP[assign] NULL OP[bitwiseAnd] OP[bitwiseAnd]
CALL[java.lang.String,length,0,int] +++$+++  PARENTHESESSTART PARENTHESESEND OP[lessThan] OP[assign]
CALL[java.lang.String,isEmpty,0,boolean] +++$+++  CURLYEND IF PARENTHESESSTART OP[not]
CALL[java.lang.String,length,0,int] +++$+++  OP[assign] NULL OP[bitwiseAnd] OP[bitwiseAnd]
CALL[java.util.Date,getTime,0,long] +++$+++  PARENTHESESEND EOL LEX[c.setTimeInMillis] PARENTHESESSTART
CALL[java.util.Calendar,setTimeInMillis,1,void] PARA[CALL[java.util.Date,getTime]] +++$+++  LEX[Calendar.getInstance] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.util.Calendar,setMinimalDaysInFirstWeek,1,void] PARA[LIT[Integer]] +++$+++  PARENTHESESSTART LEX[Calendar.MONDAY] PARENTHESESEND EOL
CALL[java.util.HashMap,clear,0,void] +++$+++  COMMA VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.util.Map,remove,1,V] PARA[VAR[java.lang.Object]] +++$+++  CURLYEND TYPE[Object] VAR[java.lang.Object] OP[assign]
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND CURLYSTART CASE OP[ternaryFalse]
CALL[java.lang.String,length,0,int] +++$+++  LEX[Math.min] PARENTHESESSTART VAR[INT] COMMA
CALL[java.lang.String,length,0,int] +++$+++  OP[assign] COMMA VAR[INT] OP[assign]
CALL[java.lang.String,length,0,int] +++$+++  OP[assign] VAR[INT] OP[lessThan] OP[ternaryTrue]
CALL[java.lang.String,length,0,int] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.lang.reflect.Method,invoke,1,java.lang.Object] PARA[VAR[java.lang.Object]] +++$+++  OP[assign] PARENTHESESSTART TYPE[Integer] PARENTHESESEND
CALL[java.lang.reflect.Method,invoke,1,java.lang.Object] PARA[VAR[java.lang.Object]] +++$+++  RETURN PARENTHESESSTART TYPE[Long] PARENTHESESEND
CALL[java.lang.Thread,join,0,void] +++$+++  EOL CURLYEND TRY CURLYSTART
CALL[java.lang.String,indexOf,1,int] PARA[LIT[Character]] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.net.InetAddress,getHostAddress,0,java.lang.String] +++$+++  EOL TYPE[String] VAR[java.lang.String] OP[assign]
CALL[java.lang.String,indexOf,1,int] PARA[LIT[Character]] +++$+++  CURLYSTART INT VAR[INT] OP[assign]
CALL[java.lang.Runtime,gc,0,void] +++$+++  OP[sum] OP[sum] PARENTHESESEND CURLYSTART
CALL[java.util.ArrayList,add,1,boolean] PARA[VAR[java.lang.String]] +++$+++  OP[assign] NULL PARENTHESESEND CURLYSTART
CALL[java.nio.CharBuffer,capacity,0,int] +++$+++  INT PARENTHESESEND LEX[Math.min] PARENTHESESSTART
CALL[java.nio.ByteBuffer,position,0,int] +++$+++  PARENTHESESSTART VAR[BOOLEAN] OP[bitwiseAnd] OP[bitwiseAnd]
CALL[java.lang.String,equalsIgnoreCase,1,boolean] PARA[LIT[Stirng]] +++$+++  OP[assign] NULL OP[bitwiseOr] OP[bitwiseOr]
CALL[java.nio.channels.FileChannel,close,0,void] +++$+++  PARENTHESESEND THROWS LEX[IOException] CURLYSTART
CALL[java.nio.channels.FileChannel,write,1,int] PARA[VAR[java.nio.ByteBuffer]] +++$+++  LEX[IOException] CURLYSTART DO CURLYSTART
CALL[java.nio.channels.FileChannel,read,2,int] PARA[VAR[java.nio.ByteBuffer]] PARA[VAR[LONG]] +++$+++  EOL INT VAR[INT] OP[assign]
CALL[java.util.HashMap,clear,0,void] +++$+++  LEX[closeAll] PARENTHESESSTART PARENTHESESEND CURLYSTART
CALL[java.lang.Object,equals,1,boolean] PARA[VAR[java.lang.Object]] +++$+++  ELSE IF PARENTHESESSTART OP[not]
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART VAR[BOOLEAN] PARENTHESESEND CURLYSTART
CALL[java.lang.String,endsWith,1,boolean] PARA[LIT[Stirng]] +++$+++  OP[assign] NULL OP[bitwiseAnd] OP[bitwiseAnd]
CALL[java.nio.ByteBuffer,get,1,java.nio.ByteBuffer] PARA[VAR[BYTE]] +++$+++  ARRAYEND VAR[BYTE] PARENTHESESEND CURLYSTART
CALL[java.nio.ByteBuffer,putInt,2,java.nio.ByteBuffer] PARA[VAR[INT]] PARA[VAR[INT]] +++$+++  INT VAR[INT] PARENTHESESEND CURLYSTART
CALL[java.util.Map,containsKey,1,boolean] PARA[VAR[LONG]] +++$+++  EOL IF PARENTHESESSTART OP[not]
CALL[java.io.DataInputStream,readFully,1,void] PARA[VAR[BYTE]] +++$+++  PARENTHESESEND THROWS LEX[IOException] CURLYSTART
CALL[java.io.DataOutputStream,write,1,void] PARA[VAR[BYTE]] +++$+++  PARENTHESESEND THROWS LEX[IOException] CURLYSTART
CALL[java.io.DataOutputStream,write,1,void] PARA[VAR[INT]] +++$+++  PARENTHESESEND THROWS LEX[IOException] CURLYSTART
CALL[java.io.DataOutputStream,flush,0,void] +++$+++  PARENTHESESEND THROWS LEX[IOException] CURLYSTART
CALL[java.io.DataOutputStream,write,1,void] PARA[VAR[BYTE]] +++$+++  VAR[INT] OP[sum] PARENTHESESEND EOL
CALL[java.util.Properties,getProperty,1,java.lang.String] PARA[LIT[Stirng]] +++$+++  VAR[INT] OP[assign] LEX[Integer.parseInt] PARENTHESESSTART
CALL[java.lang.String,substring,1,java.lang.String] PARA[VAR[INT]] +++$+++  PARENTHESESEND CURLYSTART LEX[result.append] PARENTHESESSTART
CALL[java.lang.String,substring,2,java.lang.String] PARA[LIT[Integer]] PARA[VAR[INT]] +++$+++  EOL TYPE[String] VAR[java.lang.String] OP[assign]
CALL[java.lang.String,length,0,int] +++$+++  OP[assign] NEW TYPE[StringBuilder] PARENTHESESSTART
CALL[java.util.List,remove,1,boolean] PARA[LIT[Stirng]] +++$+++  EOL BOOLEAN VAR[BOOLEAN] OP[assign]
CALL[java.lang.String,startsWith,1,boolean] PARA[LIT[Stirng]] +++$+++  CURLYSTART IF PARENTHESESSTART OP[not]
CALL[java.util.HashMap,get,1,V] PARA[VAR[java.lang.String]] +++$+++  VAR[java.lang.String] PARENTHESESEND CURLYSTART RETURN
CALL[java.io.DataInputStream,readLong,0,long] +++$+++  THROWS LEX[IOException] CURLYSTART RETURN
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  PARENTHESESEND CURLYSTART LEX[out.writeChar] PARENTHESESSTART
CALL[java.io.DataInputStream,readInt,0,int] +++$+++  CURLYSTART INT VAR[INT] OP[assign]
CALL[java.lang.String,equals,1,boolean] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.lang.Thread,isAlive,0,boolean] +++$+++  OP[assign] NULL OP[bitwiseAnd] OP[bitwiseAnd]
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESSTART PARENTHESESEND EOL CURLYEND
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Character]] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND EOL
CALL[java.lang.String,lastIndexOf,1,int] PARA[LIT[Character]] +++$+++  CURLYSTART INT VAR[INT] OP[assign]
CALL[java.lang.String,substring,2,java.lang.String] PARA[LIT[Integer]] PARA[CALL[java.lang.String,indexOf]] +++$+++  PARENTHESESEND CURLYSTART VAR[java.lang.String] OP[assign]
CALL[java.lang.String,indexOf,1,int] PARA[LIT[Character]] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.lang.String,length,0,int] +++$+++  EOL INT VAR[INT] OP[assign]
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  PARENTHESESEND EOL VAR[CHAR] OP[assign]
CALL[java.awt.Component,getFontMetrics,1,java.awt.FontMetrics] PARA[CALL[java.awt.Component,getFont]] +++$+++  CURLYSTART TYPE[FontMetrics] VAR[java.awt.FontMetrics] OP[assign]
CALL[java.io.File,exists,0,boolean] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.io.File,getAbsolutePath,0,java.lang.String] +++$+++  PARENTHESESEND PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.String,contains,1,boolean] PARA[LIT[Stirng]] +++$+++  VAR[java.lang.String] PARENTHESESEND EOL RETURN
CALL[java.util.ArrayList,toArray,1,T[]] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESSTART PARENTHESESEND ARRAYEND EOL
CALL[java.lang.String,equalsIgnoreCase,1,boolean] PARA[LIT[Stirng]] +++$+++  CURLYEND ELSE IF PARENTHESESSTART
CALL[java.util.regex.Matcher,find,0,boolean] +++$+++  VAR[java.lang.String] PARENTHESESEND EOL RETURN
CALL[java.lang.String,matches,1,boolean] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.lang.String,endsWith,1,boolean] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND OP[bitwiseAnd] OP[bitwiseAnd] OP[not]
CALL[java.lang.String,contains,1,boolean] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.util.regex.Pattern,matcher,1,java.util.regex.Matcher] PARA[VAR[java.lang.String]] +++$+++  EOL TYPE[Matcher] VAR[java.util.regex.Matcher] OP[assign]
CALL[java.lang.String,replace,2,java.lang.String] PARA[LIT[Character]] PARA[LIT[Character]] +++$+++  PARENTHESESEND CURLYSTART VAR[java.lang.String] OP[assign]
CALL[java.lang.String,replace,2,java.lang.String] PARA[LIT[Character]] PARA[LIT[Character]] +++$+++  PARENTHESESEND EOL VAR[java.lang.String] OP[assign]
CALL[java.io.File,getName,0,java.lang.String] +++$+++  VAR[java.lang.String] OP[assign] LEX[FileUtil.renameForSorting] PARENTHESESSTART
CALL[java.util.Properties,clear,0,void] +++$+++  LEX[clear] PARENTHESESSTART PARENTHESESEND CURLYSTART
CALL[java.awt.ComponentOrientation,isLeftToRight,0,boolean] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.lang.String,split,1,java.lang.String[]] PARA[LIT[Stirng]] +++$+++  ARRAYSTART ARRAYEND VAR[java.lang.String] OP[assign]
CALL[java.util.ArrayList,toArray,1,T[]] PARA[VAR[java.io.File]] +++$+++  PARENTHESESSTART PARENTHESESEND ARRAYEND EOL
CALL[java.io.File,exists,0,boolean] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[javax.swing.JSpinner,getValue,0,java.lang.Object] +++$+++  PARENTHESESSTART PARENTHESESSTART TYPE[Integer] PARENTHESESEND
CALL[java.awt.event.ItemEvent,getStateChange,0,int] +++$+++  CURLYSTART LEX[configuration.setImageThumbnailsEnabled] PARENTHESESSTART PARENTHESESSTART
CALL[java.awt.event.ItemEvent,getStateChange,0,int] +++$+++  CURLYSTART LEX[configuration.setDisableSubtitles] PARENTHESESSTART PARENTHESESSTART
CALL[java.awt.event.ItemEvent,getStateChange,0,int] +++$+++  PARENTHESESEND CURLYSTART LEX[configuration.setAudioUsePCM] PARENTHESESSTART
CALL[java.awt.event.ItemEvent,getStateChange,0,int] +++$+++  CURLYSTART LEX[configuration.setAudioRemuxAC3] PARENTHESESSTART PARENTHESESSTART
CALL[java.awt.event.ItemEvent,getStateChange,0,int] +++$+++  EOL LEX[ac3remux.setEnabled] PARENTHESESSTART PARENTHESESSTART
CALL[java.awt.event.ItemEvent,getStateChange,0,int] +++$+++  CURLYSTART LEX[configuration.setAutoloadExternalSubtitles] PARENTHESESSTART PARENTHESESSTART
CALL[java.lang.String,equalsIgnoreCase,1,boolean] PARA[LIT[Stirng]] +++$+++  EOL CURLYEND IF PARENTHESESSTART
CALL[java.io.File,getParentFile,0,java.io.File] +++$+++  CURLYSTART RETURN LEX[folder.equals] PARENTHESESSTART
CALL[javax.swing.JTextField,getText,0,java.lang.String] +++$+++  PARENTHESESEND CURLYSTART LEX[configuration.setServerName] PARENTHESESSTART
CALL[java.awt.event.ItemEvent,getStateChange,0,int] +++$+++  CURLYSTART LEX[configuration.setAppendProfileName] PARENTHESESSTART PARENTHESESSTART
CALL[java.lang.Exception,toString,0,java.lang.String] +++$+++  LEX[Messages.getString] PARENTHESESSTART PARENTHESESEND OP[sum]
CALL[javax.swing.JTextField,getText,0,java.lang.String] +++$+++  PARENTHESESEND CURLYSTART LEX[configuration.setHostname] PARENTHESESSTART
CALL[java.awt.event.ItemEvent,getStateChange,0,int] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[javax.swing.JScrollBar,addAdjustmentListener,1,void] PARA[THIS[null]] +++$+++  PARENTHESESSTART VAR[INT] PARENTHESESEND EOL
CALL[javax.swing.JScrollBar,removeAdjustmentListener,1,void] PARA[THIS[null]] +++$+++  OP[assign] VAR[INT] PARENTHESESEND CURLYSTART
CALL[javax.swing.JToolTip,setComponent,1,void] PARA[THIS[null]] +++$+++  TYPE[HyperLinkToolTip] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.io.File,equals,1,boolean] PARA[VAR[java.io.File]] +++$+++  VAR[java.io.File] PARENTHESESEND CURLYSTART RETURN
CALL[javax.swing.JFrame,setVisible,1,void] PARA[LIT[Boolean]] +++$+++  COMMA LEX[JOptionPane.ERROR_MESSAGE] PARENTHESESEND EOL
CALL[java.lang.String,equals,1,boolean] PARA[VAR[java.lang.String]] +++$+++  VAR[java.lang.String] PARENTHESESEND OP[bitwiseOr] OP[bitwiseOr]
CALL[java.lang.String,endsWith,1,boolean] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART PARENTHESESEND OP[ternaryTrue] OP[ternaryFalse]
CALL[java.util.List,toArray,1,T[]] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESSTART PARENTHESESEND ARRAYEND EOL
CALL[java.io.InputStream,close,0,void] +++$+++  PARENTHESESEND THROWS LEX[IOException] CURLYSTART
CALL[java.io.InputStream,markSupported,0,boolean] +++$+++  LEX[IOException] CURLYSTART IF PARENTHESESSTART
CALL[java.io.RandomAccessFile,getFD,0,java.io.FileDescriptor] +++$+++  RETURN NEW TYPE[FileInputStream] PARENTHESESSTART
CALL[java.io.RandomAccessFile,getFD,0,java.io.FileDescriptor] +++$+++  RETURN NEW TYPE[FileOutputStream] PARENTHESESSTART
CALL[java.util.List,add,1,boolean] PARA[VAR[java.lang.Class]] +++$+++  VAR[java.lang.Class] PARENTHESESEND PARENTHESESEND CURLYSTART
CALL[java.lang.String,length,0,int] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.net.ServerSocket,close,0,void] +++$+++  CURLYEND CURLYEND FINALLY CURLYSTART
CALL[java.net.URL,getUserInfo,0,java.lang.String] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.net.URL,getProtocol,0,java.lang.String] +++$+++  EOL TYPE[String] VAR[java.lang.String] OP[assign]
CALL[java.util.Map,get,1,V] PARA[VAR[java.lang.String]] +++$+++  VAR[java.lang.String] PARENTHESESEND CURLYSTART RETURN
CALL[java.sql.SQLException,getMessage,0,java.lang.String] +++$+++  CURLYSTART LEX[LOG.finest] PARENTHESESSTART OP[sum]
CALL[java.lang.String,equals,1,boolean] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND EOL LEX[updatedParams.add] PARENTHESESSTART
CALL[java.util.Properties,getProperty,1,java.lang.String] PARA[LIT[Stirng]] +++$+++  VAR[java.lang.String] COMMA VAR[java.lang.String] COMMA
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Stirng]] +++$+++  TYPE[StringBuilder] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.lang.Number,toString,0,java.lang.String] +++$+++  ELSE CURLYSTART LEX[buffer.addString] PARENTHESESSTART
CALL[java.lang.Float,isInfinite,0,boolean] +++$+++  VAR[java.lang.Number] EOL IF PARENTHESESSTART
CALL[java.math.BigInteger,compareTo,1,int] PARA[VAR[java.math.BigInteger]] +++$+++  OP[lessThan] OP[assign] OP[bitwiseAnd] OP[bitwiseAnd]
CALL[java.io.Writer,write,1,void] PARA[VAR[CHAR]] +++$+++  EOL CURLYEND DEFAULT OP[ternaryFalse]
CALL[java.util.Map,size,0,int] +++$+++  CURLYEND ELSE CURLYSTART RETURN
CALL[java.util.Map,isEmpty,0,boolean] +++$+++  CURLYEND ELSE CURLYSTART RETURN
CALL[javax.swing.table.TableModel,getColumnCount,0,int] +++$+++  NULL PARENTHESESEND OP[ternaryTrue] OP[ternaryFalse]
CALL[java.util.Map,get,1,V] PARA[VAR[java.lang.String]] +++$+++  VAR[java.lang.String] PARENTHESESEND CURLYSTART RETURN
CALL[java.awt.Container,getComponent,1,java.awt.Component] PARA[VAR[INT]] +++$+++  VAR[INT] PARENTHESESEND CURLYSTART RETURN
CALL[javax.swing.JComboBox,getItemAt,1,E] PARA[VAR[INT]] +++$+++  VAR[INT] PARENTHESESEND CURLYSTART RETURN
CALL[javax.swing.DefaultComboBoxModel,removeAllElements,0,void] +++$+++  LEX[DefaultComboBoxModel] VAR[javax.swing.DefaultComboBoxModel] PARENTHESESEND CURLYSTART
CALL[javax.swing.tree.TreeNode,getChildAt,1,javax.swing.tree.TreeNode] PARA[VAR[INT]] +++$+++  VAR[INT] PARENTHESESEND CURLYSTART RETURN
CALL[javax.swing.JMenu,add,1,javax.swing.JMenuItem] PARA[VAR[javax.swing.Action]] +++$+++  LEX[Action] VAR[javax.swing.Action] PARENTHESESEND CURLYSTART
CALL[javax.swing.JMenuBar,getMenuCount,0,int] +++$+++  VAR[javax.swing.JMenuBar] PARENTHESESEND CURLYSTART RETURN
CALL[javax.swing.JPopupMenu,add,1,java.awt.Component] PARA[VAR[java.awt.Component]] +++$+++  LEX[Component] VAR[java.awt.Component] PARENTHESESEND CURLYSTART
CALL[javax.swing.AbstractButton,setMnemonic,1,void] PARA[VAR[CHAR]] +++$+++  PARENTHESESSTART VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.util.List,get,1,E] PARA[VAR[INT]] +++$+++  VAR[INT] PARENTHESESEND CURLYSTART RETURN
CALL[java.util.List,lastIndexOf,1,int] PARA[VAR[java.lang.Object]] +++$+++  VAR[java.lang.Object] PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.String,length,0,int] +++$+++  OP[assign] NULL OP[bitwiseAnd] OP[bitwiseAnd]
CALL[java.lang.Object,toString,0,java.lang.String] +++$+++  LEX[newChild] OP[assign] LEX[doc.createElement] PARENTHESESSTART
CALL[java.util.Map,entrySet,0,java.util.Set<java.util.Map.Entry<K, V>>] +++$+++  OP[greaterThan] OP[greaterThan] VAR[java.util.Map.Entry] OP[ternaryFalse]
CALL[java.util.Map,size,0,int] +++$+++  VAR[java.util.Map] PARENTHESESEND CURLYSTART RETURN
CALL[java.util.List,iterator,0,java.util.Iterator<E>] +++$+++  RETURN NEW TYPE[ObservableIterator] PARENTHESESSTART
CALL[java.util.List,size,0,int] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.util.Set,contains,1,boolean] PARA[VAR[java.lang.Object]] +++$+++  VAR[java.lang.Object] PARENTHESESEND CURLYSTART RETURN
CALL[java.util.Set,iterator,0,java.util.Iterator<E>] +++$+++  OP[lessThan] TYPE[E] OP[greaterThan] PARENTHESESSTART
CALL[java.util.Set,toArray,0,java.lang.Object[]] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.util.Set,containsAll,1,boolean] PARA[VAR[java.util.Collection]] +++$+++  VAR[java.util.Collection] PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.Object,toString,0,java.lang.String] +++$+++  PARENTHESESEND CURLYSTART LEX[keys.add] PARENTHESESSTART
CALL[java.io.Writer,write,1,void] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESEND CURLYSTART TRY CURLYSTART
CALL[java.util.List,get,1,E] PARA[LIT[Integer]] +++$+++  OP[bitwiseAnd] OP[bitwiseAnd] OP[not] PARENTHESESSTART
CALL[java.util.Map,isEmpty,0,boolean] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.String,substring,2,java.lang.String] PARA[LIT[Integer]] PARA[VAR[INT]] +++$+++  FINAL TYPE[String] VAR[java.lang.String] OP[assign]
CALL[java.util.Map,values,0,java.util.Collection<V>] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.util.Map,entrySet,0,java.util.Set<java.util.Map.Entry<K, V>>] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.util.Map,hashCode,0,int] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.util.Collection,size,0,int] +++$+++  PARENTHESESSTART NEW TYPE[Class] ARRAYSTART
CALL[java.util.List,isEmpty,0,boolean] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.util.List,contains,1,boolean] PARA[VAR[java.lang.Object]] +++$+++  VAR[java.lang.Object] PARENTHESESEND CURLYSTART RETURN
CALL[java.util.List,clear,0,void] +++$+++  LEX[clear] PARENTHESESSTART PARENTHESESEND CURLYSTART
CALL[java.util.Calendar,setTime,1,void] PARA[VAR[java.util.Date]] +++$+++  LEX[Calendar.getInstance] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.util.Date,getTime,0,long] +++$+++  LEX[lhs.getTime] PARENTHESESSTART PARENTHESESEND OP[sub]
CALL[java.io.PrintWriter,print,1,void] PARA[LIT[Stirng]] +++$+++  OP[not] VAR[BOOLEAN] PARENTHESESEND CURLYSTART
CALL[java.io.PrintWriter,print,1,void] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND OP[not] OP[assign] PARENTHESESEND
CALL[java.io.PrintWriter,print,1,void] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND OP[not] OP[assign] PARENTHESESEND
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[VAR[java.lang.String]] +++$+++  OP[sum] OP[sum] PARENTHESESEND CURLYSTART
CALL[java.lang.String,toCharArray,0,char[]] +++$+++  ARRAYSTART ARRAYEND VAR[CHAR] OP[assign]
CALL[java.lang.String,split,1,java.lang.String[]] PARA[LIT[Stirng]] +++$+++  EOL CURLYEND VAR[java.lang.String] OP[assign]
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESSTART PARENTHESESEND OP[greaterThan] PARENTHESESEND
CALL[java.util.prefs.Preferences,addPreferenceChangeListener,1,void] PARA[VAR[java.util.prefs.PreferenceChangeListener]] +++$+++  LEX[PreferenceChangeListener] VAR[java.util.prefs.PreferenceChangeListener] PARENTHESESEND CURLYSTART
CALL[java.io.PrintWriter,flush,0,void] +++$+++  LEX[out.flush] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.io.Reader,close,0,void] +++$+++  PARENTHESESEND THROWS LEX[IOException] CURLYSTART
CALL[java.util.Iterator,next,0,E] +++$+++  OP[assign] PARENTHESESSTART LEX[org.codehaus.groovy.ast.Variable] PARENTHESESEND
CALL[java.util.Map,put,2,V] PARA[VAR[INT]] PARA[VAR[java.lang.String]] +++$+++  INT VAR[INT] PARENTHESESEND CURLYSTART
CALL[java.lang.Class,getAnnotation,1,A] PARA[VAR[java.lang.Class]] +++$+++  EOL TYPE[Annotation] VAR[java.lang.annotation.Annotation] OP[assign]
CALL[java.lang.reflect.Method,getAnnotation,1,T] PARA[VAR[java.lang.Class]] +++$+++  ARRAYEND EOL VAR[java.lang.annotation.Annotation] OP[assign]
CALL[java.util.concurrent.atomic.AtomicInteger,get,0,int] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.Class,getClassLoader,0,java.lang.ClassLoader] +++$+++  OP[not] OP[assign] NULL OP[ternaryTrue]
CALL[java.lang.Class,getName,0,java.lang.String] +++$+++  TRY CURLYSTART LEX[Class.forName] PARENTHESESSTART
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[VAR[java.lang.String]] +++$+++  STRING VAR[java.lang.String] PARENTHESESEND CURLYSTART
CALL[java.lang.Class,getComponentType,0,java.lang.Class<? extends java.lang.Object>] +++$+++  PARENTHESESEND CURLYSTART VAR[java.lang.Class] OP[assign]
CALL[java.util.Map,get,1,V] PARA[VAR[java.lang.String]] +++$+++  NULL PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.Number,intValue,0,int] +++$+++  RETURN PARENTHESESSTART CHAR PARENTHESESEND
CALL[java.lang.Object,toString,0,java.lang.String] +++$+++  CURLYEND TYPE[String] VAR[java.lang.String] OP[assign]
CALL[java.lang.String,length,0,int] +++$+++  VAR[java.lang.Object] EOL IF PARENTHESESSTART
CALL[java.lang.String,charAt,1,char] PARA[LIT[Integer]] +++$+++  RETURN NEW TYPE[Character] PARENTHESESSTART
CALL[java.lang.Class,isPrimitive,0,boolean] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.util.List,isEmpty,0,boolean] +++$+++  EOL CURLYEND IF PARENTHESESSTART
CALL[java.lang.String,equals,1,boolean] PARA[VAR[java.lang.String]] +++$+++  VAR[java.lang.String] PARENTHESESEND OP[bitwiseOr] OP[bitwiseOr]
CALL[java.lang.String,equals,1,boolean] PARA[VAR[java.lang.String]] +++$+++  VAR[java.lang.String] PARENTHESESEND OP[bitwiseOr] OP[bitwiseOr]
CALL[java.util.Set,add,1,boolean] PARA[LIT[Stirng]] +++$+++  OP[greaterThan] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.io.PushbackReader,unread,1,void] PARA[VAR[INT]] +++$+++  CURLYEND CURLYEND ELSE CURLYSTART
CALL[java.lang.String,compareTo,1,int] PARA[VAR[java.lang.String]] +++$+++  VAR[java.lang.String] PARENTHESESEND EOL RETURN
CALL[java.io.Reader,mark,1,void] PARA[LIT[Integer]] +++$+++  PARENTHESESEND EOL TRY CURLYSTART
CALL[java.net.URI,isOpaque,0,boolean] +++$+++  PARENTHESESSTART COMMA VAR[java.lang.String] COMMA
CALL[java.lang.String,split,1,java.lang.String[]] PARA[LIT[Stirng]] +++$+++  ARRAYSTART ARRAYEND VAR[java.lang.String] OP[assign]
CALL[java.util.ResourceBundle,getObject,1,java.lang.Object] PARA[VAR[java.lang.String]] +++$+++  LEX[properties.put] PARENTHESESSTART VAR[java.lang.String] COMMA
CALL[java.util.ResourceBundle,keySet,0,java.util.Set<java.lang.String>] +++$+++  PARENTHESESSTART TYPE[String] VAR[java.lang.String] OP[ternaryFalse]
CALL[java.util.zip.ZipFile,entries,0,java.util.Enumeration<? extends java.util.zip.ZipEntry>] +++$+++  TYPE[ZipEntry] OP[greaterThan] VAR[java.util.Enumeration] OP[assign]
CALL[java.util.Enumeration,nextElement,0,E] +++$+++  CURLYSTART TYPE[ZipEntry] VAR[java.util.zip.ZipEntry] OP[assign]
CALL[java.util.regex.Pattern,matcher,1,java.util.regex.Matcher] PARA[LIT[Stirng]] +++$+++  EOL TYPE[Matcher] VAR[java.util.regex.Matcher] OP[assign]
CALL[java.util.regex.Matcher,reset,1,java.util.regex.Matcher] PARA[VAR[java.lang.String]] +++$+++  OP[ternaryFalse] LEX[it] PARENTHESESEND CURLYSTART
CALL[javax.swing.DefaultListModel,size,0,int] +++$+++  NULL EOL IF PARENTHESESSTART
CALL[java.lang.String,substring,2,java.lang.String] PARA[VAR[INT]] PARA[VAR[INT]] +++$+++  PARENTHESESEND CURLYSTART LEX[buf.append] PARENTHESESSTART
CALL[java.lang.String,indexOf,1,int] PARA[VAR[java.lang.String]] +++$+++  CURLYSTART INT VAR[INT] OP[assign]
CALL[java.lang.String,length,0,int] +++$+++  VAR[INT] OP[assign] VAR[INT] OP[sum]
CALL[java.lang.String,length,0,int] +++$+++  OP[assign] NULL OP[bitwiseOr] OP[bitwiseOr]
CALL[java.util.List,add,1,boolean] PARA[CALL[java.lang.String,substring]] +++$+++  OP[not] OP[assign] PARENTHESESEND CURLYSTART
CALL[java.util.List,size,0,int] +++$+++  PARENTHESESSTART NEW TYPE[String] ARRAYSTART
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[VAR[java.lang.String]] +++$+++  OP[sum] OP[sum] PARENTHESESEND CURLYSTART
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Character]] +++$+++  PARENTHESESEND EOL CURLYEND CURLYEND
CALL[java.util.List,get,1,E] PARA[VAR[INT]] +++$+++  CURLYSTART TYPE[AbstractReportNode] VAR[net.sourceforge.pmd.lang.dfa.report.AbstractReportNode] OP[assign]
CALL[java.util.List,size,0,int] +++$+++  OP[bitwiseAnd] VAR[INT] OP[lessThan] OP[assign]
CALL[java.lang.StringBuilder,length,0,int] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[CALL[java.util.List,get]] +++$+++  LEX[PMD.EOL] PARENTHESESEND EOL CURLYEND
CALL[java.io.File,getPath,0,java.lang.String] +++$+++  LEX[System.getProperty] PARENTHESESSTART PARENTHESESEND OP[sum]
CALL[java.lang.Throwable,getMessage,0,java.lang.String] +++$+++  PARENTHESESEND CURLYSTART LEX[project.log] PARENTHESESSTART
CALL[java.util.List,add,1,boolean] PARA[VAR[java.lang.Thread]] +++$+++  COMMA LEX[ctx] PARENTHESESEND EOL
CALL[java.lang.String,length,0,int] +++$+++  OP[bitwiseAnd] OP[bitwiseAnd] VAR[INT] OP[lessThan]
CALL[java.lang.String,substring,1,java.lang.String] PARA[LIT[Integer]] +++$+++  PARENTHESESEND CURLYSTART LEX[filteredLines.add] PARENTHESESSTART
CALL[java.lang.String,substring,1,java.lang.String] PARA[LIT[Integer]] +++$+++  PARENTHESESEND CURLYSTART LEX[filteredLines.add] PARENTHESESSTART
CALL[java.util.List,get,1,E] PARA[VAR[INT]] +++$+++  IF PARENTHESESSTART LEX[StringUtil.isNotEmpty] PARENTHESESSTART
CALL[java.util.List,size,0,int] +++$+++  CURLYEND INT VAR[INT] OP[assign]
CALL[java.util.Set,add,1,boolean] PARA[VAR[java.lang.String]] +++$+++  STRING VAR[java.lang.String] PARENTHESESEND CURLYSTART
CALL[java.io.PrintWriter,print,1,void] PARA[VAR[java.lang.String]] +++$+++  OP[assign] NULL PARENTHESESEND CURLYSTART
CALL[java.io.PrintWriter,print,1,void] PARA[LIT[Character]] +++$+++  OP[ternaryFalse] VAR[java.util.List] PARENTHESESEND CURLYSTART
CALL[java.io.PrintWriter,print,1,void] PARA[LIT[Character]] +++$+++  PARENTHESESSTART VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[LIT[Stirng]] +++$+++  BREAK EOL CASE OP[ternaryFalse]
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  DEFAULT OP[ternaryFalse] VAR[CHAR] OP[assign]
CALL[java.lang.String,substring,2,java.lang.String] PARA[VAR[INT]] PARA[VAR[INT]] +++$+++  FINAL TYPE[String] VAR[java.lang.String] OP[assign]
CALL[java.lang.String,equals,1,boolean] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART PARENTHESESEND OP[bitwiseOr] OP[bitwiseOr]
CALL[java.lang.String,equals,1,boolean] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.lang.String,equals,1,boolean] PARA[LIT[Stirng]] +++$+++  EOL ELSE IF PARENTHESESSTART
CALL[java.awt.Color,getRed,0,int] +++$+++  CURLYSTART DOUBLE VAR[DOUBLE] OP[assign]
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Stirng]] +++$+++  LEX[sb.append] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.util.List,size,0,int] +++$+++  OP[assign] EOL VAR[INT] OP[lessThan]
CALL[java.io.PrintStream,print,1,void] PARA[VAR[java.lang.String]] +++$+++  OP[ternaryFalse] FIELD[characterNames,net.sf.hale.util.SaveFileHeader] PARENTHESESEND CURLYSTART
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[VAR[java.lang.String]] +++$+++  LEX[id.append] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[VAR[java.lang.String]] +++$+++  TYPE[StringBuilder] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.io.File,exists,0,boolean] +++$+++  EOL IF PARENTHESESSTART OP[not]
CALL[java.io.File,getName,0,java.lang.String] +++$+++  PARENTHESESEND CURLYSTART LEX[list.add] PARENTHESESSTART
CALL[java.lang.Thread,isDaemon,0,boolean] +++$+++  ARRAYEND EOL IF PARENTHESESSTART
CALL[java.util.Iterator,hasNext,0,boolean] +++$+++  OP[assign] NULL OP[bitwiseOr] OP[bitwiseOr]
CALL[java.util.List,add,1,boolean] PARA[VAR[net.sf.hale.loading.AsyncTextureLoader.TextureSpriteLoadList]] +++$+++  PARENTHESESSTART VAR[java.util.List] PARENTHESESEND CURLYSTART
CALL[java.io.PrintWriter,println,0,void] +++$+++  LEX[out.append] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.util.Set,contains,1,boolean] PARA[VAR[java.lang.Integer]] +++$+++  EOL IF PARENTHESESSTART OP[not]
CALL[java.util.Set,add,1,boolean] PARA[VAR[java.lang.Integer]] +++$+++  PARENTHESESEND PARENTHESESEND CONTINUE EOL
CALL[java.util.Set,add,1,boolean] PARA[VAR[java.lang.Integer]] +++$+++  PARENTHESESEND PARENTHESESEND CONTINUE EOL
CALL[java.lang.String,equals,1,boolean] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.util.List,add,1,boolean] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND CURLYSTART
CALL[java.util.List,size,0,int] +++$+++  OP[assign] EOL VAR[INT] OP[lessThan]
CALL[java.util.List,isEmpty,0,boolean] +++$+++  EOL IF PARENTHESESSTART OP[not]
CALL[java.util.Map,get,1,V] PARA[VAR[INT]] +++$+++  CURLYSTART TYPE[LevelUpList] VAR[net.sf.hale.rules.Role.LevelUpList] OP[assign]
CALL[java.util.Map,get,1,V] PARA[VAR[java.lang.String]] +++$+++  LEX[true] EOL VAR[org.ambraproject.freemarker.AmbraFreemarkerConfig.JournalConfig] OP[assign]
CALL[java.util.Map,get,1,V] PARA[VAR[java.lang.String]] +++$+++  CURLYSTART TYPE[JournalConfig] VAR[org.ambraproject.freemarker.AmbraFreemarkerConfig.JournalConfig] OP[assign]
CALL[java.util.Map,get,1,V] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESEND CURLYSTART VAR[org.ambraproject.freemarker.AmbraFreemarkerConfig.JournalConfig] OP[assign]
CALL[java.util.Map,get,1,V] PARA[VAR[java.lang.String]] +++$+++  LEX[true] EOL VAR[org.ambraproject.freemarker.AmbraFreemarkerConfig.JournalConfig] OP[assign]
CALL[java.util.Enumeration,nextElement,0,E] +++$+++  OP[assign] PARENTHESESSTART TYPE[String] PARENTHESESEND
CALL[java.lang.String,hashCode,0,int] +++$+++  OP[not] OP[assign] NULL OP[ternaryTrue]
CALL[java.lang.String,hashCode,0,int] +++$+++  OP[assign] OP[multiply] VAR[INT] OP[sum]
CALL[java.lang.String,hashCode,0,int] +++$+++  OP[assign] OP[multiply] VAR[INT] OP[sum]
CALL[java.lang.String,hashCode,0,int] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.String,hashCode,0,int] +++$+++  OP[not] OP[assign] NULL OP[ternaryTrue]
CALL[java.lang.String,hashCode,0,int] +++$+++  OP[not] OP[assign] NULL OP[ternaryTrue]
CALL[java.util.Date,getTime,0,long] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.io.File,canRead,0,boolean] +++$+++  PARENTHESESSTART PARENTHESESEND OP[bitwiseAnd] OP[bitwiseAnd]
CALL[java.lang.String,equals,1,boolean] PARA[VAR[java.lang.String]] +++$+++  OP[assign] OP[assign] NULL OP[ternaryFalse]
CALL[java.util.HashMap,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.lang.Float]] +++$+++  LEX[Float] VAR[java.lang.Float] PARENTHESESEND CURLYSTART
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.lang.String]] +++$+++  COMMA VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.awt.image.Raster,getHeight,0,int] +++$+++  EOL INT VAR[INT] OP[assign]
CALL[java.lang.CharSequence,length,0,int] +++$+++  OP[assign] NEW TYPE[StringBuilder] PARENTHESESSTART
CALL[java.lang.StringBuilder,length,0,int] +++$+++  EOL CURLYEND IF PARENTHESESSTART
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESSTART PARENTHESESEND EOL CURLYEND
CALL[java.util.Map,entrySet,0,java.util.Set<java.util.Map.Entry<K, V>>] +++$+++  OP[greaterThan] OP[greaterThan] VAR[java.util.Set] OP[assign]
CALL[javax.swing.JCheckBox,addItemListener,1,void] PARA[VAR[java.awt.event.ItemListener]] +++$+++  OP[ternaryFalse] VAR[java.awt.event.ItemListener] PARENTHESESEND CURLYSTART
CALL[java.io.File,getParentFile,0,java.io.File] +++$+++  PARENTHESESEND CURLYSTART VAR[java.io.File] OP[assign]
CALL[javax.swing.JButton,setEnabled,1,void] PARA[LIT[Boolean]] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND EOL
CALL[javax.swing.JCheckBox,isSelected,0,boolean] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[javax.swing.JRadioButton,isSelected,0,boolean] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[javax.swing.JFileChooser,removeAll,0,void] +++$+++  LEX[JFileChooser] VAR[javax.swing.JFileChooser] PARENTHESESEND CURLYSTART
CALL[javax.swing.JTextField,setText,1,void] PARA[VAR[java.lang.String]] +++$+++  OP[assign] NULL PARENTHESESEND CURLYSTART
CALL[javax.swing.JTable,putClientProperty,2,void] PARA[LIT[Stirng]] PARA[VAR[javax.swing.UIDefaults]] +++$+++  VAR[java.awt.Font] PARENTHESESEND PARENTHESESEND EOL
CALL[java.io.File,exists,0,boolean] +++$+++  CURLYEND IF PARENTHESESSTART OP[not]
CALL[javax.swing.ActionMap,put,2,void] PARA[VAR[java.lang.String]] PARA[VAR[javax.swing.Action]] +++$+++  LEX[Action.NAME] PARENTHESESEND EOL CURLYEND
CALL[javax.swing.JTable,convertColumnIndexToModel,1,int] PARA[VAR[INT]] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.awt.geom.Path2D,reset,0,void] +++$+++  DOUBLE VAR[DOUBLE] OP[assign] VAR[INT]
CALL[java.awt.geom.Path2D,closePath,0,void] +++$+++  COMMA VAR[INT] OP[sum] VAR[INT]
CALL[java.awt.geom.Path2D,quadTo,4,void] PARA[VAR[INT]] PARA[VAR[INT]] PARA[VAR[INT]] PARA[VAR[DOUBLE]] +++$+++  COMMA VAR[INT] PARENTHESESEND EOL
CALL[java.awt.geom.Path2D,moveTo,2,void] PARA[VAR[INT]] PARA[VAR[INT]] +++$+++  CURLYSTART CASE VAR[com.frostwire.gui.theme.ShapeGenerator.CornerStyle] OP[ternaryFalse]
CALL[javax.swing.JTextArea,getText,0,java.lang.String] +++$+++  CURLYSTART TYPE[String] VAR[java.lang.String] OP[assign]
CALL[java.awt.font.LineBreakMeasurer,nextLayout,1,java.awt.font.TextLayout] PARA[VAR[FLOAT]] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND CURLYSTART
CALL[java.awt.font.LineBreakMeasurer,getPosition,0,int] +++$+++  OP[assign] EOL WHILE PARENTHESESSTART
CALL[javax.swing.text.JTextComponent,repaint,0,void] +++$+++  COMMA VAR[java.awt.Color] PARENTHESESEND EOL
CALL[javax.swing.text.JTextComponent,getClientProperty,1,java.lang.Object] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[javax.swing.text.JTextComponent,getClientProperty,1,java.lang.Object] PARA[VAR[java.lang.String]] +++$+++  RETURN PARENTHESESSTART TYPE[Integer] PARENTHESESEND
CALL[javax.swing.JTextField,setBorder,1,void] PARA[VAR[javax.swing.border.Border]] +++$+++  OP[assign] THIS PARENTHESESEND CURLYSTART
CALL[javax.swing.plaf.TextUI,getEditorKit,1,javax.swing.text.EditorKit] PARA[VAR[javax.swing.text.JTextComponent]] +++$+++  VAR[javax.swing.text.JTextComponent] PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.Throwable,printStackTrace,0,void] +++$+++  TYPE[Throwable] VAR[java.lang.Throwable] PARENTHESESEND CURLYSTART
CALL[javax.swing.JTextField,putClientProperty,2,void] PARA[VAR[java.lang.String]] PARA[VAR[java.awt.Insets]] +++$+++  LEX[Insets] VAR[java.awt.Insets] PARENTHESESEND CURLYSTART
CALL[javax.swing.JTextField,putClientProperty,2,void] PARA[VAR[java.lang.String]] PARA[VAR[java.awt.event.ActionListener]] +++$+++  LEX[ActionListener] VAR[java.awt.event.ActionListener] PARENTHESESEND CURLYSTART
CALL[java.util.Map,containsKey,1,boolean] PARA[VAR[com.frostwire.gui.library.HistoHashMap.K]] +++$+++  OP[assign] EOL IF PARENTHESESSTART
CALL[java.util.Map,get,1,V] PARA[VAR[com.frostwire.gui.library.HistoHashMap.K]] +++$+++  VAR[com.frostwire.gui.library.HistoHashMap.K] PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[VAR[java.lang.String]] +++$+++  LEX[result.append] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.awt.event.KeyEvent,isAltGraphDown,0,boolean] +++$+++  PARENTHESESSTART PARENTHESESEND OP[bitwiseOr] OP[bitwiseOr]
CALL[java.io.File,getName,0,java.lang.String] +++$+++  PARENTHESESEND EOL LEX[m3uFile.write] PARENTHESESSTART
CALL[java.util.List,contains,1,boolean] PARA[VAR[java.lang.String]] +++$+++  VAR[java.lang.String] PARENTHESESEND CURLYSTART RETURN
CALL[java.util.List,contains,1,boolean] PARA[VAR[java.lang.String]] +++$+++  VAR[java.lang.String] PARENTHESESEND CURLYSTART RETURN
CALL[java.util.LinkedList,toArray,0,java.lang.Object[]] +++$+++  PARENTHESESEND EOL LEX[System.arraycopy] PARENTHESESSTART
CALL[javax.swing.JCheckBox,setFocusPainted,1,void] PARA[LIT[Boolean]] +++$+++  PARENTHESESSTART LEX[false] PARENTHESESEND EOL
CALL[javax.swing.JDialog,setVisible,1,void] PARA[LIT[Boolean]] +++$+++  LEX[run] PARENTHESESSTART PARENTHESESEND CURLYSTART
CALL[java.lang.String,equalsIgnoreCase,1,boolean] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART PARENTHESESEND OP[bitwiseOr] OP[bitwiseOr]
CALL[java.lang.Throwable,printStackTrace,0,void] +++$+++  TYPE[Throwable] VAR[java.lang.Throwable] PARENTHESESEND CURLYSTART
CALL[java.lang.String,getBytes,1,byte[]] PARA[LIT[Stirng]] +++$+++  ARRAYSTART ARRAYEND VAR[BYTE] OP[assign]
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  OP[bitwiseAnd] OP[bitwiseAnd] LEX[separators.indexOf] PARENTHESESSTART
CALL[java.io.PrintWriter,write,1,void] PARA[VAR[java.lang.String]] +++$+++  OP[sum] VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.io.PrintWriter,write,1,void] PARA[VAR[java.lang.String]] +++$+++  OP[sum] VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.lang.String,equals,1,boolean] PARA[FIELD[com.limegroup.gnutella.MediaType]] +++$+++  PARENTHESESEND VAR[java.lang.Object] EOL RETURN
CALL[javax.swing.UIDefaults,getUI,1,javax.swing.plaf.ComponentUI] PARA[VAR[javax.swing.JComponent]] +++$+++  PARENTHESESEND EOL VAR[javax.swing.plaf.ComponentUI] OP[assign]
CALL[com.limegroup.gnutella.gui.AWTSplashWindow,toFront,0,void] +++$+++  COMMA VAR[java.awt.Image] PARENTHESESEND EOL
CALL[com.limegroup.gnutella.gui.AWTSplashWindow,setVisible,1,void] PARA[LIT[Boolean]] +++$+++  LEX[w.toFront] PARENTHESESSTART PARENTHESESEND EOL
CALL[javax.swing.JMenuItem,setEnabled,1,void] PARA[VAR[BOOLEAN]] +++$+++  PARENTHESESSTART VAR[java.awt.event.ActionListener] PARENTHESESEND EOL
CALL[java.util.Map,get,1,V] PARA[VAR[java.lang.String]] +++$+++  CURLYSTART TYPE[String] VAR[java.lang.String] OP[assign]
CALL[javax.swing.JButton,setFont,1,void] PARA[VAR[java.awt.Font]] +++$+++  PARENTHESESSTART VAR[com.limegroup.gnutella.gui.LanguageWindow.OkayAction] PARENTHESESEND EOL
CALL[javax.swing.JTree,setSelectionPath,1,void] PARA[VAR[javax.swing.tree.TreePath]] +++$+++  PARENTHESESSTART VAR[javax.swing.tree.TreePath] PARENTHESESEND EOL
CALL[javax.swing.JDialog,isVisible,0,boolean] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.util.List,add,1,boolean] PARA[LIT[Stirng]] +++$+++  LEX[command.add] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.util.List,add,1,boolean] PARA[LIT[Stirng]] +++$+++  OP[sum] OP[sum] PARENTHESESEND CURLYSTART
CALL[javax.swing.JPanel,add,1,java.awt.Component] PARA[VAR[javax.swing.JButton]] +++$+++  TYPE[JButton] PARENTHESESSTART PARENTHESESEND EOL
CALL[javax.swing.JRadioButton,isSelected,0,boolean] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.String,indexOf,1,int] PARA[VAR[java.lang.String]] +++$+++  CURLYSTART INT VAR[INT] OP[assign]
CALL[java.lang.String,lastIndexOf,2,int] PARA[LIT[Stirng]] PARA[VAR[INT]] +++$+++  LEX[false] EOL IF PARENTHESESSTART
CALL[java.lang.String,lastIndexOf,2,int] PARA[LIT[Stirng]] PARA[VAR[INT]] +++$+++  OP[not] OP[assign] OP[bitwiseAnd] OP[bitwiseAnd]
CALL[javax.swing.JPanel,setOpaque,1,void] PARA[LIT[Boolean]] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND EOL
CALL[javax.swing.JPanel,addMouseListener,1,void] PARA[VAR[java.awt.event.MouseAdapter]] +++$+++  COMMA VAR[java.awt.GridBagConstraints] PARENTHESESEND EOL
CALL[javax.swing.JComponent,setAutoscrolls,1,void] PARA[LIT[Boolean]] +++$+++  LEX[c.getAutoscrolls] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.awt.datatransfer.Transferable,getTransferData,1,java.lang.Object] PARA[VAR[java.awt.datatransfer.DataFlavor]] +++$+++  VAR[java.awt.datatransfer.DataFlavor] PARENTHESESEND PARENTHESESEND RETURN
CALL[javax.swing.JWindow,dispose,0,void] +++$+++  LEX[run] PARENTHESESSTART PARENTHESESEND CURLYSTART
CALL[java.lang.reflect.InvocationTargetException,getTargetException,0,java.lang.Throwable] +++$+++  CURLYSTART TYPE[Throwable] VAR[java.lang.Throwable] OP[assign]
CALL[java.lang.String,replaceAll,2,java.lang.String] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND CURLYSTART VAR[java.lang.String] OP[assign]
CALL[java.util.concurrent.ExecutorService,execute,1,void] PARA[VAR[java.lang.Runnable]] +++$+++  LEX[WindowEvent] LEX[e] PARENTHESESEND CURLYSTART
CALL[javax.swing.JToggleButton,doClick,0,void] +++$+++  OP[assign] NULL PARENTHESESEND CURLYSTART
CALL[javax.swing.AbstractButton,isSelected,0,boolean] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[javax.swing.ActionMap,put,2,void] PARA[VAR[javax.swing.Action]] PARA[VAR[javax.swing.Action]] +++$+++  COMMA VAR[javax.swing.Action] PARENTHESESEND EOL
CALL[java.awt.event.ActionEvent,getSource,0,java.lang.Object] +++$+++  VAR[java.awt.Window] EOL IF PARENTHESESSTART
CALL[java.util.Vector,remove,1,E] PARA[VAR[INT]] +++$+++  INT VAR[INT] PARENTHESESEND CURLYSTART
CALL[java.lang.String,equals,1,boolean] PARA[VAR[java.lang.String]] +++$+++  OP[assign] OP[assign] OP[bitwiseOr] OP[bitwiseOr]
CALL[javax.swing.tree.TreeModel,getChildCount,1,int] PARA[VAR[java.lang.Object]] +++$+++  OP[assign] COMMA VAR[INT] OP[assign]
CALL[javax.swing.JProgressBar,setPreferredSize,1,void] PARA[VAR[java.awt.Dimension]] +++$+++  PARENTHESESSTART VAR[java.awt.Dimension] PARENTHESESEND EOL
CALL[javax.swing.JDialog,dispose,0,void] +++$+++  LEX[ActionEvent] LEX[e] PARENTHESESEND CURLYSTART
CALL[javax.swing.JComponent,getFont,0,java.awt.Font] +++$+++  OP[bitwiseAnd] OP[not] LEX[tableFont.equals] PARENTHESESSTART
CALL[javax.swing.event.ListSelectionEvent,getValueIsAdjusting,0,boolean] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.awt.Component,getBackground,0,java.awt.Color] +++$+++  EOL TYPE[Color] VAR[java.awt.Color] OP[assign]
CALL[java.awt.Color,getBlue,0,int] +++$+++  OP[assign] LEX[x03] OP[bitwiseAnd] OP[bitwiseAnd]
CALL[java.awt.Color,darker,0,java.awt.Color] +++$+++  PARENTHESESEND CURLYSTART VAR[java.awt.Color] OP[assign]
CALL[java.awt.Graphics,setColor,1,void] PARA[VAR[java.awt.Color]] +++$+++  CURLYSTART CASE VAR[INT] OP[ternaryFalse]
CALL[java.awt.Graphics,setColor,1,void] PARA[VAR[java.awt.Color]] +++$+++  OP[sum] VAR[INT] PARENTHESESEND EOL
CALL[java.awt.Graphics,setColor,1,void] PARA[VAR[java.awt.Color]] +++$+++  OP[sum] VAR[INT] PARENTHESESEND EOL
CALL[javax.swing.table.JTableHeader,getBackground,0,java.awt.Color] +++$+++  PARENTHESESEND EOL LEX[renderer.setBackground] PARENTHESESSTART
CALL[javax.swing.JLabel,setForeground,1,void] PARA[CALL[javax.swing.table.JTableHeader,getForeground]] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND EOL
CALL[javax.swing.JLabel,setIcon,1,void] PARA[VAR[javax.swing.Icon]] +++$+++  PARENTHESESEND OP[ternaryFalse] NULL EOL
CALL[javax.swing.JTextArea,selectAll,0,void] +++$+++  LEX[ActionEvent] LEX[e] PARENTHESESEND CURLYSTART
CALL[java.lang.String,length,0,int] +++$+++  VAR[java.lang.String] PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.String,charAt,1,char] PARA[LIT[Integer]] +++$+++  VAR[INT] OP[greaterThan] OP[bitwiseAnd] OP[bitwiseAnd]
CALL[java.util.Map.Entry,getKey,0,K] +++$+++  LEX[container.getLayout] PARENTHESESSTART PARENTHESESEND COMMA
CALL[org.gudy.azureus2.core3.util.AEThread2.threadWrapper,toString,0,java.lang.String] +++$+++  ELSE CURLYSTART RETURN PARENTHESESSTART
CALL[java.io.ByteArrayOutputStream,toString,0,java.lang.String] +++$+++  PARENTHESESSTART PARENTHESESEND EOL RETURN
CALL[java.io.File,isDirectory,0,boolean] +++$+++  EOL IF PARENTHESESSTART OP[not]
CALL[java.lang.ThreadLocal,get,0,T] +++$+++  OP[assign] NULL OP[bitwiseOr] OP[bitwiseOr]
CALL[java.util.List,size,0,int] +++$+++  PARENTHESESEND CURLYSTART RETURN PARENTHESESSTART
CALL[java.lang.String,replaceAll,2,java.lang.String] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND EOL VAR[java.lang.String] OP[assign]
CALL[java.lang.String,equals,1,boolean] PARA[VAR[java.lang.String]] +++$+++  ARRAYEND EOL IF PARENTHESESSTART
CALL[java.lang.Throwable,printStackTrace,0,void] +++$+++  TYPE[Throwable] VAR[java.lang.Throwable] PARENTHESESEND CURLYSTART
CALL[java.util.concurrent.RejectedExecutionHandler,rejectedExecution,2,void] PARA[VAR[java.lang.Runnable]] PARA[THIS[null]] +++$+++  LEX[Runnable] VAR[java.lang.Runnable] PARENTHESESEND CURLYSTART
CALL[java.lang.String,length,0,int] +++$+++  WHILE PARENTHESESSTART VAR[INT] OP[lessThan]
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  OP[bitwiseAnd] OP[bitwiseAnd] LEX[Character.isDigit] PARENTHESESSTART
CALL[java.lang.String,length,0,int] +++$+++  PARENTHESESSTART VAR[INT] OP[lessThan] OP[assign]
CALL[java.io.BufferedReader,readLine,0,java.lang.String] +++$+++  PARENTHESESSTART PARENTHESESSTART VAR[java.lang.String] OP[assign]
CALL[java.lang.String,getBytes,1,byte[]] PARA[LIT[Stirng]] +++$+++  ARRAYSTART ARRAYEND VAR[BYTE] OP[assign]
CALL[java.io.File,delete,0,boolean] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND CURLYSTART
CALL[java.io.File,canRead,0,boolean] +++$+++  EOL IF PARENTHESESSTART OP[not]
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.io.File,equals,1,boolean] PARA[VAR[java.io.File]] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.util.List,add,1,boolean] PARA[VAR[java.lang.String]] +++$+++  EOL CURLYEND ELSE CURLYSTART
CALL[java.lang.Long,longValue,0,long] +++$+++  CURLYSTART LONG VAR[LONG] OP[assign]
CALL[java.util.zip.ZipEntry,getName,0,java.lang.String] +++$+++  EOL TYPE[String] VAR[java.lang.String] OP[assign]
CALL[java.util.zip.ZipInputStream,read,1,int] PARA[VAR[BYTE]] +++$+++  PARENTHESESSTART PARENTHESESSTART VAR[INT] OP[assign]
CALL[java.util.StringTokenizer,hasMoreTokens,0,boolean] +++$+++  PARENTHESESEND EOL WHILE PARENTHESESSTART
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESEND PARENTHESESEND EOL CURLYEND
CALL[java.lang.Runnable,hashCode,0,int] +++$+++  OP[ternaryTrue] VAR[java.lang.String] OP[ternaryFalse] OP[sum]
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.logging.Logger,logp,5,void] PARA[FIELD[Level]] PARA[VAR[java.lang.String]] PARA[LIT[Stirng]] PARA[VAR[java.lang.String]] PARA[VAR[java.lang.Throwable]] +++$+++  LEX[Throwable] VAR[java.lang.Throwable] PARENTHESESEND CURLYSTART
CALL[java.lang.String,length,0,int] +++$+++  PARENTHESESSTART VAR[INT] OP[assign] OP[assign]
CALL[java.lang.String,indexOf,2,int] PARA[VAR[java.lang.String]] PARA[VAR[INT]] +++$+++  PARENTHESESSTART PARENTHESESSTART VAR[INT] OP[assign]
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[VAR[CHAR]] +++$+++  EOL CURLYEND ELSE CURLYSTART
CALL[java.util.Map,get,1,V] PARA[VAR[java.lang.String]] +++$+++  VAR[java.lang.String] PARENTHESESEND OP[sum] OP[sum]
CALL[java.util.Map,get,1,V] PARA[VAR[java.lang.String]] +++$+++  CURLYSTART TYPE[String] VAR[java.lang.String] OP[assign]
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.lang.String]] +++$+++  COMMA VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.lang.String]] +++$+++  COMMA VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.lang.StringBuilder,length,0,int] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.lang.String,length,0,int] +++$+++  OP[assign] EOL VAR[INT] OP[lessThan]
CALL[java.lang.Throwable,printStackTrace,0,void] +++$+++  TYPE[Throwable] VAR[java.lang.Throwable] PARENTHESESEND CURLYSTART
CALL[java.io.UnsupportedEncodingException,printStackTrace,0,void] +++$+++  TYPE[UnsupportedEncodingException] VAR[java.io.UnsupportedEncodingException] PARENTHESESEND CURLYSTART
CALL[java.lang.Throwable,getMessage,0,java.lang.String] +++$+++  CURLYSTART LEX[LOG.warn] PARENTHESESSTART OP[sum]
CALL[java.util.List,iterator,0,java.util.Iterator<E>] +++$+++  TYPE[SearchTask] OP[greaterThan] VAR[java.util.Iterator] OP[assign]
CALL[java.io.RandomAccessFile,seek,1,void] PARA[LIT[Integer]] +++$+++  CURLYEND CURLYEND PARENTHESESEND EOL
CALL[java.nio.channels.WritableByteChannel,write,1,int] PARA[VAR[java.nio.ByteBuffer]] +++$+++  CURLYSTART INT VAR[INT] OP[assign]
CALL[java.lang.String,getBytes,1,byte[]] PARA[LIT[Stirng]] +++$+++  NULL PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.CharSequence,length,0,int] +++$+++  OP[assign] NULL OP[bitwiseOr] OP[bitwiseOr]
CALL[java.lang.CharSequence,length,0,int] +++$+++  CURLYSTART RETURN VAR[BOOLEAN] OP[ternaryTrue]
CALL[java.lang.CharSequence,length,0,int] +++$+++  VAR[java.lang.CharSequence] COMMA VAR[INT] OP[sum]
CALL[java.lang.CharSequence,length,0,int] +++$+++  IF PARENTHESESSTART VAR[INT] OP[greaterThan]
CALL[java.lang.String,length,0,int] +++$+++  PARENTHESESEND CURLYSTART VAR[INT] OP[assign]
CALL[java.lang.String,substring,2,java.lang.String] PARA[VAR[INT]] PARA[VAR[INT]] +++$+++  OP[assign] EOL CURLYEND RETURN
CALL[java.lang.String,length,0,int] +++$+++  EOL CURLYEND IF PARENTHESESSTART
CALL[java.lang.String,substring,2,java.lang.String] PARA[VAR[INT]] PARA[VAR[INT]] +++$+++  EOL CURLYEND LEX[list.add] PARENTHESESSTART
CALL[java.lang.String,substring,2,java.lang.String] PARA[VAR[INT]] PARA[VAR[INT]] +++$+++  EOL CURLYEND LEX[list.add] PARENTHESESSTART
CALL[java.util.List,add,1,boolean] PARA[CALL[java.lang.String,substring]] +++$+++  OP[bitwiseAnd] VAR[BOOLEAN] PARENTHESESEND CURLYSTART
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[VAR[CHAR]] +++$+++  OP[greaterThan] VAR[INT] PARENTHESESEND CURLYSTART
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[VAR[CHAR]] +++$+++  OP[greaterThan] VAR[INT] PARENTHESESEND CURLYSTART
CALL[java.lang.StringBuilder,toString,0,java.lang.String] +++$+++  PARENTHESESEND EOL CURLYEND RETURN
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[VAR[java.lang.String]] +++$+++  OP[greaterThan] VAR[INT] PARENTHESESEND CURLYSTART
CALL[java.util.Iterator,hasNext,0,boolean] +++$+++  EOL IF PARENTHESESSTART OP[not]
CALL[java.lang.Object,toString,0,java.lang.String] +++$+++  OP[not] OP[assign] NULL OP[ternaryTrue]
CALL[java.util.Iterator,next,0,E] +++$+++  FINAL TYPE[Object] VAR[java.lang.Object] OP[assign]
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[VAR[java.lang.Object]] +++$+++  OP[assign] NULL PARENTHESESEND CURLYSTART
CALL[java.lang.StringBuilder,toString,0,java.lang.String] +++$+++  EOL CURLYEND CURLYEND RETURN
CALL[java.util.Iterator,next,0,E] +++$+++  FINAL TYPE[Object] VAR[java.lang.Object] OP[assign]
CALL[java.lang.String,replace,2,java.lang.String] PARA[VAR[CHAR]] PARA[VAR[CHAR]] +++$+++  NULL EOL CURLYEND RETURN
CALL[java.lang.CharSequence,length,0,int] +++$+++  OP[assign] NULL OP[ternaryTrue] OP[ternaryFalse]
CALL[java.lang.CharSequence,length,0,int] +++$+++  FINAL INT VAR[INT] OP[assign]
CALL[java.lang.CharSequence,length,0,int] +++$+++  FINAL INT VAR[INT] OP[assign]
CALL[java.lang.CharSequence,length,0,int] +++$+++  FINAL INT VAR[INT] OP[assign]
CALL[java.lang.CharSequence,charAt,1,char] PARA[VAR[INT]] +++$+++  IF PARENTHESESSTART LEX[Character.isWhitespace] PARENTHESESSTART
CALL[java.lang.CharSequence,length,0,int] +++$+++  CURLYEND INT VAR[INT] OP[assign]
CALL[java.lang.Character,charValue,0,char] +++$+++  PARENTHESESEND EOL CURLYEND RETURN
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[VAR[java.lang.CharSequence]] +++$+++  LEX[CharSequence] VAR[java.lang.CharSequence] PARENTHESESEND CURLYSTART
CALL[java.io.File,exists,0,boolean] +++$+++  TYPE[IOException] CURLYSTART IF PARENTHESESSTART
CALL[java.io.File,isDirectory,0,boolean] +++$+++  PARENTHESESSTART PARENTHESESEND OP[bitwiseAnd] OP[bitwiseAnd]
CALL[java.io.File,lastModified,0,long] +++$+++  LEX[false] EOL CURLYEND RETURN
CALL[java.io.Writer,write,1,void] PARA[CALL[java.lang.StringBuffer,toString]] +++$+++  OP[assign] NULL PARENTHESESEND CURLYSTART
CALL[java.lang.String,lastIndexOf,1,int] PARA[VAR[CHAR]] +++$+++  EOL INT VAR[INT] OP[assign]
CALL[java.lang.String,length,0,int] +++$+++  CURLYSTART INT VAR[INT] OP[assign]
CALL[java.io.Reader,close,0,void] +++$+++  EOL CURLYEND FINALLY CURLYSTART
CALL[java.io.InputStream,read,0,int] +++$+++  FINAL INT VAR[INT] OP[assign]
CALL[java.lang.StringBuilder,length,0,int] +++$+++  FINAL INT VAR[INT] OP[assign]
CALL[java.io.File,getUsableSpace,0,long] +++$+++  VAR[java.io.File] PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.CharSequence,length,0,int] +++$+++  FINAL INT VAR[INT] OP[assign]
CALL[java.lang.String,hashCode,0,int] +++$+++  OP[assign] NULL OP[ternaryTrue] OP[ternaryFalse]
CALL[java.util.LinkedList,add,1,boolean] PARA[LIT[Stirng]] +++$+++  OP[greaterThan] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.util.LinkedList,add,1,boolean] PARA[LIT[Stirng]] +++$+++  LEX[l.add] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.io.File,renameTo,1,boolean] PARA[VAR[java.io.File]] +++$+++  PARENTHESESEND CURLYEND PARENTHESESEND EOL
CALL[java.io.File,isDirectory,0,boolean] +++$+++  CURLYSTART IF PARENTHESESSTART OP[not]
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[LIT[Character]] +++$+++  VAR[INT] OP[greaterThan] PARENTHESESEND CURLYSTART
CALL[java.lang.String,startsWith,1,boolean] PARA[VAR[java.lang.String]] +++$+++  VAR[java.lang.String] PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  PARENTHESESSTART PARENTHESESSTART VAR[CHAR] OP[assign]
CALL[java.io.DataOutputStream,write,1,void] PARA[VAR[INT]] +++$+++  PARENTHESESSTART VAR[INT] PARENTHESESEND EOL
CALL[java.lang.String,startsWith,1,boolean] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.lang.String,length,0,int] +++$+++  OP[assign] LEX[source.substring] PARENTHESESSTART COMMA
CALL[java.lang.String,startsWith,1,boolean] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.io.DataInputStream,readByte,0,byte] +++$+++  PARENTHESESEND EOL VAR[INT] OP[assign]
CALL[java.io.DataInputStream,readByte,0,byte] +++$+++  VAR[INT] PARENTHESESEND IF PARENTHESESSTART
CALL[java.util.HashMap,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.lang.String]] +++$+++  STRING VAR[java.lang.String] PARENTHESESEND CURLYSTART
CALL[java.lang.Class,getDeclaredField,1,java.lang.reflect.Field] PARA[LIT[Stirng]] +++$+++  EOL TYPE[Field] VAR[java.lang.reflect.Field] OP[assign]
CALL[java.lang.Class,getDeclaredField,1,java.lang.reflect.Field] PARA[LIT[Stirng]] +++$+++  EOL TYPE[Field] VAR[java.lang.reflect.Field] OP[assign]
CALL[java.lang.NoSuchMethodException,getMessage,0,java.lang.String] +++$+++  PARENTHESESEND CURLYSTART VAR[java.lang.String] OP[assign]
CALL[java.lang.reflect.InvocationTargetException,getMessage,0,java.lang.String] +++$+++  PARENTHESESEND CURLYSTART VAR[java.lang.String] OP[assign]
CALL[java.lang.ClassNotFoundException,getMessage,0,java.lang.String] +++$+++  PARENTHESESEND CURLYSTART VAR[java.lang.String] OP[assign]
CALL[java.util.LinkedList,size,0,int] +++$+++  PARENTHESESEND CURLYSTART ASSERT PARENTHESESSTART
CALL[java.util.LinkedList,size,0,int] +++$+++  PARENTHESESEND EOL ASSERT PARENTHESESSTART
CALL[java.util.LinkedList,clear,0,void] +++$+++  LEX[clear] PARENTHESESSTART PARENTHESESEND CURLYSTART
CALL[java.util.zip.Inflater,setInput,1,void] PARA[VAR[BYTE]] +++$+++  TYPE[Inflater] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.util.zip.DataFormatException,printStackTrace,0,void] +++$+++  TYPE[DataFormatException] VAR[java.util.zip.DataFormatException] PARENTHESESEND CURLYSTART
CALL[java.awt.Window,getHeight,0,int] +++$+++  EOL INT VAR[INT] OP[assign]
CALL[java.awt.Window,getX,0,int] +++$+++  PARENTHESESEND EOL LEX[top.setLocation] PARENTHESESSTART
CALL[java.awt.Window,getHeight,0,int] +++$+++  LEX[bottom.getY] PARENTHESESSTART PARENTHESESEND OP[sum]
CALL[java.lang.StringBuffer,toString,0,java.lang.String] +++$+++  NULL EOL CURLYEND RETURN
CALL[java.lang.String,length,0,int] +++$+++  CURLYSTART INT VAR[INT] OP[assign]
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[VAR[java.lang.String]] +++$+++  VAR[CHAR] PARENTHESESEND EOL CURLYEND
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[VAR[CHAR]] +++$+++  OP[greaterThan] OP[assign] PARENTHESESEND CURLYSTART
CALL[java.util.Iterator,hasNext,0,boolean] +++$+++  PARENTHESESEND EOL WHILE PARENTHESESSTART
CALL[java.util.ArrayList,iterator,0,java.util.Iterator<E>] +++$+++  CURLYSTART TYPE[Iterator] VAR[java.util.Iterator] OP[assign]
CALL[javax.swing.JPanel,add,1,java.awt.Component] PARA[CALL[null,createGlue]] +++$+++  PARENTHESESSTART VAR[javax.swing.JPasswordField] PARENTHESESEND EOL
CALL[javax.swing.JPanel,add,1,java.awt.Component] PARA[VAR[javax.swing.JButton]] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND EOL
CALL[javax.swing.JButton,setEnabled,1,void] PARA[LIT[Boolean]] +++$+++  LEX[run] PARENTHESESSTART PARENTHESESEND CURLYSTART
CALL[java.util.HashMap,get,1,V] PARA[VAR[java.lang.String]] +++$+++  OP[assign] PARENTHESESSTART TYPE[List] PARENTHESESEND
CALL[java.util.List,iterator,0,java.util.Iterator<E>] +++$+++  CURLYSTART TYPE[Iterator] VAR[java.util.Iterator] OP[assign]
CALL[java.util.Iterator,next,0,E] +++$+++  OP[assign] PARENTHESESSTART TYPE[DRI] PARENTHESESEND
CALL[java.awt.datatransfer.DataFlavor,equals,1,boolean] PARA[VAR[java.awt.datatransfer.DataFlavor]] +++$+++  VAR[java.awt.datatransfer.DataFlavor] PARENTHESESEND CURLYSTART RETURN
CALL[java.awt.datatransfer.DataFlavor,equals,1,boolean] PARA[VAR[java.awt.datatransfer.DataFlavor]] +++$+++  VAR[java.awt.datatransfer.DataFlavor] PARENTHESESEND CURLYSTART RETURN
CALL[java.io.File,getParent,0,java.lang.String] +++$+++  COMMA NEW TYPE[File] PARENTHESESSTART
CALL[java.awt.Color,getBlue,0,int] +++$+++  PARENTHESESSTART INT PARENTHESESEND PARENTHESESSTART
CALL[java.util.Calendar,getTimeInMillis,0,long] +++$+++  OP[assign] NEW TYPE[Date] PARENTHESESSTART
CALL[java.io.File,exists,0,boolean] +++$+++  EOL IF PARENTHESESSTART OP[not]
CALL[javax.swing.JFrame,getHeight,0,int] +++$+++  OP[multiply] OP[greaterThan] FIELD[width,java.awt.Dimension] PARENTHESESEND
CALL[javax.swing.JEditorPane,setContentType,1,void] PARA[LIT[Stirng]] +++$+++  LEX[makeHTMLPane] PARENTHESESSTART PARENTHESESEND CURLYSTART
CALL[java.lang.Exception,printStackTrace,0,void] +++$+++  TYPE[Exception] VAR[java.lang.Exception] PARENTHESESEND CURLYSTART
CALL[java.awt.Container,getComponent,1,java.awt.Component] PARA[VAR[INT]] +++$+++  CURLYSTART TYPE[Component] VAR[java.awt.Component] OP[assign]
CALL[java.util.Enumeration,nextElement,0,E] +++$+++  OP[assign] PARENTHESESSTART TYPE[JMenuItem] PARENTHESESEND
CALL[java.util.Vector,add,1,boolean] PARA[VAR[java.awt.event.ActionListener]] +++$+++  LEX[ActionListener] VAR[java.awt.event.ActionListener] PARENTHESESEND CURLYSTART
CALL[ca.spaz.gui.WrapperDialog,setLocationRelativeTo,1,void] PARA[VAR[java.awt.Component]] +++$+++  COMMA LEX[wp] PARENTHESESEND EOL
CALL[java.util.List,add,1,boolean] PARA[VAR[java.lang.String]] +++$+++  LEX[float] VAR[FLOAT] PARENTHESESEND CURLYSTART
CALL[java.util.List,size,0,int] +++$+++  IF PARENTHESESSTART VAR[INT] OP[lessThan]
CALL[java.io.File,length,0,long] +++$+++  ARRAYSTART PARENTHESESSTART INT PARENTHESESEND
CALL[java.io.PrintWriter,flush,0,void] +++$+++  OP[sum] VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.net.Socket,getInputStream,0,java.io.InputStream] +++$+++  EOL TYPE[InputStream] VAR[java.io.InputStream] OP[assign]
CALL[java.lang.String,matches,1,boolean] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.util.Map,get,1,V] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESEND CURLYSTART VAR[java.lang.Object] OP[assign]
CALL[java.util.Map,get,1,V] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESEND CURLYSTART VAR[java.lang.Object] OP[assign]
CALL[java.lang.String,substring,2,java.lang.String] PARA[LIT[Integer]] PARA[LIT[Integer]] +++$+++  PARENTHESESEND CURLYSTART RETURN PARENTHESESSTART
CALL[java.net.URL,getPort,0,int] +++$+++  CURLYSTART INT VAR[INT] OP[assign]
CALL[java.net.URL,getDefaultPort,0,int] +++$+++  PARENTHESESEND OP[assign] OP[assign] OP[ternaryTrue]
CALL[java.util.List,addAll,1,boolean] PARA[VAR[java.util.Collection]] +++$+++  VAR[INT] PARENTHESESEND EOL CURLYEND
CALL[java.util.List,addAll,1,boolean] PARA[VAR[java.util.Collection]] +++$+++  PARENTHESESSTART VAR[java.util.List] PARENTHESESEND EOL
CALL[java.lang.String,replaceAll,2,java.lang.String] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND EOL VAR[java.lang.String] OP[assign]
CALL[java.lang.StringBuilder,toString,0,java.lang.String] +++$+++  PARENTHESESEND EOL CURLYEND RETURN
CALL[java.io.ByteArrayOutputStream,toByteArray,0,byte[]] +++$+++  OP[assign] NEW TYPE[String] PARENTHESESSTART
CALL[java.util.LinkedList,size,0,int] +++$+++  PARENTHESESEND OP[bitwiseOr] OP[bitwiseOr] PARENTHESESSTART
CALL[java.util.LinkedList,add,1,boolean] PARA[VAR[com.aelitis.azureus.core.content.RelatedContentManager.DownloadInfo]] +++$+++  OP[not] OP[assign] PARENTHESESEND CURLYSTART
CALL[java.lang.String,length,0,int] +++$+++  OP[assign] LEX[tag.substring] PARENTHESESSTART COMMA
CALL[java.util.ArrayList,size,0,int] +++$+++  PARENTHESESSTART NEW TYPE[ClientMessage] ARRAYSTART
CALL[java.lang.Throwable,printStackTrace,0,void] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.lang.Object]] +++$+++  PARENTHESESSTART VAR[java.util.Map] PARENTHESESEND CURLYSTART
CALL[java.lang.Long,longValue,0,long] +++$+++  LEX[id.longValue] PARENTHESESSTART PARENTHESESEND COMMA
CALL[java.util.Iterator,hasNext,0,boolean] +++$+++  LEX[completionListeners.iterator] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.net.InetAddress,equals,1,boolean] PARA[VAR[java.net.InetAddress]] +++$+++  OP[assign] NULL OP[bitwiseAnd] OP[bitwiseAnd]
CALL[java.util.Map,entrySet,0,java.util.Set<java.util.Map.Entry<K, V>>] +++$+++  TYPE[String] OP[greaterThan] VAR[java.util.Map.Entry] OP[ternaryFalse]
CALL[java.net.InetSocketAddress,getAddress,0,java.net.InetAddress] +++$+++  PARENTHESESEND CURLYSTART LEX[renderer.setAddress] PARENTHESESSTART
CALL[java.net.InetSocketAddress,getAddress,0,java.net.InetAddress] +++$+++  PARENTHESESEND EOL LEX[device.setAddress] PARENTHESESSTART
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[VAR[java.lang.String]] +++$+++  OP[ternaryTrue] OP[ternaryFalse] PARENTHESESEND EOL
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[VAR[java.lang.String]] +++$+++  LEX[res.append] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[VAR[java.lang.String]] +++$+++  OP[ternaryTrue] OP[ternaryFalse] PARENTHESESEND EOL
CALL[java.lang.StringBuffer,toString,0,java.lang.String] +++$+++  PARENTHESESEND EOL RETURN PARENTHESESSTART
CALL[java.util.List,size,0,int] +++$+++  OP[assign] EOL VAR[INT] OP[lessThan]
CALL[java.lang.Throwable,printStackTrace,0,void] +++$+++  TYPE[Throwable] VAR[java.lang.Throwable] PARENTHESESEND CURLYSTART
CALL[java.util.Set,size,0,int] +++$+++  LEX[Math.max] PARENTHESESSTART VAR[INT] OP[sub]
CALL[java.util.Map,containsKey,1,boolean] PARA[VAR[java.nio.channels.SocketChannel]] +++$+++  CURLYSTART IF PARENTHESESSTART OP[not]
CALL[java.nio.ByteBuffer,position,0,int] +++$+++  PARENTHESESEND CURLYSTART LEX[b.limit] PARENTHESESSTART
CALL[java.util.List,size,0,int] +++$+++  PARENTHESESSTART NEW TYPE[Message] ARRAYSTART
CALL[java.util.LinkedList,size,0,int] +++$+++  VAR[INT] OP[assign] LEX[RandomUtils.nextInt] PARENTHESESSTART
CALL[java.util.LinkedList,size,0,int] +++$+++  PARENTHESESSTART PARENTHESESEND EOL RETURN
CALL[java.util.LinkedList,removeFirst,0,E] +++$+++  OP[assign] PARENTHESESSTART TYPE[UploadHelper] PARENTHESESEND
CALL[java.util.ArrayList,size,0,int] +++$+++  VAR[INT] OP[assign] LEX[RandomUtils.nextInt] PARENTHESESSTART
CALL[java.util.ArrayList,size,0,int] +++$+++  OP[assign] EOL VAR[INT] OP[lessThan]
CALL[java.lang.String,startsWith,1,boolean] PARA[LIT[Stirng]] +++$+++  VAR[BOOLEAN] OP[assign] OP[not] PARENTHESESSTART
CALL[java.lang.String,startsWith,1,boolean] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART PARENTHESESEND OP[bitwiseOr] OP[bitwiseOr]
CALL[java.util.Set,add,1,boolean] PARA[VAR[java.lang.String]] +++$+++  STRING VAR[java.lang.String] PARENTHESESEND CURLYSTART
CALL[java.util.Set,contains,1,boolean] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.util.Set,add,1,boolean] PARA[VAR[java.lang.String]] +++$+++  VAR[java.lang.String] PARENTHESESEND PARENTHESESEND CURLYSTART
CALL[java.util.HashMap,get,1,V] PARA[CALL[java.lang.String,substring]] +++$+++  RETURN PARENTHESESSTART TYPE[String] PARENTHESESEND
CALL[java.util.HashMap,get,1,V] PARA[VAR[java.lang.String]] +++$+++  OP[assign] PARENTHESESSTART TYPE[String] PARENTHESESEND
CALL[java.lang.String,substring,2,java.lang.String] PARA[LIT[Integer]] PARA[LIT[Integer]] +++$+++  OP[sum] OP[sum] LEX[BTPeerIDByteDecoderUtils.decodeAzStyleVersionNumber] PARENTHESESSTART
CALL[java.lang.String,substring,2,java.lang.String] PARA[LIT[Integer]] PARA[LIT[Integer]] +++$+++  TYPE[String] ARRAYSTART ARRAYEND CURLYSTART
CALL[java.lang.String,contains,1,boolean] PARA[LIT[Stirng]] +++$+++  OP[assign] VAR[java.lang.String] OP[sum] PARENTHESESSTART
CALL[java.lang.String,equalsIgnoreCase,1,boolean] PARA[LIT[Stirng]] +++$+++  CURLYEND ELSE IF PARENTHESESSTART
CALL[java.lang.String,equalsIgnoreCase,1,boolean] PARA[LIT[Stirng]] +++$+++  CURLYEND ELSE IF PARENTHESESSTART
CALL[java.util.Map,get,1,V] PARA[VAR[java.lang.String]] +++$+++  OP[assign] PARENTHESESSTART TYPE[List] PARENTHESESEND
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.lang.String]] +++$+++  ARRAYEND VAR[java.lang.String] PARENTHESESEND CURLYSTART
CALL[java.util.Set,size,0,int] +++$+++  PARENTHESESSTART NEW TYPE[String] ARRAYSTART
CALL[java.util.List,contains,1,boolean] PARA[VAR[java.lang.String]] +++$+++  CURLYEND IF PARENTHESESSTART OP[not]
CALL[java.util.Map,get,1,V] PARA[VAR[java.lang.Class]] +++$+++  OP[assign] PARENTHESESSTART TYPE[List] PARENTHESESEND
CALL[java.util.List,size,0,int] +++$+++  OP[assign] EOL VAR[INT] OP[lessThan]
CALL[java.util.List,add,1,boolean] PARA[VAR[com.aelitis.azureus.ui.UIFunctionsManager.UIFCallback]] +++$+++  PARENTHESESSTART PARENTHESESEND EOL CURLYEND
CALL[java.util.List,size,0,int] +++$+++  OP[assign] EOL VAR[INT] OP[lessThan]
CALL[java.util.List,clear,0,void] +++$+++  LEX[reset] PARENTHESESSTART PARENTHESESEND CURLYSTART
CALL[java.lang.String,substring,2,java.lang.String] PARA[LIT[Integer]] PARA[VAR[INT]] +++$+++  PARENTHESESEND EOL VAR[java.lang.String] OP[assign]
CALL[java.io.BufferedReader,readLine,0,java.lang.String] +++$+++  PARENTHESESEND CURLYSTART VAR[java.lang.String] OP[assign]
CALL[java.io.BufferedReader,ready,0,boolean] +++$+++  PARENTHESESSTART VAR[BOOLEAN] OP[bitwiseAnd] OP[bitwiseAnd]
CALL[java.lang.String,replace,2,java.lang.String] PARA[LIT[Character]] PARA[LIT[Character]] +++$+++  RETURN NULL EOL RETURN
CALL[java.lang.String,indexOf,1,int] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESEND CURLYSTART VAR[INT] OP[assign]
CALL[java.lang.String,lastIndexOf,1,int] PARA[VAR[java.lang.String]] +++$+++  VAR[java.lang.String] EOL VAR[INT] OP[assign]
CALL[java.lang.String,lastIndexOf,1,int] PARA[VAR[java.lang.String]] +++$+++  VAR[java.lang.String] EOL VAR[INT] OP[assign]
CALL[java.lang.String,length,0,int] +++$+++  LEX[str.substring] PARENTHESESSTART VAR[INT] OP[sum]
CALL[java.lang.String,startsWith,1,boolean] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESEND EOL WHILE PARENTHESESSTART
CALL[java.util.StringTokenizer,nextToken,0,java.lang.String] +++$+++  PARENTHESESEND CURLYSTART LEX[list.add] PARENTHESESSTART
CALL[java.lang.String,length,0,int] +++$+++  BYTE ARRAYSTART PARENTHESESSTART PARENTHESESSTART
CALL[java.lang.String,length,0,int] +++$+++  IF PARENTHESESSTART LEX[data.charAt] PARENTHESESSTART
CALL[java.lang.String,length,0,int] +++$+++  VAR[BYTE] ARRAYSTART LEX[data.charAt] PARENTHESESSTART
CALL[java.lang.String,length,0,int] +++$+++  VAR[BYTE] ARRAYSTART LEX[data.charAt] PARENTHESESSTART
CALL[java.lang.String,length,0,int] +++$+++  VAR[BYTE] ARRAYSTART LEX[data.charAt] PARENTHESESSTART
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[VAR[java.lang.String]] +++$+++  LEX[res.append] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.lang.String,matches,1,boolean] PARA[VAR[java.lang.String]] +++$+++  THROWS LEX[IOException] CURLYSTART RETURN
CALL[java.io.File,renameTo,1,boolean] PARA[VAR[java.io.File]] +++$+++  VAR[java.lang.String] OP[sum] PARENTHESESEND EOL
CALL[java.lang.Integer,longValue,0,long] +++$+++  PARENTHESESEND VAR[java.lang.Object] EOL RETURN
CALL[java.lang.String,startsWith,1,boolean] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART PARENTHESESEND OP[bitwiseOr] OP[bitwiseOr]
CALL[java.io.File,isDirectory,0,boolean] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.util.List,size,0,int] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.util.Stack,peek,0,E] +++$+++  RETURN PARENTHESESSTART TYPE[IProgressReporter] PARENTHESESEND
CALL[java.lang.Thread,setDaemon,1,void] PARA[LIT[Boolean]] +++$+++  EOL CURLYEND CURLYEND EOL
CALL[java.util.zip.ZipOutputStream,closeEntry,0,void] +++$+++  VAR[INT] PARENTHESESEND EOL CURLYEND
CALL[java.lang.InterruptedException,printStackTrace,0,void] +++$+++  TYPE[InterruptedException] VAR[java.lang.InterruptedException] PARENTHESESEND CURLYSTART
CALL[java.util.concurrent.atomic.AtomicBoolean,get,0,boolean] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.lang.String,length,0,int] +++$+++  VAR[java.lang.String] OP[sum] OP[assign] PARENTHESESSTART
CALL[java.io.File,getName,0,java.lang.String] +++$+++  PARENTHESESEND EOL LEX[fDialog.setFileName] PARENTHESESSTART
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[CALL[null,valueOf]] +++$+++  OP[greaterThan] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.util.HashMap,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.lang.String,equalsIgnoreCase,1,boolean] PARA[VAR[java.lang.String]] +++$+++  CURLYEND IF PARENTHESESSTART OP[not]
CALL[java.io.Reader,close,0,void] +++$+++  OP[assign] NULL PARENTHESESEND CURLYSTART
CALL[java.lang.String,toLowerCase,0,java.lang.String] +++$+++  PARENTHESESEND CURLYSTART LEX[usersMap.remove] PARENTHESESSTART
CALL[java.util.List,remove,1,boolean] PARA[VAR[java.lang.Class]] +++$+++  LEX[Class] VAR[java.lang.Class] PARENTHESESEND CURLYSTART
CALL[java.util.List,size,0,int] +++$+++  OP[sum] VAR[INT] OP[sum] OP[sum]
CALL[java.util.regex.Matcher,group,1,java.lang.String] PARA[LIT[Integer]] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.io.PrintStream,println,1,void] PARA[LIT[Stirng]] +++$+++  RETURN LEX[userProfile] EOL CURLYEND
CALL[java.util.Iterator,next,0,E] +++$+++  OP[assign] PARENTHESESSTART TYPE[String] PARENTHESESEND
CALL[java.lang.String,indexOf,1,int] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.util.List,add,1,boolean] PARA[VAR[java.util.List]] +++$+++  PARENTHESESEND PARENTHESESEND PARENTHESESEND EOL
CALL[java.util.List,size,0,int] +++$+++  TYPE[String] OP[greaterThan] OP[greaterThan] PARENTHESESSTART
CALL[java.util.Map,clear,0,void] +++$+++  LEX[tls.get] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.util.Map,putAll,1,void] PARA[VAR[java.util.Map]] +++$+++  LEX[tls_map.clear] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.util.Map,get,1,V] PARA[FIELD[TorrentUtils]] +++$+++  COMMA TYPE[Object] OP[greaterThan] PARENTHESESEND
CALL[java.util.concurrent.atomic.AtomicLong,incrementAndGet,0,long] +++$+++  CURLYSTART LONG VAR[LONG] OP[assign]
CALL[java.util.jar.JarOutputStream,write,3,void] PARA[VAR[BYTE]] PARA[LIT[Integer]] PARA[VAR[INT]] +++$+++  OP[not] OP[assign] PARENTHESESEND CURLYSTART
CALL[java.util.Random,nextBytes,1,void] PARA[VAR[BYTE]] +++$+++  ARRAYEND VAR[BYTE] PARENTHESESEND CURLYSTART
CALL[java.util.Random,nextLong,0,long] +++$+++  CURLYSTART RETURN PARENTHESESSTART PARENTHESESSTART
CALL[java.lang.String,substring,1,java.lang.String] PARA[VAR[INT]] +++$+++  VAR[INT] PARENTHESESEND OP[sum] OP[sum]
CALL[java.util.concurrent.Semaphore,acquireUninterruptibly,0,void] +++$+++  LEX[reserve] PARENTHESESSTART PARENTHESESEND CURLYSTART
CALL[java.io.InputStream,read,1,int] PARA[VAR[BYTE]] +++$+++  CURLYSTART INT VAR[INT] OP[assign]
CALL[java.util.LinkedList,add,1,boolean] PARA[VAR[org.gudy.azureus2.core3.util.protocol.magnet.MagnetConnection2.MagnetOutputStream]] +++$+++  PARENTHESESSTART VAR[java.util.LinkedList] PARENTHESESEND CURLYSTART
CALL[java.util.List,size,0,int] +++$+++  RETURN PARENTHESESSTART LEX[values.get] PARENTHESESSTART
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[CALL[java.net.URL,getProtocol]] +++$+++  TYPE[StringBuffer] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[CALL[java.lang.String,substring]] +++$+++  OP[not] OP[assign] PARENTHESESEND CURLYSTART
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[LIT[Character]] +++$+++  OP[assign] NULL PARENTHESESEND CURLYSTART
CALL[java.net.URL,getRef,0,java.lang.String] +++$+++  EOL CURLYEND IF PARENTHESESSTART
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND EOL
CALL[java.lang.String,indexOf,1,int] PARA[LIT[Character]] +++$+++  EOL INT VAR[INT] OP[assign]
CALL[java.lang.String,substring,1,java.lang.String] PARA[VAR[INT]] +++$+++  LEX[result.append] PARENTHESESSTART VAR[java.lang.String] OP[sum]
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[LIT[Character]] +++$+++  OP[assign] NULL PARENTHESESEND CURLYSTART
CALL[java.net.URL,getQuery,0,java.lang.String] +++$+++  PARENTHESESEND EOL LEX[result.append] PARENTHESESSTART
CALL[java.net.URL,getRef,0,java.lang.String] +++$+++  EOL CURLYEND IF PARENTHESESSTART
CALL[java.lang.String,equals,1,boolean] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.lang.String,contains,1,boolean] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.util.zip.ZipEntry,isDirectory,0,boolean] +++$+++  EOL CURLYEND IF PARENTHESESSTART
CALL[java.io.ByteArrayOutputStream,toByteArray,0,byte[]] +++$+++  PARENTHESESEND CURLYSTART VAR[BYTE] OP[assign]
CALL[java.util.Iterator,next,0,E] +++$+++  OP[assign] PARENTHESESSTART LEX[threadPoolWorker] PARENTHESESEND
CALL[java.util.List,size,0,int] +++$+++  OP[assign] NEW TYPE[AERunnable] ARRAYSTART
CALL[java.io.InputStream,read,1,int] PARA[VAR[BYTE]] +++$+++  CURLYSTART INT VAR[INT] OP[assign]
CALL[java.io.ByteArrayOutputStream,toByteArray,0,byte[]] +++$+++  EOL CURLYEND RETURN PARENTHESESSTART
CALL[java.lang.Thread,start,0,void] +++$+++  PARENTHESESSTART LEX[true] PARENTHESESEND EOL
CALL[java.lang.Object,getClass,0,java.lang.Class<? extends java.lang.Object>] +++$+++  TYPE[Object] ARRAYSTART ARRAYEND CURLYSTART
CALL[java.lang.String,indexOf,1,int] PARA[LIT[Stirng]] +++$+++  CURLYSTART INT VAR[INT] OP[assign]
CALL[java.lang.String,replaceAll,2,java.lang.String] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  EOL CURLYEND VAR[java.lang.String] OP[assign]
CALL[java.lang.String,indexOf,1,int] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART PARENTHESESEND OP[bitwiseOr] OP[bitwiseOr]
CALL[java.lang.String,toLowerCase,0,java.lang.String] +++$+++  PARENTHESESEND CURLYSTART VAR[java.lang.String] OP[assign]
CALL[java.lang.String,equals,1,boolean] PARA[VAR[java.lang.String]] +++$+++  ARRAYEND EOL IF PARENTHESESSTART
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[VAR[java.util.Map]] +++$+++  COMMA VAR[java.util.Map] PARENTHESESEND EOL
CALL[java.io.FileOutputStream,close,0,void] +++$+++  VAR[java.util.Map] PARENTHESESEND PARENTHESESEND EOL
CALL[java.lang.Throwable,printStackTrace,0,void] +++$+++  TYPE[Throwable] VAR[java.lang.Throwable] PARENTHESESEND CURLYSTART
CALL[java.io.PrintWriter,flush,0,void] +++$+++  OP[assign] NULL PARENTHESESEND CURLYSTART
CALL[java.lang.String,replaceAll,2,java.lang.String] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND EOL VAR[java.lang.String] OP[assign]
CALL[java.lang.String,replaceAll,2,java.lang.String] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND EOL VAR[java.lang.String] OP[assign]
CALL[java.util.List,size,0,int] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.lang.String,endsWith,1,boolean] PARA[VAR[java.lang.String]] +++$+++  VAR[java.lang.String] PARENTHESESEND OP[bitwiseAnd] OP[bitwiseAnd]
CALL[java.io.InputStream,close,0,void] +++$+++  PARENTHESESEND CURLYSTART TRY CURLYSTART
CALL[java.lang.String,replaceAll,2,java.lang.String] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND EOL VAR[java.lang.String] OP[assign]
CALL[java.lang.String,substring,1,java.lang.String] PARA[VAR[INT]] +++$+++  PARENTHESESEND CURLYSTART VAR[java.lang.String] OP[assign]
CALL[java.util.StringTokenizer,hasMoreTokens,0,boolean] +++$+++  PARENTHESESEND EOL WHILE PARENTHESESSTART
CALL[java.lang.String,length,0,int] +++$+++  LEX[Math.random] PARENTHESESSTART PARENTHESESEND OP[multiply]
CALL[java.util.List,size,0,int] +++$+++  OP[assign] NEW TYPE[String] ARRAYSTART
CALL[java.util.Hashtable,get,1,V] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESSTART PARENTHESESSTART TYPE[List] PARENTHESESEND
CALL[java.util.Set,contains,1,boolean] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESEND CURLYSTART VAR[BOOLEAN] OP[assign]
CALL[java.net.InetAddress,getAddress,0,byte[]] +++$+++  ARRAYSTART ARRAYEND VAR[BYTE] OP[assign]
CALL[java.lang.String,equals,1,boolean] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.util.Map,get,1,V] PARA[VAR[INT]] +++$+++  OP[ternaryTrue] NULL OP[ternaryFalse] PARENTHESESSTART
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[BOOLEAN]] +++$+++  BOOLEAN VAR[BOOLEAN] PARENTHESESEND CURLYSTART
CALL[java.io.InputStream,read,0,int] +++$+++  CURLYSTART INT VAR[INT] OP[assign]
CALL[java.util.List,add,1,boolean] PARA[CALL[null,currentThread]] +++$+++  PARENTHESESSTART VAR[java.util.List] PARENTHESESEND CURLYSTART
CALL[java.net.URL,getProtocol,0,java.lang.String] +++$+++  CURLYSTART TYPE[String] VAR[java.lang.String] OP[assign]
CALL[java.io.File,exists,0,boolean] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.math.BigInteger,shiftRight,1,java.math.BigInteger] PARA[VAR[INT]] +++$+++  EOL TYPE[BigInteger] VAR[java.math.BigInteger] OP[assign]
CALL[java.math.BigInteger,subtract,1,java.math.BigInteger] PARA[CALL[java.math.BigInteger,shiftLeft]] +++$+++  EOL CURLYEND VAR[java.math.BigInteger] OP[assign]
CALL[java.math.BigInteger,add,1,java.math.BigInteger] PARA[CALL[java.math.BigInteger,shiftLeft]] +++$+++  RETURN NEW TYPE[SimpleBigDecimal] PARENTHESESSTART
CALL[java.math.BigInteger,compareTo,1,int] PARA[CALL[java.math.BigInteger,shiftLeft]] +++$+++  VAR[java.math.BigInteger] PARENTHESESEND CURLYSTART RETURN
CALL[java.security.NoSuchAlgorithmException,toString,0,java.lang.String] +++$+++  NEW TYPE[SecurityException] PARENTHESESSTART OP[sum]
CALL[java.util.List,isEmpty,0,boolean] +++$+++  PARENTHESESEND CURLYSTART RETURN OP[not]
CALL[java.io.ByteArrayOutputStream,reset,0,void] +++$+++  LEX[buffer.toByteArray] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.io.ByteArrayOutputStream,toByteArray,0,byte[]] +++$+++  PARENTHESESEND PARENTHESESEND EOL RETURN
CALL[java.lang.String,length,0,int] +++$+++  IF PARENTHESESSTART LEX[data.charAt] PARENTHESESSTART
CALL[java.lang.String,length,0,int] +++$+++  IF PARENTHESESSTART LEX[data.charAt] PARENTHESESSTART
CALL[java.lang.String,length,0,int] +++$+++  IF PARENTHESESSTART LEX[data.charAt] PARENTHESESSTART
CALL[java.lang.String,length,0,int] +++$+++  VAR[BYTE] ARRAYSTART LEX[data.charAt] PARENTHESESSTART
CALL[java.lang.String,length,0,int] +++$+++  VAR[BYTE] ARRAYSTART LEX[data.charAt] PARENTHESESSTART
CALL[java.math.BigInteger,compareTo,1,int] PARA[CALL[null,valueOf]] +++$+++  OP[assign] OP[assign] OP[bitwiseOr] OP[bitwiseOr]
CALL[java.lang.String,indexOf,2,int] PARA[LIT[Character]] PARA[VAR[INT]] +++$+++  EOL INT VAR[INT] OP[assign]
CALL[java.util.List,add,1,boolean] PARA[CALL[java.util.Enumeration,nextElement]] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND CURLYSTART
CALL[java.io.File,getName,0,java.lang.String] +++$+++  EOL TYPE[String] VAR[java.lang.String] OP[assign]
CALL[java.io.File,delete,0,boolean] +++$+++  PARENTHESESSTART PARENTHESESEND EOL CURLYEND
CALL[java.awt.event.MouseListener,mouseExited,1,void] PARA[CALL[null,convertMouseEvent]] +++$+++  LEX[MouseEvent] VAR[java.awt.event.MouseEvent] PARENTHESESEND CURLYSTART
CALL[java.awt.event.MouseListener,mouseClicked,1,void] PARA[CALL[null,convertMouseEvent]] +++$+++  LEX[MouseEvent] VAR[java.awt.event.MouseEvent] PARENTHESESEND CURLYSTART
CALL[java.awt.event.MouseMotionListener,mouseMoved,1,void] PARA[CALL[null,convertMouseEvent]] +++$+++  LEX[MouseEvent] VAR[java.awt.event.MouseEvent] PARENTHESESEND CURLYSTART
CALL[javax.swing.JComponent,getBorder,0,javax.swing.border.Border] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[javax.swing.text.JTextComponent,setSelectionEnd,1,void] PARA[VAR[INT]] +++$+++  PARENTHESESSTART VAR[INT] PARENTHESESEND EOL
CALL[java.util.Iterator,next,0,E] +++$+++  OP[assign] PARENTHESESSTART TYPE[ImageReader] PARENTHESESEND
CALL[java.awt.Font,getSize,0,int] +++$+++  VAR[java.awt.Font] OP[assign] LEX[font.deriveFont] PARENTHESESSTART
CALL[javax.swing.JComboBox,setEnabled,1,void] PARA[VAR[BOOLEAN]] +++$+++  PARENTHESESSTART VAR[BOOLEAN] PARENTHESESEND EOL
CALL[java.util.ResourceBundle,getString,1,java.lang.String] PARA[VAR[java.lang.String]] +++$+++  CURLYSTART TRY CURLYSTART RETURN
CALL[java.io.InputStream,close,0,void] +++$+++  PARENTHESESEND EOL TRY CURLYSTART
CALL[java.lang.String,equals,1,boolean] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND EOL RETURN OP[not]
CALL[java.awt.geom.GeneralPath,lineTo,2,void] PARA[VAR[FLOAT]] PARA[VAR[FLOAT]] +++$+++  COMMA VAR[FLOAT] PARENTHESESEND EOL
CALL[java.util.concurrent.CountDownLatch,countDown,0,void] +++$+++  STRING LEX[errorMessage] PARENTHESESEND CURLYSTART
CALL[java.util.Set,contains,1,boolean] PARA[VAR[com.eteks.sweethome3d.j3d.PhotoRenderer.Triangle]] +++$+++  EOL IF PARENTHESESSTART OP[not]
CALL[java.util.Set,add,1,boolean] PARA[VAR[com.eteks.sweethome3d.j3d.PhotoRenderer.Triangle]] +++$+++  VAR[com.eteks.sweethome3d.j3d.PhotoRenderer.Triangle] PARENTHESESEND PARENTHESESEND CURLYSTART
CALL[javax.swing.JMenu,add,1,javax.swing.JMenuItem] PARA[VAR[javax.swing.JCheckBoxMenuItem]] +++$+++  OP[assign] LEX[false] EOL CURLYEND
CALL[javax.swing.JMenu,remove,1,void] PARA[VAR[INT]] +++$+++  EOL LEX[i--] PARENTHESESEND CURLYSTART
CALL[java.io.ObjectInputStream,defaultReadObject,0,void] +++$+++  LEX[IOException] COMMA LEX[ClassNotFoundException] CURLYSTART
CALL[java.lang.String,split,1,java.lang.String[]] PARA[LIT[Stirng]] +++$+++  ARRAYSTART ARRAYEND VAR[java.lang.String] OP[assign]
CALL[java.io.DataInputStream,readInt,0,int] +++$+++  FINAL INT VAR[INT] OP[assign]
CALL[java.io.DataInputStream,readBoolean,0,boolean] +++$+++  ARRAYSTART VAR[INT] ARRAYEND OP[assign]
CALL[java.util.Enumeration,nextElement,0,E] +++$+++  FINAL TYPE[Object] VAR[java.lang.Object] OP[assign]
CALL[java.util.Hashtable,keys,0,java.util.Enumeration<K>] +++$+++  FINAL TYPE[Enumeration] VAR[java.util.Enumeration] OP[assign]
CALL[java.util.Enumeration,nextElement,0,E] +++$+++  PARENTHESESEND CURLYSTART LEX[v.addElement] PARENTHESESSTART
CALL[java.lang.StringBuffer,length,0,int] +++$+++  PARENTHESESEND EOL CURLYEND RETURN
CALL[javax.swing.JButton,setActionCommand,1,void] PARA[VAR[java.lang.String]] +++$+++  TYPE[JButton] PARENTHESESSTART PARENTHESESEND EOL
CALL[javax.swing.JButton,addActionListener,1,void] PARA[VAR[net.sf.latexdraw.installer.Installer.InstallerListener]] +++$+++  PARENTHESESSTART VAR[java.lang.String] PARENTHESESEND EOL
CALL[javax.swing.JPanel,add,1,java.awt.Component] PARA[VAR[javax.swing.JButton]] +++$+++  PARENTHESESSTART VAR[net.sf.latexdraw.installer.Installer.InstallerListener] PARENTHESESEND EOL
CALL[javax.swing.JButton,setActionCommand,1,void] PARA[VAR[java.lang.String]] +++$+++  TYPE[JButton] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.io.File,getName,0,java.lang.String] +++$+++  FINAL TYPE[String] VAR[java.lang.String] OP[assign]
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.awt.Color]] +++$+++  COMMA VAR[java.awt.Color] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.awt.Color]] +++$+++  COMMA VAR[java.awt.Color] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.awt.Color]] +++$+++  COMMA VAR[java.awt.Color] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.awt.Color]] +++$+++  COMMA VAR[java.awt.Color] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.awt.Color]] +++$+++  COMMA VAR[java.awt.Color] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.awt.Color]] +++$+++  COMMA VAR[java.awt.Color] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.awt.Color]] +++$+++  COMMA VAR[java.awt.Color] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.awt.Color]] +++$+++  COMMA VAR[java.awt.Color] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.awt.Color]] +++$+++  COMMA VAR[java.awt.Color] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.awt.Color]] +++$+++  COMMA VAR[java.awt.Color] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.awt.Color]] +++$+++  COMMA VAR[java.awt.Color] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.awt.Color]] +++$+++  COMMA VAR[java.awt.Color] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.awt.Color]] +++$+++  COMMA VAR[java.awt.Color] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.awt.Color]] +++$+++  COMMA VAR[java.awt.Color] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.awt.Color]] PARA[VAR[java.lang.String]] +++$+++  COMMA VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.awt.Color]] PARA[VAR[java.lang.String]] +++$+++  COMMA VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.awt.Color]] PARA[VAR[java.lang.String]] +++$+++  COMMA VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.awt.Color]] PARA[VAR[java.lang.String]] +++$+++  COMMA VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.awt.Color]] PARA[VAR[java.lang.String]] +++$+++  COMMA VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.awt.Color]] PARA[VAR[java.lang.String]] +++$+++  COMMA VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.awt.Color]] PARA[VAR[java.lang.String]] +++$+++  COMMA VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.awt.Color]] PARA[VAR[java.lang.String]] +++$+++  COMMA VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.lang.String,length,0,int] +++$+++  VAR[java.lang.String] EOL IF PARENTHESESSTART
CALL[java.awt.Graphics2D,fill,1,void] PARA[VAR[java.awt.geom.Rectangle2D]] +++$+++  PARENTHESESSTART VAR[java.awt.geom.Rectangle2D] PARENTHESESEND EOL
CALL[java.util.Map,clear,0,void] +++$+++  LEX[createColourHashTable] PARENTHESESSTART PARENTHESESEND CURLYSTART
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.awt.Color]] +++$+++  COMMA VAR[java.awt.Color] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.awt.Color]] +++$+++  COMMA VAR[java.awt.Color] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.awt.Color]] +++$+++  COMMA VAR[java.awt.Color] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.awt.Color]] +++$+++  COMMA VAR[java.awt.Color] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.awt.Color]] +++$+++  COMMA VAR[java.awt.Color] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.awt.Color]] +++$+++  COMMA VAR[java.awt.Color] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.awt.Color]] +++$+++  COMMA VAR[java.awt.Color] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.awt.Color]] +++$+++  COMMA VAR[java.awt.Color] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.awt.Color]] +++$+++  COMMA VAR[java.awt.Color] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.awt.Color]] +++$+++  COMMA VAR[java.awt.Color] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.awt.Color]] +++$+++  COMMA VAR[java.awt.Color] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.awt.Color]] PARA[VAR[java.lang.String]] +++$+++  COMMA VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.awt.Color]] PARA[VAR[java.lang.String]] +++$+++  COMMA VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.awt.Color]] PARA[VAR[java.lang.String]] +++$+++  COMMA VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.awt.Color]] PARA[VAR[java.lang.String]] +++$+++  COMMA VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.awt.Color]] PARA[VAR[java.lang.String]] +++$+++  COMMA VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.awt.Color]] PARA[VAR[java.lang.String]] +++$+++  COMMA VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.awt.Color]] PARA[VAR[java.lang.String]] +++$+++  COMMA VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.util.Map,get,1,V] PARA[VAR[java.lang.String]] +++$+++  VAR[java.lang.String] PARENTHESESEND CURLYSTART RETURN
CALL[java.util.Map,get,1,V] PARA[VAR[java.awt.Color]] +++$+++  EOL TYPE[String] VAR[java.lang.String] OP[assign]
CALL[java.util.Map,put,2,V] PARA[VAR[java.awt.Color]] PARA[VAR[java.lang.String]] +++$+++  COMMA VAR[java.awt.Color] PARENTHESESEND EOL
CALL[java.io.IOException,printStackTrace,0,void] +++$+++  TYPE[IOException] VAR[java.io.IOException] PARENTHESESEND CURLYSTART
CALL[java.lang.String,replace,2,java.lang.String] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND EOL VAR[java.lang.String] OP[assign]
CALL[java.lang.String,replace,2,java.lang.String] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND EOL VAR[java.lang.String] OP[assign]
CALL[java.lang.String,replace,2,java.lang.String] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND EOL VAR[java.lang.String] OP[assign]
CALL[java.lang.String,replace,2,java.lang.String] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND EOL VAR[java.lang.String] OP[assign]
CALL[java.lang.String,replace,2,java.lang.String] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND EOL VAR[java.lang.String] OP[assign]
CALL[java.lang.String,replace,2,java.lang.String] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND EOL VAR[java.lang.String] OP[assign]
CALL[java.lang.StringBuffer,length,0,int] +++$+++  CURLYEND CURLYEND IF PARENTHESESSTART
CALL[java.util.ArrayList,add,1,boolean] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESSTART VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.lang.StringBuffer,toString,0,java.lang.String] +++$+++  PARENTHESESEND EOL CURLYEND RETURN
CALL[java.lang.String,length,0,int] +++$+++  OP[assign] NEW TYPE[StringBuffer] PARENTHESESSTART
CALL[java.lang.String,length,0,int] +++$+++  PARENTHESESSTART VAR[INT] OP[greaterThan] OP[assign]
CALL[java.lang.String,length,0,int] +++$+++  RETURN LEX[aString.substring] PARENTHESESSTART COMMA
CALL[java.lang.String,replaceAll,2,java.lang.String] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND EOL VAR[java.lang.String] OP[assign]
CALL[java.net.URL,toURI,0,java.net.URI] +++$+++  OP[assign] NEW TYPE[File] PARENTHESESSTART
CALL[java.awt.Rectangle,getHeight,0,double] +++$+++  OP[assign] PARENTHESESSTART INT PARENTHESESEND
CALL[java.lang.String,lastIndexOf,1,int] PARA[LIT[Character]] +++$+++  CURLYEND INT VAR[INT] OP[assign]
CALL[java.lang.String,length,0,int] +++$+++  OP[bitwiseAnd] OP[bitwiseAnd] VAR[INT] OP[lessThan]
CALL[java.util.ArrayList,size,0,int] +++$+++  OP[assign] EOL VAR[INT] OP[lessThan]
CALL[java.lang.String,length,0,int] +++$+++  VAR[INT] EOL WHILE PARENTHESESSTART
CALL[javax.swing.JPanel,add,2,void] PARA[VAR[javax.swing.JRadioButton]] PARA[VAR[java.awt.GridBagConstraints]] +++$+++  COMMA COMMA PARENTHESESEND EOL
CALL[javax.swing.JPanel,add,2,void] PARA[VAR[javax.swing.JRadioButton]] PARA[VAR[java.awt.GridBagConstraints]] +++$+++  COMMA COMMA PARENTHESESEND EOL
CALL[java.lang.String,lastIndexOf,1,int] PARA[LIT[Character]] +++$+++  VAR[java.lang.String] EOL IF PARENTHESESSTART
CALL[javax.swing.JComponent,getForeground,0,java.awt.Color] +++$+++  PARENTHESESEND EOL LEX[g.setColor] PARENTHESESSTART
CALL[java.awt.Graphics,setColor,1,void] PARA[VAR[java.awt.Color]] +++$+++  COMMA VAR[INT] PARENTHESESEND EOL
CALL[java.io.File,getAbsolutePath,0,java.lang.String] +++$+++  OP[assign] LEX[s_stringMgr.getString] PARENTHESESSTART COMMA
CALL[java.lang.String,length,0,int] +++$+++  OP[assign] NULL OP[bitwiseOr] OP[bitwiseOr]
CALL[javax.swing.table.TableModel,getRowCount,0,int] +++$+++  OP[not] OP[assign] NULL OP[ternaryTrue]
CALL[javax.swing.JFileChooser,removePropertyChangeListener,1,void] PARA[VAR[net.sourceforge.squirrel_sql.fw.gui.ChooserPreviewer.ChooserListener]] +++$+++  OP[assign] NULL PARENTHESESEND CURLYSTART
CALL[java.io.File,canRead,0,boolean] +++$+++  PARENTHESESSTART PARENTHESESEND OP[bitwiseAnd] OP[bitwiseAnd]
CALL[javax.swing.JTextArea,setCaretPosition,1,void] PARA[LIT[Integer]] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND EOL
CALL[java.lang.String,hashCode,0,int] +++$+++  NULL PARENTHESESEND OP[ternaryTrue] OP[ternaryFalse]
CALL[java.util.ArrayList,size,0,int] +++$+++  OP[assign] NEW TYPE[String] ARRAYSTART
CALL[java.util.ArrayList,toArray,1,T[]] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESEND ARRAYEND EOL RETURN
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  WHILE PARENTHESESSTART LEX[Character.isWhitespace] PARENTHESESSTART
CALL[java.util.HashMap,get,1,V] PARA[VAR[java.awt.Point]] +++$+++  PARENTHESESSTART NULL OP[not] OP[assign]
CALL[javax.swing.JTable,getVisibleRect,0,java.awt.Rectangle] +++$+++  CURLYEND TYPE[Rectangle] VAR[java.awt.Rectangle] OP[assign]
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[VAR[CHAR]] +++$+++  COMMA VAR[CHAR] PARENTHESESEND EOL
CALL[java.lang.String,length,0,int] +++$+++  OP[bitwiseOr] OP[bitwiseOr] VAR[INT] OP[greaterThan]
CALL[java.lang.String,length,0,int] +++$+++  OP[assign] EOL VAR[INT] OP[lessThan]
CALL[java.sql.SQLException,getMessage,0,java.lang.String] +++$+++  OP[sum] VAR[INT] OP[sum] OP[sum]
CALL[java.lang.String,startsWith,1,boolean] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.lang.String,startsWith,1,boolean] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART PARENTHESESEND OP[bitwiseOr] OP[bitwiseOr]
CALL[javax.swing.JTextField,setName,1,void] PARA[LIT[Stirng]] +++$+++  TYPE[JTextField] PARENTHESESSTART PARENTHESESEND EOL
CALL[javax.swing.JTextField,getText,0,java.lang.String] +++$+++  PARENTHESESEND EOL LEX[_prefs.setStatementSeparator] PARENTHESESSTART
CALL[javax.swing.JTextArea,setWrapStyleWord,1,void] PARA[LIT[Boolean]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[javax.swing.JTextField,setEnabled,1,void] PARA[VAR[BOOLEAN]] +++$+++  PARENTHESESSTART VAR[BOOLEAN] PARENTHESESEND EOL
CALL[javax.swing.JPanel,add,2,void] PARA[VAR[javax.swing.JCheckBox]] PARA[VAR[java.awt.GridBagConstraints]] +++$+++  EOL FIELD[gridy,java.awt.GridBagConstraints] OP[assign] EOL
CALL[javax.swing.JPanel,add,2,void] PARA[VAR[javax.swing.JLabel]] PARA[VAR[java.awt.GridBagConstraints]] +++$+++  OP[sum] OP[sum] FIELD[gridy,java.awt.GridBagConstraints] EOL
CALL[java.awt.event.MouseEvent,getComponent,0,java.awt.Component] +++$+++  PARENTHESESEND CURLYSTART LEX[pop.show] PARENTHESESSTART
CALL[javax.swing.JMenu,setEnabled,1,void] PARA[VAR[BOOLEAN]] +++$+++  BOOLEAN VAR[BOOLEAN] PARENTHESESEND CURLYSTART
CALL[javax.swing.JSplitPane,getMaximumDividerLocation,0,int] +++$+++  PARENTHESESEND CURLYSTART LEX[_splitPn.setDividerLocation] PARENTHESESSTART
CALL[javax.swing.JPanel,add,2,void] PARA[VAR[javax.swing.JComboBox]] PARA[VAR[java.awt.GridBagConstraints]] +++$+++  COMMA COMMA PARENTHESESEND EOL
CALL[javax.swing.JLabel,setEnabled,1,void] PARA[LIT[Boolean]] +++$+++  PARENTHESESSTART LEX[false] PARENTHESESEND EOL
CALL[javax.swing.JPanel,validate,0,void] +++$+++  PARENTHESESSTART VAR[java.awt.Color] PARENTHESESEND EOL
CALL[java.util.StringTokenizer,hasMoreTokens,0,boolean] +++$+++  VAR[java.lang.String] COMMA PARENTHESESEND EOL
CALL[javax.swing.JPanel,getComponents,0,java.awt.Component[]] +++$+++  PARENTHESESSTART TYPE[Component] VAR[java.awt.Component] OP[ternaryFalse]
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  OP[assign] OP[assign] LEX[Character.isWhitespace] PARENTHESESSTART
CALL[javax.swing.JPanel,add,2,void] PARA[VAR[javax.swing.JButton]] PARA[VAR[java.awt.GridBagConstraints]] +++$+++  COMMA COMMA PARENTHESESEND EOL
CALL[javax.swing.JPanel,add,2,void] PARA[VAR[javax.swing.JButton]] PARA[VAR[java.awt.GridBagConstraints]] +++$+++  COMMA COMMA PARENTHESESEND EOL
CALL[java.lang.String,length,0,int] +++$+++  VAR[java.lang.String] OP[bitwiseAnd] OP[bitwiseAnd] OP[lessThan]
CALL[java.lang.String,startsWith,1,boolean] PARA[LIT[Stirng]] +++$+++  CURLYEND ELSE IF PARENTHESESSTART
CALL[javax.swing.JCheckBox,setEnabled,1,void] PARA[LIT[Boolean]] +++$+++  PARENTHESESSTART VAR[java.lang.String] PARENTHESESEND EOL
CALL[javax.swing.JComboBox,setSelectedItem,1,void] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND CURLYSTART
CALL[javax.swing.JCheckBox,isSelected,0,boolean] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[javax.swing.JPanel,add,2,void] PARA[VAR[javax.swing.JCheckBox]] PARA[VAR[java.awt.GridBagConstraints]] +++$+++  COMMA COMMA PARENTHESESEND EOL
CALL[javax.swing.JList,isSelectedIndex,1,boolean] PARA[VAR[INT]] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.util.SortedSet,toArray,0,java.lang.Object[]] +++$+++  PARENTHESESEND EOL LEX[notUseColsList.setListData] PARENTHESESSTART
CALL[javax.swing.JList,getModel,0,javax.swing.ListModel<E>] +++$+++  EOL TYPE[ListModel] VAR[javax.swing.ListModel] OP[assign]
CALL[java.util.ArrayList,add,1,boolean] PARA[CALL[java.lang.Object,toString]] +++$+++  VAR[java.lang.Object] PARENTHESESEND PARENTHESESEND CURLYSTART
CALL[javax.swing.ListModel,getSize,0,int] +++$+++  OP[assign] EOL VAR[INT] OP[lessThan]
CALL[java.util.Date,getTime,0,long] +++$+++  LEX[_resultsProcessingStart.getTime] PARENTHESESSTART PARENTHESESEND OP[sub]
CALL[java.lang.String,substring,1,java.lang.String] PARA[LIT[Integer]] +++$+++  PARENTHESESEND CURLYSTART VAR[java.lang.String] OP[assign]
CALL[java.lang.String,length,0,int] +++$+++  OP[assign] LEX[simpleName.substring] PARENTHESESSTART COMMA
CALL[java.util.List,clear,0,void] +++$+++  LEX[clearSchemaIndependentData] PARENTHESESSTART PARENTHESESEND CURLYSTART
CALL[javax.swing.MutableComboBoxModel,addListDataListener,1,void] PARA[VAR[javax.swing.event.ListDataListener]] +++$+++  LEX[ListDataListener] VAR[javax.swing.event.ListDataListener] PARENTHESESEND CURLYSTART
CALL[javax.swing.JTabbedPane,getSelectedIndex,0,int] +++$+++  CURLYSTART INT VAR[INT] OP[assign]
CALL[java.util.Set,iterator,0,java.util.Iterator<E>] +++$+++  TYPE[String] OP[greaterThan] VAR[java.util.Iterator] OP[assign]
CALL[java.util.Iterator,hasNext,0,boolean] +++$+++  LEX[false] EOL WHILE PARENTHESESSTART
CALL[javax.swing.JFrame,setContentPane,1,void] PARA[VAR[javax.swing.JPanel]] +++$+++  TYPE[JPanel] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.awt.event.MouseEvent,getComponent,0,java.awt.Component] +++$+++  PARENTHESESEND CURLYSTART LEX[_popUp.show] PARENTHESESSTART
CALL[java.awt.event.MouseEvent,getX,0,int] +++$+++  LEX[evt.getComponent] PARENTHESESSTART PARENTHESESEND COMMA
CALL[java.awt.event.MouseEvent,getY,0,int] +++$+++  LEX[evt.getX] PARENTHESESSTART PARENTHESESEND COMMA
CALL[java.awt.event.MouseEvent,getLocationOnScreen,0,java.awt.Point] +++$+++  LEX[_dataScalePopupWasOpenedAt.showIntervalDetails] PARENTHESESSTART VAR[javax.swing.JButton] COMMA
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  IF PARENTHESESSTART OP[assign] OP[assign]
CALL[java.lang.String,length,0,int] +++$+++  OP[assign] EOL VAR[INT] OP[lessThan]
CALL[java.io.PrintWriter,println,1,void] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND COMMA PARENTHESESEND EOL
CALL[java.io.PrintWriter,println,0,void] +++$+++  VAR[java.lang.StackTraceElement] PARENTHESESEND EOL CURLYEND
CALL[java.lang.Exception,toString,0,java.lang.String] +++$+++  PARENTHESESEND CURLYSTART LEX[logger.severe] PARENTHESESSTART
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[LIT[Stirng]] +++$+++  OP[bitwiseAnd] LEX[xff] PARENTHESESEND EOL
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[LIT[Stirng]] +++$+++  OP[greaterThan] PARENTHESESEND PARENTHESESEND EOL
CALL[java.net.InetAddress,getAddress,0,byte[]] +++$+++  ARRAYSTART ARRAYEND VAR[BYTE] OP[assign]
CALL[java.net.InetAddress,getAddress,0,byte[]] +++$+++  ARRAYSTART ARRAYEND VAR[BYTE] OP[assign]
CALL[java.net.InetAddress,getAddress,0,byte[]] +++$+++  ARRAYSTART ARRAYEND VAR[BYTE] OP[assign]
CALL[java.lang.String,replaceAll,2,java.lang.String] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND EOL VAR[java.lang.String] OP[assign]
CALL[java.util.logging.Logger,log,3,void] PARA[VAR[java.util.logging.Level]] PARA[VAR[java.lang.String]] PARA[VAR[java.lang.Throwable]] +++$+++  OP[assign] OP[sum] VAR[java.lang.String] EOL
CALL[java.util.prefs.Preferences,putBoolean,2,void] PARA[LIT[Stirng]] PARA[VAR[BOOLEAN]] +++$+++  COMMA VAR[BOOLEAN] PARENTHESESEND EOL
CALL[java.util.PropertyResourceBundle,getString,1,java.lang.String] PARA[VAR[java.lang.String]] +++$+++  CURLYSTART TYPE[String] VAR[java.lang.String] OP[assign]
CALL[java.util.prefs.Preferences,putBoolean,2,void] PARA[LIT[Stirng]] PARA[VAR[BOOLEAN]] +++$+++  COMMA VAR[INT] PARENTHESESEND EOL
CALL[java.util.prefs.Preferences,put,2,void] PARA[LIT[Stirng]] PARA[VAR[java.lang.String]] +++$+++  COMMA VAR[INT] PARENTHESESEND EOL
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Character]] +++$+++  EOL CURLYEND ELSE CURLYSTART
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Character]] +++$+++  PARENTHESESSTART VAR[BOOLEAN] PARENTHESESEND CURLYSTART
CALL[java.lang.Class,getCanonicalName,0,java.lang.String] +++$+++  VAR[java.lang.Class] PARENTHESESEND CURLYSTART RETURN
CALL[org.python.modules._threading.Mutex.Sync,release,1,boolean] PARA[LIT[Integer]] +++$+++  LEX[unlock] PARENTHESESSTART PARENTHESESEND CURLYSTART
CALL[java.lang.Thread,getName,0,java.lang.String] +++$+++  OP[not] OP[assign] NULL OP[ternaryTrue]
CALL[java.lang.Thread,setDaemon,1,void] PARA[LIT[Boolean]] +++$+++  VAR[org.python.modules._weakref.GlobalRef.RefReaper] COMMA PARENTHESESEND EOL
CALL[java.util.List,isEmpty,0,boolean] +++$+++  PARENTHESESSTART VAR[BOOLEAN] OP[bitwiseAnd] OP[bitwiseAnd]
CALL[java.util.List,add,1,boolean] PARA[VAR[java.lang.Runnable]] +++$+++  PARENTHESESSTART VAR[java.util.List] PARENTHESESEND CURLYSTART
CALL[org.python.modules.gc.WeakReferenceGC,get,0,T] +++$+++  CURLYSTART TYPE[PyObject] LEX[rfrt] OP[assign]
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[VAR[CHAR]] +++$+++  OP[lessThan] ARRAYEND PARENTHESESEND EOL
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[VAR[CHAR]] +++$+++  PARENTHESESSTART VAR[CHAR] PARENTHESESEND EOL
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[VAR[CHAR]] +++$+++  EOL CURLYEND ELSE CURLYSTART
CALL[java.lang.String,length,0,int] +++$+++  CURLYEND INT VAR[INT] OP[assign]
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  OP[lessThan] OP[lessThan] PARENTHESESEND OP[bitwiseOr]
CALL[java.util.Vector,size,0,int] +++$+++  EOL INT VAR[INT] OP[assign]
CALL[java.io.DataOutputStream,writeShort,1,void] PARA[CALL[java.lang.Short,shortValue]] +++$+++  VAR[INT] OP[sum] PARENTHESESEND EOL
CALL[java.util.Vector,size,0,int] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.String,indexOf,2,int] PARA[LIT[Stirng]] PARA[VAR[INT]] +++$+++  OP[sum] EOL VAR[INT] OP[assign]
CALL[java.lang.ThreadLocal,get,0,T] +++$+++  OP[assign] PARENTHESESSTART TYPE[PyObject] PARENTHESESEND
CALL[java.util.ArrayList,add,1,boolean] PARA[VAR[java.lang.String]] +++$+++  CURLYSTART CONTINUE EOL CURLYEND
CALL[java.util.Properties,containsKey,1,boolean] PARA[VAR[java.lang.String]] +++$+++  OP[assign] NULL OP[bitwiseOr] OP[bitwiseOr]
CALL[java.nio.charset.Charset,decode,1,java.nio.CharBuffer] PARA[VAR[java.nio.ByteBuffer]] +++$+++  EOL TYPE[CharSequence] VAR[java.lang.CharSequence] OP[assign]
CALL[java.nio.ByteBuffer,compact,0,java.nio.ByteBuffer] +++$+++  PARENTHESESSTART VAR[java.nio.ByteBuffer] PARENTHESESEND EOL
CALL[java.io.InputStream,reset,0,void] +++$+++  RETURN LEX[true] EOL CURLYEND
CALL[java.lang.String,equals,1,boolean] PARA[LIT[Stirng]] +++$+++  EOL CURLYEND IF PARENTHESESSTART
CALL[java.lang.String,toCharArray,0,char[]] +++$+++  ARRAYSTART ARRAYEND VAR[CHAR] OP[assign]
CALL[java.util.Iterator,next,0,E] +++$+++  CURLYSTART INT VAR[INT] OP[assign]
CALL[java.util.Iterator,hasNext,0,boolean] +++$+++  VAR[INT] COMMA PARENTHESESEND EOL
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  EOL CURLYEND VAR[CHAR] OP[assign]
CALL[java.lang.StringBuilder,toString,0,java.lang.String] +++$+++  OP[sum] EOL CURLYEND RETURN
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  EOL INT VAR[INT] OP[assign]
CALL[java.io.File,getCanonicalPath,0,java.lang.String] +++$+++  OP[assign] NEW TYPE[File] PARENTHESESSTART
CALL[java.io.File,getParentFile,0,java.io.File] +++$+++  CURLYSTART TYPE[File] VAR[java.io.File] OP[assign]
CALL[java.io.File,list,0,java.lang.String[]] +++$+++  ARRAYSTART ARRAYEND VAR[java.lang.String] OP[assign]
CALL[java.util.List,remove,1,boolean] PARA[VAR[org.python.core.BytecodeNotification.Callback]] +++$+++  VAR[org.python.core.BytecodeNotification.Callback] PARENTHESESEND CURLYSTART RETURN
CALL[java.util.List,clear,0,void] +++$+++  LEX[clear] PARENTHESESSTART PARENTHESESEND CURLYSTART
CALL[java.lang.String,indexOf,1,int] PARA[LIT[Stirng]] +++$+++  CURLYEND INT VAR[INT] OP[assign]
CALL[java.lang.String,length,0,int] +++$+++  PARENTHESESSTART VAR[java.lang.String] COMMA COMMA
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[VAR[java.lang.String]] +++$+++  OP[ternaryFalse] VAR[java.lang.String] PARENTHESESEND CURLYSTART
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND CURLYSTART
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[VAR[java.lang.String]] +++$+++  LEX[result.append] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.lang.String,length,0,int] +++$+++  OP[assign] NULL OP[bitwiseOr] OP[bitwiseOr]
CALL[java.util.Set,add,1,boolean] PARA[THIS[null]] +++$+++  RETURN NULL EOL CURLYEND
CALL[java.util.Set,clear,0,void] +++$+++  OP[assign] NULL PARENTHESESEND CURLYSTART
CALL[java.util.logging.Logger,isLoggable,1,boolean] PARA[VAR[java.util.logging.Level]] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.lang.String,equals,1,boolean] PARA[VAR[java.lang.String]] +++$+++  VAR[java.lang.String] PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.String,equals,1,boolean] PARA[VAR[java.lang.String]] +++$+++  VAR[java.lang.String] PARENTHESESEND OP[bitwiseOr] OP[bitwiseOr]
CALL[java.util.List,add,1,boolean] PARA[LIT[Stirng]] +++$+++  LEX[coreLibFiles.add] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.util.List,add,1,boolean] PARA[LIT[Stirng]] +++$+++  LEX[coreLibFiles.add] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.util.List,add,1,boolean] PARA[LIT[Stirng]] +++$+++  LEX[coreLibFiles.add] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.lang.Class,getName,0,java.lang.String] +++$+++  CURLYSTART TYPE[String] VAR[java.lang.String] OP[assign]
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[VAR[java.lang.String]] +++$+++  NULL EOL PARENTHESESEND CURLYSTART
CALL[java.io.BufferedReader,readLine,0,java.lang.String] +++$+++  PARENTHESESEND PARENTHESESEND PARENTHESESEND EOL
CALL[java.util.List,toArray,1,T[]] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESSTART PARENTHESESEND ARRAYEND EOL
CALL[java.util.Map,values,0,java.util.Collection<V>] +++$+++  CURLYSTART TYPE[Collection] VAR[java.util.Collection] OP[assign]
CALL[java.lang.String,startsWith,1,boolean] PARA[LIT[Stirng]] +++$+++  CURLYEND ELSE IF PARENTHESESSTART
CALL[java.util.Map,containsKey,1,boolean] PARA[VAR[java.lang.String]] +++$+++  CURLYEND ELSE CURLYSTART RETURN
CALL[java.io.File,getPath,0,java.lang.String] +++$+++  NEW TYPE[IOException] PARENTHESESSTART OP[sum]
CALL[java.io.File,isFile,0,boolean] +++$+++  EOL IF PARENTHESESSTART OP[not]
CALL[java.io.InputStream,close,0,void] +++$+++  PARENTHESESEND THROWS LEX[IOException] CURLYSTART
CALL[java.nio.CharBuffer,remaining,0,int] +++$+++  LEX[out.remaining] PARENTHESESSTART PARENTHESESEND OP[lessThan]
CALL[java.nio.CharBuffer,remaining,0,int] +++$+++  VAR[INT] OP[assign] LEX[Math.min] PARENTHESESSTART
CALL[java.util.List,iterator,0,java.util.Iterator<E>] +++$+++  PARENTHESESEND PARENTHESESEND EOL RETURN
CALL[java.lang.StringBuffer,toString,0,java.lang.String] +++$+++  PARENTHESESEND EOL LEX[writer.write] PARENTHESESSTART
CALL[java.awt.event.ActionListener,actionPerformed,1,void] PARA[VAR[java.awt.event.ActionEvent]] +++$+++  OP[ternaryFalse] VAR[java.util.List] PARENTHESESEND CURLYSTART
CALL[java.awt.Component,setEnabled,1,void] PARA[LIT[Boolean]] +++$+++  OP[ternaryFalse] VAR[java.util.List] PARENTHESESEND CURLYSTART
CALL[javax.swing.AbstractButton,setSelected,1,void] PARA[LIT[Boolean]] +++$+++  OP[ternaryFalse] VAR[java.util.List] PARENTHESESEND CURLYSTART
CALL[javax.swing.JTable,getSelectedRowCount,0,int] +++$+++  PARENTHESESEND EOL VAR[INT] OP[assign]
CALL[java.util.ArrayList,add,1,boolean] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESEND OP[greaterThan] PARENTHESESEND CURLYSTART
CALL[net.pandoragames.far.ui.swing.menu.FarMenuBar,add,1,javax.swing.JMenu] PARA[VAR[javax.swing.JMenu]] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND EOL
CALL[javax.swing.JMenu,add,1,javax.swing.JMenuItem] PARA[VAR[javax.swing.JMenuItem]] +++$+++  PARENTHESESEND PARENTHESESEND PARENTHESESEND EOL
CALL[java.util.List,contains,1,boolean] PARA[VAR[java.lang.Object]] +++$+++  CURLYSTART IF PARENTHESESSTART OP[not]
CALL[java.util.List,remove,1,E] PARA[VAR[INT]] +++$+++  PARENTHESESSTART VAR[java.lang.Object] PARENTHESESEND EOL
CALL[java.lang.String,substring,2,java.lang.String] PARA[VAR[INT]] PARA[VAR[INT]] +++$+++  VAR[INT] OP[assign] LEX[Integer.parseInt] PARENTHESESSTART
CALL[java.io.File,isDirectory,0,boolean] +++$+++  EOL IF PARENTHESESSTART OP[not]
CALL[java.io.File,isDirectory,0,boolean] +++$+++  EOL IF PARENTHESESSTART OP[not]
CALL[java.lang.String,hashCode,0,int] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.io.File,exists,0,boolean] +++$+++  CURLYSTART IF PARENTHESESSTART OP[not]
CALL[java.io.Writer,write,1,void] PARA[LIT[Stirng]] +++$+++  LEX[comment.split] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.io.Writer,write,1,void] PARA[VAR[java.lang.String]] +++$+++  LEX[writer.write] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.util.Properties,getProperty,1,java.lang.String] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESEND PARENTHESESEND LEX[form.setMatchSeparator] PARENTHESESSTART
CALL[java.util.Properties,containsKey,1,boolean] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.lang.String,hashCode,0,int] +++$+++  NULL PARENTHESESEND OP[ternaryTrue] OP[ternaryFalse]
CALL[java.awt.Graphics2D,getFontRenderContext,0,java.awt.font.FontRenderContext] +++$+++  VAR[java.awt.font.GlyphVector] OP[assign] LEX[font.createGlyphVector] PARENTHESESSTART
CALL[java.lang.String,toLowerCase,0,java.lang.String] +++$+++  VAR[java.lang.String] OP[assign] LEX[normalizedNames.get] PARENTHESESSTART
CALL[org.geoserver.params.extractor.Utils.closeQuietly(T).T,close,0,void] +++$+++  PARENTHESESEND CURLYSTART TRY CURLYSTART
CALL[java.io.File,delete,0,boolean] +++$+++  OP[lessThan] VAR[LONG] PARENTHESESEND CURLYSTART
CALL[java.awt.Color,getAlpha,0,int] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.lang.String,substring,1,java.lang.String] PARA[LIT[Integer]] +++$+++  PARENTHESESEND CURLYSTART VAR[java.lang.String] OP[assign]
CALL[java.lang.String,substring,2,java.lang.String] PARA[LIT[Integer]] PARA[LIT[Integer]] +++$+++  PARENTHESESEND COMMA LEX[Integer.valueOf] PARENTHESESSTART
CALL[java.lang.Integer,compareTo,1,int] PARA[FIELD[org.geoserver.jdbcconfig.internal.PropertyType]] +++$+++  PARENTHESESEND CURLYSTART VAR[INT] OP[assign]
CALL[java.io.IOException,getMessage,0,java.lang.String] +++$+++  LEX[file.path] PARENTHESESSTART PARENTHESESEND COMMA
CALL[java.lang.Class,cast,1,T] PARA[VAR[java.lang.Object]] +++$+++  PARENTHESESEND EOL CURLYEND RETURN
CALL[java.util.List,add,1,boolean] PARA[FIELD[EoLayerType]] +++$+++  PARENTHESESSTART VAR[BOOLEAN] PARENTHESESEND CURLYSTART
CALL[java.io.File,isDirectory,0,boolean] +++$+++  NULL EOL IF PARENTHESESSTART
CALL[java.util.List,get,1,E] PARA[VAR[INT]] +++$+++  OP[assign] OP[assign] OP[bitwiseOr] OP[bitwiseOr]
CALL[java.util.List,get,1,E] PARA[VAR[INT]] +++$+++  TYPE[String] OP[greaterThan] VAR[java.util.List] OP[assign]
CALL[java.lang.String,hashCode,0,int] +++$+++  NULL PARENTHESESEND OP[ternaryTrue] OP[ternaryFalse]
CALL[java.awt.image.BufferedImage,getHeight,0,int] +++$+++  PARENTHESESSTART PARENTHESESSTART VAR[INT] OP[sub]
CALL[java.awt.Graphics2D,setFont,1,void] PARA[VAR[java.awt.Font]] +++$+++  PARENTHESESSTART LEX[req] PARENTHESESEND EOL
CALL[java.awt.image.BufferedImage,getHeight,0,int] +++$+++  OP[not] OP[assign] NULL OP[ternaryTrue]
CALL[java.awt.Dimension,getWidth,0,double] +++$+++  LEX[Math.max] PARENTHESESSTART VAR[DOUBLE] COMMA
CALL[java.awt.image.BufferedImage,createGraphics,0,java.awt.Graphics2D] +++$+++  EOL TYPE[Graphics2D] VAR[java.awt.Graphics2D] OP[assign]
CALL[java.awt.Graphics2D,dispose,0,void] +++$+++  COMMA VAR[BOOLEAN] PARENTHESESEND EOL
CALL[java.awt.image.BufferedImage,createGraphics,0,java.awt.Graphics2D] +++$+++  PARENTHESESEND EOL VAR[java.awt.Graphics2D] OP[assign]
CALL[java.util.List,isEmpty,0,boolean] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.String,replaceFirst,2,java.lang.String] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND EOL VAR[java.lang.String] OP[assign]
CALL[java.lang.String,substring,2,java.lang.String] PARA[LIT[Integer]] PARA[LIT[Integer]] +++$+++  VAR[INT] OP[assign] LEX[Integer.valueOf] PARENTHESESSTART
CALL[java.lang.String,substring,2,java.lang.String] PARA[LIT[Integer]] PARA[LIT[Integer]] +++$+++  VAR[INT] OP[assign] LEX[Integer.valueOf] PARENTHESESSTART
CALL[java.lang.String,length,0,int] +++$+++  VAR[INT] EOL SWITCH PARENTHESESSTART
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[CALL[java.util.List,get]] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND CURLYSTART
CALL[java.util.Timer,cancel,0,void] +++$+++  OP[assign] NULL PARENTHESESEND CURLYSTART
CALL[java.util.Map,size,0,int] +++$+++  OP[assign] NEW TYPE[String] ARRAYSTART
CALL[java.io.InputStream,read,1,int] PARA[VAR[BYTE]] +++$+++  PARENTHESESSTART PARENTHESESSTART VAR[INT] OP[assign]
CALL[java.util.Map,entrySet,0,java.util.Set<java.util.Map.Entry<K, V>>] +++$+++  TYPE[String] OP[greaterThan] VAR[java.util.Map.Entry] OP[ternaryFalse]
CALL[java.util.zip.ZipEntry,isDirectory,0,boolean] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.io.InputStream,read,0,int] +++$+++  LEX[resource.in] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.lang.String,substring,2,java.lang.String] PARA[LIT[Integer]] PARA[VAR[INT]] +++$+++  CURLYEND ELSE CURLYSTART RETURN
CALL[java.lang.String,substring,2,java.lang.String] PARA[VAR[INT]] PARA[VAR[INT]] +++$+++  DO CURLYSTART VAR[java.lang.String] OP[assign]
CALL[java.io.FileOutputStream,write,1,void] PARA[VAR[BYTE]] +++$+++  PARENTHESESEND THROWS LEX[IOException] CURLYSTART
CALL[java.lang.NoSuchMethodException,getMessage,0,java.lang.String] +++$+++  PARENTHESESEND CURLYSTART VAR[java.lang.String] OP[assign]
CALL[java.lang.ClassNotFoundException,getMessage,0,java.lang.String] +++$+++  PARENTHESESEND CURLYSTART VAR[java.lang.String] OP[assign]
CALL[java.util.Map.Entry,getKey,0,K] +++$+++  IF PARENTHESESSTART LEX[fo.get] PARENTHESESSTART
CALL[java.util.Map,get,1,V] PARA[CALL[java.util.Map.Entry,getKey]] +++$+++  VAR[java.lang.Object] EOL IF PARENTHESESSTART
CALL[java.lang.String,replaceAll,2,java.lang.String] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  VAR[java.lang.String] PARENTHESESEND CURLYSTART RETURN
CALL[java.io.InputStream,available,0,int] +++$+++  CURLYEND RETURN VAR[BOOLEAN] OP[ternaryTrue]
CALL[java.util.Map,equals,1,boolean] PARA[VAR[java.lang.Object]] +++$+++  VAR[java.lang.Object] PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.String,indexOf,1,int] PARA[LIT[Character]] +++$+++  PARENTHESESEND OP[bitwiseAnd] OP[bitwiseAnd] PARENTHESESSTART
CALL[java.lang.String,indexOf,1,int] PARA[LIT[Character]] +++$+++  EOL CURLYEND IF PARENTHESESSTART
CALL[java.lang.String,length,0,int] +++$+++  OP[assign] LEX[url.substring] PARENTHESESSTART COMMA
CALL[java.lang.StringBuilder,length,0,int] +++$+++  PARENTHESESEND CURLYSTART LEX[result.setLength] PARENTHESESSTART
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESSTART PARENTHESESEND EOL CURLYEND
CALL[java.lang.String,lastIndexOf,1,int] PARA[LIT[Character]] +++$+++  CURLYEND INT VAR[INT] OP[assign]
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.lang.String]] +++$+++  OP[assign] VAR[java.lang.String] EOL CURLYEND
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[VAR[CHAR]] +++$+++  LEX[sb.append] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.lang.String,length,0,int] +++$+++  OP[assign] EOL VAR[INT] OP[lessThan]
CALL[java.lang.StringBuilder,toString,0,java.lang.String] +++$+++  PARENTHESESEND EOL CURLYEND RETURN
CALL[java.util.Map.Entry,getKey,0,K] +++$+++  NULL PARENTHESESEND LEX[options.remove] PARENTHESESSTART
CALL[java.util.Collection,iterator,0,java.util.Iterator<E>] +++$+++  PARENTHESESSTART TYPE[Iterator] VAR[java.util.Iterator] OP[assign]
CALL[java.util.Collection,add,1,boolean] PARA[VAR[java.lang.Double]] +++$+++  RETURN EOL CURLYEND CURLYEND
CALL[java.util.Collection,iterator,0,java.util.Iterator<E>] +++$+++  PARENTHESESSTART TYPE[Iterator] VAR[java.util.Iterator] OP[assign]
CALL[java.lang.String,charAt,1,char] PARA[LIT[Integer]] +++$+++  OP[bitwiseAnd] OP[bitwiseAnd] LEX[Character.toUpperCase] PARENTHESESSTART
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[org.geoserver.wcs.responses.NetCDFDimensionsManager.NetCDFDimensionMapping]] +++$+++  LEX[NetCDFDimensionMapping] VAR[org.geoserver.wcs.responses.NetCDFDimensionsManager.NetCDFDimensionMapping] PARENTHESESEND CURLYSTART
CALL[java.util.List,add,1,boolean] PARA[VAR[java.lang.Double]] +++$+++  PARENTHESESSTART VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.util.List,clear,0,void] +++$+++  OP[assign] NULL PARENTHESESEND CURLYSTART
CALL[java.util.List,toArray,0,java.lang.Object[]] +++$+++  PARENTHESESEND EOL LEX[System.arraycopy] PARENTHESESSTART
CALL[java.lang.String,indexOf,1,int] PARA[VAR[java.lang.String]] +++$+++  CURLYSTART INT VAR[INT] OP[assign]
CALL[java.net.URL,getProtocol,0,java.lang.String] +++$+++  OP[assign] NEW TYPE[URL] PARENTHESESSTART
CALL[java.net.URL,getPath,0,java.lang.String] +++$+++  LEX[casUrlPrefix.getPort] PARENTHESESSTART PARENTHESESEND COMMA
CALL[java.lang.StringBuffer,toString,0,java.lang.String] +++$+++  PARENTHESESSTART PARENTHESESEND EOL RETURN
CALL[java.lang.String,hashCode,0,int] +++$+++  NULL PARENTHESESEND OP[ternaryTrue] OP[ternaryFalse]
CALL[java.lang.String,hashCode,0,int] +++$+++  NULL PARENTHESESEND OP[ternaryTrue] OP[ternaryFalse]
CALL[java.lang.String,hashCode,0,int] +++$+++  NULL PARENTHESESEND OP[ternaryTrue] OP[ternaryFalse]
CALL[java.lang.String,hashCode,0,int] +++$+++  NULL PARENTHESESEND OP[ternaryTrue] OP[ternaryFalse]
CALL[java.lang.String,hashCode,0,int] +++$+++  NULL PARENTHESESEND OP[ternaryTrue] OP[ternaryFalse]
CALL[java.util.Set,contains,1,boolean] PARA[VAR[org.geoserver.wps.executor.ProcessState]] +++$+++  OP[assign] THIS OP[bitwiseOr] OP[bitwiseOr]
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.lang.String,equals,1,boolean] PARA[VAR[java.lang.String]] +++$+++  EOL ELSE IF PARENTHESESSTART
CALL[java.io.ByteArrayOutputStream,size,0,int] +++$+++  PARENTHESESEND OP[bitwiseAnd] OP[bitwiseAnd] PARENTHESESSTART
CALL[java.lang.String,toUpperCase,0,java.lang.String] +++$+++  PARENTHESESEND CURLYSTART VAR[java.lang.String] OP[assign]
CALL[java.util.Map,containsKey,1,boolean] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.lang.String,endsWith,1,boolean] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.lang.String,indexOf,1,int] PARA[LIT[Character]] +++$+++  EOL CURLYEND IF PARENTHESESSTART
CALL[java.lang.String,equalsIgnoreCase,1,boolean] PARA[LIT[Stirng]] +++$+++  EOL CURLYEND IF PARENTHESESSTART
CALL[java.lang.String,length,0,int] +++$+++  PARENTHESESSTART VAR[INT] OP[sum] COMMA
CALL[java.io.PrintWriter,close,0,void] +++$+++  PARENTHESESSTART VAR[java.io.PrintWriter] PARENTHESESEND EOL
CALL[java.lang.String,equals,1,boolean] PARA[CALL[org.vfny.geoserver.Request,getVersion]] +++$+++  OP[assign] NULL PARENTHESESEND OP[ternaryFalse]
CALL[java.util.List,get,1,E] PARA[VAR[INT]] +++$+++  RETURN PARENTHESESSTART TYPE[String] PARENTHESESEND
CALL[java.util.ArrayList,add,1,boolean] PARA[VAR[java.util.Map]] +++$+++  LEX[false] PARENTHESESEND PARENTHESESEND EOL
CALL[java.util.List,size,0,int] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.String,hashCode,0,int] +++$+++  NULL PARENTHESESEND OP[ternaryTrue] OP[ternaryFalse]
CALL[java.lang.String,replaceAll,2,java.lang.String] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND EOL VAR[java.lang.String] OP[assign]
CALL[java.lang.Throwable,getLocalizedMessage,0,java.lang.String] +++$+++  LEX[LOGGER.log] PARENTHESESSTART LEX[Level.INFO] COMMA
CALL[java.lang.String,equals,1,boolean] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.io.BufferedInputStream,close,0,void] +++$+++  EOL CURLYEND FINALLY CURLYSTART
CALL[java.io.File,getAbsolutePath,0,java.lang.String] +++$+++  NEW TYPE[FileNotFoundException] PARENTHESESSTART OP[sum]
CALL[java.lang.String,length,0,int] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.util.Set,isEmpty,0,boolean] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.util.List,contains,1,boolean] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.security.SecureRandom,nextInt,0,int] +++$+++  CURLYSTART INT VAR[INT] OP[assign]
CALL[java.util.List,get,1,E] PARA[VAR[INT]] +++$+++  CURLYSTART TYPE[Object] VAR[java.lang.Object] OP[assign]
CALL[java.lang.String,contains,1,boolean] PARA[LIT[Stirng]] +++$+++  ELSE CURLYSTART IF PARENTHESESSTART
CALL[java.lang.Class,equals,1,boolean] PARA[VAR[java.lang.Class]] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.util.Map,get,1,V] PARA[LIT[Stirng]] +++$+++  IF PARENTHESESSTART OP[not] PARENTHESESSTART
CALL[java.util.Iterator,next,0,E] +++$+++  OP[assign] PARENTHESESSTART TYPE[DataStoreInfo] PARENTHESESEND
CALL[java.util.logging.Logger,fine,1,void] PARA[LIT[Stirng]] +++$+++  LEX[Level.FINE] PARENTHESESEND PARENTHESESEND CURLYSTART
CALL[java.lang.String,equals,1,boolean] PARA[LIT[Stirng]] +++$+++  EOL CURLYEND IF PARENTHESESSTART
CALL[java.lang.Double,toString,0,java.lang.String] +++$+++  PARENTHESESSTART PARENTHESESEND EOL RETURN
CALL[java.lang.String,hashCode,0,int] +++$+++  NULL PARENTHESESEND OP[ternaryTrue] OP[ternaryFalse]
