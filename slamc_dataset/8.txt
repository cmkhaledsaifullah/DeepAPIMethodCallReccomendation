CALL[java.util.Hashtable,get,1,V] PARA[VAR[java.lang.String]] +++$+++  OP[assign] PARENTHESESSTART TYPE[String] PARENTHESESEND
CALL[java.util.Enumeration,nextElement,0,E] +++$+++  OP[assign] PARENTHESESSTART TYPE[String] PARENTHESESEND
CALL[java.util.Hashtable,get,1,V] PARA[VAR[java.lang.String]] +++$+++  OP[assign] PARENTHESESSTART TYPE[Vector] PARENTHESESEND
CALL[java.util.Vector,elementAt,1,E] PARA[VAR[INT]] +++$+++  OP[assign] PARENTHESESSTART TYPE[Prestation] PARENTHESESEND
CALL[java.lang.Exception,printStackTrace,0,void] +++$+++  TYPE[Exception] VAR[java.lang.Exception] PARENTHESESEND CURLYSTART
CALL[java.lang.Exception,printStackTrace,0,void] +++$+++  TYPE[Exception] VAR[java.lang.Exception] PARENTHESESEND CURLYSTART
CALL[java.lang.String,equalsIgnoreCase,1,boolean] PARA[LIT[Stirng]] +++$+++  OP[assign] NULL OP[bitwiseOr] OP[bitwiseOr]
CALL[java.util.Iterator,next,0,E] +++$+++  PARENTHESESSTART PARENTHESESSTART TYPE[String] PARENTHESESEND
CALL[be.mxs.common.util.date.MedwanCalendar,getTime,0,java.util.Date] +++$+++  VAR[LONG] PARENTHESESEND EOL RETURN
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[VAR[CHAR]] +++$+++  EOL CURLYEND ELSE CURLYSTART
CALL[java.lang.String,replaceAll,2,java.lang.String] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND EOL VAR[java.lang.String] OP[assign]
CALL[java.lang.String,replaceAll,2,java.lang.String] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND CURLYSTART VAR[java.lang.String] OP[assign]
CALL[java.lang.String,indexOf,1,int] PARA[LIT[Stirng]] +++$+++  OP[assign] LEX[sRow.substring] PARENTHESESSTART COMMA
CALL[java.lang.String,indexOf,1,int] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND EOL WHILE PARENTHESESSTART
CALL[java.lang.String,indexOf,1,int] PARA[VAR[java.lang.String]] +++$+++  VAR[java.lang.String] OP[assign] LEX[sText.substring] PARENTHESESSTART
CALL[java.lang.StringBuffer,toString,0,java.lang.String] +++$+++  EOL CURLYEND CURLYEND RETURN
CALL[java.lang.String,replaceAll,2,java.lang.String] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND EOL VAR[java.lang.String] OP[assign]
CALL[java.lang.String,replaceAll,2,java.lang.String] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND EOL VAR[java.lang.String] OP[assign]
CALL[java.lang.String,replaceAll,2,java.lang.String] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND EOL VAR[java.lang.String] OP[assign]
CALL[java.lang.String,replaceAll,2,java.lang.String] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND EOL VAR[java.lang.String] OP[assign]
CALL[java.lang.String,replaceAll,2,java.lang.String] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND EOL VAR[java.lang.String] OP[assign]
CALL[java.lang.String,replaceAll,2,java.lang.String] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND EOL VAR[java.lang.String] OP[assign]
CALL[java.lang.String,indexOf,1,int] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART PARENTHESESEND OP[sum] COMMA
CALL[java.lang.String,endsWith,1,boolean] PARA[VAR[java.lang.String]] +++$+++  EOL CURLYEND IF PARENTHESESSTART
CALL[java.lang.String,length,0,int] +++$+++  OP[assign] LEX[values.substring] PARENTHESESSTART COMMA
CALL[java.lang.String,length,0,int] +++$+++  OP[assign] EOL VAR[INT] OP[lessThan]
CALL[java.lang.String,length,0,int] +++$+++  CURLYSTART VAR[INT] OP[multiply] OP[assign]
CALL[java.lang.String,replaceAll,2,java.lang.String] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND EOL VAR[java.lang.String] OP[assign]
CALL[java.io.IOException,printStackTrace,0,void] +++$+++  TYPE[IOException] VAR[java.io.IOException] PARENTHESESEND CURLYSTART
CALL[java.awt.Graphics2D,setComposite,1,void] PARA[VAR[java.awt.Composite]] +++$+++  COMMA VAR[FLOAT] PARENTHESESEND EOL
CALL[java.util.Iterator,hasNext,0,boolean] +++$+++  LEX[numVal] EOL WHILE PARENTHESESSTART
CALL[java.io.PrintStream,close,0,void] +++$+++  LEX[printStream.flush] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.io.File,delete,0,boolean] +++$+++  OP[assign] OP[assign] PARENTHESESEND CURLYSTART
CALL[java.lang.String,substring,2,java.lang.String] PARA[LIT[Integer]] PARA[VAR[INT]] +++$+++  CURLYEND TYPE[String] VAR[java.lang.String] OP[assign]
CALL[java.lang.String,trim,0,java.lang.String] +++$+++  VAR[INT] PARENTHESESEND EOL RETURN
CALL[java.io.File,isFile,0,boolean] +++$+++  VAR[java.io.File] PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.String,length,0,int] +++$+++  PARENTHESESEND OP[bitwiseAnd] OP[bitwiseAnd] PARENTHESESSTART
CALL[java.io.File,delete,0,boolean] +++$+++  OP[assign] OP[assign] PARENTHESESEND CURLYSTART
CALL[java.lang.String,trim,0,java.lang.String] +++$+++  CURLYEND ELSE CURLYSTART RETURN
CALL[java.util.Properties,keys,0,java.util.Enumeration<K>] +++$+++  PARENTHESESEND CURLYSTART VAR[java.util.Enumeration] OP[assign]
CALL[java.util.Hashtable,keys,0,java.util.Enumeration<K>] +++$+++  CURLYSTART TYPE[Enumeration] VAR[java.util.Enumeration] OP[assign]
CALL[java.util.Enumeration,nextElement,0,E] +++$+++  OP[assign] PARENTHESESSTART TYPE[String] PARENTHESESEND
CALL[java.util.Enumeration,nextElement,0,E] +++$+++  OP[assign] PARENTHESESSTART TYPE[ClusterData] PARENTHESESEND
CALL[java.lang.String,getBytes,0,byte[]] +++$+++  EOL RETURN LEX[md.digest] PARENTHESESSTART
CALL[java.util.Hashtable,get,1,V] PARA[LIT[Stirng]] +++$+++  TYPE[KeyValue] ARRAYSTART ARRAYEND PARENTHESESEND
CALL[java.util.Hashtable,get,1,V] PARA[LIT[Stirng]] +++$+++  TYPE[KeyValue] ARRAYSTART ARRAYEND PARENTHESESEND
CALL[java.util.Enumeration,nextElement,0,E] +++$+++  OP[assign] PARENTHESESSTART TYPE[Encounter] PARENTHESESEND
CALL[java.util.Hashtable,elements,0,java.util.Enumeration<V>] +++$+++  EOL TYPE[Enumeration] VAR[java.util.Enumeration] OP[assign]
CALL[java.util.Enumeration,hasMoreElements,0,boolean] +++$+++  LEX[encounter] EOL WHILE PARENTHESESSTART
CALL[java.util.Enumeration,hasMoreElements,0,boolean] +++$+++  LEX[encounter] EOL WHILE PARENTHESESSTART
CALL[java.util.Enumeration,nextElement,0,E] +++$+++  OP[assign] PARENTHESESSTART TYPE[Encounter] PARENTHESESEND
CALL[java.util.Hashtable,get,1,V] PARA[LIT[Stirng]] +++$+++  TYPE[KeyValue] ARRAYSTART ARRAYEND PARENTHESESEND
CALL[java.util.Hashtable,size,0,int] +++$+++  LEX[StatFunctions.getTop] PARENTHESESSTART VAR[java.util.Hashtable] COMMA
CALL[java.util.Hashtable,get,1,V] PARA[VAR[java.lang.String]] +++$+++  OP[assign] PARENTHESESSTART TYPE[DepartmentIncome] PARENTHESESEND
CALL[java.util.Hashtable,get,1,V] PARA[VAR[java.lang.String]] +++$+++  OP[assign] PARENTHESESSTART TYPE[DepartmentIncome] PARENTHESESEND
CALL[java.util.SortedSet,size,0,int] +++$+++  OP[assign] NEW TYPE[String] ARRAYSTART
CALL[java.util.Iterator,next,0,E] +++$+++  OP[assign] PARENTHESESSTART TYPE[String] PARENTHESESEND
CALL[java.util.Enumeration,nextElement,0,E] +++$+++  OP[assign] PARENTHESESSTART TYPE[Encounter] PARENTHESESEND
CALL[java.util.Date,getTime,0,long] +++$+++  COMMA NEW TYPE[Date] PARENTHESESSTART
CALL[java.util.SortedSet,iterator,0,java.util.Iterator<E>] +++$+++  EOL TYPE[Iterator] VAR[java.util.Iterator] OP[assign]
CALL[java.util.Hashtable,elements,0,java.util.Enumeration<V>] +++$+++  EOL TYPE[Enumeration] VAR[java.util.Enumeration] OP[assign]
CALL[java.util.Enumeration,nextElement,0,E] +++$+++  OP[assign] PARENTHESESSTART TYPE[Encounter] PARENTHESESEND
CALL[java.util.Enumeration,nextElement,0,E] +++$+++  OP[assign] PARENTHESESSTART TYPE[Encounter] PARENTHESESEND
CALL[java.util.Hashtable,get,1,V] PARA[VAR[java.lang.String]] +++$+++  OP[assign] PARENTHESESSTART TYPE[DepartmentIncome] PARENTHESESEND
CALL[java.util.Enumeration,hasMoreElements,0,boolean] +++$+++  PARENTHESESEND EOL WHILE PARENTHESESSTART
CALL[java.util.Enumeration,nextElement,0,E] +++$+++  OP[assign] PARENTHESESSTART TYPE[String] PARENTHESESEND
CALL[java.util.Vector,size,0,int] +++$+++  IF PARENTHESESSTART VAR[INT] OP[greaterThan]
CALL[java.io.File,getAbsolutePath,0,java.lang.String] +++$+++  EOL TYPE[String] VAR[java.lang.String] OP[assign]
CALL[java.io.File,getName,0,java.lang.String] +++$+++  PARENTHESESSTART PARENTHESESEND OP[sum] OP[sum]
CALL[java.io.StringWriter,toString,0,java.lang.String] +++$+++  VAR[java.io.StringWriter] PARENTHESESEND EOL RETURN
CALL[java.util.Vector,size,0,int] +++$+++  OP[assign] EOL VAR[INT] OP[lessThan]
CALL[java.util.Hashtable,put,2,V] PARA[CALL[org.hnrw.report.Report_RFE.RFE,getEncounterUid]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND CURLYSTART
CALL[java.util.Vector,elementAt,1,E] PARA[VAR[INT]] +++$+++  OP[assign] PARENTHESESSTART TYPE[Diagnosis] PARENTHESESEND
CALL[java.lang.String,matches,1,boolean] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.lang.Object,toString,0,java.lang.String] +++$+++  VAR[java.lang.Object] ARRAYEND EOL RETURN
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[VAR[java.lang.String]] +++$+++  LEX[buf.append] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[VAR[java.lang.String]] +++$+++  OP[ternaryFalse] VAR[java.util.List] PARENTHESESEND CURLYSTART
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[LIT[Character]] +++$+++  CURLYSTART CASE VAR[com.sadinoff.genj.console.Console.Action.ArgType] OP[ternaryFalse]
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND EOL
CALL[java.util.Map,keySet,0,java.util.Set<K>] +++$+++  TYPE[String] OP[greaterThan] VAR[java.util.List] OP[ternaryFalse]
CALL[java.awt.geom.GeneralPath,transform,1,void] PARA[CALL[null,getTranslateInstance]] +++$+++  OP[not] OP[assign] NULL PARENTHESESEND
CALL[java.awt.geom.Point2D,getX,0,double] +++$+++  LEX[vectorB.getX] PARENTHESESSTART PARENTHESESEND OP[sub]
CALL[java.awt.geom.Point2D,getX,0,double] +++$+++  RETURN NEW LEX[Point2D.Double] PARENTHESESSTART
CALL[java.awt.geom.Point2D,getX,0,double] +++$+++  LEX[a.getX] PARENTHESESSTART PARENTHESESEND OP[sum]
CALL[java.awt.geom.Point2D,getX,0,double] +++$+++  NEW LEX[Point2D.Double] PARENTHESESSTART OP[sub]
CALL[java.awt.geom.Point2D,getY,0,double] +++$+++  PARENTHESESSTART PARENTHESESEND COMMA OP[sub]
CALL[java.awt.geom.Point2D,getX,0,double] +++$+++  EOL DOUBLE VAR[DOUBLE] OP[assign]
CALL[java.awt.geom.Point2D,getX,0,double] +++$+++  LEX[bStart.getX] PARENTHESESSTART PARENTHESESEND OP[sub]
CALL[java.awt.geom.Point2D,getX,0,double] +++$+++  EOL DOUBLE VAR[DOUBLE] OP[assign]
CALL[java.awt.geom.Point2D,getX,0,double] +++$+++  CURLYSTART DOUBLE VAR[DOUBLE] OP[assign]
CALL[java.awt.geom.Point2D,getX,0,double] +++$+++  LEX[p1.getX] PARENTHESESSTART PARENTHESESEND OP[sub]
CALL[java.util.Stack,size,0,int] +++$+++  PARENTHESESSTART LEX[EMPTY.substring] PARENTHESESSTART COMMA
CALL[java.io.PrintWriter,print,1,void] PARA[CALL[java.lang.String,substring]] +++$+++  STRING VAR[java.lang.String] PARENTHESESEND CURLYSTART
CALL[java.util.Properties,toString,0,java.lang.String] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[javax.swing.JMenu,add,1,javax.swing.JMenuItem] PARA[VAR[javax.swing.JMenu]] +++$+++  TYPE[JMenu] PARENTHESESSTART PARENTHESESEND EOL
CALL[javax.swing.JMenuBar,add,1,javax.swing.JMenu] PARA[VAR[javax.swing.JMenu]] +++$+++  TYPE[JMenuBar] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.io.InputStream,skip,1,long] PARA[VAR[INT]] +++$+++  PARENTHESESSTART VAR[INT] OP[not] OP[assign]
CALL[java.lang.String,charAt,1,char] PARA[LIT[Integer]] +++$+++  OP[lessThan] OP[lessThan] OP[bitwiseOr] PARENTHESESSTART
CALL[java.lang.String,charAt,1,char] PARA[LIT[Integer]] +++$+++  OP[lessThan] OP[lessThan] OP[bitwiseOr] PARENTHESESSTART
CALL[java.awt.font.LineMetrics,getDescent,0,float] +++$+++  VAR[FLOAT] OP[sum] VAR[FLOAT] OP[sub]
CALL[java.awt.FontMetrics,getLineMetrics,2,java.awt.font.LineMetrics] PARA[VAR[java.lang.String]] PARA[VAR[java.awt.Graphics2D]] +++$+++  EOL TYPE[LineMetrics] VAR[java.awt.font.LineMetrics] OP[assign]
CALL[java.util.Stack,pop,0,E] +++$+++  LEX[popMenu] PARENTHESESSTART PARENTHESESEND CURLYSTART
CALL[java.awt.geom.Rectangle2D,getMaxX,0,double] +++$+++  VAR[INT] OP[assign] EOL DO
CALL[java.awt.FontMetrics,getStringBounds,2,java.awt.geom.Rectangle2D] PARA[VAR[java.lang.String]] PARA[VAR[java.awt.Graphics2D]] +++$+++  VAR[DOUBLE] OP[sub] VAR[FLOAT] OP[multiply]
CALL[java.awt.font.LineMetrics,getDescent,0,float] +++$+++  PARENTHESESSTART LEX[Shape] LEX[shape] COMMA
CALL[java.lang.String,indexOf,1,int] PARA[LIT[Character]] +++$+++  EOL INT VAR[INT] OP[assign]
CALL[java.lang.String,length,0,int] +++$+++  PARENTHESESSTART INT VAR[INT] OP[assign]
CALL[java.lang.StringBuffer,toString,0,java.lang.String] +++$+++  LEX[buffer.toString] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.lang.String,startsWith,1,boolean] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.lang.Throwable,getMessage,0,java.lang.String] +++$+++  OP[sum] VAR[java.io.File] OP[sum] OP[sum]
CALL[java.io.InputStream,mark,1,void] PARA[VAR[INT]] +++$+++  INT VAR[INT] PARENTHESESEND CURLYSTART
CALL[java.util.List,add,1,boolean] PARA[CALL[java.util.Iterator,next]] +++$+++  PARENTHESESEND PARENTHESESEND TRY CURLYSTART
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[genj.util.Resources]] +++$+++  PARENTHESESSTART VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.lang.Object,getClass,0,java.lang.Class<? extends java.lang.Object>] +++$+++  OP[greaterThan] PARENTHESESEND VAR[java.lang.Object] OP[ternaryFalse]
CALL[java.lang.Class,getName,0,java.lang.String] +++$+++  EOL TYPE[String] VAR[java.lang.String] OP[assign]
CALL[java.lang.String,substring,2,java.lang.String] PARA[LIT[Integer]] PARA[VAR[INT]] +++$+++  BREAK EOL VAR[java.lang.String] OP[assign]
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  CURLYSTART CHAR VAR[CHAR] OP[assign]
CALL[java.util.Map,remove,1,V] PARA[VAR[genj.util.ReferenceSet.KEY]] +++$+++  LEX[references.isEmpty] PARENTHESESSTART PARENTHESESEND PARENTHESESEND
CALL[java.util.Map,putAll,1,void] PARA[VAR[java.util.Map]] +++$+++  OP[greaterThan] VAR[java.util.Map] PARENTHESESEND CURLYSTART
CALL[javax.xml.transform.TransformerConfigurationException,getMessage,0,java.lang.String] +++$+++  OP[sum] VAR[java.lang.String] OP[sum] OP[sum]
CALL[java.lang.String,substring,2,java.lang.String] PARA[LIT[Integer]] PARA[VAR[INT]] +++$+++  OP[assign] PARENTHESESEND VAR[java.lang.String] OP[assign]
CALL[java.util.List,get,1,E] PARA[VAR[INT]] +++$+++  OP[assign] PARENTHESESSTART TYPE[Element] PARENTHESESEND
CALL[java.util.List,add,1,boolean] PARA[VAR[genj.common.PathTreeWidget.Listener]] +++$+++  LEX[Listener] VAR[genj.common.PathTreeWidget.Listener] PARENTHESESEND CURLYSTART
CALL[java.util.StringTokenizer,nextToken,0,java.lang.String] +++$+++  VAR[INT] OP[assign] LEX[Integer.parseInt] PARENTHESESSTART
CALL[java.util.StringTokenizer,nextToken,0,java.lang.String] +++$+++  VAR[INT] OP[assign] LEX[Integer.parseInt] PARENTHESESSTART
CALL[javax.swing.table.TableColumnModel,getColumnCount,0,int] +++$+++  IF PARENTHESESSTART VAR[INT] OP[lessThan]
CALL[javax.swing.JComboBox,removeActionListener,1,void] PARA[VAR[java.awt.event.ActionListener]] +++$+++  LEX[ActionListener] VAR[java.awt.event.ActionListener] PARENTHESESEND CURLYSTART
CALL[java.io.BufferedWriter,write,1,void] PARA[LIT[Character]] +++$+++  VAR[INT] OP[sum] OP[sum] PARENTHESESEND
CALL[java.lang.Thread,interrupt,0,void] +++$+++  OP[not] OP[assign] NULL PARENTHESESEND
CALL[java.awt.geom.Rectangle2D,getX,0,double] +++$+++  RETURN NEW LEX[Rectangle2D.Double] PARENTHESESSTART
CALL[java.util.List,iterator,0,java.util.Iterator<E>] +++$+++  CURLYSTART TYPE[Iterator] VAR[java.util.Iterator] OP[assign]
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[LIT[Character]] +++$+++  VAR[INT] OP[sum] OP[sum] PARENTHESESEND
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[VAR[java.lang.String]] +++$+++  LEX[buffer.append] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[LIT[Character]] +++$+++  VAR[INT] OP[sum] OP[sum] PARENTHESESEND
CALL[javax.swing.JTree,stopEditing,0,boolean] +++$+++  LEX[stopEditing] PARENTHESESSTART PARENTHESESEND CURLYSTART
CALL[java.util.List,get,1,E] PARA[VAR[INT]] +++$+++  RETURN PARENTHESESSTART TYPE[Property] PARENTHESESEND
CALL[java.util.List,size,0,int] +++$+++  CURLYSTART RETURN LEX[undoHistory.get] PARENTHESESSTART
CALL[java.lang.String,hashCode,0,int] +++$+++  EOL VAR[INT] OP[sum] OP[assign]
CALL[java.lang.StringBuffer,toString,0,java.lang.String] +++$+++  EOL CURLYEND CURLYEND RETURN
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  PARENTHESESSTART OP[not] LEX[Character.isDigit] PARENTHESESSTART
CALL[java.util.StringTokenizer,hasMoreTokens,0,boolean] +++$+++  PARENTHESESEND EOL WHILE PARENTHESESSTART
CALL[java.util.Map,get,1,V] PARA[VAR[java.lang.String]] +++$+++  OP[assign] PARENTHESESSTART TYPE[MetaProperty] PARENTHESESEND
CALL[java.util.Map,containsKey,1,boolean] PARA[VAR[java.lang.String]] +++$+++  VAR[java.lang.String] PARENTHESESEND CURLYSTART RETURN
CALL[java.util.Calendar,setTime,1,void] PARA[VAR[java.util.Date]] +++$+++  LEX[Calendar.getInstance] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.List,addAll,1,boolean] PARA[CALL[null,asList]] +++$+++  CURLYSTART BREAK EOL CURLYEND
CALL[java.util.prefs.Preferences,remove,1,void] PARA[VAR[java.lang.String]] +++$+++  STRING VAR[java.lang.String] PARENTHESESEND CURLYSTART
CALL[java.util.prefs.Preferences,remove,1,void] PARA[VAR[java.lang.String]] +++$+++  STRING VAR[java.lang.String] PARENTHESESEND CURLYSTART
CALL[java.lang.StringBuilder,length,0,int] +++$+++  CURLYEND CURLYEND IF PARENTHESESSTART
CALL[javax.swing.text.JTextComponent,getText,0,java.lang.String] +++$+++  EOL TYPE[String] VAR[java.lang.String] OP[assign]
CALL[java.awt.FontMetrics,getHeight,0,int] +++$+++  LEX[table.getRowHeight] PARENTHESESSTART PARENTHESESEND COMMA
CALL[java.awt.FontMetrics,getHeight,0,int] +++$+++  LEX[tree.getRowHeight] PARENTHESESSTART PARENTHESESEND COMMA
CALL[javax.swing.JTextField,getText,0,java.lang.String] +++$+++  VAR[INT] OP[assign] LEX[Integer.parseInt] PARENTHESESSTART
CALL[javax.swing.JPanel,add,1,java.awt.Component] PARA[VAR[javax.swing.JTextField]] +++$+++  COMMA VAR[java.awt.GridBagConstraints] PARENTHESESEND EOL
CALL[java.awt.GridBagLayout,setConstraints,2,void] PARA[VAR[javax.swing.JScrollPane]] PARA[VAR[java.awt.GridBagConstraints]] +++$+++  PARENTHESESSTART VAR[javax.swing.JList] PARENTHESESEND EOL
CALL[java.awt.Container,add,1,java.awt.Component] PARA[VAR[java.awt.Component]] +++$+++  COMMA VAR[java.awt.GridBagConstraints] PARENTHESESEND EOL
CALL[javax.swing.JButton,setBorderPainted,1,void] PARA[LIT[Boolean]] +++$+++  PARENTHESESSTART NULL PARENTHESESEND EOL
CALL[java.util.Set,add,1,boolean] PARA[VAR[java.lang.String]] +++$+++  VAR[java.lang.String] PARENTHESESEND PARENTHESESEND CURLYSTART
CALL[java.util.Set,removeAll,1,boolean] PARA[VAR[java.util.Set]] +++$+++  PARENTHESESEND EOL CURLYEND CURLYEND
CALL[java.util.StringJoiner,toString,0,java.lang.String] +++$+++  EOL CURLYEND CURLYEND RETURN
CALL[java.awt.datatransfer.DataFlavor,equals,1,boolean] PARA[VAR[java.awt.datatransfer.DataFlavor]] +++$+++  VAR[java.awt.datatransfer.DataFlavor] PARENTHESESEND CURLYSTART RETURN
CALL[javax.swing.filechooser.FileNameExtensionFilter,accept,1,boolean] PARA[VAR[java.io.File]] +++$+++  PARENTHESESSTART PARENTHESESEND OP[bitwiseOr] OP[bitwiseOr]
CALL[java.lang.String,substring,2,java.lang.String] PARA[LIT[Integer]] PARA[VAR[INT]] +++$+++  EOL CURLYEND VAR[java.lang.String] OP[assign]
CALL[java.lang.StringBuilder,toString,0,java.lang.String] +++$+++  EOL CURLYEND CURLYEND RETURN
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.util.List]] +++$+++  OP[greaterThan] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.util.Map,get,1,V] PARA[VAR[java.lang.String]] +++$+++  TYPE[TMarkedStoreItem] OP[greaterThan] VAR[java.util.List] OP[assign]
CALL[javax.swing.JButton,setEnabled,1,void] PARA[VAR[BOOLEAN]] +++$+++  VAR[BOOLEAN] PARENTHESESEND EOL CURLYEND
CALL[javax.swing.DefaultListModel,addElement,1,void] PARA[VAR[java.lang.String]] +++$+++  STRING VAR[java.lang.String] PARENTHESESEND CURLYSTART
CALL[javax.swing.JPanel,setBorder,1,void] PARA[CALL[null,createTitledBorder]] +++$+++  VAR[net.sf.jabref.gui.EntryTypeDialog.TypeButton] PARENTHESESEND EOL CURLYEND
CALL[javax.swing.JButton,setCursor,1,void] PARA[CALL[null,getPredefinedCursor]] +++$+++  PARENTHESESSTART LEX[false] PARENTHESESEND EOL
CALL[java.util.Optional,isPresent,0,boolean] +++$+++  PARENTHESESSTART PARENTHESESEND OP[bitwiseAnd] OP[bitwiseAnd]
CALL[java.util.List,get,1,E] PARA[VAR[INT]] +++$+++  PARENTHESESEND CURLYSTART LEX[keyBindingRepository.put] PARENTHESESSTART
CALL[javax.swing.JRadioButton,setSelected,1,void] PARA[LIT[Boolean]] +++$+++  EOL CURLYEND ELSE CURLYSTART
CALL[javax.swing.JPopupMenu,setVisible,1,void] PARA[LIT[Boolean]] +++$+++  EOL CURLYEND ELSE CURLYSTART
CALL[javax.swing.text.JTextComponent,getHeight,0,int] +++$+++  PARENTHESESSTART VAR[javax.swing.text.JTextComponent] COMMA COMMA
CALL[javax.swing.text.JTextComponent,getText,0,java.lang.String] +++$+++  OP[assign] NEW TYPE[StringBuilder] PARENTHESESSTART
CALL[java.lang.StringBuilder,insert,2,java.lang.StringBuilder] PARA[VAR[INT]] PARA[CALL[java.lang.String,subSequence]] +++$+++  COMMA VAR[INT] PARENTHESESEND EOL
CALL[java.awt.event.FocusListener,focusGained,1,void] PARA[VAR[java.awt.event.FocusEvent]] +++$+++  OP[assign] NULL PARENTHESESEND CURLYSTART
CALL[javax.swing.JList,setSelectedIndex,1,void] PARA[CALL[javax.swing.event.ListDataEvent,getIndex0]] +++$+++  OP[assign] OP[assign] PARENTHESESEND CURLYSTART
CALL[javax.swing.JTextArea,setEditable,1,void] PARA[LIT[Boolean]] +++$+++  LEX[descriptionAreaText.setColumns] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  OP[greaterThan] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.concurrent.ConcurrentLinkedQueue,add,1,boolean] PARA[VAR[java.lang.Thread]] +++$+++  VAR[java.lang.String] OP[sum] PARENTHESESEND EOL
CALL[java.lang.Thread,join,0,void] +++$+++  PARENTHESESEND CURLYSTART TRY CURLYSTART
CALL[java.util.regex.Matcher,find,0,boolean] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.util.regex.Matcher,replaceFirst,1,java.lang.String] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.String,contains,1,boolean] PARA[LIT[Stirng]] +++$+++  VAR[java.lang.String] PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.String,substring,2,java.lang.String] PARA[VAR[INT]] PARA[VAR[INT]] +++$+++  CURLYEND TYPE[String] VAR[java.lang.String] OP[assign]
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.lang.String]] +++$+++  STRING VAR[java.lang.String] PARENTHESESEND CURLYSTART
CALL[java.lang.StringBuilder,toString,0,java.lang.String] +++$+++  PARENTHESESEND EOL CURLYEND RETURN
CALL[java.io.BufferedReader,readLine,0,java.lang.String] +++$+++  LEX[true] EOL VAR[java.lang.String] OP[assign]
CALL[java.util.List,isEmpty,0,boolean] +++$+++  PARENTHESESEND CURLYSTART RETURN OP[not]
CALL[java.util.Map,get,1,V] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.String,replaceAll,2,java.lang.String] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND EOL VAR[java.lang.String] OP[assign]
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[CALL[java.lang.String,charAt]] +++$+++  PARENTHESESEND PARENTHESESEND PARENTHESESEND CURLYSTART
CALL[java.lang.String,split,1,java.lang.String[]] PARA[LIT[Stirng]] +++$+++  ARRAYSTART ARRAYEND VAR[java.lang.String] OP[assign]
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[VAR[CHAR]] +++$+++  EOL CURLYEND ELSE CURLYSTART
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[VAR[CHAR]] +++$+++  PARENTHESESEND CURLYSTART LEX[inParenthesis--] EOL
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[CALL[java.lang.String,substring]] +++$+++  LEX[numOfChars--] EOL CURLYEND CURLYEND
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[CALL[null,toLowerCase]] +++$+++  EOL CURLYEND ELSE CURLYSTART
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[LIT[Integer]] +++$+++  COMMA LEX[FieldName.YEAR] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[LIT[Stirng]] +++$+++  VAR[java.lang.String] COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[LIT[Stirng]] +++$+++  VAR[java.lang.String] COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[LIT[Integer]] +++$+++  VAR[java.lang.String] COMMA PARENTHESESEND EOL
CALL[java.util.Map,get,1,V] PARA[VAR[java.lang.String]] +++$+++  RETURN PARENTHESESSTART TYPE[String] PARENTHESESEND
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Character]] +++$+++  OP[assign] PARENTHESESEND PARENTHESESEND CURLYSTART
CALL[java.util.Map,get,1,V] PARA[VAR[java.lang.String]] +++$+++  CURLYSTART RETURN LEX[Optional.ofNullable] PARENTHESESSTART
CALL[java.util.Map,keySet,0,java.util.Set<K>] +++$+++  TYPE[TreeSet] OP[lessThan] OP[greaterThan] PARENTHESESSTART
CALL[java.util.Map,remove,1,V] PARA[VAR[java.lang.String]] +++$+++  STRING VAR[java.lang.String] PARENTHESESEND CURLYSTART
CALL[java.lang.String,indexOf,1,int] PARA[LIT[Character]] +++$+++  OP[assign] LEX[parsedSerialization.substring] PARENTHESESSTART COMMA
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[VAR[CHAR]] +++$+++  VAR[CHAR] PARENTHESESEND EOL CURLYEND
CALL[java.lang.String,length,0,int] +++$+++  OP[assign] EOL VAR[INT] OP[lessThan]
CALL[java.lang.StringBuilder,length,0,int] +++$+++  CURLYSTART INT VAR[INT] OP[assign]
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[VAR[java.lang.String]] +++$+++  LEX[result.length] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.lang.StringBuilder,length,0,int] +++$+++  PARENTHESESSTART VAR[INT] OP[greaterThan] OP[assign]
CALL[java.lang.String,length,0,int] +++$+++  VAR[INT] OP[assign] VAR[INT] OP[sum]
CALL[java.lang.String,isEmpty,0,boolean] +++$+++  NULL PARENTHESESEND OP[bitwiseOr] OP[bitwiseOr]
CALL[java.lang.String,length,0,int] +++$+++  PARENTHESESSTART PARENTHESESSTART VAR[INT] OP[assign]
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  PARENTHESESEND CURLYSTART VAR[CHAR] OP[assign]
CALL[java.lang.String,length,0,int] +++$+++  EOL CURLYEND IF PARENTHESESSTART
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[VAR[CHAR]] +++$+++  OP[not] OP[assign] PARENTHESESEND CURLYSTART
CALL[java.lang.String,length,0,int] +++$+++  OP[assign] EOL VAR[INT] OP[lessThan]
CALL[java.lang.StringBuilder,length,0,int] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.util.List,add,1,boolean] PARA[CALL[java.lang.StringBuilder,toString]] +++$+++  PARENTHESESEND OP[greaterThan] PARENTHESESEND CURLYSTART
CALL[java.util.List,remove,1,E] PARA[VAR[INT]] +++$+++  OP[assign] NULL PARENTHESESEND CURLYSTART
CALL[java.lang.String,length,0,int] +++$+++  OP[assign] NEW INT ARRAYSTART
CALL[java.lang.String,length,0,int] +++$+++  EOL VAR[INT] OP[lessThan] OP[assign]
CALL[java.lang.String,equals,1,boolean] PARA[FIELD[net.sf.jabref.model.FieldChange]] +++$+++  ELSE IF PARENTHESESSTART OP[not]
CALL[java.lang.String,equals,1,boolean] PARA[LIT[Stirng]] +++$+++  NULL EOL IF PARENTHESESSTART
CALL[java.lang.String,equals,1,boolean] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART PARENTHESESEND OP[bitwiseOr] OP[bitwiseOr]
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[VAR[java.lang.String]] +++$+++  EOL CURLYEND ELSE CURLYSTART
CALL[java.lang.StringBuffer,toString,0,java.lang.String] +++$+++  PARENTHESESSTART PARENTHESESEND EOL RETURN
CALL[javax.swing.DefaultListModel,getSize,0,int] +++$+++  CURLYEND INT VAR[INT] OP[assign]
CALL[javax.swing.JTable,getColumnModel,0,javax.swing.table.TableColumnModel] +++$+++  CURLYSTART TYPE[TableColumnModel] VAR[javax.swing.table.TableColumnModel] OP[assign]
CALL[javax.swing.JButton,setEnabled,1,void] PARA[LIT[Boolean]] +++$+++  LEX[setButtons] PARENTHESESSTART PARENTHESESEND CURLYSTART
CALL[javax.swing.JLabel,setIcon,1,void] PARA[VAR[javax.swing.ImageIcon]] +++$+++  LEX[setStatic] PARENTHESESSTART PARENTHESESEND CURLYSTART
CALL[javax.swing.JLabel,setIcon,1,void] PARA[VAR[javax.swing.ImageIcon]] +++$+++  LEX[setAnimated] PARENTHESESSTART PARENTHESESEND CURLYSTART
CALL[java.lang.Exception,printStackTrace,0,void] +++$+++  TYPE[Exception] VAR[java.lang.Exception] PARENTHESESEND CURLYSTART
CALL[java.lang.Exception,printStackTrace,0,void] +++$+++  TYPE[Exception] VAR[java.lang.Exception] PARENTHESESEND CURLYSTART
CALL[java.util.Vector,size,0,int] +++$+++  OP[assign] EOL VAR[INT] OP[lessThan]
CALL[java.util.Vector,add,1,boolean] PARA[VAR[weka.gui.beans.BeanConnection]] +++$+++  OP[bitwiseAnd] VAR[BOOLEAN] PARENTHESESEND CURLYSTART
CALL[java.lang.Exception,printStackTrace,0,void] +++$+++  TYPE[Exception] VAR[java.lang.Exception] PARENTHESESEND CURLYSTART
CALL[java.util.Vector,addElement,1,void] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESEND OP[greaterThan] PARENTHESESEND CURLYSTART
CALL[java.util.Vector,elementAt,1,E] PARA[VAR[INT]] +++$+++  PARENTHESESSTART PARENTHESESSTART TYPE[String] PARENTHESESEND
CALL[java.util.Vector,size,0,int] +++$+++  OP[assign] EOL VAR[INT] OP[lessThan]
CALL[javax.swing.JComponent,isOpaque,0,boolean] +++$+++  CURLYSTART BOOLEAN VAR[BOOLEAN] OP[assign]
CALL[java.util.Vector,elementAt,1,E] PARA[VAR[INT]] +++$+++  OP[assign] PARENTHESESSTART TYPE[BeanInstance] PARENTHESESEND
CALL[java.util.Vector,size,0,int] +++$+++  OP[assign] EOL VAR[INT] OP[lessThan]
CALL[java.util.Vector,size,0,int] +++$+++  OP[assign] EOL VAR[INT] OP[lessThan]
CALL[javax.swing.JRadioButton,isSelected,0,boolean] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[javax.swing.JTextField,setPreferredSize,1,void] PARA[VAR[java.awt.Dimension]] +++$+++  PARENTHESESSTART VAR[java.awt.Dimension] PARENTHESESEND EOL
CALL[javax.swing.JButton,setMinimumSize,1,void] PARA[VAR[java.awt.Dimension]] +++$+++  PARENTHESESSTART VAR[java.awt.Dimension] PARENTHESESEND EOL
CALL[javax.swing.JComboBox,getSelectedIndex,0,int] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[javax.swing.JFrame,dispose,0,void] +++$+++  LEX[WindowEvent] LEX[e] PARENTHESESEND CURLYSTART
CALL[javax.swing.DefaultListModel,size,0,int] +++$+++  EOL LEX[m_LoadOptionsBut.setEnabled] PARENTHESESSTART PARENTHESESSTART
CALL[javax.swing.JTextField,getText,0,java.lang.String] +++$+++  VAR[INT] OP[assign] LEX[Integer.parseInt] PARENTHESESSTART
CALL[javax.swing.JFrame,dispose,0,void] +++$+++  LEX[WindowEvent] LEX[e] PARENTHESESEND CURLYSTART
CALL[java.util.Hashtable,clear,0,void] +++$+++  LEX[m_Model.clear] PARENTHESESSTART PARENTHESESEND EOL
CALL[javax.swing.JList,getSelectionModel,0,javax.swing.ListSelectionModel] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[javax.swing.JTable,getSelectionModel,0,javax.swing.ListSelectionModel] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  PARENTHESESEND EOL LEX[result.append] PARENTHESESSTART
CALL[java.awt.Graphics,setFont,1,void] PARA[VAR[java.awt.Font]] +++$+++  VAR[java.awt.Font] PARENTHESESEND EOL CURLYEND
CALL[javax.swing.JFrame,dispose,0,void] +++$+++  OP[assign] NULL EOL CURLYEND
CALL[weka.gui.boundaryvisualizer.BoundaryPanel.PlotPanel,addMouseListener,1,void] PARA[VAR[java.awt.event.MouseListener]] +++$+++  LEX[MouseListener] VAR[java.awt.event.MouseListener] PARENTHESESEND CURLYSTART
CALL[java.lang.String,length,0,int] +++$+++  PARENTHESESSTART PARENTHESESEND OP[sum] COMMA
CALL[javax.swing.JTable,getCellRect,3,java.awt.Rectangle] PARA[VAR[INT]] PARA[VAR[INT]] PARA[LIT[Boolean]] +++$+++  EOL TYPE[Rectangle] VAR[java.awt.Rectangle] OP[assign]
CALL[javax.swing.JViewport,getViewPosition,0,java.awt.Point] +++$+++  EOL TYPE[Point] VAR[java.awt.Point] OP[assign]
CALL[javax.swing.JViewport,scrollRectToVisible,1,void] PARA[VAR[java.awt.Rectangle]] +++$+++  OP[sub] FIELD[y,java.awt.Point] PARENTHESESEND EOL
CALL[java.util.HashSet,add,1,boolean] PARA[VAR[javax.swing.event.TableModelListener]] +++$+++  LEX[TableModelListener] VAR[javax.swing.event.TableModelListener] PARENTHESESEND CURLYSTART
CALL[java.lang.String,equalsIgnoreCase,1,boolean] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.util.Vector,addElement,1,void] PARA[CALL[java.lang.String,substring]] +++$+++  OP[assign] OP[assign] PARENTHESESEND CURLYSTART
CALL[java.util.Vector,size,0,int] +++$+++  IF PARENTHESESSTART VAR[INT] OP[lessThan]
CALL[java.lang.String,indexOf,2,int] PARA[LIT[Character]] PARA[VAR[INT]] +++$+++  CURLYSTART INT VAR[INT] OP[assign]
CALL[java.util.List,size,0,int] +++$+++  OP[assign] EOL VAR[INT] OP[lessThan]
CALL[java.lang.String,substring,2,java.lang.String] PARA[LIT[Integer]] PARA[VAR[INT]] +++$+++  EOL CURLYEND VAR[java.lang.String] OP[assign]
CALL[java.lang.String,length,0,int] +++$+++  VAR[java.lang.String] PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.String,indexOf,1,int] PARA[LIT[Character]] +++$+++  OP[greaterThan] OP[assign] OP[bitwiseOr] OP[bitwiseOr]
CALL[java.io.File,getPath,0,java.lang.String] +++$+++  VAR[java.io.IOException] PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.String,startsWith,1,boolean] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART PARENTHESESEND OP[bitwiseOr] OP[bitwiseOr]
CALL[java.util.regex.Matcher,matches,0,boolean] +++$+++  EOL IF PARENTHESESSTART OP[not]
CALL[java.util.List,addAll,1,boolean] PARA[FIELD[proguard.ClassPath]] +++$+++  VAR[proguard.ClassPath] PARENTHESESEND CURLYSTART RETURN
CALL[java.util.List,get,1,E] PARA[VAR[INT]] +++$+++  RETURN PARENTHESESSTART TYPE[ClassPathEntry] PARENTHESESEND
CALL[java.util.List,hashCode,0,int] +++$+++  OP[assign] NULL OP[ternaryTrue] OP[ternaryFalse]
CALL[javax.swing.DefaultListModel,addElement,1,void] PARA[VAR[java.lang.Object]] +++$+++  LEX[Object] VAR[java.lang.Object] PARENTHESESEND CURLYSTART
CALL[javax.swing.JPanel,add,2,void] PARA[VAR[javax.swing.JRadioButton]] PARA[VAR[java.awt.GridBagConstraints]] +++$+++  COMMA VAR[java.awt.GridBagConstraints] PARENTHESESEND EOL
CALL[java.awt.Graphics2D,getPaint,0,java.awt.Paint] +++$+++  NULL OP[ternaryTrue] VAR[java.awt.Paint] OP[ternaryFalse]
CALL[java.awt.Graphics2D,copyArea,6,void] PARA[VAR[INT]] PARA[VAR[INT]] PARA[VAR[INT]] PARA[VAR[INT]] PARA[VAR[INT]] PARA[VAR[INT]] +++$+++  INT VAR[INT] PARENTHESESEND CURLYSTART
CALL[java.awt.Graphics2D,drawArc,6,void] PARA[VAR[INT]] PARA[VAR[INT]] PARA[VAR[INT]] PARA[VAR[INT]] PARA[VAR[INT]] PARA[VAR[INT]] +++$+++  INT VAR[INT] PARENTHESESEND CURLYSTART
CALL[java.awt.Graphics2D,getComposite,0,java.awt.Composite] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.awt.Graphics2D,setBackground,1,void] PARA[VAR[java.awt.Color]] +++$+++  LEX[Color] VAR[java.awt.Color] PARENTHESESEND CURLYSTART
CALL[javax.swing.ButtonGroup,add,1,void] PARA[VAR[javax.swing.JRadioButton]] +++$+++  PARENTHESESSTART VAR[javax.swing.JRadioButton] PARENTHESESEND EOL
CALL[java.lang.Runnable,run,0,void] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND CURLYSTART
CALL[java.util.List,size,0,int] +++$+++  OP[assign] EOL VAR[INT] OP[lessThan]
CALL[java.lang.String,equals,1,boolean] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART PARENTHESESEND OP[bitwiseOr] OP[bitwiseOr]
CALL[java.io.File,getPath,0,java.lang.String] +++$+++  VAR[java.io.IOException] PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.String,substring,2,java.lang.String] PARA[VAR[INT]] PARA[VAR[INT]] +++$+++  CURLYEND TYPE[String] VAR[java.lang.String] OP[assign]
CALL[java.lang.String,length,0,int] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.lang.String,length,0,int] +++$+++  LEX[internalClassName.lastIndexOf] PARENTHESESSTART LEX[ClassConstants.PACKAGE_SEPARATOR] COMMA
CALL[java.io.DataOutput,writeBoolean,1,void] PARA[VAR[BOOLEAN]] +++$+++  PARENTHESESEND CURLYSTART TRY CURLYSTART
CALL[java.io.IOException,getMessage,0,java.lang.String] +++$+++  THROW NEW TYPE[RuntimeException] PARENTHESESSTART
CALL[java.io.DataOutput,writeByte,1,void] PARA[VAR[INT]] +++$+++  PARENTHESESEND CURLYSTART TRY CURLYSTART
CALL[java.io.IOException,getMessage,0,java.lang.String] +++$+++  THROW NEW TYPE[RuntimeException] PARENTHESESSTART
CALL[java.io.IOException,getMessage,0,java.lang.String] +++$+++  THROW NEW TYPE[RuntimeException] PARENTHESESSTART
CALL[java.io.DataInput,readFloat,0,float] +++$+++  CURLYSTART TRY CURLYSTART RETURN
CALL[java.io.IOException,getMessage,0,java.lang.String] +++$+++  THROW NEW TYPE[RuntimeException] PARENTHESESSTART
CALL[java.util.Map,get,1,V] PARA[VAR[java.lang.String]] +++$+++  RETURN PARENTHESESSTART TYPE[Clazz] PARENTHESESEND
CALL[java.lang.StringBuilder,length,0,int] +++$+++  EOL CURLYEND IF PARENTHESESSTART
CALL[java.lang.String,lastIndexOf,1,int] PARA[VAR[CHAR]] +++$+++  EOL INT VAR[INT] OP[assign]
CALL[javax.swing.DefaultCellEditor,getCellEditorValue,0,java.lang.Object] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.awt.event.MouseEvent,getClickCount,0,int] +++$+++  EOL CURLYEND IF PARENTHESESSTART
CALL[javax.swing.JTable,getSelectedRow,0,int] +++$+++  PARENTHESESEND PARENTHESESEND OP[assign] OP[assign]
CALL[javax.swing.text.JTextComponent,removeFocusListener,1,void] PARA[VAR[java.awt.event.FocusListener]] +++$+++  LEX[DocumentEvent] LEX[arg0] PARENTHESESEND CURLYSTART
CALL[javax.swing.text.JTextComponent,requestFocus,0,void] +++$+++  LEX[run] PARENTHESESSTART PARENTHESESEND CURLYSTART
CALL[java.awt.Graphics,drawLine,4,void] PARA[VAR[INT]] PARA[VAR[INT]] PARA[VAR[INT]] PARA[VAR[INT]] +++$+++  PARENTHESESSTART LEX[Color.black] PARENTHESESEND EOL
CALL[java.util.Map,get,1,V] PARA[VAR[java.lang.String]] +++$+++  CURLYSTART TYPE[Logger] VAR[java.util.logging.Logger] OP[assign]
CALL[java.util.Collection,addAll,1,boolean] PARA[VAR[java.util.Set]] +++$+++  EOL CURLYEND CURLYEND CURLYEND
CALL[javax.swing.JComponent,getBackground,0,java.awt.Color] +++$+++  PARENTHESESEND CURLYSTART VAR[java.awt.Color] OP[assign]
CALL[javax.swing.JTextArea,setWrapStyleWord,1,void] PARA[LIT[Boolean]] +++$+++  PARENTHESESSTART LEX[true] PARENTHESESEND EOL
CALL[javax.swing.JTextArea,getText,0,java.lang.String] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[javax.swing.JTable,getEditingRow,0,int] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[javax.swing.JTable,getEditingRow,0,int] +++$+++  LEX[TaskDependenciesPanel.CONSTRAINTS] ARRAYSTART ARRAYEND COMMA
CALL[javax.swing.Box,add,1,java.awt.Component] PARA[VAR[javax.swing.JPanel]] +++$+++  COMMA PARENTHESESEND PARENTHESESEND EOL
CALL[javax.swing.Box,add,1,java.awt.Component] PARA[VAR[javax.swing.JButton]] +++$+++  OP[ternaryFalse] VAR[javax.swing.JButton] PARENTHESESEND CURLYSTART
CALL[javax.swing.JFileChooser,getSelectedFile,0,java.io.File] +++$+++  PARENTHESESEND CURLYSTART VAR[java.io.File] OP[assign]
CALL[javax.swing.JSplitPane,getDividerLocation,0,int] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.awt.image.RenderedImage,getHeight,0,int] +++$+++  LEX[image.getWidth] PARENTHESESSTART PARENTHESESEND COMMA
CALL[java.awt.print.PrinterJob,print,1,void] PARA[VAR[javax.print.attribute.PrintRequestAttributeSet]] +++$+++  PARENTHESESEND CURLYSTART TRY CURLYSTART
CALL[java.awt.Graphics,fillRect,4,void] PARA[LIT[Integer]] PARA[LIT[Integer]] PARA[VAR[INT]] PARA[VAR[INT]] +++$+++  PARENTHESESSTART LEX[Color.white] PARENTHESESEND EOL
CALL[java.util.List,add,1,boolean] PARA[CALL[java.lang.StringBuffer,toString]] +++$+++  LEX[DateFormat.DAY_OF_WEEK_FIELD] PARENTHESESEND PARENTHESESEND EOL
CALL[java.util.ResourceBundle,getString,1,java.lang.String] PARA[VAR[java.lang.String]] +++$+++  CURLYSTART TRY CURLYSTART RETURN
CALL[java.util.ArrayList,remove,1,boolean] PARA[VAR[net.sourceforge.ganttproject.language.GanttLanguage.Listener]] +++$+++  LEX[Listener] VAR[net.sourceforge.ganttproject.language.GanttLanguage.Listener] PARENTHESESEND CURLYSTART
CALL[java.lang.String,length,0,int] +++$+++  VAR[INT] OP[lessThan] VAR[INT] OP[sub]
CALL[java.util.List,get,1,E] PARA[VAR[INT]] +++$+++  PARENTHESESEND EOL CURLYEND RETURN
CALL[java.util.List,get,1,E] PARA[VAR[INT]] +++$+++  CURLYSTART TYPE[Composition] VAR[biz.ganttproject.core.time.TimeUnitGraph.Composition] OP[assign]
CALL[java.util.List,size,0,int] +++$+++  OP[assign] EOL VAR[INT] OP[lessThan]
CALL[java.util.Map,keySet,0,java.util.Set<K>] +++$+++  OP[lessThan] TYPE[String] OP[greaterThan] PARENTHESESSTART
CALL[java.util.Map,get,1,V] PARA[VAR[java.lang.String]] +++$+++  VAR[java.lang.String] PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.String,indexOf,2,int] PARA[LIT[Stirng]] PARA[VAR[INT]] +++$+++  PARENTHESESEND CURLYSTART VAR[INT] OP[assign]
CALL[java.lang.String,indexOf,1,int] PARA[VAR[java.lang.String]] +++$+++  EOL INT VAR[INT] OP[assign]
CALL[java.util.Iterator,hasNext,0,boolean] +++$+++  PARENTHESESEND EOL WHILE PARENTHESESSTART
CALL[java.util.List,contains,1,boolean] PARA[VAR[org.argouml.model.mdr.Registry.T]] +++$+++  CURLYEND CURLYEND WHILE PARENTHESESSTART
CALL[java.util.List,size,0,int] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.util.List,add,1,boolean] PARA[CALL[java.util.Map,get]] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND CURLYSTART
CALL[java.lang.String,equals,1,boolean] PARA[LIT[Stirng]] +++$+++  CURLYEND ELSE IF PARENTHESESSTART
CALL[java.lang.String,startsWith,1,boolean] PARA[LIT[Stirng]] +++$+++  RETURN PARENTHESESSTART OP[not] PARENTHESESSTART
CALL[java.lang.String,startsWith,1,boolean] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND EOL RETURN PARENTHESESSTART
CALL[javax.swing.JDialog,dispose,0,void] +++$+++  LEX[ActionEvent] LEX[evt] PARENTHESESEND CURLYSTART
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  PARENTHESESEND CURLYSTART LEX[val.append] PARENTHESESSTART
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[LIT[Character]] +++$+++  PARENTHESESEND EOL CURLYEND CURLYEND
CALL[java.util.Iterator,next,0,E] +++$+++  CURLYSTART TYPE[Object] VAR[java.lang.Object] OP[assign]
CALL[java.util.Set,clear,0,void] +++$+++  LEX[list.clear] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.util.Set,remove,1,boolean] PARA[VAR[org.argouml.cognitive.ListSet.T]] +++$+++  PARENTHESESSTART VAR[INT] PARENTHESESEND EOL
CALL[java.lang.String,hashCode,0,int] +++$+++  RETURN EOL CURLYEND RETURN
CALL[java.lang.String,equals,1,boolean] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.util.Iterator,hasNext,0,boolean] +++$+++  LEX[resourceExtensions.iterator] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.util.List,contains,1,boolean] PARA[VAR[java.lang.String]] +++$+++  VAR[java.lang.String] PARENTHESESEND CURLYSTART RETURN
CALL[java.util.List,contains,1,boolean] PARA[VAR[java.lang.String]] +++$+++  VAR[java.lang.String] PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.StringBuffer,toString,0,java.lang.String] +++$+++  EOL CURLYEND CURLYEND RETURN
CALL[java.util.List,add,1,boolean] PARA[VAR[java.lang.ClassLoader]] +++$+++  LEX[ClassLoader] VAR[java.lang.ClassLoader] PARENTHESESEND CURLYSTART
CALL[java.util.Iterator,next,0,E] +++$+++  OP[assign] PARENTHESESSTART TYPE[ClassLoader] PARENTHESESEND
CALL[java.awt.Component,getParent,0,java.awt.Container] +++$+++  PARENTHESESEND CURLYSTART VAR[java.awt.Component] OP[assign]
CALL[javax.swing.RootPaneContainer,getGlassPane,0,java.awt.Component] +++$+++  PARENTHESESEND OP[bitwiseAnd] OP[bitwiseAnd] PARENTHESESSTART
CALL[java.util.HashMap,put,2,V] PARA[LIT[Stirng]] PARA[CALL[null,valueOf]] +++$+++  OP[greaterThan] PARENTHESESSTART PARENTHESESEND EOL
CALL[javax.swing.Action,putValue,2,void] PARA[LIT[Stirng]] PARA[CALL[null,getKeyStroke]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.List,get,1,E] PARA[LIT[Integer]] +++$+++  PARENTHESESEND OP[assign] OP[assign] OP[ternaryTrue]
CALL[java.util.List,contains,1,boolean] PARA[VAR[java.lang.Object]] +++$+++  CURLYSTART IF PARENTHESESSTART OP[not]
CALL[java.lang.String,equals,1,boolean] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.lang.Thread,interrupt,0,void] +++$+++  OP[assign] NULL PARENTHESESEND CURLYSTART
CALL[javax.swing.JToolBar,isVisible,0,boolean] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.awt.image.BufferedImage,createGraphics,0,java.awt.Graphics2D] +++$+++  EOL TYPE[Graphics2D] VAR[java.awt.Graphics2D] OP[assign]
CALL[java.awt.Graphics2D,setComposite,1,void] PARA[VAR[java.awt.Composite]] +++$+++  COMMA VAR[INT] PARENTHESESEND EOL
CALL[java.awt.image.BufferedImage,getPropertyNames,0,java.lang.String[]] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.awt.image.BufferedImage,getSampleModel,0,java.awt.image.SampleModel] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.util.Map,containsKey,1,boolean] PARA[CALL[null,valueOf]] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.awt.Rectangle,getHeight,0,double] +++$+++  LEX[rect.getY] PARENTHESESSTART PARENTHESESEND OP[sum]
CALL[java.awt.Rectangle,getWidth,0,double] +++$+++  LEX[rect.getX] PARENTHESESSTART PARENTHESESEND OP[sum]
CALL[java.util.Iterator,next,0,E] +++$+++  PARENTHESESSTART VAR[java.lang.Object] OP[assign] OP[assign]
CALL[javax.swing.DefaultListModel,size,0,int] +++$+++  OP[assign] EOL VAR[INT] OP[lessThan]
CALL[java.util.List,size,0,int] +++$+++  RETURN EOL CURLYEND RETURN
CALL[java.lang.String,length,0,int] +++$+++  OP[assign] LEX[path.substring] PARENTHESESSTART COMMA
CALL[java.lang.String,indexOf,1,int] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESEND CURLYSTART VAR[INT] OP[assign]
CALL[java.io.File,mkdir,0,boolean] +++$+++  EOL IF PARENTHESESSTART OP[not]
CALL[java.lang.String,startsWith,1,boolean] PARA[LIT[Stirng]] +++$+++  EOL IF PARENTHESESSTART OP[not]
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESSTART VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.util.Iterator,hasNext,0,boolean] +++$+++  PARENTHESESEND EOL WHILE PARENTHESESSTART
CALL[java.lang.Integer,intValue,0,int] +++$+++  ARRAYSTART VAR[INT] ARRAYEND OP[assign]
CALL[javax.swing.filechooser.FileFilter,accept,1,boolean] PARA[VAR[java.io.File]] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[javax.swing.Action,actionPerformed,1,void] PARA[VAR[java.awt.event.ActionEvent]] +++$+++  LEX[ActionEvent] VAR[java.awt.event.ActionEvent] PARENTHESESEND CURLYSTART
CALL[java.lang.String,length,0,int] +++$+++  RETURN LEX[s.substring] PARENTHESESSTART COMMA
CALL[java.util.Hashtable,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.lang.String]] +++$+++  STRING VAR[java.lang.String] PARENTHESESEND CURLYSTART
CALL[java.util.List,add,1,boolean] PARA[CALL[java.net.URL,getFile]] +++$+++  OP[ternaryFalse] VAR[java.net.URL] PARENTHESESEND CURLYSTART
CALL[java.lang.StringBuilder,toString,0,java.lang.String] +++$+++  PARENTHESESEND EOL CURLYEND RETURN
CALL[java.lang.StringBuilder,toString,0,java.lang.String] +++$+++  PARENTHESESEND EOL CURLYEND RETURN
CALL[java.util.Collection,remove,1,boolean] PARA[VAR[java.lang.Object]] +++$+++  LEX[Object] VAR[java.lang.Object] PARENTHESESEND CURLYSTART
CALL[java.lang.String,endsWith,1,boolean] PARA[LIT[Stirng]] +++$+++  CURLYEND ELSE IF PARENTHESESSTART
CALL[java.lang.String,startsWith,1,boolean] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.lang.String,substring,2,java.lang.String] PARA[LIT[Integer]] PARA[LIT[Integer]] +++$+++  EOL TYPE[String] VAR[java.lang.String] OP[assign]
CALL[java.util.Enumeration,nextElement,0,E] +++$+++  CURLYSTART TYPE[ZipEntry] VAR[java.util.zip.ZipEntry] OP[assign]
CALL[java.lang.String,length,0,int] +++$+++  OP[assign] LEX[name.substring] PARENTHESESSTART COMMA
CALL[java.util.List,iterator,0,java.util.Iterator<E>] +++$+++  EOL TYPE[Iterator] VAR[java.util.Iterator] OP[assign]
CALL[java.util.Iterator,next,0,E] +++$+++  OP[assign] PARENTHESESSTART TYPE[String] PARENTHESESEND
CALL[java.lang.String,length,0,int] +++$+++  PARENTHESESSTART VAR[INT] OP[sum] COMMA
CALL[java.awt.image.BufferedImage,getWidth,0,int] +++$+++  VAR[java.awt.image.BufferedImage] COMMA COMMA COMMA
CALL[javax.swing.JLabel,setVisible,1,void] PARA[VAR[BOOLEAN]] +++$+++  BOOLEAN VAR[BOOLEAN] PARENTHESESEND CURLYSTART
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  VAR[INT] OP[assign] LEX[Character.digit] PARENTHESESSTART
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Character]] +++$+++  OP[bitwiseAnd] ARRAYEND PARENTHESESEND EOL
CALL[java.lang.String,equals,1,boolean] PARA[LIT[Stirng]] +++$+++  EOL IF PARENTHESESSTART OP[not]
CALL[java.util.List,listIterator,0,java.util.ListIterator<E>] +++$+++  PARENTHESESEND CURLYSTART VAR[java.util.ListIterator] OP[assign]
CALL[javax.swing.JLabel,setSize,1,void] PARA[VAR[java.awt.Dimension]] +++$+++  PARENTHESESSTART VAR[java.awt.Dimension] PARENTHESESEND EOL
CALL[java.lang.String,indexOf,2,int] PARA[VAR[java.lang.String]] PARA[VAR[INT]] +++$+++  PARENTHESESSTART PARENTHESESSTART VAR[INT] OP[assign]
CALL[javax.swing.JTextPane,getEditorKit,0,javax.swing.text.EditorKit] +++$+++  PARENTHESESEND EOL LEX[m_textPane.setEditorKit] PARENTHESESSTART
CALL[javax.swing.JPanel,validate,0,void] +++$+++  LEX[m_textPane.validate] PARENTHESESSTART PARENTHESESEND EOL
CALL[javax.swing.text.MutableAttributeSet,getAttributeNames,0,java.util.Enumeration<? extends java.lang.Object>] +++$+++  PARENTHESESEND EOL LEX[attr.removeAttributes] PARENTHESESSTART
CALL[javax.swing.text.StyledDocument,getLength,0,int] +++$+++  EOL LEX[doc.setParagraphAttributes] PARENTHESESSTART COMMA
CALL[javax.swing.JSpinner,setEnabled,1,void] PARA[CALL[javax.swing.JCheckBox,isSelected]] +++$+++  LEX[updateFixedDueTimeSpinner] PARENTHESESSTART PARENTHESESEND CURLYSTART
CALL[javax.swing.JPanel,getComponentCount,0,int] +++$+++  OP[assign] EOL VAR[INT] OP[lessThan]
CALL[java.awt.event.KeyEvent,getKeyCode,0,int] +++$+++  PARENTHESESEND CURLYSTART SWITCH PARENTHESESSTART
CALL[javax.swing.JTextPane,getSelectionStart,0,int] +++$+++  EOL INT VAR[INT] OP[assign]
CALL[java.io.InputStream,close,0,void] +++$+++  CURLYEND CURLYEND FINALLY CURLYSTART
CALL[java.io.OutputStream,close,0,void] +++$+++  PARENTHESESSTART VAR[java.io.File] PARENTHESESEND EOL
CALL[java.awt.image.BufferedImage,getHeight,0,int] +++$+++  LEX[Rectangle2D.Double] PARENTHESESSTART LEX[image.getWidth] PARENTHESESSTART
CALL[java.io.File,getAbsolutePath,0,java.lang.String] +++$+++  PARENTHESESSTART OP[sum] LEX[stringTools.sourced] PARENTHESESSTART
CALL[java.lang.String,length,0,int] +++$+++  VAR[java.lang.String] EOL IF PARENTHESESSTART
CALL[java.awt.image.BufferedImage,getWidth,0,int] +++$+++  TYPE[Rectangle] PARENTHESESSTART COMMA COMMA
CALL[java.util.Map,containsKey,1,boolean] PARA[VAR[java.lang.Integer]] +++$+++  PARENTHESESEND EOL ASSERT OP[not]
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.Integer]] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESSTART VAR[java.lang.Integer] PARENTHESESEND EOL
CALL[java.lang.StringBuffer,toString,0,java.lang.String] +++$+++  EOL CURLYEND VAR[java.lang.String] OP[assign]
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[LIT[Stirng]] +++$+++  OP[assign] OP[assign] PARENTHESESEND CURLYSTART
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  CURLYSTART CHAR VAR[CHAR] OP[assign]
CALL[java.lang.StringBuffer,toString,0,java.lang.String] +++$+++  EOL CURLYEND CURLYEND RETURN
CALL[java.lang.String,length,0,int] +++$+++  VAR[java.lang.String] OP[assign] LEX[zeros.substring] PARENTHESESSTART
CALL[java.lang.String,startsWith,1,boolean] PARA[VAR[java.lang.String]] +++$+++  VAR[java.lang.String] EOL IF PARENTHESESSTART
CALL[java.util.Locale,getDisplayName,0,java.lang.String] +++$+++  PARENTHESESSTART PARENTHESESEND EOL RETURN
CALL[java.io.File,getAbsolutePath,0,java.lang.String] +++$+++  TYPE[String] ARRAYSTART ARRAYEND CURLYSTART
CALL[java.util.regex.Matcher,matches,0,boolean] +++$+++  PARENTHESESEND PARENTHESESEND EOL RETURN
CALL[javax.swing.JProgressBar,setValue,1,void] PARA[CALL[javax.swing.JProgressBar,getMinimum]] +++$+++  PARENTHESESSTART LEX[true] PARENTHESESEND EOL
CALL[java.util.List,iterator,0,java.util.Iterator<E>] +++$+++  PARENTHESESEND EOL VAR[java.util.Iterator] OP[assign]
CALL[java.util.Iterator,next,0,E] +++$+++  OP[assign] PARENTHESESSTART TYPE[String] PARENTHESESEND
CALL[java.util.Map,containsKey,1,boolean] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESEND EOL WHILE PARENTHESESSTART
CALL[java.lang.String,length,0,int] +++$+++  EOL INT VAR[INT] OP[assign]
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  CURLYSTART CHAR VAR[CHAR] OP[assign]
CALL[java.lang.String,substring,2,java.lang.String] PARA[LIT[Integer]] PARA[VAR[INT]] +++$+++  CURLYSTART TYPE[String] VAR[java.lang.String] OP[assign]
CALL[java.lang.String,equals,1,boolean] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.io.BufferedWriter,write,1,void] PARA[VAR[java.lang.String]] +++$+++  VAR[INT] ARRAYEND PARENTHESESEND EOL
CALL[java.util.List,add,1,boolean] PARA[VAR[java.lang.Object]] +++$+++  VAR[java.util.List] PARENTHESESEND EOL CURLYEND
CALL[java.lang.String,length,0,int] +++$+++  EOL ASSERT VAR[INT] OP[lessThan]
CALL[java.util.Iterator,next,0,E] +++$+++  OP[assign] PARENTHESESSTART TYPE[ImageReader] PARENTHESESEND
CALL[java.lang.String,equals,1,boolean] PARA[VAR[java.lang.String]] +++$+++  CURLYEND ELSE CURLYSTART ASSERT
CALL[java.awt.Graphics2D,dispose,0,void] +++$+++  EOL CURLYEND FINALLY CURLYSTART
CALL[java.awt.Color,getRGB,0,int] +++$+++  VAR[java.lang.String] OP[assign] LEX[stringTools.colorString] PARENTHESESSTART
CALL[java.lang.String,equals,1,boolean] PARA[CALL[java.lang.String,toLowerCase]] +++$+++  OP[assign] NULL EOL ASSERT
CALL[java.lang.Throwable,printStackTrace,1,void] PARA[VAR[java.io.PrintStream]] +++$+++  PARENTHESESSTART VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.awt.event.ActionEvent,getActionCommand,0,java.lang.String] +++$+++  EOL TYPE[String] VAR[java.lang.String] OP[assign]
CALL[javax.swing.JButton,setActionCommand,1,void] PARA[VAR[java.lang.String]] +++$+++  LEX[localeTools.createCancelButton] PARENTHESESSTART PARENTHESESEND EOL
CALL[javax.swing.JMenuItem,setEnabled,1,void] PARA[VAR[BOOLEAN]] +++$+++  BOOLEAN VAR[BOOLEAN] PARENTHESESEND CURLYSTART
CALL[javax.swing.JButton,setEnabled,1,void] PARA[LIT[Boolean]] +++$+++  LEX[UIStates.VIEWING] PARENTHESESEND PARENTHESESEND CURLYSTART
CALL[javax.swing.ListSelectionModel,removeSelectionInterval,2,void] PARA[VAR[INT]] PARA[VAR[INT]] +++$+++  INT VAR[INT] PARENTHESESEND CURLYSTART
CALL[java.lang.String,startsWith,1,boolean] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.lang.String,startsWith,1,boolean] PARA[VAR[java.lang.String]] +++$+++  CURLYEND ELSE IF PARENTHESESSTART
CALL[javax.swing.JScrollBar,getValue,0,int] +++$+++  NULL EOL LEX[bar.setValue] PARENTHESESSTART
CALL[java.awt.image.RenderedImage,getHeight,0,int] +++$+++  PARENTHESESEND EOL VAR[INT] OP[assign]
CALL[java.awt.image.RenderedImage,getWidth,0,int] +++$+++  ELSE CURLYSTART VAR[INT] OP[assign]
CALL[java.util.HashMap,put,2,V] PARA[VAR[java.lang.Object]] PARA[VAR[java.util.Hashtable]] +++$+++  TYPE[Hashtable] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.util.List,add,1,boolean] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESEND PARENTHESESEND RETURN EOL
CALL[javax.swing.JButton,setEnabled,1,void] PARA[LIT[Boolean]] +++$+++  LEX[ConfigurationEventsQueue.notifyPendingEvents] PARENTHESESSTART PARENTHESESEND EOL
CALL[javax.swing.JPopupMenu,add,1,javax.swing.JMenuItem] PARA[VAR[javax.swing.JMenuItem]] +++$+++  LEX[setUpMenuStuff] PARENTHESESSTART PARENTHESESEND CURLYSTART
CALL[javax.swing.JProgressBar,setValue,1,void] PARA[VAR[INT]] +++$+++  INT VAR[INT] PARENTHESESEND CURLYSTART
CALL[org.jfm.views.FontDialog,setVisible,1,void] PARA[LIT[Boolean]] +++$+++  PARENTHESESSTART VAR[java.awt.Frame] PARENTHESESEND EOL
CALL[java.awt.Graphics2D,getColor,0,java.awt.Color] +++$+++  EOL TYPE[Color] VAR[java.awt.Color] OP[assign]
CALL[javax.swing.JTextField,getText,0,java.lang.String] +++$+++  PARENTHESESEND CURLYSTART LEX[listener.find] PARENTHESESSTART
CALL[javax.swing.JCheckBox,isSelected,0,boolean] +++$+++  LEX[caseSensitiveCheckBox.isSelected] PARENTHESESSTART PARENTHESESEND COMMA
CALL[java.lang.String,length,0,int] +++$+++  PARENTHESESSTART INT VAR[INT] OP[assign]
CALL[java.awt.MenuItem,addActionListener,1,void] PARA[THIS[null]] +++$+++  PARENTHESESSTART VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.io.FileNotFoundException,printStackTrace,0,void] +++$+++  TYPE[FileNotFoundException] VAR[java.io.FileNotFoundException] PARENTHESESEND CURLYSTART
CALL[java.io.PrintWriter,close,0,void] +++$+++  PARENTHESESSTART VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.util.Random,nextInt,0,int] +++$+++  CURLYSTART INT VAR[INT] OP[assign]
CALL[java.lang.Class,newInstance,0,T] +++$+++  CURLYSTART TRY CURLYSTART RETURN
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[VAR[java.lang.String]] +++$+++  LEX[DateTime.NA_TIME] PARENTHESESEND PARENTHESESEND CURLYSTART
CALL[java.util.GregorianCalendar,setTimeInMillis,1,void] PARA[VAR[LONG]] +++$+++  LEX[DateTime.calendarInstance] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.util.GregorianCalendar,getTimeInMillis,0,long] +++$+++  COMMA PARENTHESESEND EOL RETURN
CALL[java.util.Date,getTime,0,long] +++$+++  LEX[d2.getTime] PARENTHESESSTART PARENTHESESEND OP[sub]
CALL[java.util.LinkedList,remove,1,boolean] PARA[VAR[java.lang.Object]] +++$+++  VAR[java.lang.Object] PARENTHESESEND CURLYSTART RETURN
CALL[java.util.LinkedList,set,2,E] PARA[VAR[INT]] PARA[VAR[java.lang.Object]] +++$+++  VAR[java.lang.Object] PARENTHESESEND CURLYSTART RETURN
CALL[java.util.LinkedList,toArray,1,T[]] PARA[VAR[java.lang.Object]] +++$+++  VAR[java.lang.Object] PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[LIT[Character]] +++$+++  PARENTHESESSTART VAR[INT] OP[greaterThan] PARENTHESESEND
CALL[javax.swing.event.EventListenerList,getListeners,1,T[]] PARA[VAR[java.lang.Class]] +++$+++  VAR[java.lang.Class] PARENTHESESEND CURLYSTART RETURN
CALL[java.util.Iterator,next,0,E] +++$+++  OP[assign] PARENTHESESSTART TYPE[HasTimeDistributedData] PARENTHESESEND
CALL[java.util.Iterator,next,0,E] +++$+++  OP[assign] PARENTHESESSTART TYPE[HasTimeDistributedData] PARENTHESESEND
CALL[java.io.ObjectOutputStream,writeDouble,1,void] PARA[VAR[DOUBLE]] +++$+++  PARENTHESESEND THROWS LEX[IOException] CURLYSTART
CALL[java.io.ObjectOutputStream,writeLong,1,void] PARA[VAR[LONG]] +++$+++  PARENTHESESSTART VAR[DOUBLE] PARENTHESESEND EOL
CALL[java.util.ListIterator,next,0,E] +++$+++  OP[assign] PARENTHESESSTART TYPE[TaskReference] PARENTHESESEND
CALL[java.util.ListIterator,hasNext,0,boolean] +++$+++  PARENTHESESEND EOL WHILE PARENTHESESSTART
CALL[java.util.Iterator,hasNext,0,boolean] +++$+++  VAR[com.projity.pm.criticalpath.PredecessorTaskList.TaskReference] EOL WHILE PARENTHESESSTART
CALL[java.util.Calendar,getTimeInMillis,0,long] +++$+++  PARENTHESESEND EOL VAR[LONG] OP[assign]
CALL[java.lang.Integer,intValue,0,int] +++$+++  RETURN VAR[INT] OP[assign] OP[assign]
CALL[java.util.HashMap,put,2,V] PARA[FIELD[com.projity.graphic.configuration.shape.PredefinedShape]] PARA[VAR[com.projity.graphic.configuration.shape.PredefinedShape]] +++$+++  LEX[PredefinedShape] VAR[com.projity.graphic.configuration.shape.PredefinedShape] PARENTHESESEND CURLYSTART
CALL[java.util.Iterator,hasNext,0,boolean] +++$+++  PARENTHESESEND EOL WHILE PARENTHESESSTART
CALL[java.util.Hashtable,get,1,V] PARA[VAR[java.lang.String]] +++$+++  OP[assign] PARENTHESESSTART TYPE[FormulaClass] PARENTHESESEND
CALL[java.util.HashMap,get,1,V] PARA[VAR[java.lang.String]] +++$+++  RETURN PARENTHESESSTART TYPE[Field] PARENTHESESEND
CALL[java.lang.StringBuffer,toString,0,java.lang.String] +++$+++  VAR[java.lang.String] PARENTHESESEND EOL RETURN
CALL[javax.swing.undo.UndoableEditSupport,endUpdate,0,void] +++$+++  OP[not] OP[assign] NULL PARENTHESESEND
CALL[java.util.regex.Matcher,matches,0,boolean] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.util.Iterator,toString,0,java.lang.String] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.util.List,add,1,boolean] PARA[CALL[java.util.StringTokenizer,nextToken]] +++$+++  LEX[st.hasMoreTokens] PARENTHESESSTART PARENTHESESEND PARENTHESESEND
CALL[java.lang.String,endsWith,1,boolean] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART PARENTHESESEND OP[bitwiseOr] OP[bitwiseOr]
CALL[java.util.Map,get,1,V] PARA[LIT[Stirng]] +++$+++  RETURN PARENTHESESSTART TYPE[String] PARENTHESESEND
CALL[java.util.Map,get,1,V] PARA[LIT[Stirng]] +++$+++  RETURN PARENTHESESSTART TYPE[String] PARENTHESESEND
CALL[java.util.Calendar,getClass,0,java.lang.Class<? extends java.lang.Object>] +++$+++  PARENTHESESSTART PARENTHESESEND OP[not] OP[assign]
CALL[java.util.Calendar,isLenient,0,boolean] +++$+++  EOL BOOLEAN VAR[BOOLEAN] OP[assign]
CALL[java.util.Calendar,getTime,0,java.util.Date] +++$+++  VAR[java.lang.String] OP[assign] LEX[recycledDateFormat.format] PARENTHESESSTART
CALL[java.io.InputStream,close,0,void] +++$+++  OP[not] OP[assign] NULL PARENTHESESEND
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART LEX[m_font] PARENTHESESEND EOL
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART LEX[m_pattern] PARENTHESESEND EOL
CALL[java.io.PrintWriter,print,1,void] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART VAR[INT] PARENTHESESEND EOL
CALL[java.io.PrintWriter,print,1,void] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.io.PrintWriter,println,1,void] PARA[LIT[Stirng]] +++$+++  LEX[c] PARENTHESESEND EOL CURLYEND
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Stirng]] +++$+++  OP[assign] NULL PARENTHESESEND CURLYSTART
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Stirng]] +++$+++  CURLYEND CASE OP[ternaryFalse] CURLYSTART
CALL[java.lang.String,length,0,int] +++$+++  OP[assign] EOL VAR[INT] OP[lessThan]
CALL[java.util.Calendar,setTime,1,void] PARA[VAR[java.util.Date]] +++$+++  LEX[Calendar.getInstance] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.util.TimeZone,getRawOffset,0,int] +++$+++  TYPE[Date] PARENTHESESSTART VAR[LONG] OP[sub]
CALL[java.lang.String,equals,1,boolean] PARA[CALL[net.sf.mpxj.primavera.Record,getField]] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  CURLYSTART CHAR VAR[CHAR] OP[assign]
CALL[java.lang.Double,doubleValue,0,double] +++$+++  CURLYSTART VAR[DOUBLE] OP[sum] OP[assign]
CALL[java.io.InputStream,read,0,int] +++$+++  PARENTHESESEND CURLYSTART VAR[INT] OP[assign]
CALL[java.lang.ThreadLocal,get,0,T] +++$+++  CURLYSTART TYPE[DateFormat] VAR[java.text.DateFormat] OP[assign]
CALL[java.util.Date,getTime,0,long] +++$+++  EOL LONG VAR[LONG] OP[assign]
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[VAR[CHAR]] +++$+++  VAR[CHAR] OP[assign] EOL CURLYEND
CALL[java.lang.StringBuilder,toString,0,java.lang.String] +++$+++  EOL CURLYEND LEX[pw.println] PARENTHESESSTART
CALL[java.io.PrintWriter,print,1,void] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART VAR[java.io.ByteArrayOutputStream] PARENTHESESEND EOL
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Stirng]] +++$+++  EOL CURLYEND ELSE CURLYSTART
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Stirng]] +++$+++  OP[assign] LEX[DayType.NON_WORKING] PARENTHESESEND CURLYSTART
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Stirng]] +++$+++  TYPE[StringBuilder] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.util.Map,get,1,V] PARA[CALL[java.lang.String,toLowerCase]] +++$+++  EOL TYPE[Integer] VAR[java.lang.Integer] OP[assign]
CALL[java.lang.String,length,0,int] +++$+++  OP[assign] LEX[pattern.substring] PARENTHESESSTART COMMA
CALL[java.lang.Integer,intValue,0,int] +++$+++  CURLYSTART INT VAR[INT] OP[assign]
CALL[java.lang.ThreadLocal,get,0,T] +++$+++  CURLYSTART TYPE[NumberFormat] VAR[java.text.NumberFormat] OP[assign]
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[VAR[CHAR]] +++$+++  OP[assign] OP[assign] PARENTHESESEND CURLYSTART
CALL[java.lang.StringBuilder,toString,0,java.lang.String] +++$+++  VAR[INT] OP[assign] LEX[Integer.parseInt] PARENTHESESSTART
CALL[java.lang.StringBuilder,toString,0,java.lang.String] +++$+++  VAR[DOUBLE] OP[assign] LEX[Double.parseDouble] PARENTHESESSTART
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[VAR[INT]] +++$+++  EOL CURLYEND ELSE CURLYSTART
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Stirng]] +++$+++  VAR[INT] PARENTHESESEND EOL CURLYEND
CALL[java.lang.StringBuilder,insert,2,java.lang.StringBuilder] PARA[LIT[Integer]] PARA[LIT[Character]] +++$+++  OP[assign] LEX[true] PARENTHESESEND CURLYSTART
CALL[java.lang.StringBuilder,toString,0,java.lang.String] +++$+++  CURLYEND CURLYEND RETURN PARENTHESESSTART
CALL[java.io.InputStream,read,1,int] PARA[VAR[BYTE]] +++$+++  ARRAYEND EOL IF PARENTHESESSTART
CALL[java.util.List,isEmpty,0,boolean] +++$+++  VAR[INT] EOL IF PARENTHESESSTART
CALL[java.util.HashMap,get,1,V] PARA[VAR[java.lang.Integer]] +++$+++  ARRAYSTART ARRAYEND VAR[BYTE] OP[assign]
CALL[java.io.PrintWriter,println,1,void] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART VAR[java.io.StringWriter] PARENTHESESEND EOL
CALL[java.io.PrintWriter,println,1,void] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND PARENTHESESEND EOL CURLYEND
CALL[java.lang.String,length,0,int] +++$+++  OP[sum] OP[assign] PARENTHESESSTART PARENTHESESSTART
CALL[java.lang.String,length,0,int] +++$+++  OP[assign] NULL OP[bitwiseAnd] OP[bitwiseAnd]
CALL[java.lang.StringBuilder,toString,0,java.lang.String] +++$+++  EOL CURLYEND VAR[java.lang.String] OP[assign]
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Stirng]] +++$+++  TYPE[StringBuilder] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.util.Calendar,getTime,0,java.util.Date] +++$+++  CURLYSTART TYPE[Date] VAR[java.util.Date] OP[assign]
CALL[java.lang.String,length,0,int] +++$+++  OP[assign] NEW BYTE ARRAYSTART
CALL[java.lang.String,length,0,int] +++$+++  COMMA VAR[BYTE] COMMA COMMA
CALL[java.util.Map,get,1,V] PARA[VAR[java.lang.Class]] +++$+++  VAR[java.lang.Class] PARENTHESESEND CURLYSTART RETURN
CALL[java.util.Map,clear,0,void] +++$+++  LEX[clear] PARENTHESESSTART PARENTHESESEND CURLYSTART
CALL[javax.swing.JList,getModel,0,javax.swing.ListModel<E>] +++$+++  CURLYSTART TYPE[ListModel] VAR[javax.swing.ListModel] OP[assign]
CALL[java.util.StringTokenizer,nextToken,0,java.lang.String] +++$+++  LEX[st.hasMoreTokens] PARENTHESESSTART PARENTHESESEND PARENTHESESEND
CALL[java.util.ArrayList,get,1,E] PARA[VAR[INT]] +++$+++  RETURN PARENTHESESSTART TYPE[Field] PARENTHESESEND
CALL[java.awt.Component,getFont,0,java.awt.Font] +++$+++  CURLYSTART TYPE[Font] VAR[java.awt.Font] OP[assign]
CALL[java.util.Map,put,2,V] PARA[VAR[java.awt.Font]] PARA[VAR[java.awt.Font]] +++$+++  PARENTHESESSTART VAR[INT] PARENTHESESEND EOL
CALL[javax.swing.JComponent,setForeground,1,void] PARA[VAR[java.awt.Color]] +++$+++  LEX[format.getForegroundObject] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.util.ArrayList,listIterator,0,java.util.ListIterator<E>] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.util.HashSet,addAll,1,boolean] PARA[VAR[java.util.Collection]] +++$+++  TYPE[HashSet] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.util.ArrayList,get,1,E] PARA[VAR[INT]] +++$+++  VAR[INT] PARENTHESESEND CURLYSTART RETURN
CALL[java.util.List,listIterator,0,java.util.ListIterator<E>] +++$+++  PARENTHESESSTART TYPE[ListIterator] VAR[java.util.ListIterator] OP[assign]
CALL[java.util.Map,get,1,V] PARA[VAR[java.lang.String]] +++$+++  RETURN PARENTHESESSTART TYPE[Component] PARENTHESESEND
CALL[java.awt.Point,getY,0,double] +++$+++  COMMA PARENTHESESSTART INT PARENTHESESEND
CALL[java.lang.String,startsWith,1,boolean] PARA[LIT[Stirng]] +++$+++  CURLYSTART IF PARENTHESESSTART OP[not]
CALL[java.lang.String,length,0,int] +++$+++  VAR[java.lang.String] OP[assign] LEX[htmlTip.substring] PARENTHESESSTART
CALL[java.awt.geom.GeneralPath,lineTo,2,void] PARA[LIT[Integer]] PARA[VAR[INT]] +++$+++  COMMA VAR[INT] PARENTHESESEND EOL
CALL[java.awt.Color,getRed,0,int] +++$+++  VAR[DOUBLE] OP[multiply] PARENTHESESSTART OP[sub]
CALL[java.awt.image.BufferedImage,getHeight,0,int] +++$+++  LEX[src.getWidth] PARENTHESESSTART PARENTHESESEND COMMA
CALL[java.awt.image.BufferedImage,getType,0,int] +++$+++  CURLYEND INT VAR[INT] OP[assign]
CALL[java.awt.image.BufferedImage,getType,0,int] +++$+++  CURLYEND INT VAR[INT] OP[assign]
CALL[java.io.FileNotFoundException,printStackTrace,0,void] +++$+++  TYPE[FileNotFoundException] VAR[java.io.FileNotFoundException] PARENTHESESEND CURLYSTART
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[LIT[Stirng]] +++$+++  VAR[INT] PARENTHESESEND EOL CURLYEND
CALL[java.lang.StringBuffer,toString,0,java.lang.String] +++$+++  OP[sum] OP[assign] LEX[Double.parseDouble] PARENTHESESSTART
CALL[java.awt.Insets,clone,0,java.lang.Object] +++$+++  RETURN PARENTHESESSTART TYPE[Insets] PARENTHESESEND
CALL[java.awt.Graphics,fillRect,4,void] PARA[VAR[INT]] PARA[VAR[INT]] PARA[VAR[INT]] PARA[VAR[INT]] +++$+++  PARENTHESESSTART VAR[java.awt.Color] PARENTHESESEND EOL
CALL[java.util.StringTokenizer,nextToken,0,java.lang.String] +++$+++  PARENTHESESEND OP[ternaryTrue] LEX[Integer.parseInt] PARENTHESESSTART
CALL[java.util.StringTokenizer,hasMoreElements,0,boolean] +++$+++  TRY CURLYSTART VAR[INT] OP[assign]
CALL[java.awt.Point,getY,0,double] +++$+++  PARENTHESESSTART PARENTHESESSTART INT PARENTHESESEND
CALL[java.net.URL,openStream,0,java.io.InputStream] +++$+++  PARENTHESESSTART NEW TYPE[BufferedInputStream] PARENTHESESSTART
CALL[java.lang.Thread,start,0,void] +++$+++  PARENTHESESSTART THIS PARENTHESESEND EOL
CALL[java.util.StringTokenizer,countTokens,0,int] +++$+++  OP[assign] NEW TYPE[String] ARRAYSTART
CALL[java.io.PrintStream,close,0,void] +++$+++  OP[assign] NULL PARENTHESESEND CURLYSTART
CALL[java.net.Socket,getOutputStream,0,java.io.OutputStream] +++$+++  PARENTHESESSTART NEW TYPE[BufferedOutputStream] PARENTHESESSTART
CALL[java.net.URL,getHost,0,java.lang.String] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.InterruptedException,printStackTrace,0,void] +++$+++  TYPE[InterruptedException] VAR[java.lang.InterruptedException] PARENTHESESEND CURLYSTART
CALL[java.util.ResourceBundle,getString,1,java.lang.String] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESEND CURLYSTART LEX[out.print] PARENTHESESSTART
CALL[java.io.PrintWriter,print,1,void] PARA[LIT[Stirng]] +++$+++  STRING LEX[line] PARENTHESESEND CURLYSTART
CALL[java.lang.String,endsWith,1,boolean] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.lang.String,length,0,int] +++$+++  OP[assign] EOL VAR[INT] OP[lessThan]
CALL[javax.swing.table.TableColumn,setPreferredWidth,1,void] PARA[LIT[Integer]] +++$+++  LEX[column.setMinWidth] PARENTHESESSTART PARENTHESESEND EOL
CALL[javax.swing.table.TableColumnModel,getColumnCount,0,int] +++$+++  OP[assign] EOL VAR[INT] OP[lessThan]
CALL[java.awt.GridBagLayout,setConstraints,2,void] PARA[VAR[javax.swing.JTextField]] PARA[VAR[java.awt.GridBagConstraints]] +++$+++  EOL FIELD[gridy,java.awt.GridBagConstraints] OP[assign] EOL
CALL[javax.swing.JPanel,add,1,java.awt.Component] PARA[VAR[javax.swing.JLabel]] +++$+++  PARENTHESESSTART VAR[javax.swing.JLabel] PARENTHESESEND EOL
CALL[javax.swing.JTextField,getText,0,java.lang.String] +++$+++  PARENTHESESEND EOL LEX[selectedHostInfo.port] OP[assign]
CALL[java.lang.Exception,printStackTrace,0,void] +++$+++  TYPE[Exception] VAR[java.lang.Exception] PARENTHESESEND CURLYSTART
CALL[java.io.PrintStream,println,1,void] PARA[LIT[Stirng]] +++$+++  OP[sum] OP[sum] PARENTHESESEND CURLYSTART
CALL[javax.swing.JTextArea,append,1,void] PARA[LIT[Stirng]] +++$+++  LEX[info.append] PARENTHESESSTART PARENTHESESEND EOL
CALL[javax.swing.JTextArea,append,1,void] PARA[LIT[Stirng]] +++$+++  LEX[info.append] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.awt.Image,getHeight,1,int] PARA[THIS[null]] +++$+++  EOL INT VAR[INT] OP[assign]
CALL[java.lang.Class,newInstance,0,T] +++$+++  OP[assign] PARENTHESESSTART TYPE[InternalAction] PARENTHESESEND
CALL[java.lang.String,startsWith,1,boolean] PARA[VAR[java.lang.String]] +++$+++  OP[assign] NULL OP[bitwiseAnd] OP[bitwiseAnd]
CALL[java.lang.String,substring,2,java.lang.String] PARA[LIT[Integer]] PARA[VAR[INT]] +++$+++  ELSE CURLYSTART FIELD[msgId,jason.asSemantics.Message] OP[assign]
CALL[java.lang.String,substring,2,java.lang.String] PARA[LIT[Integer]] PARA[VAR[INT]] +++$+++  PARENTHESESEND CURLYSTART FIELD[msgId,jason.asSemantics.Message] OP[assign]
CALL[java.io.File,exists,0,boolean] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.util.Iterator,hasNext,0,boolean] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.lang.String,length,0,int] +++$+++  RETURN LEX[s.substring] PARENTHESESSTART COMMA
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[LIT[Stirng]] +++$+++  CONTINUE EOL CASE OP[ternaryFalse]
CALL[java.lang.StringBuffer,toString,0,java.lang.String] +++$+++  EOL CURLYEND CURLYEND RETURN
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[VAR[CHAR]] +++$+++  EOL CURLYEND ELSE CURLYSTART
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  PARENTHESESEND CURLYSTART SWITCH PARENTHESESSTART
CALL[java.lang.String,startsWith,1,boolean] PARA[LIT[Stirng]] +++$+++  OP[assign] NULL OP[bitwiseAnd] OP[bitwiseAnd]
CALL[java.io.File,exists,0,boolean] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.io.File,delete,0,boolean] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND CURLYSTART
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  PARENTHESESEND CURLYSTART SWITCH PARENTHESESSTART
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[LIT[Stirng]] +++$+++  CONTINUE EOL CASE OP[ternaryFalse]
CALL[java.lang.String,length,0,int] +++$+++  PARENTHESESSTART OP[sum] LEX[s.substring] PARENTHESESSTART
CALL[java.util.Set,clear,0,void] +++$+++  VAR[BOOLEAN] OP[assign] LEX[true] EOL
CALL[java.util.Collection,size,0,int] +++$+++  RETURN NEW TYPE[Vec] PARENTHESESSTART
CALL[java.util.Collection,size,0,int] +++$+++  RETURN NEW TYPE[Vec] PARENTHESESSTART
CALL[java.util.Collection,size,0,int] +++$+++  OP[assign] VAR[DOUBLE] VAR[DOUBLE] OP[assign]
CALL[java.util.logging.Logger,info,1,void] PARA[LIT[Stirng]] +++$+++  LEX[processLogIn] PARENTHESESSTART PARENTHESESEND CURLYSTART
CALL[java.lang.String,startsWith,1,boolean] PARA[VAR[java.lang.String]] +++$+++  VAR[java.lang.String] PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.String,length,0,int] +++$+++  RETURN LEX[string.substring] PARENTHESESSTART COMMA
CALL[java.util.HashMap,keySet,0,java.util.Set<K>] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.io.File,getCanonicalPath,0,java.lang.String] +++$+++  TRY CURLYSTART VAR[java.lang.String] OP[assign]
CALL[java.lang.String,length,0,int] +++$+++  OP[assign] EOL VAR[INT] OP[lessThan]
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[LIT[Character]] +++$+++  BREAK EOL CURLYEND CURLYEND
CALL[java.lang.StringBuffer,toString,0,java.lang.String] +++$+++  CASE OP[ternaryFalse] LEX[extensions.add] PARENTHESESSTART
CALL[java.util.Iterator,hasNext,0,boolean] +++$+++  LEX[colors.iterator] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.lang.String,length,0,int] +++$+++  OP[bitwiseAnd] OP[bitwiseAnd] VAR[INT] OP[lessThan]
CALL[java.lang.String,substring,2,java.lang.String] PARA[LIT[Integer]] PARA[CALL[java.lang.String,indexOf]] +++$+++  EOL TYPE[String] VAR[java.lang.String] OP[assign]
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[VAR[INT]] +++$+++  LEX[output.append] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.io.BufferedReader,readLine,0,java.lang.String] +++$+++  EOL CURLYEND VAR[java.lang.String] OP[assign]
CALL[java.awt.Graphics2D,getComposite,0,java.awt.Composite] +++$+++  EOL TYPE[Composite] VAR[java.awt.Composite] OP[assign]
CALL[javax.swing.UIDefaults,put,2,java.lang.Object] PARA[VAR[java.lang.Object]] PARA[VAR[java.awt.Font]] +++$+++  INSTANCEOF LEX[javax.swing.plaf.FontUIResource] PARENTHESESEND CURLYSTART
CALL[java.awt.Graphics2D,getColor,0,java.awt.Color] +++$+++  EOL TYPE[Color] VAR[java.awt.Color] OP[assign]
CALL[java.awt.Graphics2D,fillRect,4,void] PARA[LIT[Integer]] PARA[LIT[Integer]] PARA[CALL[javax.swing.JComponent,getWidth]] PARA[CALL[javax.swing.JComponent,getHeight]] +++$+++  PARENTHESESSTART LEX[Color.BLACK] PARENTHESESEND EOL
CALL[java.util.List,size,0,int] +++$+++  CURLYSTART INT VAR[INT] OP[assign]
CALL[java.awt.Graphics2D,drawImage,4,void] PARA[VAR[java.awt.image.BufferedImage]] PARA[VAR[java.awt.image.RescaleOp]] PARA[LIT[Integer]] PARA[LIT[Integer]] +++$+++  COMMA NULL PARENTHESESEND EOL
CALL[java.awt.image.BufferedImage,createGraphics,0,java.awt.Graphics2D] +++$+++  EOL TYPE[Graphics2D] VAR[java.awt.Graphics2D] OP[assign]
CALL[java.awt.Graphics2D,fill,1,void] PARA[VAR[java.awt.geom.GeneralPath]] +++$+++  PARENTHESESSTART LEX[Color.WHITE] PARENTHESESEND EOL
CALL[java.awt.Graphics2D,draw,1,void] PARA[VAR[java.awt.geom.GeneralPath]] +++$+++  LEX[BasicStroke.JOIN_ROUND] PARENTHESESEND PARENTHESESEND EOL
CALL[java.awt.image.BufferedImage,getHeight,0,int] +++$+++  OP[assign] PARENTHESESSTART VAR[INT] OP[sub]
CALL[java.awt.geom.GeneralPath,transform,1,void] PARA[CALL[null,getQuadrantRotateInstance]] +++$+++  OP[assign] LEX[Decoration.BEND_SINISTER] PARENTHESESEND CURLYSTART
CALL[javax.swing.JTextArea,setFocusable,1,void] PARA[LIT[Boolean]] +++$+++  PARENTHESESSTART LEX[true] PARENTHESESEND EOL
CALL[javax.swing.JLabel,setOpaque,1,void] PARA[LIT[Boolean]] +++$+++  COMMA VAR[INT] PARENTHESESEND EOL
CALL[java.util.List,remove,1,E] PARA[VAR[INT]] +++$+++  OP[assign] VAR[INT] LEX[result.add] PARENTHESESSTART
CALL[java.util.List,size,0,int] +++$+++  FINAL INT VAR[INT] OP[assign]
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[VAR[java.lang.String]] +++$+++  OP[sum] OP[sum] PARENTHESESEND CURLYSTART
CALL[java.lang.String,length,0,int] +++$+++  PARENTHESESEND CURLYSTART RETURN PARENTHESESSTART
CALL[java.util.List,add,1,boolean] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND CURLYSTART
CALL[java.lang.StringBuilder,toString,0,java.lang.String] +++$+++  PARENTHESESEND EOL CURLYEND RETURN
CALL[java.lang.String,isEmpty,0,boolean] +++$+++  OP[assign] NULL OP[bitwiseOr] OP[bitwiseOr]
CALL[java.lang.String,indexOf,2,int] PARA[LIT[Stirng]] PARA[VAR[INT]] +++$+++  PARENTHESESEND CURLYSTART VAR[INT] OP[assign]
CALL[java.io.File,isDirectory,0,boolean] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.util.StringTokenizer,nextToken,0,java.lang.String] +++$+++  VAR[INT] OP[assign] LEX[Integer.parseInt] PARENTHESESSTART
CALL[java.util.StringTokenizer,nextToken,0,java.lang.String] +++$+++  ARRAYEND OP[assign] LEX[Integer.parseInt] PARENTHESESSTART
CALL[java.io.BufferedReader,readLine,0,java.lang.String] +++$+++  PARENTHESESEND EOL VAR[java.lang.String] OP[assign]
CALL[java.lang.String,length,0,int] +++$+++  LEX[name.length] PARENTHESESSTART PARENTHESESEND COMMA
CALL[java.net.ServerSocket,close,0,void] +++$+++  LEX[false] EOL TRY CURLYSTART
CALL[java.util.List,get,1,E] PARA[VAR[INT]] +++$+++  VAR[INT] PARENTHESESEND CURLYSTART RETURN
CALL[java.util.List,add,1,boolean] PARA[VAR[net.sourceforge.atunes.utils.CollectionUtils.fillCollectionWithElements(java.util.List<T>, T...).T]] +++$+++  OP[ternaryFalse] VAR[net.sourceforge.atunes.utils.CollectionUtils.fillCollectionWithElements(java.util.List<T>, T...).T] PARENTHESESEND CURLYSTART
CALL[java.lang.Class,getDeclaredMethod,2,java.lang.reflect.Method] PARA[VAR[java.lang.String]] PARA[VAR[java.lang.Class]] +++$+++  CURLYSTART TRY CURLYSTART RETURN
CALL[java.util.Map,get,1,V] PARA[VAR[java.lang.String]] +++$+++  VAR[java.lang.String] COMMA LEX[Class.forName] PARENTHESESSTART
CALL[java.util.Map,keySet,0,java.util.Set<K>] +++$+++  PARENTHESESSTART TYPE[String] VAR[java.lang.String] OP[ternaryFalse]
CALL[java.io.File,getAbsolutePath,0,java.lang.String] +++$+++  PARENTHESESEND CURLYSTART VAR[java.lang.String] OP[assign]
CALL[java.io.File,delete,0,boolean] +++$+++  LEX[dummy.createNewFile] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.util.List,add,1,boolean] PARA[CALL[java.lang.String,replaceAll]] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND CURLYSTART
CALL[java.lang.String,isEmpty,0,boolean] +++$+++  NULL OP[bitwiseAnd] OP[bitwiseAnd] OP[not]
CALL[java.io.BufferedReader,close,0,void] +++$+++  LEX[reader.readLine] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.lang.String,indexOf,1,int] PARA[LIT[Character]] +++$+++  PARENTHESESEND COMMA LEX[secondpart.substring] PARENTHESESSTART
CALL[java.util.Properties,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.List,add,1,boolean] PARA[VAR[javax.swing.event.TableModelListener]] +++$+++  LEX[TableModelListener] VAR[javax.swing.event.TableModelListener] PARENTHESESEND CURLYSTART
CALL[javax.swing.JTree,getRowCount,0,int] +++$+++  PARENTHESESSTART INT VAR[INT] OP[assign]
CALL[java.lang.IllegalArgumentException,getMessage,0,java.lang.String] +++$+++  LEX[Logger.info] PARENTHESESSTART VAR[java.lang.String] COMMA
CALL[java.awt.event.MouseEvent,isMetaDown,0,boolean] +++$+++  ELSE CURLYSTART IF PARENTHESESSTART
CALL[javax.swing.JTextField,getText,0,java.lang.String] +++$+++  PARENTHESESEND CURLYSTART VAR[java.lang.String] OP[assign]
CALL[java.io.BufferedWriter,append,1,java.io.Writer] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND CURLYSTART TRY CURLYSTART
CALL[java.lang.String,trim,0,java.lang.String] +++$+++  VAR[java.util.regex.Matcher] OP[assign] LEX[PATTERN.matcher] PARENTHESESSTART
CALL[java.util.regex.Matcher,group,1,java.lang.String] PARA[LIT[Integer]] +++$+++  PARENTHESESEND CURLYSTART VAR[java.lang.String] OP[assign]
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESSTART VAR[java.lang.String] PARENTHESESEND EOL
CALL[javax.swing.JTree,getSelectionRows,0,int[]] +++$+++  ARRAYSTART ARRAYEND VAR[INT] OP[assign]
CALL[java.io.File,delete,0,boolean] +++$+++  PARENTHESESEND OP[bitwiseAnd] OP[bitwiseAnd] OP[not]
CALL[java.util.List,add,1,boolean] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND CURLYSTART
CALL[java.util.Map.Entry,getKey,0,K] +++$+++  PARENTHESESEND CURLYSTART LEX[tagInfo.put] PARENTHESESSTART
CALL[java.util.Map,entrySet,0,java.util.Set<java.util.Map.Entry<K, V>>] +++$+++  TYPE[String] OP[greaterThan] VAR[java.util.Map.Entry] OP[ternaryFalse]
CALL[java.lang.String,isEmpty,0,boolean] +++$+++  PARENTHESESEND OP[bitwiseAnd] OP[bitwiseAnd] OP[not]
CALL[java.lang.String,hashCode,0,int] +++$+++  NULL PARENTHESESEND OP[ternaryTrue] OP[ternaryFalse]
CALL[java.io.IOException,getMessage,0,java.lang.String] +++$+++  PARENTHESESEND CURLYSTART LEX[Logger.error] PARENTHESESSTART
CALL[javax.swing.event.ListSelectionEvent,getLastIndex,0,int] +++$+++  OP[greaterThan] OP[assign] OP[bitwiseAnd] OP[bitwiseAnd]
CALL[javax.swing.JLabel,setCursor,1,void] PARA[CALL[null,getDefaultCursor]] +++$+++  LEX[MouseEvent] LEX[e] PARENTHESESEND CURLYSTART
CALL[java.lang.Thread,setDaemon,1,void] PARA[LIT[Boolean]] +++$+++  COMMA VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.net.HttpURLConnection,getContentEncoding,0,java.lang.String] +++$+++  EOL TYPE[String] VAR[java.lang.String] OP[assign]
CALL[java.lang.Object,toString,0,java.lang.String] +++$+++  LEX[adapter.remove] PARENTHESESSTART VAR[java.util.prefs.Preferences] COMMA
CALL[java.lang.CharSequence,length,0,int] +++$+++  OP[assign] NULL OP[bitwiseOr] OP[bitwiseOr]
CALL[java.util.regex.Matcher,group,0,java.lang.String] +++$+++  RETURN NEW TYPE[Integer] PARENTHESESSTART
CALL[java.io.File,getPath,0,java.lang.String] +++$+++  LEX[source.getParentFile] PARENTHESESSTART PARENTHESESEND COMMA
CALL[java.io.File,toPath,0,java.nio.file.Path] +++$+++  VAR[java.nio.channels.FileChannel] OP[assign] LEX[FileChannel.open] PARENTHESESSTART
CALL[java.util.regex.Pattern,matcher,1,java.util.regex.Matcher] PARA[VAR[java.lang.String]] +++$+++  CURLYSTART TYPE[Matcher] VAR[java.util.regex.Matcher] OP[assign]
CALL[java.util.regex.Matcher,group,0,java.lang.String] +++$+++  PARENTHESESEND PARENTHESESEND CURLYSTART RETURN
CALL[java.io.File,getParentFile,0,java.io.File] +++$+++  CURLYSTART TYPE[File] VAR[java.io.File] OP[assign]
CALL[javax.swing.Timer,stop,0,void] +++$+++  OP[assign] NULL PARENTHESESEND CURLYSTART
CALL[java.awt.geom.RectangularShape,getCenterY,0,double] +++$+++  LEX[shape.getMaxX] PARENTHESESSTART PARENTHESESEND COMMA
CALL[java.awt.geom.RectangularShape,getMinX,0,double] +++$+++  OP[assign] NEW LEX[Point2D.Double] PARENTHESESSTART
CALL[java.awt.geom.RectangularShape,getMinY,0,double] +++$+++  LEX[shape.getMinX] PARENTHESESSTART PARENTHESESEND COMMA
CALL[java.awt.geom.RectangularShape,getMaxY,0,double] +++$+++  LEX[shape.getMaxX] PARENTHESESSTART PARENTHESESEND COMMA
CALL[java.awt.Color,getRed,0,int] +++$+++  OP[ternaryFalse] LEX[String.format] PARENTHESESSTART COMMA
CALL[javax.swing.JButton,setHideActionText,1,void] PARA[LIT[Boolean]] +++$+++  PARENTHESESSTART VAR[javax.swing.Action] PARENTHESESEND EOL
CALL[java.awt.Window,getSize,0,java.awt.Dimension] +++$+++  EOL TYPE[Dimension] VAR[java.awt.Dimension] OP[assign]
CALL[java.util.HashMap,clear,0,void] +++$+++  LEX[clear] PARENTHESESSTART PARENTHESESEND CURLYSTART
CALL[java.net.URL,openConnection,0,java.net.URLConnection] +++$+++  OP[assign] PARENTHESESSTART TYPE[HttpURLConnection] PARENTHESESEND
CALL[java.util.Map.Entry,getValue,0,V] +++$+++  LEX[entry.getKey] PARENTHESESSTART PARENTHESESEND COMMA
CALL[java.net.HttpURLConnection,addRequestProperty,2,void] PARA[CALL[java.util.Map.Entry,getKey]] PARA[CALL[java.util.Map.Entry,getValue]] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND CURLYSTART
CALL[java.io.File,canRead,0,boolean] +++$+++  PARENTHESESEND OP[bitwiseAnd] OP[bitwiseAnd] OP[not]
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[CALL[java.text.CollationKey,getSourceString]] +++$+++  PARENTHESESSTART PARENTHESESEND EOL CURLYEND
CALL[java.nio.file.attribute.UserDefinedFileAttributeView,write,2,int] PARA[VAR[java.lang.String]] PARA[CALL[java.nio.charset.Charset,encode]] +++$+++  EOL CURLYEND ELSE CURLYSTART
CALL[java.lang.String,isEmpty,0,boolean] +++$+++  OP[assign] NULL OP[bitwiseOr] OP[bitwiseOr]
CALL[java.io.InputStream,close,0,void] +++$+++  CURLYEND CURLYEND FINALLY CURLYSTART
CALL[java.util.Map,get,1,V] PARA[VAR[net.filebot.ui.rename.OriginalOrder.T]] +++$+++  EOL TYPE[Integer] VAR[java.lang.Integer] OP[assign]
CALL[javax.swing.JButton,setRolloverEnabled,1,void] PARA[LIT[Boolean]] +++$+++  PARENTHESESSTART LEX[false] PARENTHESESEND EOL
CALL[net.filebot.ui.transfer.ArrayTransferable.T,clone,0,java.lang.Object] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.util.Map,size,0,int] +++$+++  CURLYEND CURLYEND IF PARENTHESESSTART
CALL[javax.swing.JTable,setRowHeight,1,void] PARA[LIT[Integer]] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND EOL
CALL[java.util.regex.Matcher,group,1,java.lang.String] PARA[LIT[Stirng]] +++$+++  VAR[INT] OP[assign] LEX[Integer.parseInt] PARENTHESESSTART
CALL[javax.swing.JLabel,setForeground,1,void] PARA[CALL[javax.swing.JComponent,getForeground]] +++$+++  PARENTHESESEND PARENTHESESEND PARENTHESESEND EOL
CALL[javax.swing.JPanel,add,2,void] PARA[VAR[javax.swing.JComboBox]] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND COMMA PARENTHESESEND EOL
CALL[java.util.List,hashCode,0,int] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.util.Scanner,close,0,void] +++$+++  PARENTHESESEND THROWS LEX[IOException] CURLYSTART
CALL[java.util.Calendar,clear,0,void] +++$+++  VAR[java.lang.String] COMMA PARENTHESESEND EOL
CALL[java.nio.ByteBuffer,duplicate,0,java.nio.ByteBuffer] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.io.File,getName,0,java.lang.String] +++$+++  CURLYSTART RETURN LEX[FileUtilities.getNameWithoutExtension] PARENTHESESSTART
CALL[javax.swing.Action,setEnabled,1,void] PARA[LIT[Boolean]] +++$+++  EOL CURLYEND CURLYEND EOL
CALL[java.lang.Float,floatValue,0,float] +++$+++  OP[assign] NULL OP[bitwiseOr] OP[bitwiseOr]
CALL[java.util.Map,get,1,V] PARA[VAR[org.jcandle.util.FundamentalStatus]] +++$+++  FINAL TYPE[Integer] VAR[java.lang.Integer] OP[assign]
CALL[java.lang.Float,floatValue,0,float] +++$+++  CURLYSTART RETURN LEX[Float.valueOf] PARENTHESESSTART
CALL[org.jcandle.model.Currency,name,0,java.lang.String] +++$+++  IF PARENTHESESSTART LEX[StringUtils.equalsIgnoreCase] PARENTHESESSTART
CALL[java.awt.Graphics2D,fillRect,4,void] PARA[LIT[Integer]] PARA[LIT[Integer]] PARA[VAR[INT]] PARA[VAR[INT]] +++$+++  COMMA PARENTHESESEND PARENTHESESEND EOL
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND CURLYSTART CASE OP[ternaryFalse]
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  PARENTHESESEND CURLYSTART SWITCH PARENTHESESSTART
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Stirng]] +++$+++  LEX[sent.append] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Stirng]] +++$+++  ARRAYEND ARRAYEND PARENTHESESEND EOL
CALL[java.io.ByteArrayOutputStream,flush,0,void] +++$+++  COMMA VAR[java.io.ByteArrayOutputStream] PARENTHESESEND EOL
CALL[java.io.ObjectInputStream,close,0,void] +++$+++  LEX[in.readObject] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.io.IOException,printStackTrace,0,void] +++$+++  TYPE[IOException] VAR[java.io.IOException] PARENTHESESEND CURLYSTART
CALL[java.io.ByteArrayOutputStream,toByteArray,0,byte[]] +++$+++  PARENTHESESSTART PARENTHESESEND EOL RETURN
CALL[java.util.Enumeration,nextElement,0,E] +++$+++  OP[assign] PARENTHESESSTART TYPE[DirtyListener] PARENTHESESEND
CALL[java.util.List,size,0,int] +++$+++  EOL INT VAR[INT] OP[assign]
CALL[java.util.List,get,1,E] PARA[VAR[INT]] +++$+++  EOL TYPE[Object] VAR[java.lang.Object] OP[assign]
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND PARENTHESESEND EOL CURLYEND
CALL[javax.swing.JButton,setVisible,1,void] PARA[VAR[BOOLEAN]] +++$+++  PARENTHESESSTART VAR[BOOLEAN] PARENTHESESEND EOL
CALL[java.util.Calendar,getTime,0,java.util.Date] +++$+++  COMMA PARENTHESESEND EOL RETURN
CALL[javax.swing.Timer,setRepeats,1,void] PARA[LIT[Boolean]] +++$+++  COMMA NULL PARENTHESESEND EOL
CALL[javax.swing.Timer,stop,0,void] +++$+++  LEX[opacity] OP[lessThan] PARENTHESESEND CURLYSTART
CALL[javax.swing.JDialog,dispose,0,void] +++$+++  LEX[timer.stop] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.lang.String,getBytes,1,byte[]] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND EOL LEX[md.update] PARENTHESESSTART
CALL[java.util.Random,nextLong,0,long] +++$+++  LEX[cardformat.format] PARENTHESESSTART LEX[Math.abs] PARENTHESESSTART
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  CURLYSTART CHAR VAR[CHAR] OP[assign]
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Stirng]] +++$+++  OP[assign] OP[assign] PARENTHESESEND CURLYSTART
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Stirng]] +++$+++  OP[assign] OP[assign] PARENTHESESEND CURLYSTART
CALL[java.lang.String,length,0,int] +++$+++  OP[assign] EOL VAR[INT] OP[lessThan]
CALL[java.util.Properties,getProperty,1,java.lang.String] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.awt.Component,getComponentOrientation,0,java.awt.ComponentOrientation] +++$+++  PARENTHESESEND EOL LEX[myMsg.applyComponentOrientation] PARENTHESESSTART
CALL[java.util.ArrayList,get,1,E] PARA[VAR[INT]] +++$+++  RETURN PARENTHESESSTART TYPE[TreeNode] PARENTHESESEND
CALL[java.util.List,size,0,int] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.util.Properties,getProperty,1,java.lang.String] PARA[VAR[java.lang.String]] +++$+++  VAR[java.lang.String] PARENTHESESEND CURLYSTART RETURN
CALL[java.util.Set,add,1,boolean] PARA[VAR[java.lang.Object]] +++$+++  LEX[Object] VAR[java.lang.Object] PARENTHESESEND CURLYSTART
CALL[java.util.HashMap,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.HashMap,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.HashMap,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.HashMap,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.HashMap,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.HashMap,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.HashMap,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[javax.swing.JTextField,setEnabled,1,void] PARA[LIT[Boolean]] +++$+++  PARENTHESESSTART NULL PARENTHESESEND EOL
CALL[java.lang.StringBuffer,length,0,int] +++$+++  EOL INT VAR[INT] OP[assign]
CALL[java.io.Writer,write,1,void] PARA[LIT[Stirng]] +++$+++  LEX[out.write] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.lang.CharSequence,length,0,int] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.Runnable,run,0,void] +++$+++  LEX[EventQueue.isDispatchThread] PARENTHESESSTART PARENTHESESEND PARENTHESESEND
CALL[java.io.Writer,write,1,void] PARA[VAR[java.lang.String]] +++$+++  VAR[INT] ARRAYEND PARENTHESESEND EOL
CALL[java.io.IOException,printStackTrace,1,void] PARA[VAR[java.io.PrintStream]] +++$+++  TYPE[IOException] VAR[java.io.IOException] PARENTHESESEND CURLYSTART
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[VAR[CHAR]] +++$+++  PARENTHESESEND PARENTHESESEND BREAK EOL
CALL[java.lang.String,length,0,int] +++$+++  PARENTHESESSTART INT VAR[INT] OP[assign]
CALL[java.util.Stack,peek,0,E] +++$+++  PARENTHESESSTART PARENTHESESEND OP[bitwiseAnd] OP[bitwiseAnd]
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Stirng]] +++$+++  OP[assign] OP[assign] VAR[java.lang.Object] PARENTHESESEND
CALL[java.util.Iterator,hasNext,0,boolean] +++$+++  PARENTHESESEND EOL WHILE PARENTHESESSTART
CALL[java.awt.Graphics,setColor,1,void] PARA[CALL[null,getControlDarkShadow]] +++$+++  COMMA VAR[INT] PARENTHESESEND EOL
CALL[javax.swing.JScrollBar,setUnitIncrement,1,void] PARA[LIT[Integer]] +++$+++  COMMA VAR[INT] PARENTHESESEND EOL
CALL[java.lang.String,length,0,int] +++$+++  EOL VAR[INT] OP[sum] OP[assign]
CALL[java.lang.String,length,0,int] +++$+++  IF PARENTHESESSTART VAR[INT] OP[sum]
CALL[javax.swing.JList,getSelectedValuesList,0,java.util.List<E>] +++$+++  RETURN EOL VAR[java.util.List] OP[assign]
CALL[java.io.File,exists,0,boolean] +++$+++  EOL IF PARENTHESESSTART OP[not]
CALL[java.lang.String,substring,2,java.lang.String] PARA[LIT[Integer]] PARA[CALL[java.lang.String,indexOf]] +++$+++  VAR[java.lang.String] PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.String,length,0,int] +++$+++  OP[assign] EOL VAR[INT] OP[lessThan]
CALL[java.lang.String,substring,2,java.lang.String] PARA[LIT[Integer]] PARA[LIT[Integer]] +++$+++  VAR[INT] OP[assign] LEX[Integer.parseInt] PARENTHESESSTART
CALL[java.lang.String,substring,2,java.lang.String] PARA[LIT[Integer]] PARA[LIT[Integer]] +++$+++  VAR[INT] OP[assign] LEX[Integer.parseInt] PARENTHESESSTART
CALL[javax.swing.Timer,setDelay,1,void] PARA[VAR[INT]] +++$+++  PARENTHESESEND EOL CURLYEND ELSE
CALL[java.util.Vector,elementAt,1,E] PARA[VAR[INT]] +++$+++  OP[assign] PARENTHESESSTART TYPE[Entry] PARENTHESESEND
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[VAR[CHAR]] +++$+++  CURLYEND CURLYEND CURLYEND ELSE
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[VAR[CHAR]] +++$+++  PARENTHESESEND EOL CURLYEND ELSE
CALL[java.lang.String,charAt,1,char] PARA[LIT[Integer]] +++$+++  OP[assign] PARENTHESESEND VAR[CHAR] OP[assign]
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[VAR[CHAR]] +++$+++  LEX[s.charAt] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.lang.String,toCharArray,0,char[]] +++$+++  PARENTHESESEND COMMA VAR[INT] COMMA
CALL[java.lang.String,substring,2,java.lang.String] PARA[LIT[Integer]] PARA[LIT[Integer]] +++$+++  TYPE[ParserRule] PARENTHESESSTART VAR[INT] COMMA
CALL[java.lang.String,toCharArray,0,char[]] +++$+++  NULL EOL VAR[CHAR] OP[assign]
CALL[java.util.Hashtable,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.util.Hashtable]] +++$+++  OP[greaterThan] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.awt.datatransfer.DataFlavor]] PARA[VAR[java.awt.datatransfer.Transferable]] +++$+++  OP[ternaryFalse] VAR[java.awt.datatransfer.DataFlavor] PARENTHESESEND CURLYSTART
CALL[java.util.Map,containsKey,1,boolean] PARA[VAR[java.awt.datatransfer.DataFlavor]] +++$+++  VAR[java.awt.datatransfer.DataFlavor] PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.String,concat,1,java.lang.String] PARA[LIT[Stirng]] +++$+++  VAR[java.lang.String] COMMA LEX[jEdit.getProperty] PARENTHESESSTART
CALL[javax.swing.UIDefaults,put,2,java.lang.Object] PARA[LIT[Stirng]] PARA[VAR[java.awt.Insets]] +++$+++  TYPE[UIDefaults] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.util.HashMap,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.HashMap,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.HashMap,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.HashMap,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,remove,1,V] PARA[VAR[java.lang.String]] +++$+++  STRING VAR[java.lang.String] PARENTHESESEND CURLYSTART
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Character]] +++$+++  IF PARENTHESESSTART VAR[BOOLEAN] PARENTHESESEND
CALL[java.lang.String,indexOf,1,int] PARA[LIT[Character]] +++$+++  OP[assign] PARENTHESESEND VAR[INT] OP[assign]
CALL[java.lang.String,length,0,int] +++$+++  CURLYSTART INT VAR[INT] OP[assign]
CALL[java.lang.String,length,0,int] +++$+++  PARENTHESESEND CURLYSTART VAR[INT] OP[assign]
CALL[java.io.InputStream,read,0,int] +++$+++  OP[bitwiseAnd] LEX[xff] EOL RETURN
CALL[java.net.HttpURLConnection,getInputStream,0,java.io.InputStream] +++$+++  CURLYSTART TYPE[InputStream] VAR[java.io.InputStream] OP[assign]
CALL[java.util.List,add,1,boolean] PARA[VAR[java.lang.String]] +++$+++  STRING VAR[java.lang.String] PARENTHESESEND CURLYSTART
CALL[java.io.File,mkdirs,0,boolean] +++$+++  COMMA PARENTHESESEND PARENTHESESEND EOL
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[VAR[java.lang.String]] +++$+++  OP[sum] OP[sum] EOL CURLYEND
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[VAR[java.lang.String]] +++$+++  LEX[buf.append] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.util.List,remove,1,boolean] PARA[VAR[org.gjt.sp.jedit.Macros.Handler]] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.util.Properties,putAll,1,void] PARA[VAR[java.util.Properties]] +++$+++  PARENTHESESSTART VAR[java.util.Properties] PARENTHESESEND EOL
CALL[java.util.Properties,remove,1,V] PARA[VAR[java.lang.String]] +++$+++  STRING VAR[java.lang.String] PARENTHESESEND CURLYSTART
CALL[java.util.Vector,size,0,int] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.util.Map,get,1,V] PARA[VAR[INT]] +++$+++  EOL TYPE[Integer] VAR[java.lang.Integer] OP[assign]
CALL[java.lang.Integer,intValue,0,int] +++$+++  PARENTHESESEND RETURN EOL RETURN
CALL[java.lang.String,length,0,int] +++$+++  OP[assign] EOL VAR[INT] OP[lessThan]
CALL[java.lang.String,length,0,int] +++$+++  OP[bitwiseAnd] VAR[INT] OP[not] OP[assign]
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[VAR[CHAR]] +++$+++  EOL CURLYEND CURLYEND ELSE
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Character]] +++$+++  BREAK EOL CASE OP[ternaryFalse]
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[VAR[CHAR]] +++$+++  BREAK EOL DEFAULT OP[ternaryFalse]
CALL[java.util.Map,get,1,V] PARA[VAR[java.lang.String]] +++$+++  CURLYSTART TYPE[Window] VAR[org.gjt.sp.jedit.gui.DockableWindowFactory.Window] OP[assign]
CALL[java.awt.SplashScreen,close,0,void] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND CURLYSTART
CALL[java.lang.String,startsWith,1,boolean] PARA[VAR[java.lang.String]] +++$+++  OP[sum] EOL IF PARENTHESESSTART
CALL[java.util.Map,put,2,V] PARA[VAR[org.gjt.sp.jedit.gui.KeyEventTranslator.Key]] PARA[VAR[org.gjt.sp.jedit.gui.KeyEventTranslator.Key]] +++$+++  LEX[Key] VAR[org.gjt.sp.jedit.gui.KeyEventTranslator.Key] PARENTHESESEND CURLYSTART
CALL[javax.swing.text.JTextComponent,getText,0,java.lang.String] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.util.Hashtable,get,1,V] PARA[VAR[java.lang.String]] +++$+++  CURLYSTART TYPE[Object] VAR[java.lang.Object] OP[assign]
CALL[java.lang.Class,newInstance,0,T] +++$+++  OP[assign] PARENTHESESSTART TYPE[ReflectManager] PARENTHESESEND
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Stirng]] +++$+++  CONTINUE EOL CASE OP[ternaryFalse]
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[VAR[CHAR]] +++$+++  EOL CURLYEND ELSE CURLYSTART
CALL[java.lang.IllegalArgumentException,toString,0,java.lang.String] +++$+++  PARENTHESESSTART NEW TYPE[ArrayStoreException] PARENTHESESSTART
CALL[java.lang.Class,getName,0,java.lang.String] +++$+++  PARENTHESESSTART OP[sum] LEX[StringUtil.methodString] PARENTHESESSTART
CALL[java.lang.String,equals,1,boolean] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART PARENTHESESEND OP[bitwiseOr] OP[bitwiseOr]
CALL[java.lang.String,equals,1,boolean] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART PARENTHESESEND OP[bitwiseOr] OP[bitwiseOr]
CALL[java.io.OutputStream,flush,0,void] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.lang.Object]] +++$+++  STRING VAR[java.lang.String] PARENTHESESEND CURLYSTART
CALL[java.util.Map,get,1,V] PARA[VAR[java.lang.String]] +++$+++  FINAL TYPE[DefaultMutableTreeNode] VAR[javax.swing.tree.DefaultMutableTreeNode] OP[assign]
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[javax.swing.tree.DefaultMutableTreeNode]] +++$+++  COMMA LEX[true] PARENTHESESEND EOL
CALL[java.awt.print.PageFormat,setPaper,1,void] PARA[VAR[java.awt.print.Paper]] +++$+++  COMMA VAR[DOUBLE] PARENTHESESEND EOL
CALL[java.awt.geom.Rectangle2D,getWidth,0,double] +++$+++  OP[sum] PARENTHESESSTART VAR[DOUBLE] OP[sub]
CALL[java.awt.Graphics2D,setColor,1,void] PARA[VAR[java.awt.Color]] +++$+++  PARENTHESESSTART VAR[BOOLEAN] PARENTHESESEND CURLYSTART
CALL[java.awt.geom.Rectangle2D,getHeight,0,double] +++$+++  PARENTHESESEND EOL CURLYEND RETURN
CALL[java.util.StringTokenizer,hasMoreTokens,0,boolean] +++$+++  RETURN EOL IF PARENTHESESSTART
CALL[java.util.Hashtable,put,2,V] PARA[VAR[java.lang.Object]] PARA[VAR[java.lang.String]] +++$+++  TYPE[Hashtable] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.util.StringTokenizer,hasMoreTokens,0,boolean] +++$+++  RETURN EOL IF PARENTHESESSTART
CALL[java.util.StringTokenizer,hasMoreTokens,0,boolean] +++$+++  NULL EOL IF PARENTHESESSTART
CALL[javax.swing.JRadioButtonMenuItem,setSelected,1,void] PARA[LIT[Boolean]] +++$+++  OP[assign] NULL PARENTHESESEND CURLYSTART
CALL[javax.swing.JMenu,addSeparator,0,void] +++$+++  VAR[javax.swing.JRadioButtonMenuItem] PARENTHESESEND EOL CURLYEND
CALL[java.lang.String,compareTo,1,int] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.util.Map,entrySet,0,java.util.Set<java.util.Map.Entry<K, V>>] +++$+++  TYPE[Object] OP[greaterThan] VAR[java.util.Map.Entry] OP[ternaryFalse]
CALL[java.util.Map,get,1,V] PARA[VAR[java.lang.String]] +++$+++  CURLYSTART TYPE[Object] VAR[java.lang.Object] OP[assign]
CALL[java.util.jar.Attributes,getValue,1,java.lang.String] PARA[VAR[java.util.jar.Attributes.Name]] +++$+++  PARENTHESESEND CURLYSTART VAR[java.lang.String] OP[assign]
CALL[java.lang.StringBuilder,toString,0,java.lang.String] +++$+++  EOL CURLYEND CURLYEND RETURN
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESEND OP[greaterThan] PARENTHESESEND CURLYSTART
CALL[java.util.List,size,0,int] +++$+++  CURLYEND LEX[Log.info] PARENTHESESSTART OP[sum]
CALL[java.util.Map.Entry,getValue,0,V] +++$+++  LEX[entry.getKey] PARENTHESESSTART PARENTHESESEND COMMA
CALL[java.util.Map.Entry,getKey,0,K] +++$+++  LEX[String.format] PARENTHESESSTART VAR[java.lang.String] COMMA
CALL[java.util.Map.Entry,getValue,0,V] +++$+++  LEX[entry.getKey] PARENTHESESSTART PARENTHESESEND COMMA
CALL[java.lang.String,substring,2,java.lang.String] PARA[LIT[Integer]] PARA[LIT[Integer]] +++$+++  PARENTHESESSTART PARENTHESESEND OP[greaterThan] OP[ternaryTrue]
CALL[java.lang.String,length,0,int] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.io.File,getAbsolutePath,0,java.lang.String] +++$+++  PARENTHESESSTART PARENTHESESEND EOL RETURN
CALL[java.lang.String,replace,2,java.lang.String] PARA[LIT[Stirng]] PARA[CALL[java.text.DateFormat,format]] +++$+++  PARENTHESESEND EOL VAR[java.lang.String] OP[assign]
CALL[java.util.List,add,1,boolean] PARA[CALL[null,valueOf]] +++$+++  PARENTHESESEND OP[greaterThan] PARENTHESESEND CURLYSTART
CALL[java.util.List,add,1,boolean] PARA[CALL[null,valueOf]] +++$+++  PARENTHESESEND PARENTHESESEND EOL CURLYEND
CALL[java.io.ByteArrayOutputStream,write,1,void] PARA[VAR[BYTE]] +++$+++  OP[assign] FIELD[length,BYTE] PARENTHESESEND CURLYSTART
CALL[java.lang.String,substring,1,java.lang.String] PARA[VAR[INT]] +++$+++  OP[assign] OP[assign] PARENTHESESEND RETURN
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  LEX[index--] EOL IF PARENTHESESSTART
CALL[java.util.ListIterator,next,0,E] +++$+++  OP[assign] PARENTHESESSTART TYPE[ReferenceEntry] PARENTHESESEND
CALL[java.util.List,listIterator,0,java.util.ListIterator<E>] +++$+++  PARENTHESESSTART TYPE[ListIterator] VAR[java.util.ListIterator] OP[assign]
CALL[java.lang.Process,waitFor,0,int] +++$+++  TRY CURLYSTART VAR[INT] OP[assign]
CALL[java.util.HashMap,get,1,V] PARA[VAR[java.lang.String]] +++$+++  LEX[pref.setValue] PARENTHESESSTART VAR[java.lang.String] COMMA
CALL[java.util.HashMap,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESSTART VAR[java.util.HashMap] PARENTHESESEND EOL
CALL[java.lang.String,charAt,1,char] PARA[LIT[Integer]] +++$+++  CURLYEND ELSE IF PARENTHESESSTART
CALL[java.util.StringTokenizer,hasMoreTokens,0,boolean] +++$+++  PARENTHESESSTART PARENTHESESEND OP[bitwiseAnd] OP[bitwiseAnd]
CALL[java.util.StringTokenizer,nextToken,0,java.lang.String] +++$+++  CURLYSTART TYPE[String] VAR[java.lang.String] OP[assign]
CALL[java.lang.String,length,0,int] +++$+++  CURLYSTART INT VAR[INT] OP[assign]
CALL[java.lang.String,length,0,int] +++$+++  EOL INT VAR[INT] OP[assign]
CALL[java.util.ListIterator,hasNext,0,boolean] +++$+++  LEX[oldNodes.listIterator] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.lang.String,indexOf,1,int] PARA[LIT[Character]] +++$+++  CURLYSTART INT VAR[INT] OP[assign]
CALL[java.lang.String,indexOf,1,int] PARA[LIT[Character]] +++$+++  EOL INT VAR[INT] OP[assign]
CALL[java.lang.String,toCharArray,0,char[]] +++$+++  ARRAYSTART ARRAYEND VAR[CHAR] OP[assign]
CALL[java.lang.String,trim,0,java.lang.String] +++$+++  CURLYSTART TYPE[String] VAR[java.lang.String] OP[assign]
CALL[java.lang.String,toCharArray,0,char[]] +++$+++  ARRAYSTART ARRAYEND VAR[CHAR] OP[assign]
CALL[java.lang.String,regionMatches,4,boolean] PARA[VAR[INT]] PARA[VAR[java.lang.String]] PARA[LIT[Integer]] PARA[CALL[java.lang.String,length]] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.lang.String,length,0,int] +++$+++  CURLYSTART INT VAR[INT] OP[assign]
CALL[java.io.BufferedReader,close,0,void] +++$+++  PARENTHESESEND EOL CURLYEND CURLYEND
CALL[java.lang.ClassLoader,loadClass,1,java.lang.Class<? extends java.lang.Object>] PARA[LIT[Stirng]] +++$+++  OP[lessThan] TYPE[TestCase] OP[greaterThan] PARENTHESESEND
CALL[java.util.Map,get,1,V] PARA[VAR[java.lang.String]] +++$+++  CURLYEND TYPE[Status] VAR[edu.umd.cs.findbugs.tools.FilterAndCombineBitfieldPropertyDatabase.Status] OP[assign]
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[edu.umd.cs.findbugs.tools.FilterAndCombineBitfieldPropertyDatabase.Status]] +++$+++  OP[assign] LEX[Status.NOT_FOUND] EOL CURLYEND
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[VAR[CHAR]] +++$+++  VAR[INT] PARENTHESESEND EOL CURLYEND
CALL[java.io.BufferedReader,readLine,0,java.lang.String] +++$+++  PARENTHESESEND CURLYSTART VAR[java.lang.String] OP[assign]
CALL[java.util.Map,size,0,int] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.Runnable,run,0,void] +++$+++  PARENTHESESEND CURLYSTART TRY CURLYSTART
CALL[java.util.zip.ZipFile,close,0,void] +++$+++  OP[assign] NULL PARENTHESESEND CURLYSTART
CALL[java.io.InputStream,markSupported,0,boolean] +++$+++  CURLYSTART IF PARENTHESESSTART OP[not]
CALL[java.io.InputStream,mark,1,void] PARA[LIT[Integer]] +++$+++  PARENTHESESSTART PARENTHESESEND EOL CURLYEND
CALL[java.io.IOException,initCause,1,java.lang.Throwable] PARA[VAR[java.lang.Throwable]] +++$+++  PARENTHESESSTART VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.lang.String,length,0,int] +++$+++  LEX[s1.length] PARENTHESESSTART PARENTHESESEND COMMA
CALL[java.lang.String,length,0,int] +++$+++  VAR[java.lang.String] EOL CURLYEND ASSERT
CALL[java.util.HashSet,addAll,1,boolean] PARA[VAR[java.util.Collection]] +++$+++  PARENTHESESSTART LEX[m.size] PARENTHESESSTART PARENTHESESEND
CALL[java.lang.String,charAt,1,char] PARA[LIT[Integer]] +++$+++  EOL CURLYEND IF PARENTHESESSTART
CALL[java.lang.String,length,0,int] +++$+++  RETURN LEX[signature.substring] PARENTHESESSTART COMMA
CALL[java.util.Map,get,1,V] PARA[VAR[edu.umd.cs.findbugs.util.FractionalMultiset.K]] +++$+++  CURLYSTART TYPE[Double] VAR[java.lang.Double] OP[assign]
CALL[java.util.Map.Entry,getValue,0,V] +++$+++  EOL DOUBLE VAR[DOUBLE] OP[assign]
CALL[java.lang.String,replace,2,java.lang.String] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND EOL VAR[java.lang.String] OP[assign]
CALL[java.util.Map,get,1,V] PARA[VAR[edu.umd.cs.findbugs.util.MultiMap.K]] +++$+++  TYPE[V] OP[greaterThan] VAR[java.util.Collection] OP[assign]
CALL[java.util.Map,get,1,V] PARA[VAR[edu.umd.cs.findbugs.util.Bag.E]] +++$+++  CURLYSTART TYPE[Integer] VAR[java.lang.Integer] OP[assign]
CALL[java.util.Map,keySet,0,java.util.Set<K>] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.util.Map,put,2,V] PARA[VAR[edu.umd.cs.findbugs.util.DualKeyHashMap.K1]] PARA[VAR[java.util.Map]] +++$+++  COMMA VAR[edu.umd.cs.findbugs.util.DualKeyHashMap.V] PARENTHESESEND EOL
CALL[java.util.concurrent.CountDownLatch,await,2,boolean] PARA[VAR[LONG]] PARA[VAR[java.util.concurrent.TimeUnit]] +++$+++  CURLYSTART IF PARENTHESESSTART OP[not]
CALL[java.util.BitSet,get,1,boolean] PARA[VAR[CHAR]] +++$+++  VAR[CHAR] PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.String,length,0,int] +++$+++  WHILE PARENTHESESSTART VAR[INT] OP[lessThan]
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  PARENTHESESSTART PARENTHESESEND OP[bitwiseAnd] OP[bitwiseAnd]
CALL[java.util.List,add,1,boolean] PARA[VAR[java.lang.String]] +++$+++  LEX[e.nextElement] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.lang.Class,isAssignableFrom,1,boolean] PARA[CALL[edu.umd.cs.findbugs.DetectorFactory.ReflectionDetectorCreator,getDetectorClass]] +++$+++  PARENTHESESEND EOL CURLYEND RETURN
CALL[java.util.Map,size,0,int] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.io.File,getAbsolutePath,0,java.lang.String] +++$+++  VAR[java.io.IOException] PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.String,length,0,int] +++$+++  WHILE PARENTHESESSTART VAR[INT] OP[lessThan]
CALL[java.lang.String,hashCode,0,int] +++$+++  LEX[kind.hashCode] PARENTHESESSTART PARENTHESESEND OP[sum]
CALL[java.util.Map,get,1,V] PARA[VAR[java.net.URI]] +++$+++  VAR[java.net.URI] PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.reflect.Method,invoke,1,java.lang.Object] PARA[VAR[java.lang.Object]] +++$+++  LEX[System.gc] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.net.URL,openStream,0,java.io.InputStream] +++$+++  TRY CURLYSTART VAR[java.io.InputStream] OP[assign]
CALL[java.util.Properties,setProperty,2,java.lang.Object] PARA[VAR[java.lang.String]] PARA[VAR[java.lang.String]] +++$+++  STRING VAR[java.lang.String] PARENTHESESEND CURLYSTART
CALL[java.lang.String,length,0,int] +++$+++  EOL INT VAR[INT] OP[assign]
CALL[java.lang.String,length,0,int] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.util.StringTokenizer,hasMoreTokens,0,boolean] +++$+++  PARENTHESESEND EOL WHILE PARENTHESESSTART
CALL[java.util.Iterator,hasNext,0,boolean] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.util.Iterator,remove,0,void] +++$+++  PARENTHESESEND PARENTHESESEND PARENTHESESEND CURLYSTART
CALL[java.util.Map,get,1,V] PARA[VAR[java.lang.String]] +++$+++  EOL TYPE[Boolean] VAR[java.lang.Boolean] OP[assign]
CALL[java.lang.String,indexOf,1,int] PARA[VAR[CHAR]] +++$+++  CURLYSTART INT VAR[INT] OP[assign]
CALL[java.util.Properties,getProperty,1,java.lang.String] PARA[VAR[java.lang.String]] +++$+++  EOL TYPE[String] VAR[java.lang.String] OP[assign]
CALL[java.util.Properties,remove,1,V] PARA[VAR[java.lang.String]] +++$+++  EOL CURLYEND ELSE CURLYSTART
CALL[java.lang.String,hashCode,0,int] +++$+++  NULL PARENTHESESEND OP[ternaryTrue] OP[ternaryFalse]
CALL[java.lang.String,hashCode,0,int] +++$+++  NULL PARENTHESESEND OP[ternaryTrue] OP[ternaryFalse]
CALL[java.util.ArrayList,add,1,boolean] PARA[CALL[java.lang.StackTraceElement,toString]] +++$+++  OP[ternaryFalse] VAR[java.lang.StackTraceElement] PARENTHESESEND CURLYSTART
CALL[java.lang.String,startsWith,1,boolean] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART LEX[FindBugs.DEBUG] OP[bitwiseAnd] OP[bitwiseAnd]
CALL[java.lang.ThreadLocal,remove,0,void] +++$+++  LEX[clearInstance] PARENTHESESSTART PARENTHESESEND CURLYSTART
CALL[javax.annotation.meta.TypeQualifierValidator,getClass,0,java.lang.Class<? extends java.lang.Object>] +++$+++  PARENTHESESEND EOL LEX[profiler.start] PARENTHESESSTART
CALL[java.util.Set,add,1,boolean] PARA[CALL[java.lang.String,replace]] +++$+++  LEX[classNameToObligationMap.size] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  CURLYEND CHAR VAR[CHAR] OP[assign]
CALL[java.lang.String,length,0,int] +++$+++  LEX[File.separatorChar] PARENTHESESEND OP[sum] PARENTHESESSTART
CALL[java.util.BitSet,set,2,void] PARA[VAR[INT]] PARA[VAR[BOOLEAN]] +++$+++  BOOLEAN VAR[BOOLEAN] PARENTHESESEND CURLYSTART
CALL[java.lang.StringBuilder,length,0,int] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.lang.String,lastIndexOf,1,int] PARA[LIT[Character]] +++$+++  CURLYSTART INT VAR[INT] OP[assign]
CALL[java.util.BitSet,nextSetBit,1,int] PARA[VAR[INT]] +++$+++  CURLYSTART INT VAR[INT] OP[assign]
CALL[java.util.ArrayList,size,0,int] +++$+++  EOL CURLYEND RETURN PARENTHESESSTART
CALL[java.io.PushbackReader,read,0,int] +++$+++  CURLYSTART INT VAR[INT] OP[assign]
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Stirng]] +++$+++  TYPE[StringBuilder] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.lang.String,equals,1,boolean] PARA[FIELD[edu.umd.cs.findbugs.BugPattern]] +++$+++  PARENTHESESEND VAR[java.lang.Object] EOL RETURN
CALL[java.util.Set,hashCode,0,int] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.util.Set,isEmpty,0,boolean] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.util.Map,get,1,V] PARA[VAR[java.lang.String]] +++$+++  CURLYSTART TYPE[RelationalOp] VAR[edu.umd.cs.findbugs.filter.RelationalOp] OP[assign]
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART VAR[java.lang.Object] PARENTHESESEND EOL
CALL[java.util.Iterator,hasNext,0,boolean] +++$+++  LEX[orig.vertexIterator] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.util.Iterator,next,0,E] +++$+++  CURLYSTART TYPE[EdgeType] VAR[edu.umd.cs.findbugs.graph.Transpose.EdgeType] OP[assign]
CALL[java.util.IdentityHashMap,get,1,V] PARA[VAR[edu.umd.cs.findbugs.graph.Transpose.VertexType]] +++$+++  VAR[edu.umd.cs.findbugs.graph.Transpose.VertexType] PARENTHESESEND CURLYSTART RETURN
CALL[java.util.zip.ZipFile,getInputStream,1,java.io.InputStream] PARA[VAR[java.util.zip.ZipEntry]] +++$+++  CURLYSTART TYPE[InputStream] VAR[java.io.InputStream] OP[assign]
CALL[java.util.zip.ZipEntry,setExtra,1,void] PARA[CALL[java.util.zip.ZipEntry,getExtra]] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND EOL
CALL[java.util.HashSet,contains,1,boolean] PARA[VAR[java.lang.String]] +++$+++  VAR[java.lang.String] PARENTHESESEND CURLYSTART RETURN
CALL[java.io.BufferedReader,readLine,0,java.lang.String] +++$+++  CURLYSTART TYPE[String] VAR[java.lang.String] OP[assign]
CALL[java.util.List,add,1,boolean] PARA[VAR[java.lang.String]] +++$+++  RETURN VAR[java.util.List] EOL CURLYEND
CALL[java.lang.String,split,1,java.lang.String[]] PARA[VAR[java.lang.String]] +++$+++  LEX[File.separator] PARENTHESESEND EOL RETURN
CALL[java.lang.String,compareTo,1,int] PARA[FIELD[edu.umd.cs.findbugs.BugCategory]] +++$+++  VAR[edu.umd.cs.findbugs.BugCategory] PARENTHESESEND CURLYSTART RETURN
CALL[java.io.File,isFile,0,boolean] +++$+++  CURLYEND IF PARENTHESESSTART OP[not]
CALL[java.lang.String,endsWith,1,boolean] PARA[LIT[Stirng]] +++$+++  CURLYEND ELSE IF PARENTHESESSTART
CALL[javax.swing.JPanel,add,2,void] PARA[VAR[javax.swing.JPanel]] PARA[LIT[Stirng]] +++$+++  TYPE[JPanel] PARENTHESESSTART PARENTHESESEND EOL
CALL[javax.swing.table.TableColumn,getWidth,0,int] +++$+++  CURLYSTART VAR[INT] OP[sub] OP[assign]
CALL[java.util.ArrayList,add,1,boolean] PARA[VAR[javax.swing.event.TableColumnModelListener]] +++$+++  LEX[TableColumnModelListener] VAR[javax.swing.event.TableColumnModelListener] PARENTHESESEND CURLYSTART
CALL[javax.swing.JButton,setBackground,1,void] PARA[CALL[javax.swing.JPanel,getBackground]] +++$+++  PARENTHESESSTART LEX[false] PARENTHESESEND EOL
CALL[java.util.prefs.Preferences,clear,0,void] +++$+++  PARENTHESESEND EOL TRY CURLYSTART
CALL[java.util.Map,get,1,V] PARA[VAR[java.lang.Integer]] +++$+++  VAR[java.lang.Integer] PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.String,indexOf,1,int] PARA[LIT[Character]] +++$+++  CURLYSTART INT VAR[INT] OP[assign]
CALL[java.util.Vector,add,1,boolean] PARA[VAR[java.lang.String]] +++$+++  STRING VAR[java.lang.String] PARENTHESESEND CURLYSTART
CALL[java.util.Vector,clear,0,void] +++$+++  LEX[clear] PARENTHESESSTART PARENTHESESEND CURLYSTART
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  PARENTHESESSTART PARENTHESESSTART VAR[CHAR] OP[assign]
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  OP[bitwiseAnd] PARENTHESESSTART VAR[CHAR] OP[assign]
CALL[java.io.RandomAccessFile,readFloat,0,float] +++$+++  VAR[FLOAT] ARRAYSTART ARRAYEND OP[assign]
CALL[java.io.RandomAccessFile,readFloat,0,float] +++$+++  VAR[FLOAT] ARRAYSTART ARRAYEND OP[assign]
CALL[java.io.RandomAccessFile,readFloat,0,float] +++$+++  VAR[FLOAT] ARRAYSTART ARRAYEND OP[assign]
CALL[java.io.RandomAccessFile,readShort,0,short] +++$+++  VAR[SHORT] ARRAYSTART ARRAYEND OP[assign]
CALL[java.io.RandomAccessFile,readShort,0,short] +++$+++  VAR[SHORT] ARRAYSTART ARRAYEND OP[assign]
CALL[java.lang.String,length,0,int] +++$+++  VAR[CHAR] COMMA VAR[INT] COMMA
CALL[java.lang.String,equals,1,boolean] PARA[LIT[Stirng]] +++$+++  OP[assign] OP[bitwiseAnd] OP[bitwiseAnd] OP[not]
CALL[java.lang.String,equals,1,boolean] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.lang.String,equals,1,boolean] PARA[LIT[Stirng]] +++$+++  EOL CURLYEND IF PARENTHESESSTART
CALL[java.lang.String,equals,1,boolean] PARA[LIT[Stirng]] +++$+++  EOL CURLYEND IF PARENTHESESSTART
CALL[java.lang.String,equalsIgnoreCase,1,boolean] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART PARENTHESESEND OP[bitwiseOr] OP[bitwiseOr]
CALL[java.net.InetAddress,getAddress,0,byte[]] +++$+++  PARENTHESESEND EOL LEX[a.ip] OP[assign]
CALL[java.io.BufferedInputStream,close,0,void] +++$+++  EOL CURLYEND TRY CURLYSTART
CALL[java.lang.String,equals,1,boolean] PARA[LIT[Stirng]] +++$+++  EOL IF PARENTHESESSTART OP[not]
CALL[java.nio.ByteBuffer,getInt,0,int] +++$+++  LEX[bb.getInt] PARENTHESESSTART PARENTHESESEND LEX[^]
CALL[java.nio.Buffer,remaining,0,int] +++$+++  NEW TYPE[IllegalArgumentException] PARENTHESESSTART OP[sum]
CALL[java.nio.IntBuffer,get,1,int] PARA[LIT[Integer]] +++$+++  VAR[java.nio.IntBuffer] PARENTHESESEND EOL RETURN
CALL[java.io.File,getPath,0,java.lang.String] +++$+++  VAR[java.io.File] PARENTHESESEND CURLYSTART RETURN
CALL[javax.swing.JTextField,getText,0,java.lang.String] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.String,equals,1,boolean] PARA[LIT[Stirng]] +++$+++  EOL ELSE IF PARENTHESESSTART
CALL[java.lang.String,equals,1,boolean] PARA[LIT[Stirng]] +++$+++  EOL ELSE IF PARENTHESESSTART
CALL[java.lang.String,equals,1,boolean] PARA[LIT[Stirng]] +++$+++  EOL ELSE IF PARENTHESESSTART
CALL[java.lang.String,equals,1,boolean] PARA[LIT[Stirng]] +++$+++  EOL ELSE IF PARENTHESESSTART
CALL[java.lang.String,equals,1,boolean] PARA[LIT[Stirng]] +++$+++  EOL ELSE IF PARENTHESESSTART
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[VAR[INT]] +++$+++  LEX[s.append] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART VAR[INT] PARENTHESESEND EOL
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART VAR[INT] PARENTHESESEND EOL
CALL[javax.swing.ImageIcon,getImage,0,java.awt.Image] +++$+++  CURLYSTART TYPE[Image] VAR[java.awt.Image] OP[assign]
CALL[javax.swing.event.ListSelectionEvent,getSource,0,java.lang.Object] +++$+++  OP[assign] PARENTHESESSTART TYPE[JList] PARENTHESESEND
CALL[java.lang.String,toLowerCase,0,java.lang.String] +++$+++  CURLYSTART TYPE[String] VAR[java.lang.String] OP[assign]
CALL[java.util.ArrayList,add,1,boolean] PARA[VAR[java.lang.Object]] +++$+++  LEX[Object] VAR[java.lang.Object] PARENTHESESEND CURLYSTART
CALL[org.h2.java.Statement,toString,0,java.lang.String] +++$+++  EOL TYPE[String] VAR[java.lang.String] OP[assign]
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[CALL[org.h2.java.Expr,toString]] +++$+++  PARENTHESESSTART PARENTHESESEND EOL CURLYEND
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND PARENTHESESEND EOL CURLYEND
CALL[java.util.HashMap,containsKey,1,boolean] PARA[VAR[java.lang.String]] +++$+++  EOL IF PARENTHESESSTART OP[not]
CALL[java.util.HashMap,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.lang.String]] +++$+++  OP[assign] OP[sum] VAR[java.lang.String] EOL
CALL[java.lang.String,startsWith,1,boolean] PARA[LIT[Stirng]] +++$+++  CURLYEND ELSE IF PARENTHESESSTART
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  WHILE PARENTHESESSTART LEX[Character.isDigit] PARENTHESESSTART
CALL[java.lang.String,substring,2,java.lang.String] PARA[LIT[Integer]] PARA[VAR[INT]] +++$+++  EOL CURLYEND CURLYEND RETURN
CALL[java.lang.String,length,0,int] +++$+++  OP[assign] VAR[INT] OP[lessThan] OP[ternaryTrue]
CALL[java.lang.String,indexOf,2,int] PARA[LIT[Stirng]] PARA[VAR[INT]] +++$+++  PARENTHESESEND CURLYSTART VAR[INT] OP[assign]
CALL[java.lang.String,substring,2,java.lang.String] PARA[VAR[INT]] PARA[VAR[INT]] +++$+++  EOL TYPE[String] VAR[java.lang.String] OP[assign]
CALL[java.awt.image.BufferedImage,getHeight,0,int] +++$+++  PARENTHESESEND COMMA VAR[INT] OP[assign]
CALL[java.awt.image.BufferedImage,createGraphics,0,java.awt.Graphics2D] +++$+++  EOL TYPE[Graphics2D] VAR[java.awt.Graphics2D] OP[assign]
CALL[java.lang.String,replaceAll,2,java.lang.String] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND CURLYSTART VAR[java.lang.String] OP[assign]
CALL[java.lang.String,replaceAll,2,java.lang.String] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND EOL VAR[java.lang.String] OP[assign]
CALL[java.lang.String,replaceAll,2,java.lang.String] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND EOL VAR[java.lang.String] OP[assign]
CALL[java.lang.String,indexOf,2,int] PARA[VAR[java.lang.String]] PARA[VAR[INT]] +++$+++  CURLYSTART INT VAR[INT] OP[assign]
CALL[java.lang.String,length,0,int] +++$+++  PARENTHESESSTART VAR[INT] OP[sum] COMMA
CALL[java.lang.String,indexOf,1,int] PARA[LIT[Character]] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.lang.String,substring,1,java.lang.String] PARA[CALL[java.lang.String,length]] +++$+++  PARENTHESESEND CURLYSTART VAR[java.lang.String] OP[assign]
CALL[java.io.File,getAbsolutePath,0,java.lang.String] +++$+++  NEW TYPE[RuntimeException] PARENTHESESSTART OP[sum]
CALL[java.util.HashMap,get,1,V] PARA[VAR[CHAR]] +++$+++  EOL TYPE[String] VAR[java.lang.String] OP[assign]
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Character]] +++$+++  LEX[buff.append] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.lang.String,length,0,int] +++$+++  OP[assign] EOL VAR[INT] OP[lessThan]
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  CURLYSTART CHAR VAR[CHAR] OP[assign]
CALL[java.nio.ByteBuffer,slice,0,java.nio.ByteBuffer] +++$+++  VAR[INT] PARENTHESESEND EOL RETURN
CALL[java.io.File,getAbsolutePath,0,java.lang.String] +++$+++  NEW TYPE[RuntimeException] PARENTHESESSTART OP[sum]
CALL[java.util.Comparator,compare,2,int] PARA[VAR[org.h2.dev.sort.InPlaceStableMergeSort.T]] PARA[VAR[org.h2.dev.sort.InPlaceStableMergeSort.T]] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.lang.String,indexOf,1,int] PARA[LIT[Character]] +++$+++  CURLYSTART INT VAR[INT] OP[assign]
CALL[java.util.zip.Inflater,setInput,1,void] PARA[VAR[BYTE]] +++$+++  TYPE[Inflater] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.io.File,listFiles,0,java.io.File[]] +++$+++  ARRAYSTART ARRAYEND VAR[java.io.File] OP[assign]
CALL[java.util.TreeSet,add,1,boolean] PARA[VAR[org.h2.dev.fs.ArchiveTool.ChunkStream]] +++$+++  OP[assign] NULL PARENTHESESEND CURLYSTART
CALL[java.util.ArrayList,get,1,E] PARA[VAR[INT]] +++$+++  ARRAYSTART ARRAYEND VAR[LONG] OP[assign]
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Character]] +++$+++  COMMA VAR[INT] PARENTHESESEND EOL
CALL[java.lang.StringBuilder,toString,0,java.lang.String] +++$+++  PARENTHESESEND EOL CURLYEND RETURN
CALL[java.util.ArrayList,addAll,1,boolean] PARA[CALL[java.util.HashMap,values]] +++$+++  OP[greaterThan] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.lang.String,length,0,int] +++$+++  OP[assign] LEX[dir.substring] PARENTHESESSTART COMMA
CALL[java.lang.String,endsWith,1,boolean] PARA[LIT[Stirng]] +++$+++  EOL CURLYEND IF PARENTHESESSTART
CALL[java.lang.String,length,0,int] +++$+++  IF PARENTHESESSTART LEX[normalizedName.charAt] PARENTHESESSTART
CALL[java.lang.String,indexOf,1,int] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.util.Properties,get,1,V] PARA[VAR[java.lang.String]] +++$+++  CURLYSTART TYPE[Object] VAR[java.lang.Object] OP[assign]
CALL[java.lang.String,length,0,int] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.lang.StringBuilder,insert,2,java.lang.StringBuilder] PARA[LIT[Integer]] PARA[LIT[Character]] +++$+++  PARENTHESESSTART VAR[BOOLEAN] PARENTHESESEND CURLYSTART
CALL[java.lang.StringBuilder,insert,2,java.lang.StringBuilder] PARA[LIT[Integer]] PARA[LIT[Character]] +++$+++  VAR[INT] OP[lessThan] PARENTHESESEND CURLYSTART
CALL[java.lang.StringBuilder,toString,0,java.lang.String] +++$+++  EOL CURLYEND CURLYEND RETURN
CALL[java.lang.String,length,0,int] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.util.HashMap,remove,1,V] PARA[VAR[java.lang.ref.Reference]] +++$+++  CURLYSTART TYPE[String] VAR[java.lang.String] OP[assign]
CALL[java.lang.String,startsWith,1,boolean] PARA[LIT[Stirng]] +++$+++  VAR[java.lang.String] PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.management.ThreadInfo,getLockOwnerName,0,java.lang.String] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.lang.management.MonitorInfo,getClassName,0,java.lang.String] +++$+++  VAR[java.lang.management.MonitorInfo] PARENTHESESEND CURLYSTART RETURN
CALL[java.util.HashMap,remove,1,V] PARA[VAR[INT]] +++$+++  OP[assign] NULL EOL CURLYEND
CALL[java.lang.String,substring,1,java.lang.String] PARA[VAR[INT]] +++$+++  VAR[INT] PARENTHESESEND OP[sum] OP[sum]
CALL[java.lang.String,trim,0,java.lang.String] +++$+++  LEX[list.add] PARENTHESESSTART VAR[BOOLEAN] OP[ternaryTrue]
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Character]] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND CURLYSTART
CALL[java.lang.String,length,0,int] +++$+++  CURLYSTART INT VAR[INT] OP[assign]
CALL[java.lang.String,length,0,int] +++$+++  CURLYSTART INT VAR[INT] OP[assign]
CALL[java.lang.String,length,0,int] +++$+++  CURLYSTART INT VAR[INT] OP[assign]
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Character]] +++$+++  VAR[LONG] OP[lessThan] PARENTHESESEND CURLYSTART
CALL[java.lang.StringBuilder,length,0,int] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.io.Reader,read,3,int] PARA[VAR[CHAR]] PARA[LIT[Integer]] PARA[VAR[INT]] +++$+++  PARENTHESESEND CURLYSTART VAR[INT] OP[assign]
CALL[java.lang.ref.ReferenceQueue,poll,0,java.lang.ref.Reference<? extends T>] +++$+++  TYPE[V] OP[greaterThan] VAR[java.lang.ref.Reference] OP[assign]
CALL[java.lang.Object,hashCode,0,int] +++$+++  OP[assign] NULL OP[ternaryTrue] OP[ternaryFalse]
CALL[java.io.InputStream,read,0,int] +++$+++  OP[lessThan] PARENTHESESEND OP[sum] PARENTHESESSTART
CALL[java.util.ArrayList,size,0,int] +++$+++  OP[assign] NEW TYPE[String] ARRAYSTART
CALL[java.lang.String,charAt,1,char] PARA[LIT[Integer]] +++$+++  OP[bitwiseAnd] OP[bitwiseAnd] LEX[Character.isWhitespace] PARENTHESESSTART
CALL[java.io.Reader,read,3,int] PARA[CALL[java.nio.CharBuffer,array]] PARA[CALL[java.nio.CharBuffer,position]] PARA[VAR[INT]] +++$+++  PARENTHESESEND CURLYSTART VAR[INT] OP[assign]
CALL[java.nio.CharBuffer,position,0,int] +++$+++  VAR[INT] EOL LEX[charBuffer.limit] PARENTHESESSTART
CALL[java.nio.channels.FileChannel,position,1,java.nio.channels.FileChannel] PARA[VAR[LONG]] +++$+++  COMMA VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.nio.channels.FileLock,release,0,void] +++$+++  PARENTHESESEND CURLYSTART TRY CURLYSTART
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  CURLYSTART INT VAR[INT] OP[assign]
CALL[java.io.OutputStream,write,3,void] PARA[FIELD[org.h2.store.Data]] PARA[LIT[Integer]] PARA[FIELD[org.h2.store.Data]] +++$+++  COMMA VAR[INT] PARENTHESESEND EOL
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[VAR[CHAR]] +++$+++  OP[assign] OP[assign] PARENTHESESEND CURLYSTART
CALL[java.util.HashMap,remove,1,V] PARA[THIS[null]] +++$+++  VAR[BOOLEAN] OP[assign] LEX[true] EOL
CALL[java.nio.ByteBuffer,getInt,0,int] +++$+++  PARENTHESESEND EOL VAR[INT] OP[assign]
CALL[java.nio.ByteBuffer,clear,0,java.nio.Buffer] +++$+++  OP[assign] VAR[java.nio.ByteBuffer] EOL CURLYEND
CALL[java.util.BitSet,clear,0,void] +++$+++  LEX[clear] PARENTHESESSTART PARENTHESESEND CURLYSTART
CALL[java.util.BitSet,length,0,int] +++$+++  CURLYSTART INT VAR[INT] OP[assign]
CALL[java.lang.StringBuilder,toString,0,java.lang.String] +++$+++  VAR[LONG] PARENTHESESEND EOL RETURN
CALL[java.io.ByteArrayOutputStream,toByteArray,0,byte[]] +++$+++  ARRAYSTART ARRAYEND VAR[BYTE] OP[assign]
CALL[java.util.HashMap,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[org.h2.server.web.WebApp.IndexInfo]] +++$+++  LEX[rs.getString] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.lang.String,length,0,int] +++$+++  PARENTHESESSTART VAR[INT] OP[sum] COMMA
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.lang.StringBuilder,toString,0,java.lang.String] +++$+++  VAR[INT] EOL CURLYEND RETURN
CALL[java.lang.String,substring,2,java.lang.String] PARA[LIT[Integer]] PARA[VAR[INT]] +++$+++  PARENTHESESEND EOL VAR[java.lang.String] OP[assign]
CALL[java.util.HashMap,get,1,V] PARA[VAR[java.lang.String]] +++$+++  OP[sum] EOL CURLYEND RETURN
CALL[java.lang.String,length,0,int] +++$+++  EOL CURLYEND IF PARENTHESESSTART
CALL[java.util.ArrayList,indexOf,1,int] PARA[VAR[java.lang.String]] +++$+++  CURLYEND INT VAR[INT] OP[assign]
CALL[java.lang.String,equals,1,boolean] PARA[VAR[java.lang.String]] +++$+++  OP[assign] NULL OP[bitwiseOr] OP[bitwiseOr]
CALL[java.lang.String,startsWith,1,boolean] PARA[VAR[java.lang.String]] +++$+++  CURLYEND ELSE IF PARENTHESESSTART
CALL[java.lang.String,substring,1,java.lang.String] PARA[CALL[java.lang.String,length]] +++$+++  LEX[true] EOL VAR[java.lang.String] OP[assign]
CALL[java.net.Socket,getOutputStream,0,java.io.OutputStream] +++$+++  PARENTHESESSTART NEW TYPE[BufferedOutputStream] PARENTHESESSTART
CALL[java.io.DataOutputStream,writeByte,1,void] PARA[VAR[BYTE]] +++$+++  PARENTHESESEND THROWS LEX[IOException] CURLYSTART
CALL[java.io.DataOutputStream,flush,0,void] +++$+++  OP[assign] NULL PARENTHESESEND CURLYSTART
CALL[java.net.Socket,getInetAddress,0,java.net.InetAddress] +++$+++  CURLYSTART TYPE[InetAddress] VAR[java.net.InetAddress] OP[assign]
CALL[java.util.Map.Entry,getKey,0,K] +++$+++  PARENTHESESEND CURLYSTART LEX[sb.append] PARENTHESESSTART
CALL[java.lang.String,contains,1,boolean] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND OP[bitwiseAnd] OP[bitwiseAnd] OP[not]
CALL[java.lang.String,toLowerCase,0,java.lang.String] +++$+++  EOL CURLYEND VAR[java.lang.String] OP[assign]
CALL[java.lang.String,indexOf,1,int] PARA[LIT[Character]] +++$+++  OP[assign] LEX[value.substring] PARENTHESESSTART COMMA
CALL[java.lang.String,trim,0,java.lang.String] +++$+++  EOL CURLYEND VAR[java.lang.String] OP[assign]
CALL[java.lang.String,substring,2,java.lang.String] PARA[LIT[Integer]] PARA[CALL[java.lang.String,indexOf]] +++$+++  PARENTHESESEND CURLYSTART VAR[java.lang.String] OP[assign]
CALL[java.io.File,getName,0,java.lang.String] +++$+++  NULL PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  PARENTHESESEND EOL VAR[CHAR] OP[assign]
CALL[java.util.concurrent.ExecutorService,execute,1,void] PARA[VAR[java.lang.Runnable]] +++$+++  LEX[Runnable] VAR[java.lang.Runnable] PARENTHESESEND CURLYSTART
CALL[java.lang.String,isEmpty,0,boolean] +++$+++  CURLYEND ELSE IF PARENTHESESSTART
CALL[java.lang.String,lastIndexOf,1,int] PARA[LIT[Character]] +++$+++  CURLYSTART INT VAR[INT] OP[assign]
CALL[java.lang.String,substring,2,java.lang.String] PARA[LIT[Integer]] PARA[VAR[INT]] +++$+++  PARENTHESESEND EOL CURLYEND RETURN
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART VAR[java.lang.Object] PARENTHESESEND EOL
CALL[java.lang.String,replace,2,java.lang.String] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND CURLYSTART VAR[java.lang.String] OP[assign]
CALL[java.lang.String,replace,2,java.lang.String] PARA[LIT[Character]] PARA[LIT[Character]] +++$+++  PARENTHESESEND EOL VAR[java.lang.String] OP[assign]
CALL[java.lang.String,length,0,int] +++$+++  OP[assign] NEW TYPE[StringBuilder] PARENTHESESSTART
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[VAR[CHAR]] +++$+++  OP[sum] OP[sum] PARENTHESESEND CURLYSTART
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  CURLYSTART CHAR VAR[CHAR] OP[assign]
CALL[java.lang.StringBuilder,toString,0,java.lang.String] +++$+++  EOL CURLYEND CURLYEND RETURN
CALL[java.util.List,addAll,1,boolean] PARA[VAR[java.util.List]] +++$+++  OP[assign] NULL PARENTHESESEND CURLYSTART
CALL[java.lang.String,substring,1,java.lang.String] PARA[VAR[INT]] +++$+++  PARENTHESESEND EOL VAR[java.lang.String] OP[assign]
CALL[java.lang.String,substring,1,java.lang.String] PARA[LIT[Integer]] +++$+++  PARENTHESESEND CURLYSTART VAR[java.lang.String] OP[assign]
CALL[java.lang.Process,waitFor,0,int] +++$+++  TRY CURLYSTART VAR[INT] OP[assign]
CALL[java.io.File,exists,0,boolean] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.awt.event.ActionEvent,getSource,0,java.lang.Object] +++$+++  OP[lessThan] OP[ternaryTrue] OP[greaterThan] PARENTHESESEND
CALL[java.io.File,getCanonicalFile,0,java.io.File] +++$+++  TRY CURLYSTART LEX[items.put] PARENTHESESSTART
CALL[javax.swing.JComponent,hashCode,0,int] +++$+++  PARENTHESESEND CURLYSTART RETURN OP[sum]
CALL[javax.swing.JTextField,getText,0,java.lang.String] +++$+++  PARENTHESESEND CURLYSTART LEX[configuration.setAlternateThumbFolder] PARENTHESESSTART
CALL[java.awt.event.ItemEvent,getStateChange,0,int] +++$+++  CURLYSTART LEX[configuration.setHideTranscodeEnabled] PARENTHESESSTART PARENTHESESSTART
CALL[javax.swing.JTable,getValueAt,2,java.lang.Object] PARA[VAR[INT]] PARA[LIT[Integer]] +++$+++  CURLYSTART TYPE[Object] VAR[java.lang.Object] OP[assign]
CALL[javax.swing.JTable,getValueAt,2,java.lang.Object] PARA[VAR[INT]] PARA[LIT[Integer]] +++$+++  OP[assign] PARENTHESESSTART BOOLEAN PARENTHESESEND
CALL[javax.swing.JTextField,getText,0,java.lang.String] +++$+++  VAR[INT] OP[assign] LEX[Integer.parseInt] PARENTHESESSTART
CALL[javax.swing.JCheckBox,setContentAreaFilled,1,void] PARA[LIT[Boolean]] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND EOL
CALL[javax.swing.JTextField,getText,0,java.lang.String] +++$+++  CURLYSTART LEX[LOGGER.debug] PARENTHESESSTART OP[sum]
CALL[javax.swing.JTextField,getText,0,java.lang.String] +++$+++  PARENTHESESEND CURLYSTART LEX[configuration.setAudioLanguages] PARENTHESESSTART
CALL[javax.swing.JTextField,getText,0,java.lang.String] +++$+++  PARENTHESESEND CURLYSTART LEX[configuration.setAudioSubLanguages] PARENTHESESSTART
CALL[javax.swing.JTextField,getText,0,java.lang.String] +++$+++  PARENTHESESEND CURLYSTART LEX[configuration.setFont] PARENTHESESSTART
CALL[java.awt.event.ItemEvent,getStateChange,0,int] +++$+++  PARENTHESESEND CURLYSTART LEX[configuration.setUseEmbeddedSubtitlesStyle] PARENTHESESSTART
CALL[java.lang.String,equalsIgnoreCase,1,boolean] PARA[LIT[Stirng]] +++$+++  EOL CURLYEND IF PARENTHESESSTART
CALL[java.lang.String,equalsIgnoreCase,1,boolean] PARA[LIT[Stirng]] +++$+++  EOL CURLYEND IF PARENTHESESSTART
CALL[java.io.File,isDirectory,0,boolean] +++$+++  VAR[java.io.File] PARENTHESESEND CURLYSTART RETURN
CALL[java.io.File,equals,1,boolean] PARA[CALL[java.io.File,getParentFile]] +++$+++  CURLYEND ELSE CURLYSTART RETURN
CALL[java.io.File,deleteOnExit,0,void] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.io.File,getParentFile,0,java.io.File] +++$+++  PARENTHESESEND EOL VAR[java.io.File] OP[assign]
CALL[javax.swing.JCheckBox,isSelected,0,boolean] +++$+++  PARENTHESESEND CURLYSTART LEX[configuration.setRunSingleInstance] PARENTHESESSTART
CALL[java.lang.StringBuilder,toString,0,java.lang.String] +++$+++  EOL CURLYEND LEX[textArea.setText] PARENTHESESSTART
CALL[javax.swing.JLabel,setText,1,void] PARA[CALL[java.text.DecimalFormat,format]] +++$+++  OP[assign] VAR[INT] EOL CURLYEND
CALL[javax.swing.JScrollBar,setValue,1,void] PARA[VAR[INT]] +++$+++  VAR[INT] OP[sub] VAR[INT] EOL
CALL[javax.swing.JToolTip,setComponent,1,void] PARA[THIS[null]] +++$+++  TYPE[HyperLinkToolTip] PARENTHESESSTART PARENTHESESEND EOL
CALL[javax.swing.JToolTip,setComponent,1,void] PARA[THIS[null]] +++$+++  TYPE[HyperLinkToolTip] PARENTHESESSTART PARENTHESESEND EOL
CALL[javax.swing.table.TableColumnModel,getColumn,1,javax.swing.table.TableColumn] PARA[VAR[INT]] +++$+++  CURLYSTART TYPE[TableColumn] VAR[javax.swing.table.TableColumn] OP[assign]
CALL[javax.swing.table.JTableHeader,repaint,0,void] +++$+++  ARRAYEND PARENTHESESEND EOL CURLYEND
CALL[javax.swing.JFrame,setVisible,1,void] PARA[LIT[Boolean]] +++$+++  LEX[ActionEvent] LEX[e] PARENTHESESEND CURLYSTART
CALL[java.util.ResourceBundle,getString,1,java.lang.String] PARA[VAR[java.lang.String]] +++$+++  CURLYSTART TRY CURLYSTART RETURN
CALL[java.io.InputStream,read,0,int] +++$+++  THROWS LEX[IOException] CURLYSTART RETURN
CALL[java.io.InputStream,read,0,int] +++$+++  CURLYEND INT VAR[INT] OP[assign]
CALL[java.io.InputStream,markSupported,0,boolean] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.io.BufferedReader,readLine,0,java.lang.String] +++$+++  PARENTHESESSTART PARENTHESESSTART VAR[java.lang.String] OP[assign]
CALL[java.io.File,delete,0,boolean] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND CURLYSTART
CALL[java.lang.reflect.Method,getModifiers,0,int] +++$+++  IF PARENTHESESSTART LEX[Modifier.isStatic] PARENTHESESSTART
CALL[java.lang.String,endsWith,1,boolean] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART PARENTHESESEND OP[bitwiseAnd] OP[bitwiseAnd]
CALL[java.io.File,getAbsolutePath,0,java.lang.String] +++$+++  NEW TYPE[IOException] PARENTHESESSTART OP[sum]
CALL[java.lang.String,replace,2,java.lang.String] PARA[LIT[Character]] PARA[LIT[Character]] +++$+++  PARENTHESESEND EOL VAR[java.lang.String] OP[assign]
CALL[java.util.HashMap,put,2,V] PARA[CALL[java.net.URL,getHost]] PARA[CALL[java.net.URL,getUserInfo]] +++$+++  OP[assign] NULL PARENTHESESEND CURLYSTART
CALL[java.util.logging.Logger,info,1,void] PARA[LIT[Stirng]] +++$+++  OP[assign] NULL PARENTHESESEND CURLYSTART
CALL[java.util.Map,get,1,V] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESEND CURLYSTART VAR[java.sql.Statement] OP[assign]
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  CURLYSTART CHAR VAR[CHAR] OP[assign]
CALL[java.util.List,iterator,0,java.util.Iterator<E>] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.String,length,0,int] +++$+++  PARENTHESESEND VAR[INT] OP[sum] OP[assign]
CALL[java.util.Iterator,hasNext,0,boolean] +++$+++  PARENTHESESEND EOL WHILE PARENTHESESSTART
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  CURLYSTART CHAR VAR[CHAR] OP[assign]
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Stirng]] +++$+++  BREAK EOL CASE OP[ternaryFalse]
CALL[java.lang.String,length,0,int] +++$+++  RETURN LEX[text.substring] PARENTHESESSTART COMMA
CALL[java.util.List,add,1,boolean] PARA[VAR[java.lang.Object]] +++$+++  VAR[java.lang.Object] PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  OP[sum] VAR[INT] ARRAYEND OP[sub]
CALL[java.lang.StringBuilder,getChars,4,void] PARA[LIT[Integer]] PARA[VAR[INT]] PARA[VAR[CHAR]] PARA[LIT[Integer]] +++$+++  ARRAYSTART VAR[INT] ARRAYEND EOL
CALL[java.io.Writer,write,1,void] PARA[VAR[CHAR]] +++$+++  PARENTHESESEND THROWS LEX[IOException] CURLYSTART
CALL[java.io.Writer,append,1,java.io.Writer] PARA[VAR[CHAR]] +++$+++  THROWS LEX[IOException] CURLYSTART RETURN
CALL[java.lang.Class,getSuperclass,0,java.lang.Class<? super T>] +++$+++  EOL CURLYEND VAR[java.lang.Class] OP[assign]
CALL[javax.swing.DefaultListModel,getSize,0,int] +++$+++  OP[bitwiseAnd] OP[bitwiseAnd] LEX[index] OP[lessThan]
CALL[javax.swing.table.TableModel,getRowCount,0,int] +++$+++  CURLYSTART RETURN LEX[row] OP[lessThan]
CALL[javax.swing.table.DefaultTableModel,getRowCount,0,int] +++$+++  OP[bitwiseAnd] OP[bitwiseAnd] LEX[row] OP[lessThan]
CALL[javax.swing.table.TableColumnModel,getColumnCount,0,int] +++$+++  OP[bitwiseAnd] OP[bitwiseAnd] LEX[index] OP[lessThan]
CALL[javax.swing.tree.TreePath,getPath,0,java.lang.Object[]] +++$+++  VAR[INT] PARENTHESESEND CURLYSTART RETURN
CALL[javax.swing.JMenu,add,1,javax.swing.JMenuItem] PARA[VAR[java.lang.String]] +++$+++  STRING VAR[java.lang.String] PARENTHESESEND CURLYSTART
CALL[javax.swing.JTabbedPane,getTabCount,0,int] +++$+++  VAR[javax.swing.JTabbedPane] PARENTHESESEND CURLYSTART RETURN
CALL[javax.swing.JTabbedPane,getComponentAt,1,java.awt.Component] PARA[VAR[INT]] +++$+++  VAR[INT] PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.String,replaceAll,2,java.lang.String] PARA[LIT[Stirng]] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESEND CURLYSTART VAR[java.lang.String] OP[assign]
CALL[java.lang.String,length,0,int] +++$+++  OP[assign] EOL VAR[INT] OP[lessThan]
CALL[java.util.Collection,contains,1,boolean] PARA[VAR[java.lang.String]] +++$+++  VAR[java.lang.String] PARENTHESESEND CURLYSTART RETURN
CALL[java.util.Map,get,1,V] PARA[LIT[Stirng]] +++$+++  OP[assign] PARENTHESESSTART TYPE[ObjectName] PARENTHESESEND
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[CALL[javax.management.Notification,getType]] +++$+++  OP[greaterThan] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[CALL[javax.management.Notification,getSource]] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[CALL[javax.management.Notification,getUserData]] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND EOL
CALL[java.lang.Object,getClass,0,java.lang.Class<? extends java.lang.Object>] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.util.List,hashCode,0,int] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.Class,getClassLoader,0,java.lang.ClassLoader] +++$+++  VAR[java.lang.Class] COMMA VAR[java.lang.Class] COMMA
CALL[java.io.Writer,flush,0,void] +++$+++  PARENTHESESEND CURLYSTART TRY CURLYSTART
CALL[java.util.Set,addAll,1,boolean] PARA[VAR[java.util.Set]] +++$+++  VAR[java.util.List] PARENTHESESEND EOL CURLYEND
CALL[java.util.List,add,1,boolean] PARA[VAR[groovy.util.GroovyCollections.subsequences(java.util.List<T>).T]] +++$+++  OP[greaterThan] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.util.List,isEmpty,0,boolean] +++$+++  PARENTHESESSTART PARENTHESESEND OP[bitwiseOr] OP[bitwiseOr]
CALL[java.util.List,size,0,int] +++$+++  VAR[INT] PARENTHESESEND VAR[INT] OP[assign]
CALL[java.util.List,add,1,boolean] PARA[VAR[java.lang.Object]] +++$+++  INSTANCEOF TYPE[String] PARENTHESESEND CURLYSTART
CALL[groovy.util.NodeList,add,1,boolean] PARA[VAR[java.lang.Object]] +++$+++  EOL CURLYEND ELSE CURLYSTART
CALL[java.util.Map,containsKey,1,boolean] PARA[VAR[java.lang.Object]] +++$+++  VAR[java.lang.Object] PARENTHESESEND CURLYSTART RETURN
CALL[java.util.Map,get,1,V] PARA[VAR[java.lang.Object]] +++$+++  VAR[java.lang.Object] PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.String,indexOf,1,int] PARA[LIT[Character]] +++$+++  CURLYSTART INT VAR[INT] OP[assign]
CALL[java.util.Map,clear,0,void] +++$+++  LEX[clear] PARENTHESESSTART PARENTHESESEND CURLYSTART
CALL[java.util.Map,get,1,V] PARA[VAR[java.lang.String]] +++$+++  VAR[java.util.Map] PARENTHESESEND CURLYSTART RETURN
CALL[java.util.Map,clear,0,void] +++$+++  PARENTHESESSTART VAR[java.util.Map] PARENTHESESEND CURLYSTART
CALL[java.util.List,toArray,1,T[]] PARA[VAR[groovy.lang.ListWithDefault.toArray(T[]).T]] +++$+++  VAR[groovy.lang.ListWithDefault.toArray(T[]).T] PARENTHESESEND CURLYSTART RETURN
CALL[java.util.List,addAll,1,boolean] PARA[VAR[java.util.Collection]] +++$+++  VAR[java.util.Collection] PARENTHESESEND CURLYSTART RETURN
CALL[java.util.List,set,2,E] PARA[VAR[INT]] PARA[VAR[groovy.lang.ListWithDefault.T]] +++$+++  VAR[groovy.lang.ListWithDefault.T] PARENTHESESEND CURLYSTART RETURN
CALL[java.util.List,lastIndexOf,1,int] PARA[VAR[java.lang.Object]] +++$+++  VAR[java.lang.Object] PARENTHESESEND CURLYSTART RETURN
CALL[java.util.List,listIterator,0,java.util.ListIterator<E>] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.io.BufferedWriter,close,0,void] +++$+++  PARENTHESESEND THROWS LEX[IOException] CURLYSTART
CALL[java.util.Calendar,setTime,1,void] PARA[VAR[java.util.Date]] +++$+++  LEX[Calendar.getInstance] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.io.PrintWriter,flush,0,void] +++$+++  COMMA LEX[false] PARENTHESESEND EOL
CALL[java.lang.Thread,setContextClassLoader,1,void] PARA[VAR[java.lang.ClassLoader]] +++$+++  LEX[run] PARENTHESESSTART PARENTHESESEND CURLYSTART
CALL[java.lang.String,length,0,int] +++$+++  WHILE PARENTHESESSTART VAR[INT] OP[lessThan]
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  PARENTHESESSTART PARENTHESESEND OP[bitwiseAnd] OP[bitwiseAnd]
CALL[java.io.PrintWriter,print,1,void] PARA[LIT[Stirng]] +++$+++  OP[assign] LEX[ClassHelper.float_TYPE] PARENTHESESEND CURLYSTART
CALL[java.util.prefs.Preferences,put,2,void] PARA[VAR[java.lang.String]] PARA[VAR[java.lang.String]] +++$+++  STRING VAR[java.lang.String] PARENTHESESEND CURLYSTART
CALL[java.util.Map.Entry,getValue,0,V] +++$+++  ARRAYSTART VAR[INT] ARRAYEND OP[assign]
CALL[java.lang.CharSequence,length,0,int] +++$+++  PARENTHESESSTART VAR[INT] OP[greaterThan] OP[assign]
CALL[java.util.List,add,1,boolean] PARA[VAR[java.lang.String]] +++$+++  STRING VAR[java.lang.String] PARENTHESESEND CURLYSTART
CALL[java.lang.String,compareTo,1,int] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESEND PARENTHESESEND EOL RETURN
CALL[java.util.Map,containsKey,1,boolean] PARA[VAR[INT]] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.lang.Class,isAssignableFrom,1,boolean] PARA[VAR[java.lang.Class]] +++$+++  RETURN LEX[true] EOL RETURN
CALL[java.lang.Class,getMethods,0,java.lang.reflect.Method[]] +++$+++  ARRAYSTART ARRAYEND VAR[java.lang.reflect.Method] OP[assign]
CALL[java.lang.reflect.Method,getModifiers,0,int] +++$+++  CURLYSTART INT VAR[INT] OP[assign]
CALL[java.util.LinkedList,removeFirst,0,E] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.util.LinkedList,getFirst,0,E] +++$+++  RETURN NULL EOL RETURN
CALL[java.lang.Throwable,getCause,0,java.lang.Throwable] +++$+++  VAR[java.lang.Throwable] EOL WHILE PARENTHESESSTART
CALL[java.lang.Object,equals,1,boolean] PARA[VAR[java.lang.Object]] +++$+++  OP[assign] VAR[java.lang.Object] OP[bitwiseOr] OP[bitwiseOr]
CALL[java.lang.Object,getClass,0,java.lang.Class<? extends java.lang.Object>] +++$+++  NULL OP[ternaryTrue] NULL OP[ternaryFalse]
CALL[java.util.List,get,1,E] PARA[VAR[INT]] +++$+++  VAR[INT] OP[assign] VAR[INT] OP[sub]
CALL[java.util.List,size,0,int] +++$+++  OP[assign] EOL VAR[INT] OP[lessThan]
CALL[java.util.LinkedList,addAll,1,boolean] PARA[FIELD[org.codehaus.groovy.control.ErrorCollector]] +++$+++  EOL CURLYEND ELSE CURLYSTART
CALL[java.io.BufferedReader,close,0,void] +++$+++  OP[not] OP[assign] NULL PARENTHESESEND
CALL[java.lang.String,trim,0,java.lang.String] +++$+++  PARENTHESESEND CURLYSTART VAR[java.lang.String] OP[assign]
CALL[java.io.PushbackReader,read,0,int] +++$+++  CURLYSTART INT VAR[INT] OP[assign]
CALL[java.lang.Class,getName,0,java.lang.String] +++$+++  PARENTHESESEND CURLYSTART LEX[typesByName.put] PARENTHESESSTART
CALL[java.lang.String,length,0,int] +++$+++  EOL CURLYEND IF PARENTHESESSTART
CALL[java.lang.String,length,0,int] +++$+++  LEX[existingValue.length] PARENTHESESSTART PARENTHESESEND OP[lessThan]
CALL[java.lang.String,equals,1,boolean] PARA[LIT[Stirng]] +++$+++  VAR[java.lang.String] OP[bitwiseAnd] OP[bitwiseAnd] OP[not]
CALL[java.lang.String,split,1,java.lang.String[]] PARA[LIT[Stirng]] +++$+++  ARRAYSTART ARRAYEND VAR[java.lang.String] OP[assign]
CALL[java.net.URI,getPort,0,int] +++$+++  LEX[dburi.getHost] PARENTHESESSTART PARENTHESESEND COMMA
CALL[java.lang.String,split,1,java.lang.String[]] PARA[LIT[Stirng]] +++$+++  ARRAYSTART ARRAYEND VAR[java.lang.String] OP[assign]
CALL[java.net.URI,toASCIIString,0,java.lang.String] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.String,hashCode,0,int] +++$+++  NULL PARENTHESESEND OP[ternaryTrue] OP[ternaryFalse]
CALL[javax.swing.undo.UndoManager,addEdit,1,boolean] PARA[CALL[javax.swing.event.UndoableEditEvent,getEdit]] +++$+++  LEX[UndoableEditEvent] VAR[javax.swing.event.UndoableEditEvent] PARENTHESESEND CURLYSTART
CALL[java.io.StringWriter,toString,0,java.lang.String] +++$+++  VAR[javax.xml.transform.Result] PARENTHESESEND EOL RETURN
CALL[java.lang.String,startsWith,1,boolean] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.lang.String,indexOf,2,int] PARA[VAR[CHAR]] PARA[VAR[INT]] +++$+++  OP[sum] EOL VAR[INT] OP[assign]
CALL[java.lang.String,substring,1,java.lang.String] PARA[VAR[INT]] +++$+++  EOL CURLYEND LEX[buf.append] PARENTHESESSTART
CALL[java.lang.String,length,0,int] +++$+++  LEX[original.length] PARENTHESESSTART PARENTHESESEND OP[sum]
CALL[java.lang.String,substring,2,java.lang.String] PARA[VAR[INT]] PARA[VAR[INT]] +++$+++  PARENTHESESEND CURLYSTART LEX[buf.append] PARENTHESESSTART
CALL[java.lang.String,substring,1,java.lang.String] PARA[VAR[INT]] +++$+++  EOL CURLYEND LEX[buf.append] PARENTHESESSTART
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[CALL[java.util.Iterator,next]] +++$+++  PARENTHESESSTART VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.util.Iterator,hasNext,0,boolean] +++$+++  PARENTHESESEND EOL WHILE PARENTHESESSTART
CALL[javax.swing.tree.DefaultMutableTreeNode,getChildAt,1,javax.swing.tree.TreeNode] PARA[VAR[INT]] +++$+++  OP[assign] PARENTHESESSTART TYPE[DefaultMutableTreeNode] PARENTHESESEND
CALL[java.awt.Container,add,1,java.awt.Component] PARA[VAR[java.awt.Component]] +++$+++  COMMA VAR[java.awt.GridBagConstraints] PARENTHESESEND EOL
CALL[java.lang.String,replace,2,java.lang.String] PARA[LIT[Character]] PARA[LIT[Character]] +++$+++  VAR[java.lang.String] PARENTHESESEND CURLYSTART RETURN
CALL[java.io.File,isAbsolute,0,boolean] +++$+++  CURLYSTART IF PARENTHESESSTART OP[not]
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[VAR[java.lang.String]] +++$+++  OP[ternaryFalse] VAR[java.lang.String] PARENTHESESEND CURLYSTART
CALL[java.util.Map,containsKey,1,boolean] PARA[VAR[INT]] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.util.List,isEmpty,0,boolean] +++$+++  NULL OP[bitwiseAnd] OP[bitwiseAnd] OP[not]
CALL[java.lang.Exception,printStackTrace,0,void] +++$+++  PARENTHESESEND THROWS TYPE[RuntimeException] CURLYSTART
CALL[java.util.List,add,1,boolean] PARA[CALL[null,ruleMoved]] +++$+++  STRING VAR[java.lang.String] PARENTHESESEND CURLYSTART
CALL[java.lang.String,lastIndexOf,1,int] PARA[LIT[Character]] +++$+++  LEX[rulesetName.lastIndexOf] PARENTHESESSTART PARENTHESESEND COMMA
CALL[java.lang.Object,toString,0,java.lang.String] +++$+++  LEX[target.setAttribute] PARENTHESESSTART VAR[java.lang.String] COMMA
CALL[java.util.Properties,putAll,1,void] PARA[VAR[java.util.Properties]] +++$+++  OP[ternaryFalse] VAR[java.util.List] PARENTHESESEND CURLYSTART
CALL[java.lang.String,substring,2,java.lang.String] PARA[VAR[INT]] PARA[VAR[INT]] +++$+++  PARENTHESESEND EOL CURLYEND RETURN
CALL[java.util.regex.Pattern,matcher,1,java.util.regex.Matcher] PARA[VAR[java.lang.String]] +++$+++  CURLYSTART TYPE[Matcher] VAR[java.util.regex.Matcher] OP[assign]
CALL[java.util.regex.Matcher,end,0,int] +++$+++  PARENTHESESSTART PARENTHESESEND OP[sum] COMMA
CALL[java.util.Map,get,1,V] PARA[VAR[java.lang.String]] +++$+++  EOL TYPE[String] VAR[java.lang.String] OP[assign]
CALL[java.util.regex.Matcher,find,0,boolean] +++$+++  NULL EOL WHILE PARENTHESESSTART
CALL[java.lang.String,trim,0,java.lang.String] +++$+++  CURLYSTART TYPE[String] VAR[java.lang.String] OP[assign]
CALL[java.lang.String,startsWith,1,boolean] PARA[LIT[Stirng]] +++$+++  EOL CURLYEND IF PARENTHESESSTART
CALL[java.util.List,add,1,boolean] PARA[VAR[java.lang.String]] +++$+++  EOL CONTINUE EOL CURLYEND
CALL[java.io.PrintWriter,print,1,void] PARA[VAR[java.lang.String]] +++$+++  TYPE[String] VAR[java.lang.String] PARENTHESESEND CURLYSTART
CALL[java.io.PrintWriter,print,1,void] PARA[LIT[Character]] +++$+++  PARENTHESESSTART VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.util.Set,contains,1,boolean] PARA[VAR[java.lang.String]] +++$+++  VAR[java.lang.String] PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[LIT[Stirng]] +++$+++  BREAK EOL CASE OP[ternaryFalse]
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[LIT[Stirng]] +++$+++  BREAK EOL CASE OP[ternaryFalse]
CALL[java.lang.StringBuilder,toString,0,java.lang.String] +++$+++  PARENTHESESEND EOL CURLYEND RETURN
CALL[java.lang.String,length,0,int] +++$+++  OP[bitwiseAnd] OP[bitwiseAnd] VAR[INT] OP[lessThan]
CALL[java.lang.String,contains,1,boolean] PARA[LIT[Stirng]] +++$+++  VAR[java.lang.String] EOL IF PARENTHESESSTART
CALL[java.awt.Canvas,getWidth,0,int] +++$+++  LEX[GL11.glViewport] PARENTHESESSTART COMMA COMMA
CALL[java.awt.image.BufferedImage,getWidth,0,int] +++$+++  OP[assign] NEW TYPE[BufferedImage] PARENTHESESSTART
CALL[java.awt.image.BufferedImage,getWidth,0,int] +++$+++  OP[assign] EOL VAR[INT] OP[lessThan]
CALL[java.util.Map,get,1,V] PARA[VAR[java.lang.String]] +++$+++  EOL TYPE[DifficultyLevel] VAR[net.sf.hale.DifficultyManager.DifficultyLevel] OP[assign]
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Stirng]] +++$+++  EOL CURLYEND ELSE CURLYSTART
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[CALL[null,toString]] +++$+++  LEX[sb.append] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.util.List,add,1,boolean] PARA[VAR[net.sf.hale.interfacelock.MovementHandler.Mover]] +++$+++  PARENTHESESSTART THIS PARENTHESESEND CURLYSTART
CALL[java.lang.StringBuilder,toString,0,java.lang.String] +++$+++  PARENTHESESEND PARENTHESESEND EOL RETURN
CALL[java.io.PrintStream,print,1,void] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART VAR[java.util.zip.GZIPOutputStream] PARENTHESESEND EOL
CALL[java.io.PrintStream,print,1,void] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART FIELD[areaName,net.sf.hale.util.SaveFileHeader] PARENTHESESEND EOL
CALL[java.io.PrintStream,print,1,void] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART FIELD[level,net.sf.hale.util.SaveFileHeader] PARENTHESESEND EOL
CALL[java.util.List,add,1,boolean] PARA[VAR[net.sf.hale.util.SimpleJSONObject]] +++$+++  PARENTHESESSTART VAR[BOOLEAN] PARENTHESESEND EOL
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[CALL[java.lang.String,charAt]] +++$+++  OP[ternaryFalse] VAR[BYTE] PARENTHESESEND CURLYSTART
CALL[java.awt.image.BufferedImage,getWidth,0,int] +++$+++  OP[assign] NEW BYTE ARRAYSTART
CALL[java.util.Map.Entry,getKey,0,K] +++$+++  EOL TYPE[String] VAR[java.lang.String] OP[assign]
CALL[java.util.Map,entrySet,0,java.util.Set<java.util.Map.Entry<K, V>>] +++$+++  TYPE[Object] OP[greaterThan] VAR[java.util.Map.Entry] OP[ternaryFalse]
CALL[java.io.File,isDirectory,0,boolean] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.util.Set,addAll,1,boolean] PARA[VAR[java.util.Set]] +++$+++  OP[not] OP[assign] NULL PARENTHESESEND
CALL[java.lang.StringBuilder,toString,0,java.lang.String] +++$+++  PARENTHESESEND EOL CURLYEND RETURN
CALL[java.util.List,clear,0,void] +++$+++  LEX[sprite] PARENTHESESEND EOL CURLYEND
CALL[java.util.Set,add,1,boolean] PARA[VAR[java.lang.String]] +++$+++  STRING VAR[java.lang.String] PARENTHESESEND CURLYSTART
CALL[java.lang.String,equals,1,boolean] PARA[LIT[Stirng]] +++$+++  CURLYEND ELSE IF PARENTHESESSTART
CALL[java.util.List,toArray,0,java.lang.Object[]] +++$+++  CURLYEND LEX[obj.put] PARENTHESESSTART COMMA
CALL[java.util.Map,clear,0,void] +++$+++  LEX[ruleValues.clear] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.util.List,isEmpty,0,boolean] +++$+++  EOL IF PARENTHESESSTART OP[not]
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART VAR[BOOLEAN] PARENTHESESEND CURLYSTART
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART PARENTHESESEND EOL CURLYEND
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[net.sf.hale.rules.Faction.Relationship]] +++$+++  LEX[Relationship] VAR[net.sf.hale.rules.Faction.Relationship] PARENTHESESEND CURLYSTART
CALL[java.lang.String,toLowerCase,0,java.lang.String] +++$+++  VAR[java.lang.String] OP[assign] LEX[mimeTypeMap.get] PARENTHESESSTART
CALL[java.util.Map,get,1,V] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESEND CURLYSTART VAR[org.ambraproject.freemarker.AmbraFreemarkerConfig.JournalConfig] OP[assign]
CALL[java.util.Map,get,1,V] PARA[VAR[java.lang.String]] +++$+++  CURLYSTART TYPE[JournalConfig] VAR[org.ambraproject.freemarker.AmbraFreemarkerConfig.JournalConfig] OP[assign]
CALL[java.util.Map,get,1,V] PARA[VAR[java.lang.String]] +++$+++  CURLYSTART TYPE[JournalConfig] VAR[org.ambraproject.freemarker.AmbraFreemarkerConfig.JournalConfig] OP[assign]
CALL[java.util.StringTokenizer,hasMoreTokens,0,boolean] +++$+++  PARENTHESESEND EOL WHILE PARENTHESESSTART
CALL[java.util.Date,hashCode,0,int] +++$+++  OP[not] OP[assign] NULL OP[ternaryTrue]
CALL[java.util.Set,hashCode,0,int] +++$+++  OP[not] OP[assign] NULL OP[ternaryTrue]
CALL[java.net.URL,getHost,0,java.lang.String] +++$+++  CURLYSTART TYPE[String] VAR[java.lang.String] OP[assign]
CALL[java.lang.String,length,0,int] +++$+++  VAR[java.lang.String] OP[assign] LEX[path.substring] PARENTHESESSTART
CALL[java.lang.String,length,0,int] +++$+++  PARENTHESESEND OP[ternaryTrue] LEX[path.substring] PARENTHESESSTART
CALL[java.lang.String,hashCode,0,int] +++$+++  OP[not] OP[assign] NULL OP[ternaryTrue]
CALL[java.lang.String,hashCode,0,int] +++$+++  OP[not] OP[assign] NULL OP[ternaryTrue]
CALL[java.lang.String,hashCode,0,int] +++$+++  OP[not] OP[assign] NULL OP[ternaryTrue]
CALL[java.lang.String,hashCode,0,int] +++$+++  OP[not] OP[assign] NULL OP[ternaryTrue]
CALL[java.lang.String,hashCode,0,int] +++$+++  OP[assign] OP[multiply] VAR[INT] OP[sum]
CALL[java.util.Date,hashCode,0,int] +++$+++  OP[not] OP[assign] NULL OP[ternaryTrue]
CALL[java.util.Map,put,2,V] PARA[VAR[java.net.URI]] PARA[VAR[org.ambraproject.views.article.ArticleType]] +++$+++  COMMA VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.util.List,add,1,boolean] PARA[VAR[org.ambraproject.views.article.ArticleType]] +++$+++  COMMA VAR[org.ambraproject.views.article.ArticleType] PARENTHESESEND EOL
CALL[java.lang.String,equals,1,boolean] PARA[CALL[org.ambraproject.views.article.ArticleType,getHeading]] +++$+++  NULL OP[ternaryTrue] LEX[false] OP[ternaryFalse]
CALL[java.lang.String,equals,1,boolean] PARA[FIELD[org.ambraproject.views.article.HomePageArticleInfo]] +++$+++  OP[assign] NULL OP[ternaryTrue] OP[not]
CALL[java.lang.String,hashCode,0,int] +++$+++  OP[not] OP[assign] NULL OP[ternaryTrue]
CALL[java.lang.String,hashCode,0,int] +++$+++  OP[not] OP[assign] NULL OP[ternaryTrue]
CALL[java.util.List,add,1,boolean] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESEND EOL CURLYEND RETURN
CALL[java.lang.String,substring,2,java.lang.String] PARA[LIT[Integer]] PARA[CALL[java.lang.String,length]] +++$+++  PARENTHESESEND CURLYSTART VAR[java.lang.String] OP[assign]
CALL[java.lang.String,charAt,1,char] PARA[LIT[Integer]] +++$+++  VAR[java.lang.String] EOL IF PARENTHESESSTART
CALL[java.util.HashMap,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.lang.String]] +++$+++  STRING VAR[java.lang.String] PARENTHESESEND CURLYSTART
CALL[java.util.HashMap,clear,0,void] +++$+++  LEX[clear] PARENTHESESSTART PARENTHESESEND CURLYSTART
CALL[java.lang.String,indexOf,1,int] PARA[LIT[Character]] +++$+++  EOL INT VAR[INT] OP[assign]
CALL[java.util.Set,iterator,0,java.util.Iterator<E>] +++$+++  OP[greaterThan] OP[greaterThan] VAR[java.util.Iterator] OP[assign]
CALL[com.frostwire.gui.bittorrent.LicenseToggleButton.LicenseIcon,toString,0,java.lang.String] +++$+++  CURLYSTART RETURN LEX[GUIMediator.getThemeImage] PARENTHESESSTART
CALL[javax.swing.JButton,setEnabled,1,void] PARA[CALL[javax.swing.JCheckBox,isSelected]] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND EOL
CALL[javax.swing.JCheckBox,removeItemListener,1,void] PARA[VAR[java.awt.event.ItemListener]] +++$+++  OP[ternaryFalse] VAR[java.awt.event.ItemListener] PARENTHESESEND CURLYSTART
CALL[java.awt.Container,add,2,void] PARA[VAR[javax.swing.JTabbedPane]] PARA[LIT[Stirng]] +++$+++  LEX[initTabbedPane] PARENTHESESSTART PARENTHESESEND CURLYSTART
CALL[javax.swing.JPanel,add,2,void] PARA[VAR[javax.swing.JButton]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND EOL
CALL[java.io.File,isFile,0,boolean] +++$+++  PARENTHESESSTART PARENTHESESEND OP[bitwiseOr] OP[bitwiseOr]
CALL[javax.swing.Icon,getIconHeight,0,int] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.String,equals,1,boolean] PARA[FIELD[com.frostwire.gui.player.MediaSource]] +++$+++  NULL PARENTHESESEND CURLYSTART RETURN
CALL[javax.swing.plaf.synth.SynthContext,getRegion,0,javax.swing.plaf.synth.Region] +++$+++  LEX[ctx.getComponent] PARENTHESESSTART PARENTHESESEND COMMA
CALL[javax.swing.JList,ensureIndexIsVisible,1,void] PARA[VAR[INT]] +++$+++  OP[assign] NULL PARENTHESESEND CURLYSTART
CALL[javax.swing.JTable,scrollRectToVisible,1,void] PARA[CALL[javax.swing.JTable,getCellRect]] +++$+++  OP[assign] NULL PARENTHESESEND CURLYSTART
CALL[javax.swing.JTable,getCellRect,3,java.awt.Rectangle] PARA[VAR[INT]] PARA[VAR[INT]] PARA[LIT[Boolean]] +++$+++  EOL TYPE[Rectangle] VAR[java.awt.Rectangle] OP[assign]
CALL[java.awt.geom.Path2D,closePath,0,void] +++$+++  COMMA VAR[DOUBLE] PARENTHESESEND EOL
CALL[java.awt.geom.Path2D,reset,0,void] +++$+++  VAR[INT] OP[sum] VAR[DOUBLE] EOL
CALL[java.awt.geom.Path2D,reset,0,void] +++$+++  DOUBLE VAR[DOUBLE] OP[assign] EOL
CALL[java.awt.font.LineBreakMeasurer,getPosition,0,int] +++$+++  EOL CURLYEND IF PARENTHESESSTART
CALL[javax.swing.text.JTextComponent,isFocusOwner,0,boolean] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[javax.swing.text.JTextComponent,getClientProperty,1,java.lang.Object] PARA[VAR[java.lang.String]] +++$+++  RETURN PARENTHESESSTART TYPE[Color] PARENTHESESEND
CALL[javax.swing.text.JTextComponent,putClientProperty,2,void] PARA[VAR[java.lang.String]] PARA[VAR[java.awt.Color]] +++$+++  LEX[JTextComponent] VAR[javax.swing.text.JTextComponent] PARENTHESESEND CURLYSTART
CALL[javax.swing.text.JTextComponent,putClientProperty,2,void] PARA[VAR[java.lang.String]] PARA[VAR[java.lang.Integer]] +++$+++  LEX[JTextComponent] VAR[javax.swing.text.JTextComponent] PARENTHESESEND CURLYSTART
CALL[javax.swing.JTextField,getMargin,0,java.awt.Insets] +++$+++  EOL TYPE[Insets] VAR[java.awt.Insets] OP[assign]
CALL[javax.swing.plaf.TextUI,equals,1,boolean] PARA[VAR[java.lang.Object]] +++$+++  VAR[java.lang.Object] PARENTHESESEND CURLYSTART RETURN
CALL[javax.swing.JTextField,putClientProperty,2,void] PARA[VAR[java.lang.String]] PARA[VAR[javax.swing.JPopupMenu]] +++$+++  LEX[JPopupMenu] VAR[javax.swing.JPopupMenu] PARENTHESESEND CURLYSTART
CALL[javax.swing.JTextField,getClientProperty,1,java.lang.Object] PARA[VAR[java.lang.String]] +++$+++  RETURN PARENTHESESSTART TYPE[ActionListener] PARENTHESESEND
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[VAR[java.lang.String]] +++$+++  VAR[INT] OP[greaterThan] PARENTHESESEND CURLYSTART
CALL[java.awt.event.KeyEvent,getKeyCode,0,int] +++$+++  CURLYSTART INT VAR[INT] OP[assign]
CALL[java.util.List,contains,1,boolean] PARA[VAR[java.lang.String]] +++$+++  VAR[java.lang.String] PARENTHESESEND CURLYSTART RETURN
CALL[javax.swing.JCheckBox,setOpaque,1,void] PARA[LIT[Boolean]] +++$+++  PARENTHESESSTART LEX[false] PARENTHESESEND EOL
CALL[java.util.Set,contains,1,boolean] PARA[VAR[java.io.File]] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.lang.String,equals,1,boolean] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[com.frostwire.gui.updates.PortableUpdater.UncompressTask,execute,0,void] +++$+++  PARENTHESESSTART LEX[progressMonitor] PARENTHESESEND EOL
CALL[java.util.List,get,1,E] PARA[LIT[Integer]] +++$+++  OP[assign] PARENTHESESSTART TYPE[String] PARENTHESESEND
CALL[java.util.List,get,1,E] PARA[LIT[Integer]] +++$+++  OP[assign] PARENTHESESSTART TYPE[String] PARENTHESESEND
CALL[java.util.Properties,containsKey,1,boolean] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.lang.String,indexOf,1,int] PARA[VAR[CHAR]] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[javax.swing.JMenuItem,setEnabled,1,void] PARA[VAR[BOOLEAN]] +++$+++  PARENTHESESSTART VAR[java.awt.event.ActionListener] PARENTHESESEND EOL
CALL[javax.swing.JMenu,add,2,java.awt.Component] PARA[VAR[javax.swing.JMenuItem]] PARA[VAR[INT]] +++$+++  PARENTHESESSTART VAR[BOOLEAN] PARENTHESESEND EOL
CALL[java.lang.reflect.InvocationTargetException,getCause,0,java.lang.Throwable] +++$+++  CURLYSTART TYPE[Throwable] VAR[java.lang.Throwable] OP[assign]
CALL[java.util.Map,get,1,V] PARA[VAR[java.lang.String]] +++$+++  CURLYSTART TYPE[JDialog] VAR[javax.swing.JDialog] OP[assign]
CALL[javax.swing.JDialog,dispose,0,void] +++$+++  PARENTHESESSTART LEX[false] PARENTHESESEND EOL
CALL[java.lang.String,length,0,int] +++$+++  OP[assign] NULL OP[bitwiseAnd] OP[bitwiseAnd]
CALL[javax.swing.JPanel,add,1,java.awt.Component] PARA[VAR[javax.swing.JButton]] +++$+++  PARENTHESESSTART VAR[java.awt.Font] PARENTHESESEND EOL
CALL[javax.swing.JTextField,addActionListener,1,void] PARA[VAR[javax.swing.AbstractAction]] +++$+++  LEX[AbstractAction] VAR[javax.swing.AbstractAction] PARENTHESESEND CURLYSTART
CALL[javax.swing.JButton,addMouseListener,1,void] PARA[VAR[java.awt.event.MouseListener]] +++$+++  LEX[MouseListener] VAR[java.awt.event.MouseListener] PARENTHESESEND CURLYSTART
CALL[javax.swing.JButton,setMinimumSize,1,void] PARA[VAR[java.awt.Dimension]] +++$+++  PARENTHESESSTART VAR[java.awt.Dimension] PARENTHESESEND EOL
CALL[java.util.Properties,getProperty,1,java.lang.String] PARA[VAR[java.lang.String]] +++$+++  CURLYSTART TYPE[String] VAR[java.lang.String] OP[assign]
CALL[java.net.URL,openStream,0,java.io.InputStream] +++$+++  OP[assign] NEW TYPE[BufferedInputStream] PARENTHESESSTART
CALL[java.util.List,add,1,boolean] PARA[LIT[Stirng]] +++$+++  LEX[command.add] PARENTHESESSTART PARENTHESESEND EOL
CALL[javax.swing.JPanel,setBorder,1,void] PARA[CALL[null,createLineBorder]] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND EOL
CALL[com.limegroup.gnutella.gui.notify.AnimatedWindow,isVisible,0,boolean] +++$+++  EOL IF PARENTHESESSTART OP[not]
CALL[javax.swing.JRadioButton,addActionListener,1,void] PARA[VAR[java.awt.event.ActionListener]] +++$+++  PARENTHESESSTART VAR[java.awt.event.ActionListener] PARENTHESESEND EOL
CALL[java.lang.String,indexOf,2,int] PARA[LIT[Stirng]] PARA[VAR[INT]] +++$+++  LEX[false] EOL IF PARENTHESESSTART
CALL[java.util.StringTokenizer,nextToken,0,java.lang.String] +++$+++  VAR[INT] OP[assign] LEX[Integer.parseInt] PARENTHESESSTART
CALL[javax.swing.JWindow,setVisible,1,void] PARA[VAR[BOOLEAN]] +++$+++  LEX[run] PARENTHESESSTART PARENTHESESEND CURLYSTART
CALL[java.lang.String,length,0,int] +++$+++  OP[assign] NULL OP[bitwiseAnd] OP[bitwiseAnd]
CALL[java.awt.datatransfer.Clipboard,setContents,2,void] PARA[VAR[java.awt.datatransfer.StringSelection]] PARA[VAR[java.awt.datatransfer.StringSelection]] +++$+++  PARENTHESESEND CURLYSTART TRY CURLYSTART
CALL[java.awt.Graphics,fillRect,4,void] PARA[VAR[INT]] PARA[LIT[Integer]] PARA[VAR[INT]] PARA[VAR[INT]] +++$+++  EOL CURLYEND ELSE CURLYSTART
CALL[javax.swing.ButtonGroup,getElements,0,java.util.Enumeration<javax.swing.AbstractButton>] +++$+++  TYPE[AbstractButton] OP[greaterThan] VAR[java.util.Enumeration] OP[assign]
CALL[javax.swing.InputMap,get,1,java.lang.Object] PARA[VAR[javax.swing.KeyStroke]] +++$+++  EOL TYPE[Object] VAR[java.lang.Object] OP[assign]
CALL[java.awt.event.MouseEvent,getComponent,0,java.awt.Component] +++$+++  PARENTHESESSTART NEW TYPE[ActionEvent] PARENTHESESSTART
CALL[java.lang.Process,getInputStream,0,java.io.InputStream] +++$+++  EOL TYPE[InputStream] VAR[java.io.InputStream] OP[assign]
CALL[java.util.Vector,add,1,boolean] PARA[VAR[javax.swing.event.ListDataListener]] +++$+++  LEX[ListDataListener] VAR[javax.swing.event.ListDataListener] PARENTHESESEND CURLYSTART
CALL[javax.swing.tree.TreeModel,getChildCount,1,int] PARA[VAR[java.lang.Object]] +++$+++  NULL PARENTHESESEND CURLYSTART RETURN
CALL[javax.swing.tree.TreeModel,getRoot,0,java.lang.Object] +++$+++  TYPE[Object] ARRAYSTART ARRAYEND CURLYSTART
CALL[javax.swing.JProgressBar,setMinimumSize,1,void] PARA[VAR[java.awt.Dimension]] +++$+++  OP[assign] NULL PARENTHESESEND CURLYSTART
CALL[javax.swing.JProgressBar,setMaximumSize,1,void] PARA[VAR[java.awt.Dimension]] +++$+++  PARENTHESESSTART VAR[java.awt.Dimension] PARENTHESESEND EOL
CALL[javax.swing.JProgressBar,getValue,0,int] +++$+++  PARENTHESESSTART PARENTHESESSTART DOUBLE PARENTHESESEND
CALL[javax.swing.Timer,start,0,void] +++$+++  LEX[startTimer] PARENTHESESSTART PARENTHESESEND CURLYSTART
CALL[java.awt.Color,darker,0,java.awt.Color] +++$+++  PARENTHESESEND EOL VAR[java.awt.Color] OP[assign]
CALL[javax.swing.JLabel,setBorder,1,void] PARA[VAR[javax.swing.border.Border]] +++$+++  EOL CURLYEND ELSE CURLYSTART
CALL[java.awt.event.MouseEvent,isPopupTrigger,0,boolean] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[javax.swing.JCheckBoxMenuItem,putClientProperty,2,void] PARA[VAR[java.lang.String]] PARA[VAR[java.lang.Object]] +++$+++  VAR[java.lang.Object] PARENTHESESEND PARENTHESESEND EOL
CALL[javax.swing.JMenu,add,1,javax.swing.JMenuItem] PARA[VAR[javax.swing.JMenuItem]] +++$+++  PARENTHESESSTART VAR[java.awt.event.ActionListener] PARENTHESESEND EOL
CALL[java.lang.String,equalsIgnoreCase,1,boolean] PARA[LIT[Stirng]] +++$+++  OP[assign] NULL OP[bitwiseAnd] OP[bitwiseAnd]
CALL[javax.swing.JDialog,setVisible,1,void] PARA[VAR[BOOLEAN]] +++$+++  PARENTHESESEND PARENTHESESEND EOL CURLYEND
CALL[java.util.Map,get,1,V] PARA[VAR[com.limegroup.gnutella.MagnetOptions.Option]] +++$+++  TYPE[String] OP[greaterThan] VAR[java.util.List] OP[assign]
CALL[java.util.Map,containsKey,1,boolean] PARA[VAR[java.awt.Component]] +++$+++  VAR[java.awt.Component] PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.String,charAt,1,char] PARA[LIT[Integer]] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.lang.String,length,0,int] +++$+++  OP[assign] PARENTHESESEND VAR[INT] OP[assign]
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  OP[assign] OP[assign] OP[bitwiseOr] OP[bitwiseOr]
CALL[java.util.ArrayList,clear,0,void] +++$+++  LEX[clearWeakReferencesNow] PARENTHESESSTART PARENTHESESEND CURLYSTART
CALL[java.util.HashMap,get,1,V] PARA[VAR[java.lang.String]] +++$+++  EOL TYPE[Integer] VAR[java.lang.Integer] OP[assign]
CALL[java.util.TreeSet,last,0,E] +++$+++  VAR[INT] OP[greaterThan] OP[bitwiseOr] OP[bitwiseOr]
CALL[java.util.ArrayList,get,1,E] PARA[VAR[INT]] +++$+++  CURLYSTART TYPE[CompWrap] VAR[net.miginfocom.layout.Grid.CompWrap] OP[assign]
CALL[java.util.IdentityHashMap,remove,1,V] PARA[VAR[java.lang.Object]] +++$+++  VAR[java.util.IdentityHashMap] PARENTHESESEND CURLYSTART RETURN
CALL[java.util.LinkedList,removeLast,0,E] +++$+++  OP[assign] PARENTHESESSTART LEX[threadWrapper] PARENTHESESEND
CALL[org.gudy.azureus2.core3.util.AEThread2.threadWrapper,setName,1,void] PARA[VAR[java.lang.String]] +++$+++  OP[assign] NULL PARENTHESESEND CURLYSTART
CALL[java.lang.String,length,0,int] +++$+++  VAR[INT] OP[assign] LEX[Math.min] PARENTHESESSTART
CALL[java.lang.String,toCharArray,0,char[]] +++$+++  ARRAYSTART ARRAYEND VAR[CHAR] OP[assign]
CALL[java.util.List,size,0,int] +++$+++  OP[assign] NEW TYPE[AERunnable] ARRAYSTART
CALL[java.util.Iterator,next,0,E] +++$+++  OP[assign] PARENTHESESSTART LEX[threadPoolWorker] PARENTHESESEND
CALL[java.lang.ThreadLocal,get,0,T] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.lang.ThreadLocal,get,0,T] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.util.List,add,1,boolean] PARA[VAR[org.gudy.azureus2.core3.util.CopyOnWriteList.T]] +++$+++  VAR[INT] PARENTHESESEND EOL CURLYEND
CALL[java.util.List,isEmpty,0,boolean] +++$+++  THIS PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.Throwable,printStackTrace,0,void] +++$+++  TYPE[Throwable] VAR[java.lang.Throwable] PARENTHESESEND CURLYSTART
CALL[java.util.StringTokenizer,nextToken,0,java.lang.String] +++$+++  VAR[INT] OP[assign] LEX[Integer.parseInt] PARENTHESESSTART
CALL[java.lang.String,indexOf,1,int] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART PARENTHESESEND OP[bitwiseOr] OP[bitwiseOr]
CALL[java.util.Stack,peek,0,E] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.util.concurrent.BlockingQueue,drainTo,1,int] PARA[VAR[java.util.List]] +++$+++  OP[greaterThan] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  OP[bitwiseAnd] OP[bitwiseAnd] LEX[Character.isDigit] PARENTHESESSTART
CALL[java.lang.String,length,0,int] +++$+++  IF PARENTHESESSTART VAR[INT] OP[lessThan]
CALL[java.lang.ProcessBuilder,redirectErrorStream,1,java.lang.ProcessBuilder] PARA[LIT[Boolean]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.nio.ByteBuffer,position,0,int] +++$+++  OP[assign] NEW BYTE ARRAYSTART
CALL[java.util.Properties,getProperty,1,java.lang.String] PARA[VAR[java.lang.String]] +++$+++  OP[assign] NEW TYPE[File] PARENTHESESSTART
CALL[java.io.File,getAbsolutePath,0,java.lang.String] +++$+++  OP[not] OP[assign] PARENTHESESEND RETURN
CALL[java.lang.String,indexOf,1,int] PARA[LIT[Stirng]] +++$+++  OP[assign] NULL OP[bitwiseAnd] OP[bitwiseAnd]
CALL[java.io.File,getCanonicalFile,0,java.io.File] +++$+++  CURLYSTART TRY CURLYSTART RETURN
CALL[java.util.List,remove,1,E] PARA[LIT[Integer]] +++$+++  CURLYSTART TYPE[File] VAR[java.io.File] OP[assign]
CALL[java.util.List,add,1,boolean] PARA[VAR[java.io.File]] +++$+++  LEX[currFile.isDirectory] PARENTHESESSTART PARENTHESESEND PARENTHESESEND
CALL[java.util.List,isEmpty,0,boolean] +++$+++  CURLYEND IF PARENTHESESSTART OP[not]
CALL[java.io.File,getCanonicalPath,0,java.lang.String] +++$+++  TRY CURLYSTART VAR[java.lang.String] OP[assign]
CALL[java.io.OutputStream,flush,0,void] +++$+++  PARENTHESESEND CURLYSTART TRY CURLYSTART
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[CALL[java.lang.String,substring]] +++$+++  OP[greaterThan] VAR[INT] PARENTHESESEND CURLYSTART
CALL[java.lang.String,length,0,int] +++$+++  VAR[INT] OP[assign] VAR[INT] OP[sum]
CALL[java.lang.String,indexOf,1,int] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESSTART INT VAR[INT] OP[assign]
CALL[java.lang.String,length,0,int] +++$+++  PARENTHESESEND CURLYSTART RETURN PARENTHESESSTART
CALL[java.util.Iterator,next,0,E] +++$+++  PARENTHESESEND EOL LEX[sb.append] PARENTHESESSTART
CALL[org.limewire.setting.evt.SettingsGroupManagerEvent.EventType,toString,0,java.lang.String] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.Integer,intValue,0,int] +++$+++  CURLYSTART INT VAR[INT] OP[assign]
CALL[java.util.Iterator,next,0,E] +++$+++  TYPE[V] OP[greaterThan] VAR[org.limewire.collection.TrieNode] OP[assign]
CALL[java.util.ArrayList,get,1,E] PARA[VAR[INT]] +++$+++  VAR[INT] PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.String,charAt,1,char] PARA[LIT[Integer]] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.io.FileOutputStream,close,0,void] +++$+++  CURLYEND CURLYEND FINALLY CURLYSTART
CALL[java.lang.String,length,0,int] +++$+++  FINAL INT VAR[INT] OP[assign]
CALL[java.lang.String,substring,2,java.lang.String] PARA[VAR[INT]] PARA[CALL[java.lang.String,length]] +++$+++  EOL CURLYEND LEX[buf.append] PARENTHESESSTART
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND CURLYSTART
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[CALL[java.util.Iterator,next]] +++$+++  PARENTHESESSTART VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.util.Iterator,hasNext,0,boolean] +++$+++  PARENTHESESEND EOL WHILE PARENTHESESSTART
CALL[java.lang.ref.Reference,get,0,T] +++$+++  OP[assign] NULL OP[bitwiseAnd] OP[bitwiseAnd]
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Character]] +++$+++  EOL CURLYEND ELSE CURLYSTART
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.logging.Logger,logp,4,void] PARA[VAR[java.util.logging.Level]] PARA[VAR[java.lang.String]] PARA[LIT[Stirng]] PARA[VAR[java.lang.String]] +++$+++  STRING VAR[java.lang.String] PARENTHESESEND CURLYSTART
CALL[java.io.File,canRead,0,boolean] +++$+++  EOL IF PARENTHESESSTART OP[not]
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[LIT[Character]] +++$+++  VAR[CHAR] OP[greaterThan] PARENTHESESEND CURLYSTART
CALL[java.lang.String,equals,1,boolean] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND EOL VAR[BOOLEAN] OP[assign]
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[VAR[CHAR]] +++$+++  OP[assign] OP[assign] PARENTHESESEND CURLYSTART
CALL[java.lang.String,replaceAll,2,java.lang.String] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  VAR[java.lang.String] PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.String,replaceAll,2,java.lang.String] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND CURLYSTART VAR[java.lang.String] OP[assign]
CALL[java.lang.String,replaceAll,2,java.lang.String] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND EOL VAR[java.lang.String] OP[assign]
CALL[java.lang.String,replaceAll,2,java.lang.String] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND CURLYSTART VAR[java.lang.String] OP[assign]
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  PARENTHESESSTART OP[not] LEX[Character.isLetter] PARENTHESESSTART
CALL[java.lang.String,length,0,int] +++$+++  OP[assign] EOL VAR[INT] OP[lessThan]
CALL[java.lang.Exception,printStackTrace,0,void] +++$+++  TYPE[Exception] VAR[java.lang.Exception] PARENTHESESEND CURLYSTART
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  FINAL CHAR VAR[CHAR] OP[assign]
CALL[java.lang.StringBuffer,toString,0,java.lang.String] +++$+++  CURLYEND CURLYEND CURLYEND RETURN
CALL[java.nio.ByteBuffer,position,0,int] +++$+++  CURLYEND CURLYEND IF PARENTHESESSTART
CALL[java.io.RandomAccessFile,seek,1,void] PARA[LIT[Integer]] +++$+++  PARENTHESESEND THROWS LEX[IOException] CURLYSTART
CALL[java.lang.Character,charValue,0,char] +++$+++  NULL OP[ternaryTrue] VAR[CHAR] OP[ternaryFalse]
CALL[java.lang.Byte,byteValue,0,byte] +++$+++  NULL OP[ternaryTrue] VAR[BYTE] OP[ternaryFalse]
CALL[java.lang.String,trim,0,java.lang.String] +++$+++  NULL OP[ternaryTrue] NULL OP[ternaryFalse]
CALL[java.lang.String,length,0,int] +++$+++  OP[bitwiseOr] PARENTHESESSTART VAR[INT] OP[assign]
CALL[java.lang.String,isEmpty,0,boolean] +++$+++  CURLYEND ELSE IF PARENTHESESSTART
CALL[java.lang.CharSequence,length,0,int] +++$+++  PARENTHESESSTART PARENTHESESEND OP[not] OP[assign]
CALL[java.lang.CharSequence,length,0,int] +++$+++  LEX[str.length] PARENTHESESSTART PARENTHESESEND OP[sub]
CALL[java.lang.String,length,0,int] +++$+++  PARENTHESESEND CURLYSTART VAR[INT] OP[assign]
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.lang.String,isEmpty,0,boolean] +++$+++  EOL CURLYEND IF PARENTHESESSTART
CALL[java.lang.String,toCharArray,0,char[]] +++$+++  ARRAYSTART ARRAYEND VAR[CHAR] OP[assign]
CALL[java.util.List,size,0,int] +++$+++  PARENTHESESSTART NEW TYPE[String] ARRAYSTART
CALL[java.lang.StringBuilder,toString,0,java.lang.String] +++$+++  EOL CURLYEND CURLYEND RETURN
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[VAR[java.lang.Object]] +++$+++  OP[assign] NULL PARENTHESESEND CURLYSTART
CALL[java.lang.StringBuilder,toString,0,java.lang.String] +++$+++  EOL CURLYEND CURLYEND RETURN
CALL[java.lang.CharSequence,charAt,1,char] PARA[VAR[INT]] +++$+++  OP[assign] LEX[false] OP[bitwiseAnd] OP[bitwiseAnd]
CALL[java.lang.CharSequence,length,0,int] +++$+++  IF PARENTHESESSTART VAR[INT] OP[lessThan]
CALL[java.lang.CharSequence,length,0,int] +++$+++  EOL INT VAR[INT] OP[assign]
CALL[java.lang.StringBuilder,charAt,1,char] PARA[VAR[INT]] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[VAR[CHAR]] +++$+++  VAR[BOOLEAN] OP[assign] LEX[true] EOL
CALL[java.lang.StringBuilder,setCharAt,2,void] PARA[VAR[INT]] PARA[LIT[Character]] +++$+++  PARENTHESESSTART VAR[CHAR] PARENTHESESEND EOL
CALL[java.lang.CharSequence,length,0,int] +++$+++  OP[assign] EOL VAR[INT] OP[lessThan]
CALL[java.lang.StringBuilder,toString,0,java.lang.String] +++$+++  CURLYEND CURLYEND CURLYEND RETURN
CALL[java.lang.StringBuilder,toString,0,java.lang.String] +++$+++  ARRAYEND PARENTHESESEND EOL RETURN
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[VAR[java.lang.String]] +++$+++  OP[assign] NULL PARENTHESESEND CURLYSTART
CALL[java.util.List,size,0,int] +++$+++  IF PARENTHESESSTART VAR[INT] OP[lessThan]
CALL[java.io.File,exists,0,boolean] +++$+++  TYPE[IOException] CURLYSTART IF PARENTHESESSTART
CALL[java.io.File,length,0,long] +++$+++  EOL CURLYEND IF PARENTHESESSTART
CALL[java.io.File,mkdirs,0,boolean] +++$+++  CURLYSTART IF PARENTHESESSTART OP[not]
CALL[java.io.File,lastModified,0,long] +++$+++  LEX[false] EOL CURLYEND RETURN
CALL[java.lang.String,equals,1,boolean] PARA[VAR[java.lang.String]] +++$+++  CURLYEND RETURN VAR[BOOLEAN] OP[ternaryTrue]
CALL[java.lang.String,length,0,int] +++$+++  COMMA VAR[java.lang.String] COMMA COMMA
CALL[java.io.Reader,read,1,int] PARA[VAR[CHAR]] +++$+++  PARENTHESESSTART PARENTHESESSTART VAR[INT] OP[assign]
CALL[java.lang.String,contains,1,boolean] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART PARENTHESESEND OP[bitwiseOr] OP[bitwiseOr]
CALL[java.lang.StringBuilder,toString,0,java.lang.String] +++$+++  PARENTHESESEND EOL CURLYEND RETURN
CALL[java.lang.String,hashCode,0,int] +++$+++  OP[assign] NULL OP[ternaryTrue] OP[ternaryFalse]
CALL[java.io.File,getAbsolutePath,0,java.lang.String] +++$+++  OP[assign] NEW TYPE[StatFs] PARENTHESESSTART
CALL[java.util.BitSet,clear,0,void] +++$+++  LEX[clear] PARENTHESESSTART PARENTHESESEND CURLYSTART
CALL[java.lang.String,lastIndexOf,1,int] PARA[LIT[Stirng]] +++$+++  EOL INT VAR[INT] OP[assign]
CALL[java.io.File,listFiles,0,java.io.File[]] +++$+++  TRY CURLYSTART VAR[java.io.File] OP[assign]
CALL[java.util.Stack,push,1,E] PARA[VAR[java.io.File]] +++$+++  CURLYEND CURLYEND ELSE CURLYSTART
CALL[java.io.File,canRead,0,boolean] +++$+++  PARENTHESESSTART PARENTHESESEND OP[bitwiseAnd] OP[bitwiseAnd]
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Stirng]] +++$+++  OP[sum] VAR[INT] PARENTHESESEND EOL
CALL[java.lang.StringBuilder,toString,0,java.lang.String] +++$+++  PARENTHESESSTART PARENTHESESEND EOL RETURN
CALL[java.util.Set,add,1,boolean] PARA[VAR[com.frostwire.android.gui.SoftwareUpdater.ConfigurationUpdateListener]] +++$+++  PARENTHESESEND CURLYSTART TRY CURLYSTART
CALL[java.util.Set,contains,1,boolean] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[LIT[Stirng]] +++$+++  ARRAYEND PARENTHESESEND EOL CURLYEND
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[LIT[Character]] +++$+++  VAR[INT] OP[greaterThan] PARENTHESESEND CURLYSTART
CALL[java.lang.Class,isArray,0,boolean] +++$+++  PARENTHESESEND CURLYSTART VAR[org.luaj.vm2.lib.jse.CoerceJavaToLua.Coercion] OP[assign]
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[LIT[Stirng]] +++$+++  CONTINUE EOL CASE OP[ternaryFalse]
CALL[java.lang.String,length,0,int] +++$+++  OP[assign] EOL VAR[INT] OP[lessThan]
CALL[java.lang.StringBuffer,toString,0,java.lang.String] +++$+++  EOL CURLYEND CURLYEND RETURN
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[LIT[Stirng]] +++$+++  CONTINUE EOL CASE OP[ternaryFalse]
CALL[java.lang.String,length,0,int] +++$+++  PARENTHESESSTART OP[sum] LEX[s.substring] PARENTHESESSTART
CALL[java.lang.StringBuffer,toString,0,java.lang.String] +++$+++  EOL CURLYEND CURLYEND RETURN
CALL[java.io.DataOutputStream,write,1,void] PARA[VAR[INT]] +++$+++  OP[ternaryTrue] OP[ternaryFalse] PARENTHESESEND EOL
CALL[java.lang.String,substring,1,java.lang.String] PARA[LIT[Integer]] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND RETURN
CALL[java.lang.String,startsWith,1,boolean] PARA[LIT[Stirng]] +++$+++  OP[assign] EOL IF PARENTHESESSTART
CALL[java.io.DataInputStream,readFully,3,void] PARA[VAR[BYTE]] PARA[LIT[Integer]] PARA[LIT[Integer]] +++$+++  PARENTHESESEND THROWS LEX[IOException] CURLYSTART
CALL[java.io.DataInputStream,readByte,0,byte] +++$+++  PARENTHESESEND EOL VAR[INT] OP[assign]
CALL[java.util.HashMap,put,2,V] PARA[VAR[java.lang.String]] PARA[CALL[null,toString]] +++$+++  INT VAR[INT] PARENTHESESEND CURLYSTART
CALL[java.util.HashMap,put,2,V] PARA[VAR[java.lang.String]] PARA[CALL[null,toString]] +++$+++  SHORT VAR[SHORT] PARENTHESESEND CURLYSTART
CALL[java.io.DataInputStream,readByte,0,byte] +++$+++  OP[sum] OP[sum] ARRAYEND OP[assign]
CALL[java.lang.IllegalAccessException,getMessage,0,java.lang.String] +++$+++  PARENTHESESEND CURLYSTART VAR[java.lang.String] OP[assign]
CALL[java.util.Map,remove,1,V] PARA[VAR[java.lang.Object]] +++$+++  EOL TYPE[Object] VAR[java.lang.Object] OP[assign]
CALL[java.io.ByteArrayOutputStream,toByteArray,0,byte[]] +++$+++  EOL CURLYEND CURLYEND RETURN
CALL[java.lang.Class,newInstance,0,T] +++$+++  PARENTHESESEND CURLYSTART VAR[java.lang.Object] OP[assign]
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[VAR[CHAR]] +++$+++  OP[lessThan] VAR[INT] PARENTHESESEND CURLYSTART
CALL[java.lang.ClassNotFoundException,getLocalizedMessage,0,java.lang.String] +++$+++  THROW NEW TYPE[IOException] PARENTHESESSTART
CALL[javax.swing.JButton,setEnabled,1,void] PARA[LIT[Boolean]] +++$+++  LEX[run] PARENTHESESSTART PARENTHESESEND CURLYSTART
CALL[java.util.Vector,add,1,boolean] PARA[VAR[javax.swing.event.ChangeListener]] +++$+++  LEX[ChangeListener] VAR[javax.swing.event.ChangeListener] PARENTHESESEND CURLYSTART
CALL[java.util.Vector,remove,1,boolean] PARA[VAR[javax.swing.event.ChangeListener]] +++$+++  LEX[ChangeListener] VAR[javax.swing.event.ChangeListener] PARENTHESESEND CURLYSTART
CALL[java.util.Vector,add,1,boolean] PARA[VAR[javax.swing.event.ChangeListener]] +++$+++  LEX[ChangeListener] VAR[javax.swing.event.ChangeListener] PARENTHESESEND CURLYSTART
CALL[javax.swing.JButton,setEnabled,1,void] PARA[LIT[Boolean]] +++$+++  LEX[entryField.selectAll] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.io.File,mkdirs,0,boolean] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND CURLYSTART
CALL[java.io.File,getAbsolutePath,0,java.lang.String] +++$+++  PARENTHESESEND CURLYSTART LEX[Logger.log] PARENTHESESSTART
CALL[java.lang.Exception,printStackTrace,0,void] +++$+++  TYPE[Exception] VAR[java.lang.Exception] PARENTHESESEND CURLYSTART
CALL[java.util.Hashtable,get,1,V] PARA[VAR[javax.swing.JMenuItem]] +++$+++  OP[assign] PARENTHESESSTART TYPE[String] PARENTHESESEND
CALL[java.util.Hashtable,get,1,V] PARA[VAR[javax.swing.JComponent]] +++$+++  RETURN PARENTHESESSTART TYPE[String] PARENTHESESEND
CALL[javax.swing.JLabel,setAlignmentX,1,void] PARA[LIT[Double]] +++$+++  PARENTHESESSTART LEX[Color.DARK_GRAY] PARENTHESESEND EOL
CALL[java.util.List,add,1,boolean] PARA[VAR[java.lang.String]] +++$+++  STRING VAR[java.lang.String] PARENTHESESEND CURLYSTART
CALL[java.util.List,get,1,E] PARA[VAR[INT]] +++$+++  CURLYSTART TYPE[Object] VAR[java.lang.Object] OP[assign]
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND OP[sub] PARENTHESESEND CURLYSTART
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND EOL CURLYEND CURLYEND
CALL[java.lang.Object,toString,0,java.lang.String] +++$+++  LEX[sb.append] PARENTHESESSTART LEX[SQLStatement.escape] PARENTHESESSTART
CALL[java.lang.StringBuffer,toString,0,java.lang.String] +++$+++  PARENTHESESSTART PARENTHESESEND EOL RETURN
CALL[java.util.Map,put,2,V] PARA[VAR[java.awt.Component]] PARA[VAR[java.lang.String]] +++$+++  LEX[Component] VAR[java.awt.Component] PARENTHESESEND CURLYSTART
CALL[java.util.Map,get,1,V] PARA[VAR[java.awt.Component]] +++$+++  OP[assign] PARENTHESESSTART TYPE[String] PARENTHESESEND
CALL[java.awt.Component,getY,0,int] +++$+++  PARENTHESESEND OP[sum] VAR[INT] COMMA
CALL[java.lang.String,toString,0,java.lang.String] +++$+++  THROW NEW TYPE[IllegalArgumentException] PARENTHESESSTART
CALL[java.util.TreeSet,toArray,0,java.lang.Object[]] +++$+++  VAR[INT] PARENTHESESEND CURLYSTART RETURN
CALL[javax.swing.JMenuItem,doClick,0,void] +++$+++  OP[assign] LEX[KeyEvent.VK_ENTER] PARENTHESESEND CURLYSTART
CALL[javax.swing.JPasswordField,requestFocusInWindow,0,boolean] +++$+++  LEX[WindowEvent] LEX[e] PARENTHESESEND CURLYSTART
CALL[java.util.ArrayList,add,1,boolean] PARA[VAR[java.lang.String]] +++$+++  LEX[ai.getAccountName] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.net.Socket,getOutputStream,0,java.io.OutputStream] +++$+++  OP[assign] NEW TYPE[PrintWriter] PARENTHESESSTART
CALL[java.lang.String,substring,2,java.lang.String] PARA[LIT[Integer]] PARA[VAR[INT]] +++$+++  EOL TYPE[String] VAR[java.lang.String] OP[assign]
CALL[java.io.ByteArrayOutputStream,size,0,int] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.io.ByteArrayOutputStream,toByteArray,0,byte[]] +++$+++  CURLYEND CURLYEND RETURN PARENTHESESSTART
CALL[java.util.Set,add,1,boolean] PARA[VAR[java.lang.Integer]] +++$+++  LEX[class_mon.enter] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.Integer]] PARA[VAR[java.util.List]] +++$+++  TYPE[ArrayList] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.util.Iterator,hasNext,0,boolean] +++$+++  LEX[listUrlBlacklist.iterator] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.lang.Long,longValue,0,long] +++$+++  NULL OP[ternaryTrue] LEX[false] OP[ternaryFalse]
CALL[java.lang.Number,intValue,0,int] +++$+++  PARENTHESESEND EOL CURLYEND RETURN
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[CALL[java.lang.String,getBytes]] +++$+++  EOL CURLYEND ELSE CURLYSTART
CALL[java.util.Map,containsKey,1,boolean] PARA[VAR[java.lang.String]] +++$+++  NULL OP[bitwiseAnd] OP[bitwiseAnd] OP[not]
CALL[java.io.File,exists,0,boolean] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.io.File,delete,0,boolean] +++$+++  CURLYSTART IF PARENTHESESSTART OP[not]
CALL[java.util.Set,contains,1,boolean] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESEND CURLYSTART RETURN PARENTHESESSTART
CALL[java.lang.String,split,1,java.lang.String[]] PARA[LIT[Stirng]] +++$+++  ARRAYSTART ARRAYEND VAR[java.lang.String] OP[assign]
CALL[java.net.InetSocketAddress,getAddress,0,java.net.InetAddress] +++$+++  PARENTHESESEND CURLYSTART RETURN PARENTHESESSTART
CALL[java.util.List,contains,1,boolean] PARA[VAR[java.lang.Long]] +++$+++  EOL CURLYEND IF PARENTHESESSTART
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.Object]] PARA[VAR[java.lang.Object]] +++$+++  PARENTHESESSTART VAR[java.util.Map] PARENTHESESEND CURLYSTART
CALL[java.net.InetAddress,isLoopbackAddress,0,boolean] +++$+++  PARENTHESESSTART PARENTHESESEND OP[bitwiseOr] OP[bitwiseOr]
CALL[java.lang.String,indexOf,1,int] PARA[LIT[Character]] +++$+++  EOL INT VAR[INT] OP[assign]
CALL[java.util.IdentityHashMap,clear,0,void] +++$+++  LEX[clear] PARENTHESESSTART PARENTHESESEND CURLYSTART
CALL[java.io.InputStream,reset,0,void] +++$+++  PARENTHESESEND PARENTHESESEND EOL CURLYEND
CALL[java.util.List,add,1,boolean] PARA[VAR[com.aelitis.azureus.core.util.CopyOnWriteList.T]] +++$+++  PARENTHESESSTART VAR[java.util.List] PARENTHESESEND EOL
CALL[java.util.List,contains,1,boolean] PARA[VAR[com.aelitis.azureus.core.util.CopyOnWriteList.T]] +++$+++  PARENTHESESEND CURLYSTART RETURN PARENTHESESSTART
CALL[java.util.Map,get,1,V] PARA[VAR[INT]] +++$+++  CURLYSTART TYPE[Entry] VAR[com.aelitis.azureus.core.util.LinkFileMap.Entry] OP[assign]
CALL[java.util.Map,values,0,java.util.Collection<V>] +++$+++  PARENTHESESSTART TYPE[Entry] VAR[com.aelitis.azureus.core.util.LinkFileMap.Entry] OP[ternaryFalse]
CALL[java.io.File,delete,0,boolean] +++$+++  CURLYSTART IF PARENTHESESSTART OP[not]
CALL[java.lang.String,replaceAll,2,java.lang.String] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  CURLYSTART TYPE[String] VAR[java.lang.String] OP[assign]
CALL[java.util.Set,add,1,boolean] PARA[VAR[com.aelitis.azureus.core.util.CopyOnWriteSet.T]] +++$+++  EOL CURLYEND ELSE CURLYSTART
CALL[java.util.Set,size,0,int] +++$+++  PARENTHESESEND CURLYSTART RETURN PARENTHESESSTART
CALL[java.util.LinkedList,clear,0,void] +++$+++  PARENTHESESEND PARENTHESESEND PARENTHESESEND CURLYSTART
CALL[java.util.LinkedList,add,1,boolean] PARA[VAR[com.aelitis.azureus.core.content.RelatedContentManager.DownloadInfo]] +++$+++  PARENTHESESSTART VAR[com.aelitis.azureus.core.content.RelatedContentManager.DownloadInfo] PARENTHESESEND EOL
CALL[java.util.concurrent.atomic.AtomicInteger,get,0,int] +++$+++  PARENTHESESEND CURLYSTART RETURN PARENTHESESSTART
CALL[java.util.concurrent.atomic.AtomicInteger,incrementAndGet,0,int] +++$+++  LEX[incrementUnread] PARENTHESESSTART PARENTHESESEND CURLYSTART
CALL[java.lang.String,hashCode,0,int] +++$+++  CURLYSTART INT VAR[INT] OP[assign]
CALL[java.lang.String,length,0,int] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.io.DataInputStream,readInt,0,int] +++$+++  ELSE CURLYSTART VAR[INT] OP[assign]
CALL[java.util.ArrayList,clear,0,void] +++$+++  LEX[connections_mon.enter] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.util.List,get,1,E] PARA[VAR[INT]] +++$+++  OP[assign] PARENTHESESSTART TYPE[PSMonitorListener] PARENTHESESEND
CALL[java.lang.Throwable,toString,0,java.lang.String] +++$+++  PARENTHESESEND CURLYSTART LEX[SpeedManagerLogger.log] PARENTHESESSTART
CALL[java.util.Map,toString,0,java.lang.String] +++$+++  CURLYSTART TYPE[String] VAR[java.lang.String] OP[assign]
CALL[java.util.StringTokenizer,nextToken,0,java.lang.String] +++$+++  CURLYSTART TYPE[String] VAR[java.lang.String] OP[assign]
CALL[java.util.StringTokenizer,hasMoreTokens,0,boolean] +++$+++  PARENTHESESEND EOL WHILE PARENTHESESSTART
CALL[java.lang.String,getBytes,0,byte[]] +++$+++  VAR[java.lang.String] OP[assign] LEX[Base32.encode] PARENTHESESSTART
CALL[java.lang.String,length,0,int] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.util.List,clear,0,void] +++$+++  PARENTHESESEND CURLYSTART CURLYEND CURLYEND
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART PARENTHESESEND EOL CURLYEND
CALL[java.util.Set,contains,1,boolean] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.util.Map,remove,1,V] PARA[VAR[java.lang.String]] +++$+++  OP[assign] NULL PARENTHESESEND CURLYSTART
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESSTART VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.nio.ByteBuffer,hasRemaining,0,boolean] +++$+++  EOL IF PARENTHESESSTART OP[not]
CALL[java.nio.ByteBuffer,flip,0,java.nio.Buffer] +++$+++  BYTE PARENTHESESEND PARENTHESESEND EOL
CALL[java.lang.String,length,0,int] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.lang.String,getBytes,0,byte[]] +++$+++  PARENTHESESEND CURLYSTART LEX[handshake.put] PARENTHESESSTART
CALL[java.nio.ByteBuffer,get,0,byte] +++$+++  EOL BYTE VAR[BYTE] OP[assign]
CALL[java.nio.channels.spi.AbstractSelectableChannel,keyFor,1,java.nio.channels.SelectionKey] PARA[VAR[java.nio.channels.Selector]] +++$+++  CURLYEND TYPE[SelectionKey] VAR[java.nio.channels.SelectionKey] OP[assign]
CALL[java.nio.channels.spi.AbstractSelectableChannel,isOpen,0,boolean] +++$+++  ELSE CURLYSTART IF PARENTHESESSTART
CALL[java.nio.channels.SelectionKey,interestOps,0,int] +++$+++  PARENTHESESEND CURLYSTART LEX[key.interestOps] PARENTHESESSTART
CALL[java.util.HashMap,remove,1,V] PARA[VAR[java.nio.channels.spi.AbstractSelectableChannel]] +++$+++  LEX[register_cancel_list_mon.enter] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.nio.channels.SelectionKey,interestOps,0,int] +++$+++  CURLYSTART IF PARENTHESESSTART PARENTHESESSTART
CALL[java.util.List,add,1,boolean] PARA[VAR[com.aelitis.azureus.core.networkmanager.impl.tcp.TCPConnectionManager.ConnectListener]] +++$+++  RETURN EOL CURLYEND CURLYEND
CALL[java.lang.String,equals,1,boolean] PARA[LIT[Stirng]] +++$+++  EOL CURLYEND IF PARENTHESESSTART
CALL[java.util.Iterator,hasNext,0,boolean] +++$+++  PARENTHESESEND EOL WHILE PARENTHESESSTART
CALL[java.util.Map,size,0,int] +++$+++  PARENTHESESEND EOL RETURN PARENTHESESSTART
CALL[java.nio.ByteBuffer,position,0,int] +++$+++  OP[assign] PARENTHESESSTART SHORT PARENTHESESEND
CALL[java.nio.ByteBuffer,get,1,java.nio.ByteBuffer] PARA[VAR[BYTE]] +++$+++  ARRAYSTART VAR[INT] ARRAYEND EOL
CALL[java.util.Map,get,1,V] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESEND CURLYSTART RETURN PARENTHESESSTART
CALL[java.util.LinkedList,iterator,0,java.util.Iterator<E>] +++$+++  TYPE[PEPeer] OP[greaterThan] LEX[it] OP[assign]
CALL[java.lang.String,substring,2,java.lang.String] PARA[LIT[Integer]] PARA[LIT[Integer]] +++$+++  TYPE[String] PARENTHESESEND LEX[shadow_style_code_map.get] PARENTHESESSTART
CALL[java.util.HashMap,get,1,V] PARA[CALL[java.lang.String,substring]] +++$+++  RETURN PARENTHESESSTART TYPE[String] PARENTHESESEND
CALL[java.lang.String,substring,2,java.lang.String] PARA[LIT[Integer]] PARA[LIT[Integer]] +++$+++  TYPE[String] ARRAYSTART ARRAYEND CURLYSTART
CALL[java.lang.String,endsWith,1,boolean] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART PARENTHESESEND OP[bitwiseOr] OP[bitwiseOr]
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  CURLYSTART CHAR VAR[CHAR] OP[assign]
CALL[java.util.HashMap,size,0,int] +++$+++  CURLYSTART RETURN PARENTHESESSTART OP[sum]
CALL[java.util.Iterator,hasNext,0,boolean] +++$+++  LEX[listeners.iterator] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.util.List]] +++$+++  PARENTHESESSTART LEX[l] PARENTHESESEND EOL
CALL[java.util.Map,get,1,V] PARA[VAR[java.lang.String]] +++$+++  OP[assign] PARENTHESESSTART TYPE[List] PARENTHESESEND
CALL[java.lang.String,getBytes,0,byte[]] +++$+++  PARENTHESESEND CURLYSTART VAR[BYTE] OP[assign]
CALL[java.util.List,add,1,boolean] PARA[VAR[com.aelitis.azureus.ui.swt.views.skin.SkinnedDialog.SkinnedDialogClosedListener]] +++$+++  LEX[SkinnedDialogClosedListener] VAR[com.aelitis.azureus.ui.swt.views.skin.SkinnedDialog.SkinnedDialogClosedListener] PARENTHESESEND CURLYSTART
CALL[java.lang.Boolean,booleanValue,0,boolean] +++$+++  NULL OP[ternaryTrue] LEX[false] OP[ternaryFalse]
CALL[java.util.Map,remove,1,V] PARA[VAR[java.lang.String]] +++$+++  OP[assign] OP[assign] PARENTHESESEND CURLYSTART
CALL[java.util.Map,size,0,int] +++$+++  RETURN EOL CURLYEND RETURN
CALL[java.util.Map,keySet,0,java.util.Set<K>] +++$+++  TYPE[String] OP[greaterThan] VAR[java.util.Set] OP[assign]
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[CALL[java.util.List,get]] +++$+++  PARENTHESESSTART VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[CALL[java.util.List,get]] +++$+++  VAR[INT] OP[assign] OP[assign] PARENTHESESEND
CALL[java.lang.String,indexOf,1,int] PARA[LIT[Character]] +++$+++  EOL CURLYEND VAR[INT] OP[assign]
CALL[java.lang.String,indexOf,1,int] PARA[LIT[Character]] +++$+++  PARENTHESESEND EOL VAR[INT] OP[assign]
CALL[java.lang.String,indexOf,1,int] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESEND CURLYSTART VAR[INT] OP[assign]
CALL[java.lang.StringBuffer,toString,0,java.lang.String] +++$+++  EOL CURLYEND RETURN PARENTHESESSTART
CALL[java.io.StringWriter,toString,0,java.lang.String] +++$+++  PARENTHESESSTART PARENTHESESEND EOL RETURN
CALL[java.lang.String,indexOf,1,int] PARA[VAR[java.lang.String]] +++$+++  EOL INT VAR[INT] OP[assign]
CALL[java.lang.String,length,0,int] +++$+++  IF PARENTHESESSTART LEX[data.charAt] PARENTHESESSTART
CALL[java.lang.String,length,0,int] +++$+++  VAR[BYTE] ARRAYSTART LEX[data.charAt] PARENTHESESSTART
CALL[java.lang.String,length,0,int] +++$+++  VAR[BYTE] ARRAYSTART LEX[data.charAt] PARENTHESESSTART
CALL[java.util.List,size,0,int] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.lang.String,startsWith,1,boolean] PARA[VAR[java.lang.String]] +++$+++  CURLYSTART IF PARENTHESESSTART OP[not]
CALL[java.lang.String,toLowerCase,0,java.lang.String] +++$+++  CURLYSTART TYPE[String] VAR[java.lang.String] OP[assign]
CALL[java.lang.Class,newInstance,0,T] +++$+++  ELSE CURLYSTART VAR[java.lang.Object] OP[assign]
CALL[java.lang.reflect.Constructor,newInstance,3,T] PARA[LIT[Integer]] PARA[CALL[java.io.File,getAbsolutePath]] PARA[LIT[Boolean]] +++$+++  CURLYEND TYPE[Object] VAR[java.lang.Object] OP[assign]
CALL[java.lang.reflect.Field,getLong,1,long] PARA[VAR[java.lang.Object]] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.lang.reflect.Field,getLong,1,long] PARA[VAR[java.lang.Object]] +++$+++  NULL COMMA LEX[SWT.ICON] COMMA
CALL[java.lang.String,length,0,int] +++$+++  OP[assign] NULL OP[bitwiseAnd] OP[bitwiseAnd]
CALL[java.util.List,size,0,int] +++$+++  PARENTHESESSTART NEW TYPE[Integer] ARRAYSTART
CALL[java.util.ArrayList,clear,0,void] +++$+++  LEX[styled_text.setText] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.util.List,size,0,int] +++$+++  OP[assign] NULL OP[bitwiseOr] OP[bitwiseOr]
CALL[java.util.HashMap,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.HashMap,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND EOL
CALL[java.util.Iterator,hasNext,0,boolean] +++$+++  PARENTHESESEND EOL WHILE PARENTHESESSTART
CALL[java.lang.String,equals,1,boolean] PARA[VAR[java.lang.String]] +++$+++  VAR[java.lang.String] PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[LIT[Stirng]] +++$+++  VAR[java.lang.String] PARENTHESESEND EOL CURLYEND
CALL[java.util.List,add,1,boolean] PARA[CALL[java.util.List,get]] +++$+++  OP[assign] NULL PARENTHESESEND CURLYSTART
CALL[java.lang.String,toLowerCase,0,java.lang.String] +++$+++  LEX[false] EOL VAR[java.lang.String] OP[assign]
CALL[java.lang.String,length,0,int] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.util.List,size,0,int] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.util.List,iterator,0,java.util.Iterator<E>] +++$+++  ARRAYEND OP[greaterThan] VAR[java.util.Iterator] OP[assign]
CALL[org.gudy.azureus2.core3.util.AEThread2.JoinLock,wait,0,void] +++$+++  PARENTHESESEND CURLYSTART TRY CURLYSTART
CALL[java.nio.ByteBuffer,put,1,java.nio.ByteBuffer] PARA[VAR[java.nio.ByteBuffer]] +++$+++  LEX[saveBuffer.clear] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.io.ByteArrayOutputStream,toString,0,java.lang.String] +++$+++  PARENTHESESSTART PARENTHESESEND EOL RETURN
CALL[java.lang.Throwable,printStackTrace,0,void] +++$+++  OP[assign] NULL PARENTHESESEND CURLYSTART
CALL[java.util.Random,nextInt,0,int] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.String,charAt,1,char] PARA[LIT[Integer]] +++$+++  VAR[java.lang.String] OP[assign] LEX[Character.toUpperCase] PARENTHESESSTART
CALL[java.util.LinkedList,removeFirst,0,E] +++$+++  ELSE CURLYSTART RETURN PARENTHESESSTART
CALL[java.lang.String,toLowerCase,0,java.lang.String] +++$+++  PARENTHESESEND EOL VAR[java.lang.String] OP[assign]
CALL[java.net.URL,getDefaultPort,0,int] +++$+++  PARENTHESESEND CURLYSTART VAR[INT] OP[assign]
CALL[java.net.URL,getAuthority,0,java.lang.String] +++$+++  EOL TYPE[String] VAR[java.lang.String] OP[assign]
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND OP[greaterThan] PARENTHESESEND CURLYSTART
CALL[java.lang.String,length,0,int] +++$+++  LEX[Character.toLowerCase] PARENTHESESSTART LEX[val.charAt] PARENTHESESSTART
CALL[java.lang.String,length,0,int] +++$+++  OP[assign] LEX[val.substring] PARENTHESESSTART COMMA
CALL[java.util.List,iterator,0,java.util.Iterator<E>] +++$+++  CURLYSTART TYPE[Iterator] VAR[java.util.Iterator] OP[assign]
CALL[java.lang.ThreadLocal,get,0,T] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.lang.String,length,0,int] +++$+++  PARENTHESESSTART VAR[LONG] WHILE PARENTHESESSTART
CALL[java.util.Map.Entry,getValue,0,V] +++$+++  EOL TYPE[T] VAR[org.gudy.azureus2.core3.util.ConcurrentHashMapWrapper.T] OP[assign]
CALL[java.util.concurrent.ConcurrentHashMap,get,1,V] PARA[VAR[org.gudy.azureus2.core3.util.ConcurrentHashMapWrapper.S]] +++$+++  CURLYEND TYPE[T] VAR[org.gudy.azureus2.core3.util.ConcurrentHashMapWrapper.T] OP[assign]
CALL[java.util.Set,remove,1,boolean] PARA[VAR[org.gudy.azureus2.core3.util.ConcurrentHashMapWrapper.S]] +++$+++  VAR[org.gudy.azureus2.core3.util.ConcurrentHashMapWrapper.S] PARENTHESESEND PARENTHESESEND CURLYSTART
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  EOL CURLYEND LEX[base32.append] PARENTHESESSTART
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[CALL[java.lang.String,charAt]] +++$+++  OP[sum] OP[sum] EOL CURLYEND
CALL[java.util.WeakHashMap,get,1,V] PARA[VAR[java.lang.Thread]] +++$+++  PARENTHESESEND CURLYSTART RETURN PARENTHESESSTART
CALL[java.io.File,delete,0,boolean] +++$+++  VAR[BOOLEAN] OP[assign] LEX[false] EOL
CALL[java.lang.StringBuffer,length,0,int] +++$+++  OP[greaterThan] OP[assign] OP[bitwiseAnd] OP[bitwiseAnd]
CALL[java.io.FileInputStream,read,1,int] PARA[VAR[BYTE]] +++$+++  CURLYSTART INT VAR[INT] OP[assign]
CALL[java.io.ByteArrayOutputStream,toByteArray,0,byte[]] +++$+++  CURLYEND CURLYEND RETURN PARENTHESESSTART
CALL[java.lang.Throwable,printStackTrace,0,void] +++$+++  TYPE[Throwable] VAR[java.lang.Throwable] PARENTHESESEND CURLYSTART
CALL[java.lang.String,replaceAll,2,java.lang.String] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  TRY CURLYSTART VAR[java.lang.String] OP[assign]
CALL[java.util.StringTokenizer,nextToken,0,java.lang.String] +++$+++  VAR[INT] OP[assign] LEX[Integer.parseInt] PARENTHESESSTART
CALL[java.io.FileOutputStream,close,0,void] +++$+++  PARENTHESESEND CURLYSTART TRY CURLYSTART
CALL[java.util.Stack,peek,0,E] +++$+++  PARENTHESESEND CURLYSTART WHILE PARENTHESESSTART
CALL[java.lang.StringBuffer,toString,0,java.lang.String] +++$+++  NULL OP[ternaryTrue] NULL OP[ternaryFalse]
CALL[java.util.List,size,0,int] +++$+++  PARENTHESESEND EOL VAR[LONG] OP[assign]
CALL[java.util.Set,retainAll,1,boolean] PARA[VAR[java.util.List]] +++$+++  OP[assign] VAR[BYTE] EOL CURLYEND
CALL[java.lang.String,indexOf,2,int] PARA[VAR[java.lang.String]] PARA[VAR[INT]] +++$+++  CURLYSTART INT VAR[INT] OP[assign]
CALL[java.lang.String,endsWith,1,boolean] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART PARENTHESESEND OP[bitwiseAnd] OP[bitwiseAnd]
CALL[java.lang.String,length,0,int] +++$+++  PARENTHESESSTART LEX[key.substring] PARENTHESESSTART COMMA
CALL[java.lang.String,startsWith,1,boolean] PARA[VAR[java.lang.String]] +++$+++  VAR[java.lang.String] PARENTHESESEND CURLYSTART RETURN
CALL[java.io.InputStream,close,0,void] +++$+++  PARENTHESESSTART VAR[java.io.InputStream] PARENTHESESEND EOL
CALL[java.util.Map,size,0,int] +++$+++  PARENTHESESSTART VAR[java.util.Locale] OP[sum] OP[sum]
CALL[java.util.List,size,0,int] +++$+++  OP[assign] NEW TYPE[String] ARRAYSTART
CALL[java.util.StringTokenizer,nextToken,0,java.lang.String] +++$+++  CURLYSTART TYPE[String] VAR[java.lang.String] OP[assign]
CALL[java.lang.String,substring,1,java.lang.String] PARA[VAR[INT]] +++$+++  PARENTHESESEND EOL VAR[java.lang.String] OP[assign]
CALL[java.lang.String,endsWith,1,boolean] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART PARENTHESESEND OP[bitwiseAnd] OP[bitwiseAnd]
CALL[java.lang.String,equalsIgnoreCase,1,boolean] PARA[VAR[java.lang.String]] +++$+++  EOL BOOLEAN VAR[BOOLEAN] OP[assign]
CALL[java.util.Map,containsKey,1,boolean] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESEND CURLYSTART RETURN PARENTHESESSTART
CALL[java.lang.String,indexOf,1,int] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.util.Iterator,next,0,E] +++$+++  PARENTHESESSTART PARENTHESESSTART TYPE[TRTrackerServer] PARENTHESESEND
CALL[java.io.InputStream,read,0,int] +++$+++  PARENTHESESSTART VAR[BYTE] OP[not] OP[assign]
CALL[java.lang.String,equals,1,boolean] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.net.URL,getHost,0,java.lang.String] +++$+++  PARENTHESESSTART PARENTHESESEND OP[sum] OP[sum]
CALL[java.net.URL,getHost,0,java.lang.String] +++$+++  PARENTHESESSTART PARENTHESESEND OP[sum] OP[sum]
CALL[java.net.URL,getPort,0,int] +++$+++  PARENTHESESSTART PARENTHESESEND OP[sum] OP[sum]
CALL[java.util.Map,remove,1,V] PARA[VAR[java.lang.String]] +++$+++  OP[assign] NULL PARENTHESESEND CURLYSTART
CALL[java.io.ByteArrayOutputStream,write,3,void] PARA[VAR[BYTE]] PARA[LIT[Integer]] PARA[VAR[INT]] +++$+++  CURLYSTART BREAK EOL CURLYEND
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.lang.String]] +++$+++  STRING VAR[java.lang.String] PARENTHESESEND CURLYSTART
CALL[java.lang.String,trim,0,java.lang.String] +++$+++  PARENTHESESEND CURLYSTART VAR[java.lang.String] OP[assign]
CALL[java.io.ObjectInputStream,readObject,0,java.lang.Object] +++$+++  EOL TYPE[Object] VAR[java.lang.Object] OP[assign]
CALL[java.math.BigInteger,negate,0,java.math.BigInteger] +++$+++  RETURN NEW TYPE[SimpleBigDecimal] PARENTHESESSTART
CALL[java.math.BigInteger,equals,1,boolean] PARA[FIELD[org.gudy.bouncycastle.math.ec.SimpleBigDecimal]] +++$+++  EOL RETURN PARENTHESESSTART PARENTHESESSTART
CALL[java.util.List,iterator,0,java.util.Iterator<E>] +++$+++  CURLYSTART TYPE[Iterator] VAR[java.util.Iterator] OP[assign]
CALL[java.io.ByteArrayOutputStream,toByteArray,0,byte[]] +++$+++  RETURN NEW TYPE[X500Principal] PARENTHESESSTART
CALL[java.lang.String,length,0,int] +++$+++  VAR[BYTE] ARRAYSTART LEX[data.charAt] PARENTHESESSTART
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  VAR[BYTE] OP[assign] VAR[BYTE] ARRAYSTART
CALL[java.lang.String,length,0,int] +++$+++  VAR[BYTE] ARRAYSTART LEX[data.charAt] PARENTHESESSTART
CALL[java.math.BigInteger,compareTo,1,int] PARA[VAR[java.math.BigInteger]] +++$+++  EOL CURLYEND IF PARENTHESESSTART
CALL[java.math.BigInteger,compareTo,1,int] PARA[VAR[java.math.BigInteger]] +++$+++  EOL CURLYEND IF PARENTHESESSTART
CALL[java.io.ByteArrayOutputStream,write,1,void] PARA[VAR[CHAR]] +++$+++  OP[lessThan] LEX[x0080] PARENTHESESEND CURLYSTART
CALL[java.lang.String,indexOf,1,int] PARA[VAR[CHAR]] +++$+++  CURLYSTART INT VAR[INT] OP[assign]
CALL[java.util.Hashtable,get,1,V] PARA[VAR[java.lang.String]] +++$+++  OP[assign] PARENTHESESSTART TYPE[DERObjectIdentifier] PARENTHESESEND
CALL[java.util.Vector,size,0,int] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.String,length,0,int] +++$+++  NEW BYTE ARRAYSTART PARENTHESESSTART
CALL[java.util.Hashtable,keys,0,java.util.Enumeration<K>] +++$+++  CURLYSTART TYPE[Enumeration] VAR[java.util.Enumeration] OP[assign]
CALL[java.util.List,iterator,0,java.util.Iterator<E>] +++$+++  PARENTHESESEND EOL CURLYEND RETURN
CALL[java.io.InputStream,close,0,void] +++$+++  OP[assign] NULL PARENTHESESEND CURLYSTART
CALL[java.lang.StringBuilder,toString,0,java.lang.String] +++$+++  PARENTHESESSTART NEW TYPE[BigInteger] PARENTHESESSTART
CALL[java.lang.String,lastIndexOf,1,int] PARA[LIT[Character]] +++$+++  EOL INT VAR[INT] OP[assign]
CALL[java.awt.event.MouseListener,mouseReleased,1,void] PARA[CALL[null,convertMouseEvent]] +++$+++  LEX[MouseEvent] VAR[java.awt.event.MouseEvent] PARENTHESESEND CURLYSTART
CALL[java.awt.event.MouseListener,mouseExited,1,void] PARA[CALL[null,convertMouseEvent]] +++$+++  LEX[MouseEvent] VAR[java.awt.event.MouseEvent] PARENTHESESEND CURLYSTART
CALL[java.awt.event.MouseListener,mouseClicked,1,void] PARA[CALL[null,convertMouseEvent]] +++$+++  LEX[MouseEvent] VAR[java.awt.event.MouseEvent] PARENTHESESEND CURLYSTART
CALL[javax.swing.JComboBox,getSelectedItem,0,java.lang.Object] +++$+++  OP[ternaryTrue] PARENTHESESSTART TYPE[AspectRatio] PARENTHESESEND
CALL[javax.swing.JSlider,getMinimum,0,int] +++$+++  PARENTHESESEND CURLYSTART LEX[qualitySlider.setValue] PARENTHESESSTART
CALL[java.awt.print.PrinterJob,validatePage,1,java.awt.print.PageFormat] PARA[VAR[java.awt.print.PageFormat]] +++$+++  PARENTHESESEND EOL VAR[java.awt.print.PageFormat] OP[assign]
CALL[java.awt.print.PrinterJob,defaultPage,0,java.awt.print.PageFormat] +++$+++  NULL PARENTHESESEND CURLYSTART RETURN
CALL[java.awt.geom.GeneralPath,reset,0,void] +++$+++  VAR[java.awt.geom.GeneralPath] PARENTHESESEND PARENTHESESEND EOL
CALL[java.awt.geom.GeneralPath,lineTo,2,void] PARA[VAR[FLOAT]] PARA[VAR[FLOAT]] +++$+++  COMMA VAR[FLOAT] PARENTHESESEND EOL
CALL[java.util.Map,remove,1,V] PARA[VAR[com.eteks.sweethome3d.j3d.TextureManager.RotatedContentKey]] +++$+++  TYPE[TextureObserver] OP[greaterThan] VAR[java.util.List] OP[assign]
CALL[javax.swing.JMenu,getMenuComponentCount,0,int] +++$+++  PARENTHESESSTART INT VAR[INT] OP[assign]
CALL[java.lang.String,split,1,java.lang.String[]] PARA[LIT[Stirng]] +++$+++  ARRAYSTART ARRAYEND VAR[java.lang.String] OP[assign]
CALL[java.net.URL,openConnection,0,java.net.URLConnection] +++$+++  TRY CURLYSTART VAR[java.net.URLConnection] OP[assign]
CALL[java.util.Vector,setElementAt,2,void] PARA[VAR[java.lang.Object]] PARA[VAR[INT]] +++$+++  OP[sub] VAR[INT] PARENTHESESEND EOL
CALL[java.io.IOException,printStackTrace,0,void] +++$+++  TYPE[IOException] VAR[java.io.IOException] PARENTHESESEND CURLYSTART
CALL[javax.swing.JButton,setName,1,void] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESSTART VAR[java.lang.String] PARENTHESESEND EOL
CALL[javax.swing.JButton,setActionCommand,1,void] PARA[VAR[java.lang.String]] +++$+++  TYPE[JButton] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.lang.String,isEmpty,0,boolean] +++$+++  OP[assign] NULL OP[bitwiseOr] OP[bitwiseOr]
CALL[java.io.BufferedInputStream,read,0,int] +++$+++  PARENTHESESEND EOL VAR[INT] OP[assign]
CALL[java.io.File,length,0,long] +++$+++  PARENTHESESSTART PARENTHESESEND OP[not] OP[assign]
CALL[java.util.ResourceBundle,getString,1,java.lang.String] PARA[VAR[java.lang.String]] +++$+++  TRY CURLYSTART VAR[java.lang.String] OP[assign]
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.awt.Color]] +++$+++  COMMA VAR[java.awt.Color] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.awt.Color]] +++$+++  COMMA VAR[java.awt.Color] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.awt.Color]] +++$+++  COMMA VAR[java.awt.Color] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.awt.Color]] +++$+++  COMMA VAR[java.awt.Color] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.awt.Color]] +++$+++  COMMA VAR[java.awt.Color] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.awt.Color]] +++$+++  COMMA VAR[java.awt.Color] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.awt.Color]] +++$+++  COMMA VAR[java.awt.Color] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.awt.Color]] +++$+++  COMMA VAR[java.awt.Color] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.awt.Color]] +++$+++  COMMA VAR[java.awt.Color] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.awt.Color]] +++$+++  COMMA VAR[java.awt.Color] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.awt.Color]] +++$+++  COMMA VAR[java.awt.Color] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.awt.Color]] +++$+++  COMMA VAR[java.awt.Color] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.awt.Color]] +++$+++  COMMA VAR[java.awt.Color] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.awt.Color]] +++$+++  COMMA VAR[java.awt.Color] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.awt.Color]] +++$+++  COMMA VAR[java.awt.Color] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.awt.Color]] +++$+++  COMMA VAR[java.awt.Color] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.awt.Color]] +++$+++  COMMA VAR[java.awt.Color] PARENTHESESEND EOL
CALL[java.util.Map,clear,0,void] +++$+++  LEX[createNameColourHashTable] PARENTHESESSTART PARENTHESESEND CURLYSTART
CALL[java.util.Map,put,2,V] PARA[VAR[java.awt.Color]] PARA[VAR[java.lang.String]] +++$+++  COMMA VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.awt.Color]] PARA[VAR[java.lang.String]] +++$+++  COMMA VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.awt.Color]] PARA[VAR[java.lang.String]] +++$+++  COMMA VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.awt.Color]] PARA[VAR[java.lang.String]] +++$+++  COMMA VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.awt.Color]] PARA[VAR[java.lang.String]] +++$+++  COMMA VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.awt.Color]] PARA[VAR[java.lang.String]] +++$+++  COMMA VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.awt.Color]] PARA[VAR[java.lang.String]] +++$+++  COMMA VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.awt.Color]] PARA[VAR[java.lang.String]] +++$+++  COMMA VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.awt.Color]] PARA[VAR[java.lang.String]] +++$+++  COMMA VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.awt.Color]] PARA[VAR[java.lang.String]] +++$+++  COMMA VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.awt.Color]] PARA[VAR[java.lang.String]] +++$+++  COMMA VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.awt.Color]] PARA[VAR[java.lang.String]] +++$+++  COMMA VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.awt.Color]] PARA[VAR[java.lang.String]] +++$+++  COMMA VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.awt.Color]] PARA[VAR[java.lang.String]] +++$+++  COMMA VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.awt.Color]] PARA[VAR[java.lang.String]] +++$+++  COMMA VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.awt.Color]] PARA[VAR[java.lang.String]] +++$+++  COMMA VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.awt.Color,getGreen,0,int] +++$+++  VAR[java.lang.String] OP[assign] LEX[Integer.toHexString] PARENTHESESSTART
CALL[java.awt.Color,getBlue,0,int] +++$+++  VAR[java.lang.String] OP[assign] LEX[Integer.toHexString] PARENTHESESSTART
CALL[java.util.Deque,pop,0,E] +++$+++  PARENTHESESSTART PARENTHESESEND EOL RETURN
CALL[java.lang.String,equals,1,boolean] PARA[VAR[java.lang.String]] +++$+++  NULL OP[bitwiseAnd] OP[bitwiseAnd] PARENTHESESSTART
CALL[java.lang.String,equals,1,boolean] PARA[VAR[java.lang.String]] +++$+++  VAR[java.lang.String] PARENTHESESEND OP[bitwiseOr] OP[bitwiseOr]
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.awt.Color]] +++$+++  COMMA VAR[java.awt.Color] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.awt.Color]] +++$+++  COMMA VAR[java.awt.Color] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.awt.Color]] +++$+++  COMMA VAR[java.awt.Color] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.awt.Color]] +++$+++  COMMA VAR[java.awt.Color] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.awt.Color]] +++$+++  COMMA VAR[java.awt.Color] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.awt.Color]] +++$+++  COMMA VAR[java.awt.Color] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.awt.Color]] +++$+++  COMMA VAR[java.awt.Color] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.awt.Color]] +++$+++  COMMA VAR[java.awt.Color] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.awt.Color]] +++$+++  COMMA VAR[java.awt.Color] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.awt.Color]] +++$+++  COMMA VAR[java.awt.Color] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.awt.Color]] PARA[VAR[java.lang.String]] +++$+++  COMMA VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.awt.Color]] PARA[VAR[java.lang.String]] +++$+++  COMMA VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.awt.Color]] PARA[VAR[java.lang.String]] +++$+++  COMMA VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.awt.Color]] PARA[VAR[java.lang.String]] +++$+++  COMMA VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.util.Map,get,1,V] PARA[VAR[java.lang.String]] +++$+++  NULL PARENTHESESEND VAR[java.awt.Color] OP[assign]
CALL[java.awt.geom.Point2D.Float,setLocation,2,void] PARA[LIT[Double]] PARA[LIT[Double]] +++$+++  COMMA LEX[f] PARENTHESESEND EOL
CALL[java.lang.String,replace,2,java.lang.String] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND EOL VAR[java.lang.String] OP[assign]
CALL[java.lang.String,replace,2,java.lang.String] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND EOL VAR[java.lang.String] OP[assign]
CALL[java.lang.String,replace,2,java.lang.String] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND EOL VAR[java.lang.String] OP[assign]
CALL[java.lang.String,replace,2,java.lang.String] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND EOL VAR[java.lang.String] OP[assign]
CALL[java.lang.String,replace,2,java.lang.String] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND EOL VAR[java.lang.String] OP[assign]
CALL[java.lang.String,replace,2,java.lang.String] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND EOL VAR[java.lang.String] OP[assign]
CALL[java.lang.String,replace,2,java.lang.String] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND EOL VAR[java.lang.String] OP[assign]
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND EOL ELSE CURLYSTART
CALL[java.lang.StringBuffer,toString,0,java.lang.String] +++$+++  COMMA PARENTHESESEND EOL RETURN
CALL[java.lang.Class,getName,0,java.lang.String] +++$+++  FINAL TYPE[String] VAR[java.lang.String] OP[assign]
CALL[java.lang.String,lastIndexOf,1,int] PARA[LIT[Character]] +++$+++  RETURN LEX[clazzName.substring] PARENTHESESSTART COMMA
CALL[java.lang.String,substring,2,java.lang.String] PARA[LIT[Integer]] PARA[CALL[java.lang.String,lastIndexOf]] +++$+++  PARENTHESESSTART PARENTHESESEND EOL RETURN
CALL[java.util.ArrayList,add,1,boolean] PARA[VAR[java.lang.String]] +++$+++  STRING VAR[java.lang.String] PARENTHESESEND CURLYSTART
CALL[java.lang.StringBuffer,toString,0,java.lang.String] +++$+++  VAR[CHAR] EOL CURLYEND RETURN
CALL[java.lang.String,substring,1,java.lang.String] PARA[VAR[INT]] +++$+++  COMMA VAR[INT] PARENTHESESEND OP[ternaryFalse]
CALL[java.lang.String,length,0,int] +++$+++  OP[assign] NULL OP[bitwiseOr] OP[bitwiseOr]
CALL[java.lang.StringBuilder,toString,0,java.lang.String] +++$+++  EOL CURLYEND CURLYEND RETURN
CALL[java.lang.String,charAt,1,char] PARA[LIT[Integer]] +++$+++  IF PARENTHESESSTART LEX[Character.isJavaIdentifierStart] PARENTHESESSTART
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  PARENTHESESEND CURLYSTART LEX[buf.append] PARENTHESESSTART
CALL[java.io.ByteArrayInputStream,close,0,void] +++$+++  EOL CURLYEND CURLYEND EOL
CALL[java.util.ArrayList,get,1,E] PARA[VAR[INT]] +++$+++  VAR[INT] PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.String,length,0,int] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.util.ArrayList,get,1,E] PARA[LIT[Integer]] +++$+++  CURLYSTART TYPE[String] VAR[java.lang.String] OP[assign]
CALL[java.util.ArrayList,get,1,E] PARA[VAR[INT]] +++$+++  FINAL TYPE[AbstractButton] VAR[javax.swing.AbstractButton] OP[assign]
CALL[javax.swing.AbstractButton,getAction,0,javax.swing.Action] +++$+++  CURLYSTART TYPE[Action] VAR[javax.swing.Action] OP[assign]
CALL[javax.swing.JPanel,add,2,void] PARA[VAR[javax.swing.JRadioButton]] PARA[VAR[java.awt.GridBagConstraints]] +++$+++  COMMA COMMA PARENTHESESEND EOL
CALL[javax.swing.ButtonGroup,add,1,void] PARA[VAR[javax.swing.JRadioButton]] +++$+++  TYPE[ButtonGroup] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.util.ArrayList,size,0,int] +++$+++  PARENTHESESSTART NEW TYPE[Object] ARRAYSTART
CALL[java.awt.Component,setCursor,1,void] PARA[CALL[null,getPredefinedCursor]] +++$+++  LEX[restore] PARENTHESESSTART PARENTHESESEND CURLYSTART
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[LIT[Stirng]] +++$+++  OP[sum] VAR[INT] PARENTHESESEND CURLYSTART
CALL[javax.swing.table.TableCellRenderer,getTableCellRendererComponent,6,java.awt.Component] PARA[VAR[javax.swing.JTable]] PARA[VAR[java.lang.Object]] PARA[VAR[BOOLEAN]] PARA[VAR[BOOLEAN]] PARA[VAR[INT]] PARA[VAR[INT]] +++$+++  EOL TYPE[Component] VAR[java.awt.Component] OP[assign]
CALL[java.awt.Point,setLocation,2,void] PARA[VAR[INT]] PARA[VAR[INT]] +++$+++  RETURN LEX[false] EOL CURLYEND
CALL[java.awt.event.MouseEvent,getY,0,int] +++$+++  LEX[evt.getX] PARENTHESESSTART PARENTHESESEND COMMA
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART VAR[INT] PARENTHESESEND EOL
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND EOL
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[VAR[CHAR]] +++$+++  VAR[CHAR] PARENTHESESEND EOL CURLYEND
CALL[java.sql.SQLException,getMessage,0,java.lang.String] +++$+++  LEX[s_log.debug] PARENTHESESSTART OP[sum] OP[sum]
CALL[java.lang.Integer,intValue,0,int] +++$+++  TRY CURLYSTART LEX[conn.setTransactionIsolation] PARENTHESESSTART
CALL[java.lang.String,length,0,int] +++$+++  IF PARENTHESESSTART OP[assign] OP[assign]
CALL[java.io.File,getPath,0,java.lang.String] +++$+++  RETURN NEW TYPE[File] PARENTHESESSTART
CALL[java.lang.String,startsWith,1,boolean] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.lang.String,startsWith,1,boolean] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART PARENTHESESEND OP[bitwiseOr] OP[bitwiseOr]
CALL[java.lang.String,length,0,int] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[javax.swing.JCheckBox,setName,1,void] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART LEX[i18n.USE_CUSTOM_QT_LABEL] PARENTHESESEND EOL
CALL[javax.swing.JPanel,add,2,void] PARA[VAR[javax.swing.JTextField]] PARA[VAR[java.awt.GridBagConstraints]] +++$+++  PARENTHESESSTART LEX[i18n.STMT_SEP_LABEL_TT] PARENTHESESEND EOL
CALL[javax.swing.JCheckBox,isSelected,0,boolean] +++$+++  EOL CURLYEND LEX[_prefs.setInstallCustomQueryTokenizer] PARENTHESESSTART
CALL[javax.swing.JTextField,setEnabled,1,void] PARA[LIT[Boolean]] +++$+++  PARENTHESESSTART LEX[false] PARENTHESESEND EOL
CALL[javax.swing.JTextField,setEnabled,1,void] PARA[LIT[Boolean]] +++$+++  PARENTHESESSTART LEX[false] PARENTHESESEND EOL
CALL[javax.swing.JList,setSelectedIndex,1,void] PARA[LIT[Integer]] +++$+++  LEX[wikiConfigList.getSelectedIndex] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.awt.Graphics,setColor,1,void] PARA[VAR[java.awt.Color]] +++$+++  INT VAR[INT] PARENTHESESEND CURLYSTART
CALL[javax.swing.ButtonGroup,add,1,void] PARA[VAR[javax.swing.JRadioButton]] +++$+++  PARENTHESESSTART VAR[javax.swing.JRadioButton] PARENTHESESEND EOL
CALL[javax.swing.JTextField,getText,0,java.lang.String] +++$+++  PARENTHESESEND EOL LEX[proxySettings.setHttpProxyUser] PARENTHESESSTART
CALL[javax.swing.JLabel,setEnabled,1,void] PARA[VAR[BOOLEAN]] +++$+++  PARENTHESESSTART VAR[BOOLEAN] PARENTHESESEND EOL
CALL[javax.swing.JTextField,setEnabled,1,void] PARA[VAR[BOOLEAN]] +++$+++  PARENTHESESSTART VAR[BOOLEAN] PARENTHESESEND EOL
CALL[javax.swing.JPanel,add,2,void] PARA[VAR[javax.swing.JTextField]] PARA[VAR[java.awt.GridBagConstraints]] +++$+++  EOL FIELD[weightx,java.awt.GridBagConstraints] OP[assign] EOL
CALL[javax.swing.JPanel,add,2,void] PARA[VAR[javax.swing.JTextField]] PARA[VAR[java.awt.GridBagConstraints]] +++$+++  OP[sum] OP[sum] FIELD[gridy,java.awt.GridBagConstraints] EOL
CALL[javax.swing.JTextField,setEnabled,1,void] PARA[CALL[javax.swing.JCheckBox,isSelected]] +++$+++  LEX[onSetMaxAdjustLen] PARENTHESESSTART PARENTHESESEND CURLYSTART
CALL[javax.swing.JTextField,getText,0,java.lang.String] +++$+++  VAR[INT] OP[assign] LEX[Integer.parseInt] PARENTHESESSTART
CALL[javax.swing.JTabbedPane,removeNotify,0,void] +++$+++  LEX[removeNotify] PARENTHESESSTART PARENTHESESEND CURLYSTART
CALL[net.sourceforge.squirrel_sql.client.gui.AboutBoxDialog,setVisible,1,void] PARA[LIT[Boolean]] +++$+++  LEX[app] PARENTHESESEND EOL CURLYEND
CALL[java.lang.StringBuffer,toString,0,java.lang.String] +++$+++  EOL CURLYEND CURLYEND RETURN
CALL[java.lang.Class,getName,0,java.lang.String] +++$+++  CURLYSTART LEX[s_log.error] PARENTHESESSTART OP[sum]
CALL[java.io.File,renameTo,1,boolean] PARA[VAR[java.io.File]] +++$+++  EOL CURLYEND TRY CURLYSTART
CALL[javax.swing.JPanel,add,2,void] PARA[VAR[javax.swing.JLabel]] PARA[VAR[java.awt.GridBagConstraints]] +++$+++  COMMA COMMA PARENTHESESEND EOL
CALL[javax.swing.JCheckBox,isSelected,0,boolean] +++$+++  PARENTHESESEND EOL LEX[executeLabel.setEnabled] PARENTHESESSTART
CALL[javax.swing.tree.DefaultMutableTreeNode,getPath,0,javax.swing.tree.TreeNode[]] +++$+++  PARENTHESESSTART NEW TYPE[TreePath] PARENTHESESSTART
CALL[java.util.ArrayList,addAll,1,boolean] PARA[CALL[null,asList]] +++$+++  VAR[java.lang.String] PARENTHESESEND PARENTHESESEND EOL
CALL[java.util.ArrayList,size,0,int] +++$+++  PARENTHESESSTART NEW TYPE[String] ARRAYSTART
CALL[javax.swing.JPanel,getComponents,0,java.awt.Component[]] +++$+++  PARENTHESESSTART TYPE[Component] VAR[java.awt.Component] OP[ternaryFalse]
CALL[java.io.File,getName,0,java.lang.String] +++$+++  OP[sum] LEX[s_stringMgr.getString] PARENTHESESSTART COMMA
CALL[java.io.File,getAbsolutePath,0,java.lang.String] +++$+++  OP[sum] LEX[s_stringMgr.getString] PARENTHESESSTART COMMA
CALL[java.awt.Graphics2D,drawString,3,void] PARA[VAR[java.lang.String]] PARA[VAR[INT]] PARA[VAR[INT]] +++$+++  PARENTHESESSTART VAR[java.awt.Color] PARENTHESESEND EOL
CALL[java.awt.SplashScreen,update,0,void] +++$+++  COMMA VAR[INT] PARENTHESESEND EOL
CALL[javax.swing.JTree,expandPath,1,void] PARA[VAR[javax.swing.tree.TreePath]] +++$+++  OP[assign] NULL PARENTHESESEND CURLYSTART
CALL[javax.swing.JFileChooser,getFileFilter,0,javax.swing.filechooser.FileFilter] +++$+++  CURLYSTART RETURN LEX[_fileAppenixes.get] PARENTHESESSTART
CALL[javax.swing.ListModel,getElementAt,1,E] PARA[VAR[INT]] +++$+++  OP[assign] PARENTHESESSTART TYPE[String] PARENTHESESEND
CALL[javax.swing.ListModel,getSize,0,int] +++$+++  OP[assign] EOL VAR[INT] OP[lessThan]
CALL[javax.swing.JList,setListData,1,void] PARA[CALL[java.util.SortedSet,toArray]] +++$+++  VAR[java.lang.String] PARENTHESESEND EOL CURLYEND
CALL[javax.swing.ListModel,getElementAt,1,E] PARA[VAR[INT]] +++$+++  OP[assign] PARENTHESESSTART TYPE[String] PARENTHESESEND
CALL[javax.swing.JPanel,add,2,void] PARA[VAR[javax.swing.JCheckBox]] PARA[VAR[java.awt.GridBagConstraints]] +++$+++  COMMA COMMA PARENTHESESEND EOL
CALL[java.util.Date,getTime,0,long] +++$+++  LEX[_resultsProcessingEnd.getTime] PARENTHESESSTART PARENTHESESEND OP[sub]
CALL[java.util.List,clear,0,void] +++$+++  LEX[_procedureInfosBySimpleName.clear] PARENTHESESSTART PARENTHESESEND EOL
CALL[javax.swing.JPanel,add,2,void] PARA[VAR[javax.swing.JTextField]] PARA[VAR[java.awt.GridBagConstraints]] +++$+++  LEX[txtExecTimeCounter.setColumns] PARENTHESESSTART PARENTHESESEND EOL
CALL[javax.swing.MutableComboBoxModel,getSize,0,int] +++$+++  OP[assign] EOL VAR[INT] OP[lessThan]
CALL[javax.swing.JLabel,setText,1,void] PARA[CALL[null,valueOf]] +++$+++  INT VAR[INT] PARENTHESESEND CURLYSTART
CALL[java.lang.String,substring,2,java.lang.String] PARA[LIT[Integer]] PARA[CALL[java.lang.String,lastIndexOf]] +++$+++  PARENTHESESEND CURLYSTART VAR[java.lang.String] OP[assign]
CALL[java.lang.String,lastIndexOf,1,int] PARA[LIT[Stirng]] +++$+++  OP[assign] LEX[key.substring] PARENTHESESSTART COMMA
CALL[javax.swing.JTextPane,setText,1,void] PARA[LIT[Stirng]] +++$+++  COMMA PARENTHESESEND PARENTHESESEND EOL
CALL[javax.swing.JFrame,setVisible,1,void] PARA[LIT[Boolean]] +++$+++  LEX[frame.pack] PARENTHESESSTART PARENTHESESEND EOL
CALL[javax.swing.JComboBox,setModel,1,void] PARA[VAR[javax.swing.DefaultComboBoxModel]] +++$+++  VAR[BOOLEAN] PARENTHESESEND PARENTHESESEND EOL
CALL[java.lang.Double,compareTo,1,int] PARA[FIELD[net.sourceforge.squirrel_sql.client.session.mainpanel.overview.XYPair]] +++$+++  VAR[net.sourceforge.squirrel_sql.client.session.mainpanel.overview.XYPair] PARENTHESESEND CURLYSTART RETURN
CALL[javax.swing.JPopupMenu,add,1,javax.swing.JMenuItem] PARA[VAR[javax.swing.JMenuItem]] +++$+++  CURLYEND CURLYEND PARENTHESESEND EOL
CALL[java.lang.String,charAt,1,char] PARA[LIT[Integer]] +++$+++  PARENTHESESEND EOL VAR[INT] OP[assign]
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  LEX[Math.min] PARENTHESESSTART VAR[INT] COMMA
CALL[java.util.ArrayList,get,1,E] PARA[VAR[INT]] +++$+++  CURLYSTART RETURN LEX[_rows.get] PARENTHESESSTART
CALL[java.util.ArrayList,get,1,E] PARA[VAR[INT]] +++$+++  VAR[INT] PARENTHESESEND CURLYSTART RETURN
CALL[java.util.ArrayList,get,1,E] PARA[LIT[Integer]] +++$+++  CURLYSTART RETURN LEX[_rows.get] PARENTHESESSTART
CALL[java.util.List,get,1,E] PARA[CALL[java.util.ArrayList,get]] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.Throwable,getMessage,0,java.lang.String] +++$+++  OP[sum] VAR[java.lang.String] OP[sum] OP[sum]
CALL[java.lang.String,substring,2,java.lang.String] PARA[VAR[INT]] PARA[VAR[INT]] +++$+++  CURLYEND RETURN LEX[keyWord.equalsIgnoreCase] PARENTHESESSTART
CALL[java.lang.String,indexOf,2,int] PARA[LIT[Character]] PARA[VAR[INT]] +++$+++  LEX[Integer.MAX_VALUE] EOL VAR[INT] OP[assign]
CALL[java.util.ArrayList,add,1,boolean] PARA[VAR[java.lang.String]] +++$+++  LEX[Object] VAR[java.lang.Object] PARENTHESESEND CURLYSTART
CALL[java.util.ArrayList,add,1,boolean] PARA[VAR[java.lang.Object]] +++$+++  PARENTHESESSTART VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.net.MalformedURLException,printStackTrace,0,void] +++$+++  TYPE[MalformedURLException] VAR[java.lang.Exception] PARENTHESESEND CURLYSTART
CALL[java.net.InetAddress,getAddress,0,byte[]] +++$+++  ARRAYSTART ARRAYEND VAR[BYTE] OP[assign]
CALL[java.net.InetAddress,getAddress,0,byte[]] +++$+++  ARRAYSTART ARRAYEND VAR[BYTE] OP[assign]
CALL[java.lang.Exception,getCause,0,java.lang.Throwable] +++$+++  VAR[java.lang.Exception] INSTANCEOF TYPE[InvocationTargetException] OP[ternaryTrue]
CALL[java.util.List,iterator,0,java.util.Iterator<E>] +++$+++  NULL OP[ternaryTrue] NULL OP[ternaryFalse]
CALL[java.util.List,add,1,boolean] PARA[VAR[java.lang.Integer]] +++$+++  OP[greaterThan] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.util.prefs.Preferences,putBoolean,2,void] PARA[LIT[Stirng]] PARA[VAR[BOOLEAN]] +++$+++  LEX[store] PARENTHESESSTART PARENTHESESEND CURLYSTART
CALL[java.util.prefs.Preferences,put,2,void] PARA[LIT[Stirng]] PARA[CALL[net.azib.ipscan.config.GUIConfig.DisplayMethod,toString]] +++$+++  COMMA VAR[INT] PARENTHESESEND EOL
CALL[java.util.prefs.Preferences,putInt,2,void] PARA[LIT[Stirng]] PARA[VAR[INT]] +++$+++  COMMA VAR[INT] PARENTHESESEND EOL
CALL[java.util.prefs.Preferences,put,2,void] PARA[LIT[Stirng]] PARA[VAR[java.lang.String]] +++$+++  LEX[store] PARENTHESESSTART PARENTHESESEND CURLYSTART
CALL[java.util.Map,get,1,V] PARA[VAR[java.lang.String]] +++$+++  CURLYSTART TYPE[Object] VAR[java.lang.Object] OP[assign]
CALL[java.lang.String,startsWith,1,boolean] PARA[LIT[Stirng]] +++$+++  CURLYEND ELSE IF PARENTHESESSTART
CALL[java.util.StringTokenizer,nextToken,1,java.lang.String] PARA[LIT[Stirng]] +++$+++  LEX[tokenizer.nextToken] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.lang.String,concat,1,java.lang.String] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESEND EOL VAR[java.lang.String] OP[assign]
CALL[java.lang.Exception,getMessage,0,java.lang.String] +++$+++  OP[assign] NEW TYPE[SQLException] PARENTHESESSTART
CALL[java.io.InputStream,close,0,void] +++$+++  FINALLY CURLYSTART TRY CURLYSTART
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Character]] +++$+++  PARENTHESESSTART VAR[BOOLEAN] PARENTHESESEND CURLYSTART
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Character]] +++$+++  PARENTHESESSTART VAR[BOOLEAN] PARENTHESESEND CURLYSTART
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Character]] +++$+++  PARENTHESESSTART VAR[BOOLEAN] PARENTHESESEND CURLYSTART
CALL[java.lang.StringBuilder,toString,0,java.lang.String] +++$+++  PARENTHESESEND EOL CURLYEND RETURN
CALL[java.lang.ref.WeakReference,get,0,T] +++$+++  EOL TYPE[C] VAR[org.python.modules._io.Closer.C] OP[assign]
CALL[java.util.List,add,1,boolean] PARA[VAR[org.python.modules._weakref.GlobalRef]] +++$+++  PARENTHESESSTART VAR[java.util.List] PARENTHESESEND CURLYSTART
CALL[java.util.List,isEmpty,0,boolean] +++$+++  NULL OP[bitwiseAnd] OP[bitwiseAnd] OP[not]
CALL[java.lang.Thread,start,0,void] +++$+++  PARENTHESESSTART LEX[true] PARENTHESESEND EOL
CALL[java.util.List,remove,1,boolean] PARA[VAR[java.lang.Runnable]] +++$+++  CURLYSTART BOOLEAN VAR[BOOLEAN] OP[assign]
CALL[java.util.List,isEmpty,0,boolean] +++$+++  PARENTHESESSTART VAR[BOOLEAN] OP[bitwiseAnd] OP[bitwiseAnd]
CALL[java.lang.StringBuilder,toString,0,java.lang.String] +++$+++  RETURN NEW TYPE[PyString] PARENTHESESSTART
CALL[java.lang.String,length,0,int] +++$+++  LEX[codecs.PyUnicode_EncodeASCII] PARENTHESESSTART VAR[java.lang.String] COMMA
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  EOL CHAR VAR[CHAR] OP[assign]
CALL[java.util.Vector,elementAt,1,E] PARA[VAR[INT]] +++$+++  CURLYSTART TYPE[Short] VAR[java.lang.Short] OP[assign]
CALL[java.io.DataOutputStream,writeShort,1,void] PARA[CALL[java.lang.Short,shortValue]] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND EOL
CALL[java.lang.String,indexOf,1,int] PARA[LIT[Character]] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.lang.String,substring,2,java.lang.String] PARA[VAR[INT]] PARA[VAR[INT]] +++$+++  PARENTHESESEND CURLYSTART LEX[buf.append] PARENTHESESSTART
CALL[java.lang.String,replace,2,java.lang.String] PARA[LIT[Character]] PARA[LIT[Character]] +++$+++  VAR[java.lang.String] PARENTHESESEND CURLYSTART RETURN
CALL[java.util.Properties,setProperty,2,java.lang.Object] PARA[VAR[java.lang.String]] PARA[VAR[java.lang.String]] +++$+++  EOL CURLYEND ELSE CURLYSTART
CALL[java.io.BufferedReader,close,0,void] +++$+++  OP[assign] NULL PARENTHESESEND CURLYSTART
CALL[java.lang.String,getBytes,1,byte[]] PARA[LIT[Stirng]] +++$+++  CURLYSTART TRY CURLYSTART RETURN
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Character]] +++$+++  OP[assign] LEX[x100] PARENTHESESEND CURLYSTART
CALL[java.util.Iterator,next,0,E] +++$+++  CURLYSTART INT VAR[INT] OP[assign]
CALL[java.util.Iterator,hasNext,0,boolean] +++$+++  LEX[input.iterator] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.util.Iterator,next,0,E] +++$+++  CURLYSTART INT VAR[INT] OP[assign]
CALL[java.lang.String,length,0,int] +++$+++  CURLYSTART INT VAR[INT] OP[assign]
CALL[java.util.Collection,iterator,0,java.util.Iterator<E>] +++$+++  RETURN NEW TYPE[PySetIter] PARENTHESESSTART
CALL[java.io.ByteArrayOutputStream,toByteArray,0,byte[]] +++$+++  VAR[LONG] PARENTHESESEND EOL RETURN
CALL[java.lang.String,length,0,int] +++$+++  PARENTHESESSTART VAR[INT] OP[sum] COMMA
CALL[java.lang.String,endsWith,1,boolean] PARA[LIT[Stirng]] +++$+++  OP[assign] OP[bitwiseOr] OP[bitwiseOr] OP[not]
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Stirng]] +++$+++  OP[not] OP[assign] PARENTHESESEND CURLYSTART
CALL[java.lang.String,length,0,int] +++$+++  VAR[INT] EOL VAR[INT] OP[assign]
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Stirng]] +++$+++  LEX[i--] OP[greaterThan] PARENTHESESEND CURLYSTART
CALL[java.util.List,add,1,boolean] PARA[VAR[java.lang.String]] +++$+++  LEX[File.separator] PARENTHESESEND PARENTHESESEND CURLYSTART
CALL[java.lang.String,substring,2,java.lang.String] PARA[LIT[Integer]] PARA[VAR[INT]] +++$+++  RETURN EOL CURLYEND RETURN
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[CALL[null,format]] +++$+++  OP[sum] OP[sum] PARENTHESESEND CURLYSTART
CALL[java.util.Set,add,1,boolean] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESSTART PARENTHESESEND EOL CURLYEND
CALL[java.lang.String,equals,1,boolean] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.lang.String,equals,1,boolean] PARA[FIELD[org.python.indexer.Def]] +++$+++  CURLYSTART IF PARENTHESESSTART OP[not]
CALL[java.io.File,exists,0,boolean] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.io.File,isDirectory,0,boolean] +++$+++  PARENTHESESSTART PARENTHESESEND OP[bitwiseAnd] OP[bitwiseAnd]
CALL[java.io.File,getAbsolutePath,0,java.lang.String] +++$+++  LEX[Installation.getText] PARENTHESESSTART LEX[TextKeys.UNABLE_CREATE_DIRECTORY] COMMA
CALL[java.io.File,createNewFile,0,boolean] +++$+++  CURLYSTART IF PARENTHESESSTART OP[not]
CALL[java.util.List,add,1,boolean] PARA[LIT[Stirng]] +++$+++  LEX[coreLibFiles.add] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.util.List,add,1,boolean] PARA[LIT[Stirng]] +++$+++  LEX[coreLibFiles.add] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.util.List,add,1,boolean] PARA[LIT[Stirng]] +++$+++  LEX[coreLibFiles.add] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.util.List,add,1,boolean] PARA[LIT[Stirng]] +++$+++  LEX[coreLibFiles.add] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.util.List,add,1,boolean] PARA[LIT[Stirng]] +++$+++  LEX[coreLibFiles.add] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.util.List,add,1,boolean] PARA[LIT[Stirng]] +++$+++  LEX[coreLibFiles.add] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.util.List,add,1,boolean] PARA[LIT[Stirng]] +++$+++  LEX[coreLibFiles.add] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[VAR[java.lang.String]] +++$+++  NULL EOL PARENTHESESEND CURLYSTART
CALL[java.io.PipedInputStream,close,0,void] +++$+++  PARENTHESESEND THROWS LEX[IOException] CURLYSTART
CALL[java.util.List,add,1,boolean] PARA[VAR[java.lang.String]] +++$+++  STRING VAR[java.lang.String] PARENTHESESEND CURLYSTART
CALL[java.lang.String,length,0,int] +++$+++  PARENTHESESSTART VAR[INT] OP[lessThan] OP[assign]
CALL[java.io.File,exists,0,boolean] +++$+++  EOL IF PARENTHESESSTART OP[not]
CALL[java.io.File,getPath,0,java.lang.String] +++$+++  NEW TYPE[IOException] PARENTHESESSTART OP[sum]
CALL[java.io.OutputStream,close,0,void] +++$+++  NULL PARENTHESESEND TRY CURLYSTART
CALL[java.lang.String,substring,1,java.lang.String] PARA[CALL[java.lang.String,length]] +++$+++  CURLYEND TYPE[String] VAR[java.lang.String] OP[assign]
CALL[java.lang.String,hashCode,0,int] +++$+++  CURLYSTART INT VAR[INT] OP[assign]
CALL[java.nio.CharBuffer,remaining,0,int] +++$+++  LEX[CoderResult.UNDERFLOW] EOL CURLYEND RETURN
CALL[java.nio.CharBuffer,remaining,0,int] +++$+++  VAR[INT] OP[assign] LEX[Math.min] PARENTHESESSTART
CALL[java.nio.ByteBuffer,remaining,0,int] +++$+++  VAR[INT] OP[assign] LEX[Math.min] PARENTHESESSTART
CALL[java.nio.ByteBuffer,remaining,0,int] +++$+++  LEX[in.remaining] PARENTHESESSTART PARENTHESESEND COMMA
CALL[java.io.File,delete,0,boolean] +++$+++  LEX[testFile.deleteOnExit] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.util.regex.Matcher,appendTail,1,java.lang.StringBuffer] PARA[VAR[java.lang.StringBuffer]] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND EOL
CALL[java.util.regex.Matcher,matches,0,boolean] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.awt.event.ItemEvent,getStateChange,0,int] +++$+++  PARENTHESESSTART LEX[ItemEvent.SELECTED] OP[assign] OP[assign]
CALL[net.pandoragames.far.ui.swing.component.MacOSXMenuAdapter.OSXCOMMAND,name,0,java.lang.String] +++$+++  EOL RETURN LEX[listenerMap.containsKey] PARENTHESESSTART
CALL[java.util.Map,containsKey,1,boolean] PARA[CALL[net.pandoragames.far.ui.swing.component.MacOSXMenuAdapter.OSXCOMMAND,name]] +++$+++  VAR[java.lang.String] PARENTHESESEND EOL RETURN
CALL[java.util.List,add,1,boolean] PARA[VAR[javax.swing.AbstractButton]] +++$+++  OP[not] OP[assign] NULL PARENTHESESEND
CALL[javax.swing.JTable,getSelectedRow,0,int] +++$+++  PARENTHESESEND CURLYSTART VAR[INT] OP[assign]
CALL[javax.swing.JMenuItem,setEnabled,1,void] PARA[VAR[BOOLEAN]] +++$+++  OP[bitwiseAnd] VAR[BOOLEAN] PARENTHESESEND EOL
CALL[java.util.ArrayList,remove,1,boolean] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESEND OP[greaterThan] PARENTHESESEND CURLYSTART
CALL[java.io.IOException,getMessage,0,java.lang.String] +++$+++  PARENTHESESSTART PARENTHESESEND OP[sum] OP[sum]
CALL[java.io.File,createNewFile,0,boolean] +++$+++  CURLYSTART IF PARENTHESESSTART OP[not]
CALL[java.io.Writer,write,1,void] PARA[LIT[Stirng]] +++$+++  OP[ternaryFalse] VAR[java.lang.String] PARENTHESESEND CURLYSTART
CALL[java.util.Properties,containsKey,1,boolean] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.util.Properties,getProperty,1,java.lang.String] PARA[VAR[java.lang.String]] +++$+++  LEX[form.setLeadingContext] PARENTHESESSTART LEX[Integer.parseInt] PARENTHESESSTART
CALL[java.util.List,contains,1,boolean] PARA[VAR[java.nio.charset.Charset]] +++$+++  OP[assign] NULL OP[bitwiseOr] OP[bitwiseOr]
CALL[java.lang.String,hashCode,0,int] +++$+++  CURLYSTART INT VAR[INT] OP[assign]
CALL[java.lang.Integer,hashCode,0,int] +++$+++  NULL PARENTHESESEND OP[ternaryTrue] OP[ternaryFalse]
CALL[java.lang.String,hashCode,0,int] +++$+++  NULL PARENTHESESEND OP[ternaryTrue] OP[ternaryFalse]
CALL[java.lang.Class,isAssignableFrom,1,boolean] PARA[VAR[java.lang.Class]] +++$+++  EOL CURLYEND IF PARENTHESESSTART
CALL[java.awt.Font,getFontName,0,java.lang.String] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.String,hashCode,0,int] +++$+++  OP[assign] NULL PARENTHESESEND OP[ternaryTrue]
CALL[java.awt.Color,getBlue,0,int] +++$+++  LEX[c.getGreen] PARENTHESESSTART PARENTHESESEND COMMA
CALL[java.lang.String,indexOf,1,int] PARA[LIT[Character]] +++$+++  PARENTHESESSTART PARENTHESESSTART VAR[INT] OP[assign]
CALL[java.lang.String,equals,1,boolean] PARA[LIT[Stirng]] +++$+++  CURLYEND ELSE IF PARENTHESESSTART
CALL[java.net.URL,toString,0,java.lang.String] +++$+++  EOL TYPE[String] VAR[java.lang.String] OP[assign]
CALL[java.lang.String,substring,1,java.lang.String] PARA[CALL[java.lang.String,length]] +++$+++  PARENTHESESEND CURLYSTART VAR[java.lang.String] OP[assign]
CALL[java.util.List,add,1,boolean] PARA[FIELD[EoLayerType]] +++$+++  PARENTHESESSTART LEX[EoLayerType.BAND_COVERAGE] PARENTHESESEND EOL
CALL[java.util.List,add,1,boolean] PARA[FIELD[EoLayerType]] +++$+++  PARENTHESESSTART LEX[EoLayerType.BAND_COVERAGE] PARENTHESESEND EOL
CALL[java.io.File,canWrite,0,boolean] +++$+++  NULL EOL IF PARENTHESESSTART
CALL[java.lang.String,isEmpty,0,boolean] +++$+++  OP[assign] NULL OP[bitwiseOr] OP[bitwiseOr]
CALL[java.awt.image.BufferedImage,getWidth,0,int] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.awt.image.BufferedImage,getGraphics,0,java.awt.Graphics] +++$+++  OP[assign] PARENTHESESSTART TYPE[Graphics2D] PARENTHESESEND
CALL[java.awt.Graphics2D,dispose,0,void] +++$+++  COMMA NULL PARENTHESESEND EOL
CALL[java.awt.image.BufferedImage,getWidth,0,int] +++$+++  EOL INT VAR[INT] OP[assign]
CALL[java.awt.image.BufferedImage,getWidth,0,int] +++$+++  PARENTHESESSTART INT PARENTHESESEND PARENTHESESSTART
CALL[java.awt.Dimension,getHeight,0,double] +++$+++  LEX[Math.max] PARENTHESESSTART VAR[DOUBLE] COMMA
CALL[java.awt.Dimension,getWidth,0,double] +++$+++  LEX[Math.max] PARENTHESESSTART VAR[DOUBLE] COMMA
CALL[java.awt.image.BufferedImage,createGraphics,0,java.awt.Graphics2D] +++$+++  EOL TYPE[Graphics2D] VAR[java.awt.Graphics2D] OP[assign]
CALL[java.lang.String,substring,2,java.lang.String] PARA[LIT[Integer]] PARA[LIT[Integer]] +++$+++  VAR[INT] OP[assign] LEX[Integer.valueOf] PARENTHESESSTART
CALL[java.lang.String,length,0,int] +++$+++  OP[assign] NULL OP[bitwiseOr] OP[bitwiseOr]
CALL[java.lang.String,length,0,int] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.lang.String,length,0,int] +++$+++  OP[assign] NULL OP[bitwiseAnd] OP[bitwiseAnd]
CALL[java.lang.String,length,0,int] +++$+++  EOL CURLYEND IF PARENTHESESSTART
CALL[java.lang.String,hashCode,0,int] +++$+++  PARENTHESESEND CURLYSTART RETURN PARENTHESESSTART
CALL[java.lang.ClassNotFoundException,getMessage,0,java.lang.String] +++$+++  PARENTHESESEND CURLYSTART VAR[java.lang.String] OP[assign]
CALL[java.lang.Class,isAssignableFrom,1,boolean] PARA[CALL[java.lang.Object,getClass]] +++$+++  NULL PARENTHESESEND OP[bitwiseAnd] OP[bitwiseAnd]
CALL[java.lang.String,startsWith,1,boolean] PARA[LIT[Stirng]] +++$+++  CURLYEND RETURN LEX[name.substring] PARENTHESESSTART
CALL[java.io.InputStream,skip,1,long] PARA[VAR[LONG]] +++$+++  RETURN EOL CURLYEND RETURN
CALL[java.util.Map,hashCode,0,int] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.util.Map,size,0,int] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.io.Writer,write,1,void] PARA[LIT[Stirng]] +++$+++  OP[assign] OP[assign] PARENTHESESEND CURLYSTART
CALL[java.io.Writer,write,1,void] PARA[LIT[Stirng]] +++$+++  OP[assign] OP[assign] PARENTHESESEND CURLYSTART
CALL[java.lang.String,startsWith,1,boolean] PARA[LIT[Stirng]] +++$+++  EOL BOOLEAN VAR[BOOLEAN] OP[assign]
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Stirng]] +++$+++  OP[not] VAR[BOOLEAN] PARENTHESESEND CURLYSTART
CALL[java.lang.String,endsWith,1,boolean] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.lang.String,startsWith,1,boolean] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.lang.Boolean,booleanValue,0,boolean] +++$+++  CURLYSTART LEX[sb.append] PARENTHESESSTART PARENTHESESSTART
CALL[java.lang.String,indexOf,1,int] PARA[LIT[Character]] +++$+++  EOL INT VAR[INT] OP[assign]
CALL[java.lang.String,substring,2,java.lang.String] PARA[LIT[Integer]] PARA[VAR[INT]] +++$+++  VAR[java.lang.String] ARRAYSTART ARRAYEND OP[assign]
CALL[java.util.Map,get,1,V] PARA[VAR[java.lang.String]] +++$+++  OP[ternaryFalse] EOL IF PARENTHESESSTART
CALL[java.util.Map,get,1,V] PARA[VAR[java.lang.String]] +++$+++  EOL TYPE[Object] VAR[java.lang.Object] OP[assign]
CALL[java.util.Iterator,hasNext,0,boolean] +++$+++  LEX[result.iterator] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  VAR[INT] EOL VAR[CHAR] OP[assign]
CALL[java.io.OutputStream,write,3,void] PARA[VAR[BYTE]] PARA[VAR[INT]] PARA[VAR[INT]] +++$+++  TYPE[ClientStreamAbortedException] CURLYSTART TRY CURLYSTART
CALL[java.util.List,toString,0,java.lang.String] +++$+++  CURLYSTART TYPE[String] VAR[java.lang.String] OP[assign]
CALL[java.lang.Class,isInstance,1,boolean] PARA[VAR[java.lang.Object]] +++$+++  LEX[false] EOL CURLYEND RETURN
CALL[java.util.List,size,0,int] +++$+++  VAR[java.lang.Object] COMMA FIELD[length,java.lang.Object] COMMA
CALL[java.lang.String,length,0,int] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[CALL[java.lang.Throwable,getMessage]] +++$+++  OP[assign] NULL PARENTHESESEND CURLYSTART
CALL[java.lang.String,substring,2,java.lang.String] PARA[LIT[Integer]] PARA[VAR[INT]] +++$+++  PARENTHESESEND EOL VAR[java.lang.String] OP[assign]
CALL[java.lang.String,compareTo,1,int] PARA[VAR[java.lang.String]] +++$+++  CURLYEND ELSE CURLYSTART RETURN
CALL[java.io.File,getName,0,java.lang.String] +++$+++  PARENTHESESEND PARENTHESESEND OP[sum] OP[sum]
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[VAR[java.lang.String]] +++$+++  OP[assign] NULL PARENTHESESEND CURLYSTART
CALL[java.lang.String,hashCode,0,int] +++$+++  NULL PARENTHESESEND OP[ternaryTrue] OP[ternaryFalse]
CALL[java.lang.String,hashCode,0,int] +++$+++  NULL PARENTHESESEND OP[ternaryTrue] OP[ternaryFalse]
CALL[java.util.Date,hashCode,0,int] +++$+++  NULL PARENTHESESEND OP[ternaryTrue] OP[ternaryFalse]
CALL[java.lang.String,hashCode,0,int] +++$+++  NULL PARENTHESESEND OP[ternaryTrue] OP[ternaryFalse]
CALL[java.lang.String,hashCode,0,int] +++$+++  NULL PARENTHESESEND OP[ternaryTrue] OP[ternaryFalse]
CALL[java.lang.StringBuffer,toString,0,java.lang.String] +++$+++  OP[sub] PARENTHESESEND EOL RETURN
CALL[java.lang.StringBuilder,toString,0,java.lang.String] +++$+++  EOL CURLYEND CURLYEND RETURN
CALL[java.io.ByteArrayOutputStream,writeTo,1,void] PARA[VAR[java.io.OutputStream]] +++$+++  LEX[response.getOutputStream] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.lang.String]] +++$+++  OP[assign] NULL PARENTHESESEND CURLYSTART
CALL[java.util.Map,get,1,V] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART PARENTHESESSTART TYPE[String] PARENTHESESEND
CALL[java.util.StringTokenizer,nextToken,0,java.lang.String] +++$+++  CURLYSTART TYPE[String] VAR[java.lang.String] OP[assign]
CALL[java.util.StringTokenizer,hasMoreElements,0,boolean] +++$+++  PARENTHESESEND EOL WHILE PARENTHESESSTART
CALL[java.io.FileReader,close,0,void] +++$+++  EOL CURLYEND FINALLY CURLYSTART
CALL[java.util.ArrayList,isEmpty,0,boolean] +++$+++  VAR[BOOLEAN] OP[bitwiseAnd] OP[bitwiseAnd] PARENTHESESSTART
CALL[java.lang.String,toUpperCase,0,java.lang.String] +++$+++  EOL RETURN LEX[metadataNames.contains] PARENTHESESSTART
CALL[java.util.StringTokenizer,nextToken,0,java.lang.String] +++$+++  PARENTHESESEND CURLYSTART LEX[keywords.add] PARENTHESESSTART
CALL[java.util.Map,get,1,V] PARA[LIT[Stirng]] +++$+++  OP[assign] PARENTHESESSTART TYPE[String] PARENTHESESEND
CALL[java.io.ObjectInputStream,readObject,0,java.lang.Object] +++$+++  RETURN PARENTHESESSTART TYPE[T] PARENTHESESEND
CALL[java.util.List,size,0,int] +++$+++  OP[not] OP[assign] NULL OP[ternaryTrue]
CALL[java.lang.String,startsWith,1,boolean] PARA[VAR[java.lang.String]] +++$+++  CURLYSTART IF PARENTHESESSTART OP[not]
CALL[java.lang.String,replaceAll,2,java.lang.String] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND EOL VAR[java.lang.String] OP[assign]
CALL[java.util.Map,get,1,V] PARA[VAR[java.lang.Object]] +++$+++  VAR[java.lang.Object] PARENTHESESEND CURLYSTART RETURN
CALL[java.util.Map,putAll,1,void] PARA[VAR[java.util.Map]] +++$+++  OP[greaterThan] VAR[java.util.Map] PARENTHESESEND CURLYSTART
CALL[java.util.logging.Logger,warning,1,void] PARA[LIT[Stirng]] +++$+++  TYPE[Throwable] VAR[java.lang.Throwable] PARENTHESESEND CURLYSTART
CALL[java.io.ByteArrayOutputStream,toByteArray,0,byte[]] +++$+++  RETURN NEW TYPE[String] PARENTHESESSTART
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Stirng]] +++$+++  OP[greaterThan] OP[assign] PARENTHESESEND CURLYSTART
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Stirng]] +++$+++  OP[greaterThan] OP[assign] PARENTHESESEND CURLYSTART
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Character]] +++$+++  VAR[INT] OP[lessThan] PARENTHESESEND CURLYSTART
CALL[java.util.Set,isEmpty,0,boolean] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.lang.String,equals,1,boolean] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.lang.String,equals,1,boolean] PARA[VAR[java.lang.String]] +++$+++  EOL ELSE IF PARENTHESESSTART
CALL[java.util.Set,clear,0,void] +++$+++  LEX[clear] PARENTHESESSTART PARENTHESESEND CURLYSTART
CALL[java.lang.String,length,0,int] +++$+++  CURLYEND INT VAR[INT] OP[assign]
CALL[java.lang.StringBuffer,toString,0,java.lang.String] +++$+++  OP[sub] PARENTHESESEND EOL RETURN
CALL[java.lang.String,equals,1,boolean] PARA[FIELD[org.geoserver.security.auth.AuthenticationCacheKey]] +++$+++  OP[assign] NULL OP[bitwiseAnd] OP[bitwiseAnd]
CALL[java.lang.Object,getClass,0,java.lang.Class<? extends java.lang.Object>] +++$+++  EOL TYPE[Class] VAR[java.lang.Class] OP[assign]
CALL[java.lang.ThreadLocal,remove,0,void] +++$+++  LEX[finish] PARENTHESESSTART PARENTHESESEND CURLYSTART
CALL[java.lang.String,length,0,int] +++$+++  OP[assign] LEX[path.substring] PARENTHESESSTART COMMA
CALL[java.lang.String,lastIndexOf,1,int] PARA[LIT[Character]] +++$+++  EOL RETURN LEX[name.substring] PARENTHESESSTART
CALL[java.lang.String,equalsIgnoreCase,1,boolean] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.util.Map,get,1,V] PARA[LIT[Stirng]] +++$+++  COMMA TYPE[String] OP[greaterThan] PARENTHESESEND
CALL[java.lang.Exception,getLocalizedMessage,0,java.lang.String] +++$+++  PARENTHESESEND PARENTHESESEND LEX[LOGGER.severe] PARENTHESESSTART
CALL[java.util.Iterator,hasNext,0,boolean] +++$+++  LEX[dataStores.iterator] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.lang.String,equals,1,boolean] PARA[LIT[Stirng]] +++$+++  NULL EOL IF PARENTHESESSTART
CALL[java.io.BufferedWriter,write,1,void] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESEND THROWS LEX[IOException] CURLYSTART
CALL[java.io.BufferedWriter,close,0,void] +++$+++  LEX[writer.flush] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.lang.Object,toString,0,java.lang.String] +++$+++  CURLYSTART RETURN LEX[URLDecoder.decode] PARENTHESESSTART
CALL[java.util.zip.ZipInputStream,getNextEntry,0,java.util.zip.ZipEntry] +++$+++  PARENTHESESSTART PARENTHESESSTART VAR[java.util.zip.ZipEntry] OP[assign]
CALL[java.lang.String,endsWith,1,boolean] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.util.List,iterator,0,java.util.Iterator<E>] +++$+++  TYPE[String] OP[greaterThan] VAR[java.util.Iterator] OP[assign]
CALL[java.lang.String,substring,2,java.lang.String] PARA[LIT[Integer]] PARA[VAR[INT]] +++$+++  CURLYSTART TYPE[String] VAR[java.lang.String] OP[assign]
CALL[java.lang.String,equals,1,boolean] PARA[LIT[Stirng]] +++$+++  CURLYEND ELSE IF PARENTHESESSTART
CALL[java.util.logging.Logger,fine,1,void] PARA[LIT[Stirng]] +++$+++  LEX[Level.FINE] PARENTHESESEND PARENTHESESEND CURLYSTART
CALL[java.util.List,get,1,E] PARA[LIT[Integer]] +++$+++  CURLYSTART TYPE[Object] VAR[java.lang.Object] OP[assign]
