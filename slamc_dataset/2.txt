CALL[java.lang.Exception,printStackTrace,0,void] +++$+++  TYPE[Exception] VAR[java.lang.Exception] PARENTHESESEND CURLYSTART
CALL[java.io.LineNumberReader,close,0,void] +++$+++  PARENTHESESEND THROWS LEX[IOException] CURLYSTART
CALL[java.util.Vector,contains,1,boolean] PARA[VAR[java.lang.String]] +++$+++  CURLYSTART IF PARENTHESESSTART OP[not]
CALL[java.util.Vector,size,0,int] +++$+++  OP[assign] EOL VAR[INT] OP[lessThan]
CALL[java.util.Hashtable,get,1,V] PARA[VAR[java.lang.String]] +++$+++  RETURN PARENTHESESSTART TYPE[NationalBarcodeID] PARENTHESESEND
CALL[java.lang.Exception,printStackTrace,0,void] +++$+++  TYPE[Exception] VAR[java.lang.Exception] PARENTHESESEND CURLYSTART
CALL[java.lang.String,trim,0,java.lang.String] +++$+++  ELSE CURLYSTART VAR[java.lang.String] OP[assign]
CALL[java.util.Iterator,hasNext,0,boolean] +++$+++  PARENTHESESEND EOL WHILE PARENTHESESSTART
CALL[java.util.Iterator,next,0,E] +++$+++  OP[assign] PARENTHESESSTART TYPE[String] PARENTHESESEND
CALL[java.lang.String,equalsIgnoreCase,1,boolean] PARA[VAR[java.lang.String]] +++$+++  CURLYEND CURLYEND IF PARENTHESESSTART
CALL[be.mxs.common.util.date.MedwanCalendar,getTimeInMillis,0,long] +++$+++  PARENTHESESEND EOL LEX[cal.setTimeInMillis] PARENTHESESSTART
CALL[java.lang.String,indexOf,1,int] PARA[LIT[Character]] +++$+++  EOL INT VAR[INT] OP[assign]
CALL[java.lang.String,substring,2,java.lang.String] PARA[LIT[Integer]] PARA[VAR[INT]] +++$+++  VAR[INT] OP[assign] LEX[Integer.parseInt] PARENTHESESSTART
CALL[java.lang.String,replaceAll,2,java.lang.String] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND EOL VAR[java.lang.String] OP[assign]
CALL[java.lang.String,length,0,int] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.lang.String,replaceAll,2,java.lang.String] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND EOL VAR[java.lang.String] OP[assign]
CALL[java.lang.String,replaceAll,2,java.lang.String] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND EOL VAR[java.lang.String] OP[assign]
CALL[java.lang.String,replaceAll,2,java.lang.String] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND EOL VAR[java.lang.String] OP[assign]
CALL[java.util.Enumeration,hasMoreElements,0,boolean] +++$+++  PARENTHESESEND EOL WHILE PARENTHESESSTART
CALL[java.lang.String,lastIndexOf,1,int] PARA[LIT[Stirng]] +++$+++  OP[assign] LEX[sTime.substring] PARENTHESESSTART COMMA
CALL[java.sql.SQLException,printStackTrace,0,void] +++$+++  TYPE[SQLException] VAR[java.sql.SQLException] PARENTHESESEND CURLYSTART
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  IF PARENTHESESSTART LEX[Character.isUpperCase] PARENTHESESSTART
CALL[java.lang.String,length,0,int] +++$+++  OP[assign] EOL VAR[INT] OP[lessThan]
CALL[java.lang.String,replaceAll,2,java.lang.String] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND EOL VAR[java.lang.String] OP[assign]
CALL[java.lang.String,length,0,int] +++$+++  CURLYSTART INT VAR[INT] OP[assign]
CALL[java.io.ByteArrayOutputStream,toByteArray,0,byte[]] +++$+++  OP[assign] NEW TYPE[String] PARENTHESESSTART
CALL[java.lang.String,getBytes,0,byte[]] +++$+++  TRY CURLYSTART LEX[deflaterOutputStream.write] PARENTHESESSTART
CALL[java.util.zip.DeflaterOutputStream,close,0,void] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND EOL
CALL[java.util.Date,getTime,0,long] +++$+++  LEX[pdatValue1.getTime] PARENTHESESSTART PARENTHESESEND OP[sub]
CALL[java.lang.String,trim,0,java.lang.String] +++$+++  VAR[java.lang.String] OP[assign] EOL RETURN
CALL[java.lang.String,split,1,java.lang.String[]] PARA[LIT[Stirng]] +++$+++  ARRAYSTART ARRAYEND VAR[java.lang.String] OP[assign]
CALL[java.util.Calendar,setTime,1,void] PARA[VAR[java.util.Date]] +++$+++  PARENTHESESSTART VAR[java.util.Date] PARENTHESESEND EOL
CALL[java.util.Calendar,getTimeInMillis,0,long] +++$+++  EOL LONG VAR[LONG] OP[assign]
CALL[java.io.File,exists,0,boolean] +++$+++  EOL IF PARENTHESESSTART OP[not]
CALL[java.io.File,mkdirs,0,boolean] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND CURLYSTART
CALL[java.lang.String,trim,0,java.lang.String] +++$+++  CURLYEND ELSE CURLYSTART RETURN
CALL[java.lang.String,equalsIgnoreCase,1,boolean] PARA[LIT[Stirng]] +++$+++  OP[assign] NULL OP[bitwiseOr] OP[bitwiseOr]
CALL[java.lang.String,equalsIgnoreCase,1,boolean] PARA[LIT[Stirng]] +++$+++  OP[assign] NULL OP[bitwiseOr] OP[bitwiseOr]
CALL[java.io.IOException,printStackTrace,0,void] +++$+++  TYPE[IOException] VAR[java.io.IOException] PARENTHESESEND CURLYSTART
CALL[java.util.Vector,add,1,boolean] PARA[VAR[java.lang.String]] +++$+++  STRING VAR[java.lang.String] PARENTHESESEND CURLYSTART
CALL[java.util.Hashtable,get,1,V] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESSTART PARENTHESESSTART TYPE[Hashtable] PARENTHESESEND
CALL[java.util.Hashtable,get,1,V] PARA[VAR[java.lang.String]] +++$+++  VAR[java.lang.String] PARENTHESESEND CURLYSTART RETURN
CALL[java.util.Hashtable,keys,0,java.util.Enumeration<K>] +++$+++  EOL TYPE[Enumeration] VAR[java.util.Enumeration] OP[assign]
CALL[java.util.Hashtable,put,2,V] PARA[VAR[java.lang.String]] PARA[CALL[java.util.Hashtable,get]] +++$+++  OP[assign] NULL PARENTHESESEND CURLYSTART
CALL[java.util.Hashtable,keys,0,java.util.Enumeration<K>] +++$+++  EOL TYPE[Enumeration] VAR[java.util.Enumeration] OP[assign]
CALL[java.util.Hashtable,elements,0,java.util.Enumeration<V>] +++$+++  EOL TYPE[Enumeration] VAR[java.util.Enumeration] OP[assign]
CALL[java.util.Enumeration,hasMoreElements,0,boolean] +++$+++  LEX[encounter] EOL WHILE PARENTHESESSTART
CALL[java.util.Hashtable,elements,0,java.util.Enumeration<V>] +++$+++  EOL TYPE[Enumeration] VAR[java.util.Enumeration] OP[assign]
CALL[java.util.Enumeration,nextElement,0,E] +++$+++  OP[assign] PARENTHESESSTART TYPE[Encounter] PARENTHESESEND
CALL[java.util.Enumeration,hasMoreElements,0,boolean] +++$+++  LEX[encounter] EOL WHILE PARENTHESESSTART
CALL[java.util.Enumeration,nextElement,0,E] +++$+++  OP[assign] PARENTHESESSTART TYPE[String] PARENTHESESEND
CALL[java.util.Date,getTime,0,long] +++$+++  OP[multiply] OP[multiply] OP[lessThan] OP[assign]
CALL[java.util.Date,getTime,0,long] +++$+++  PARENTHESESEND EOL VAR[LONG] OP[lessThan]
CALL[java.util.Hashtable,get,1,V] PARA[LIT[Stirng]] +++$+++  INT ARRAYSTART ARRAYEND PARENTHESESEND
CALL[java.util.Iterator,hasNext,0,boolean] +++$+++  OP[assign] EOL WHILE PARENTHESESSTART
CALL[java.lang.String,toLowerCase,0,java.lang.String] +++$+++  TYPE[String] PARENTHESESEND LEX[comments.get] PARENTHESESSTART
CALL[java.util.Vector,size,0,int] +++$+++  IF PARENTHESESSTART VAR[INT] OP[greaterThan]
CALL[java.util.SortedMap,putAll,1,void] PARA[VAR[java.util.Hashtable]] +++$+++  TYPE[TreeMap] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.lang.String,length,0,int] +++$+++  OP[assign] NULL OP[bitwiseAnd] OP[bitwiseAnd]
CALL[java.lang.Exception,getMessage,0,java.lang.String] +++$+++  PARENTHESESEND EOL LEX[Debug.println] PARENTHESESSTART
CALL[java.lang.String,length,0,int] +++$+++  CURLYSTART INT VAR[INT] OP[assign]
CALL[java.lang.String,substring,1,java.lang.String] PARA[LIT[Integer]] +++$+++  PARENTHESESEND PARENTHESESEND VAR[java.lang.String] OP[assign]
CALL[java.io.File,exists,0,boolean] +++$+++  LEX[IOException] CURLYSTART IF PARENTHESESSTART
CALL[java.util.Vector,size,0,int] +++$+++  OP[assign] EOL VAR[INT] OP[lessThan]
CALL[java.util.Hashtable,size,0,int] +++$+++  EOL CURLYEND CURLYEND RETURN
CALL[java.lang.String,matches,1,boolean] PARA[LIT[Stirng]] +++$+++  VAR[genj.geo.GeoImport.Parser] EOL IF PARENTHESESSTART
CALL[java.awt.event.KeyEvent,consume,0,void] +++$+++  LEX[KeyEvent] VAR[java.awt.event.KeyEvent] PARENTHESESEND CURLYSTART
CALL[javax.swing.JPanel,add,1,java.awt.Component] PARA[CALL[null,createRigidArea]] +++$+++  COMMA PARENTHESESEND PARENTHESESEND EOL
CALL[javax.swing.JPanel,add,1,java.awt.Component] PARA[CALL[null,createHorizontalGlue]] +++$+++  LEX[BoxLayout.X_AXIS] PARENTHESESEND PARENTHESESEND EOL
CALL[java.lang.StringBuffer,length,0,int] +++$+++  CURLYSTART LEX[display.delete] PARENTHESESSTART COMMA
CALL[java.lang.String,equals,1,boolean] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.util.Map,entrySet,0,java.util.Set<java.util.Map.Entry<K, V>>] +++$+++  TYPE[Action] OP[greaterThan] VAR[java.util.Map.Entry] OP[ternaryFalse]
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND CURLYSTART
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[VAR[java.lang.String]] +++$+++  LEX[buf.append] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.util.Map,get,1,V] PARA[VAR[java.util.List]] +++$+++  CURLYSTART TYPE[Action] VAR[com.sadinoff.genj.console.Console.Action] OP[assign]
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[VAR[java.lang.String]] +++$+++  EOL BREAK EOL CURLYEND
CALL[java.awt.geom.Point2D,getY,0,double] +++$+++  PARENTHESESSTART LEX[Math.atan2] PARENTHESESSTART PARENTHESESSTART
CALL[java.awt.geom.Point2D,getY,0,double] +++$+++  LEX[vectorA.getX] PARENTHESESSTART PARENTHESESEND COMMA
CALL[java.awt.geom.Point2D,getX,0,double] +++$+++  NEW LEX[Point2D.Double] PARENTHESESSTART PARENTHESESSTART
CALL[java.awt.geom.Point2D,getY,0,double] +++$+++  OP[sum] LEX[b.getX] PARENTHESESSTART PARENTHESESEND
CALL[java.awt.geom.Point2D,getX,0,double] +++$+++  LEX[vectorB.getX] PARENTHESESSTART PARENTHESESEND OP[sum]
CALL[java.awt.geom.Point2D,getY,0,double] +++$+++  CURLYSTART DOUBLE VAR[DOUBLE] OP[assign]
CALL[java.awt.geom.Point2D,getY,0,double] +++$+++  LEX[bEnd.getY] PARENTHESESSTART PARENTHESESEND OP[sub]
CALL[java.awt.geom.Point2D,getY,0,double] +++$+++  LEX[bStart.getX] PARENTHESESSTART PARENTHESESEND OP[multiply]
CALL[java.awt.geom.Point2D,getY,0,double] +++$+++  EOL DOUBLE VAR[DOUBLE] OP[assign]
CALL[java.awt.geom.Point2D,getX,0,double] +++$+++  EOL DOUBLE VAR[DOUBLE] OP[assign]
CALL[java.lang.Integer,intValue,0,int] +++$+++  OP[assign] NULL PARENTHESESEND RETURN
CALL[javax.swing.JSplitPane,setDividerSize,1,void] PARA[LIT[Integer]] +++$+++  COMMA VAR[javax.swing.JComponent] PARENTHESESEND EOL
CALL[java.lang.String,trim,0,java.lang.String] +++$+++  VAR[java.lang.String] EOL VAR[java.lang.String] OP[assign]
CALL[java.awt.geom.Rectangle2D,getMinY,0,double] +++$+++  PARENTHESESEND COMMA VAR[DOUBLE] OP[assign]
CALL[javax.swing.event.EventListenerList,getListeners,1,T[]] PARA[VAR[java.lang.Class]] +++$+++  VAR[java.lang.Class] PARENTHESESEND CURLYSTART RETURN
CALL[java.awt.Container,add,1,java.awt.Component] PARA[VAR[javax.swing.JSpinner]] +++$+++  LEX[c.add] PARENTHESESSTART VAR[javax.swing.JSpinner] PARENTHESESEND
CALL[java.awt.geom.Rectangle2D,getWidth,0,double] +++$+++  PARENTHESESSTART PARENTHESESEND COMMA OP[sub]
CALL[java.awt.FontMetrics,getLineMetrics,2,java.awt.font.LineMetrics] PARA[VAR[java.lang.String]] PARA[VAR[java.awt.Graphics2D]] +++$+++  EOL TYPE[LineMetrics] VAR[java.awt.font.LineMetrics] OP[assign]
CALL[java.awt.Graphics2D,clip,1,void] PARA[VAR[java.awt.geom.Rectangle2D]] +++$+++  LEX[graphics.getClip] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.awt.geom.Rectangle2D,getY,0,double] +++$+++  LEX[box.getY] PARENTHESESSTART PARENTHESESEND COMMA
CALL[java.awt.Container,getWidth,0,int] +++$+++  FIELD[left,java.awt.Insets] COMMA FIELD[top,java.awt.Insets] COMMA
CALL[javax.swing.JList,addMouseListener,1,void] PARA[VAR[java.awt.event.MouseListener]] +++$+++  LEX[MouseListener] VAR[java.awt.event.MouseListener] PARENTHESESEND CURLYSTART
CALL[javax.swing.JList,addListSelectionListener,1,void] PARA[VAR[javax.swing.event.ListSelectionListener]] +++$+++  LEX[ListSelectionListener] VAR[javax.swing.event.ListSelectionListener] PARENTHESESEND CURLYSTART
CALL[java.awt.Graphics2D,getFontMetrics,0,java.awt.FontMetrics] +++$+++  VAR[DOUBLE] OP[assign] VAR[DOUBLE] OP[multiply]
CALL[java.awt.FontMetrics,getLineMetrics,2,java.awt.font.LineMetrics] PARA[VAR[java.lang.String]] PARA[VAR[java.awt.Graphics2D]] +++$+++  VAR[DOUBLE] OP[sub] VAR[FLOAT] OP[multiply]
CALL[java.lang.String,length,0,int] +++$+++  OP[assign] EOL VAR[INT] OP[lessThan]
CALL[java.util.Map,get,1,V] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESEND CURLYSTART VAR[genj.util.Registry] OP[assign]
CALL[java.util.Properties,clear,0,void] +++$+++  PARENTHESESEND CURLYSTART TRY CURLYSTART
CALL[java.lang.String,indexOf,2,int] PARA[VAR[java.lang.String]] PARA[VAR[INT]] +++$+++  NULL EOL VAR[INT] OP[assign]
CALL[java.io.InputStream,close,0,void] +++$+++  PARENTHESESEND THROWS LEX[IOException] CURLYSTART
CALL[java.lang.Throwable,getMessage,0,java.lang.String] +++$+++  PARENTHESESSTART LEX[Level.WARNING] COMMA OP[sum]
CALL[java.util.List,contains,1,boolean] PARA[VAR[genj.fo.Format]] +++$+++  EOL IF PARENTHESESSTART OP[not]
CALL[java.util.List,size,0,int] +++$+++  PARENTHESESSTART NEW TYPE[Format] ARRAYSTART
CALL[java.util.StringTokenizer,nextToken,0,java.lang.String] +++$+++  VAR[INT] OP[assign] LEX[Integer.parseInt] PARENTHESESSTART
CALL[javax.swing.table.TableColumnModel,getColumn,1,javax.swing.table.TableColumn] PARA[VAR[INT]] +++$+++  CURLYSTART TYPE[TableColumn] VAR[javax.swing.table.TableColumn] OP[assign]
CALL[javax.swing.table.TableColumnModel,getColumnCount,0,int] +++$+++  OP[bitwiseAnd] OP[bitwiseAnd] VAR[INT] OP[lessThan]
CALL[java.util.StringTokenizer,hasMoreTokens,0,boolean] +++$+++  PARENTHESESEND EOL WHILE PARENTHESESSTART
CALL[java.util.LinkedList,add,1,boolean] PARA[VAR[java.awt.geom.Point2D.Float]] +++$+++  VAR[FLOAT] COMMA PARENTHESESEND EOL
CALL[java.util.List,size,0,int] +++$+++  OP[assign] EOL VAR[INT] OP[lessThan]
CALL[java.awt.geom.Dimension2D,getWidth,0,double] +++$+++  RETURN NEW LEX[gj.awt.geom.Dimension2D.Double] PARENTHESESSTART
CALL[javax.swing.JCheckBox,setEnabled,1,void] PARA[LIT[Boolean]] +++$+++  PARENTHESESSTART VAR[genj.print.PrintWidget.Apply] PARENTHESESEND EOL
CALL[javax.swing.JPanel,add,1,java.awt.Component] PARA[VAR[javax.swing.JCheckBox]] +++$+++  LEX[page.add] PARENTHESESSTART VAR[javax.swing.JCheckBox] PARENTHESESEND
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[VAR[java.lang.StringBuffer]] +++$+++  VAR[INT] OP[greaterThan] PARENTHESESEND CURLYSTART
CALL[java.lang.StringBuffer,toString,0,java.lang.String] +++$+++  PARENTHESESSTART PARENTHESESEND EOL RETURN
CALL[java.util.List,isEmpty,0,boolean] +++$+++  PARENTHESESEND CURLYSTART RETURN OP[not]
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[LIT[Character]] +++$+++  PARENTHESESSTART VAR[INT] OP[greaterThan] PARENTHESESEND
CALL[java.util.Map,get,1,V] PARA[LIT[Stirng]] +++$+++  VAR[java.lang.String] COMMA LEX[model.createProperty] PARENTHESESSTART
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.lang.String]] +++$+++  STRING VAR[java.lang.String] PARENTHESESEND CURLYSTART
CALL[java.io.Writer,flush,0,void] +++$+++  PARENTHESESSTART VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.net.Socket,setSoTimeout,1,void] PARA[VAR[INT]] +++$+++  PARENTHESESEND EOL TRY CURLYSTART
CALL[java.util.StringTokenizer,countTokens,0,int] +++$+++  OP[assign] NEW TYPE[String] ARRAYSTART
CALL[java.lang.StringBuilder,toString,0,java.lang.String] +++$+++  CURLYEND LEX[System.setProperty] PARENTHESESSTART COMMA
CALL[java.lang.String,equalsIgnoreCase,1,boolean] PARA[LIT[Stirng]] +++$+++  RETURN EOL IF PARENTHESESSTART
CALL[java.io.File,getAbsolutePath,0,java.lang.String] +++$+++  COMMA VAR[java.lang.String] COMMA OP[sum]
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  OP[greaterThan] PARENTHESESSTART PARENTHESESEND EOL
CALL[javax.swing.JRadioButton,isSelected,0,boolean] +++$+++  CURLYEND ELSE IF PARENTHESESSTART
CALL[java.util.prefs.Preferences,getBoolean,2,boolean] PARA[VAR[java.lang.String]] PARA[VAR[BOOLEAN]] +++$+++  VAR[BOOLEAN] PARENTHESESEND CURLYSTART RETURN
CALL[java.util.Map,get,1,V] PARA[VAR[java.lang.String]] +++$+++  RETURN PARENTHESESSTART TYPE[Boolean] PARENTHESESEND
CALL[java.util.prefs.Preferences,putInt,2,void] PARA[VAR[java.lang.String]] PARA[VAR[INT]] +++$+++  INT VAR[INT] PARENTHESESEND CURLYSTART
CALL[java.util.Map,remove,1,V] PARA[VAR[java.lang.String]] +++$+++  STRING VAR[java.lang.String] PARENTHESESEND CURLYSTART
CALL[javax.swing.ButtonGroup,add,1,void] PARA[VAR[javax.swing.JRadioButton]] +++$+++  TYPE[ButtonGroup] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.lang.String,isEmpty,0,boolean] +++$+++  PARENTHESESEND OP[bitwiseAnd] OP[bitwiseAnd] OP[not]
CALL[javax.swing.JList,getSelectedIndex,0,int] +++$+++  LEX[familyField.getText] PARENTHESESSTART PARENTHESESEND COMMA
CALL[javax.swing.JPanel,remove,1,void] PARA[VAR[java.awt.Component]] +++$+++  LEX[Component] VAR[java.awt.Component] PARENTHESESEND CURLYSTART
CALL[javax.swing.Timer,start,0,void] +++$+++  PARENTHESESSTART LEX[frame] PARENTHESESEND EOL
CALL[javax.swing.JLabel,getFont,0,java.awt.Font] +++$+++  EOL TYPE[Font] VAR[java.awt.Font] OP[assign]
CALL[javax.swing.JCheckBox,isSelected,0,boolean] +++$+++  PARENTHESESEND EOL LEX[browseButton.setEnabled] PARENTHESESSTART
CALL[javax.swing.JPopupMenu,add,1,javax.swing.JMenuItem] PARA[VAR[javax.swing.JMenuItem]] +++$+++  LEX[application] PARENTHESESEND PARENTHESESEND EOL
CALL[javax.swing.JDialog,dispose,0,void] +++$+++  LEX[ActionEvent] LEX[e] PARENTHESESEND CURLYSTART
CALL[javax.swing.JDialog,setVisible,1,void] PARA[VAR[BOOLEAN]] +++$+++  VAR[BOOLEAN] OP[assign] LEX[false] EOL
CALL[javax.swing.JCheckBox,setEnabled,1,void] PARA[VAR[BOOLEAN]] +++$+++  PARENTHESESSTART VAR[BOOLEAN] PARENTHESESEND EOL
CALL[javax.swing.JComboBox,setEnabled,1,void] PARA[VAR[BOOLEAN]] +++$+++  PARENTHESESSTART VAR[BOOLEAN] PARENTHESESEND EOL
CALL[java.io.FileFilter,accept,1,boolean] PARA[VAR[java.io.File]] +++$+++  VAR[java.io.File] PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.String,compareTo,1,int] PARA[FIELD[net.sf.jabref.gui.importer.ImportFileFilter]] +++$+++  VAR[net.sf.jabref.gui.importer.ImportFileFilter] PARENTHESESEND CURLYSTART RETURN
CALL[java.awt.event.FocusEvent,getSource,0,java.lang.Object] +++$+++  OP[assign] PARENTHESESSTART TYPE[Component] PARENTHESESEND
CALL[javax.swing.JToolBar,addSeparator,0,void] +++$+++  PARENTHESESSTART LEX[false] PARENTHESESEND EOL
CALL[javax.swing.JToolBar,add,1,javax.swing.JButton] PARA[VAR[net.sf.jabref.gui.plaintextimport.TextInputDialog.PasteAction]] +++$+++  LEX[toolBar.addSeparator] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.awt.event.MouseEvent,getX,0,int] +++$+++  LEX[e.getComponent] PARENTHESESSTART PARENTHESESEND COMMA
CALL[javax.swing.text.StyledDocument,getStyle,1,javax.swing.text.Style] PARA[VAR[java.lang.String]] +++$+++  LEX[item.getLength] PARENTHESESSTART PARENTHESESEND COMMA
CALL[javax.swing.JButton,setEnabled,1,void] PARA[VAR[BOOLEAN]] +++$+++  PARENTHESESSTART VAR[BOOLEAN] PARENTHESESEND EOL
CALL[javax.swing.JList,getSelectedIndices,0,int[]] +++$+++  ARRAYSTART ARRAYEND VAR[INT] OP[assign]
CALL[java.util.Enumeration,hasMoreElements,0,boolean] +++$+++  PARENTHESESEND EOL WHILE PARENTHESESSTART
CALL[javax.swing.JList,addListSelectionListener,1,void] PARA[VAR[javax.swing.event.ListSelectionListener]] +++$+++  LEX[ListSelectionListener] VAR[javax.swing.event.ListSelectionListener] PARENTHESESEND CURLYSTART
CALL[javax.swing.DefaultListModel,add,2,void] PARA[VAR[INT]] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESSTART VAR[INT] PARENTHESESEND EOL
CALL[javax.swing.JList,setSelectedIndex,1,void] PARA[VAR[INT]] +++$+++  COMMA VAR[java.lang.String] PARENTHESESEND EOL
CALL[javax.swing.JButton,setOpaque,1,void] PARA[LIT[Boolean]] +++$+++  PARENTHESESSTART VAR[java.lang.String] PARENTHESESEND EOL
CALL[javax.swing.JPopupMenu,addSeparator,0,void] +++$+++  VAR[javax.swing.JMenuItem] PARENTHESESEND EOL CURLYEND
CALL[javax.swing.text.JTextComponent,getText,0,java.lang.String] +++$+++  LEX[doiUrl] OP[assign] LEX[DOI.build] PARENTHESESSTART
CALL[javax.swing.JButton,setEnabled,1,void] PARA[LIT[Boolean]] +++$+++  EOL CURLYEND ELSE CURLYSTART
CALL[javax.swing.JPopupMenu,show,3,void] PARA[CALL[java.awt.event.MouseEvent,getComponent]] PARA[CALL[java.awt.event.MouseEvent,getX]] PARA[CALL[java.awt.event.MouseEvent,getY]] +++$+++  LEX[MouseEvent] VAR[java.awt.event.MouseEvent] PARENTHESESEND CURLYSTART
CALL[javax.swing.text.JTextComponent,isEnabled,0,boolean] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[javax.swing.JPopupMenu,show,3,void] PARA[VAR[javax.swing.text.JTextComponent]] PARA[LIT[Integer]] PARA[CALL[javax.swing.text.JTextComponent,getHeight]] +++$+++  PARENTHESESEND COMMA PARENTHESESEND EOL
CALL[java.lang.String,length,0,int] +++$+++  VAR[java.lang.String] OP[assign] LEX[sno.substring] PARENTHESESSTART
CALL[java.lang.String,subSequence,2,java.lang.CharSequence] PARA[LIT[Integer]] PARA[CALL[java.lang.String,length]] +++$+++  LEX[alltext.insert] PARENTHESESSTART VAR[INT] COMMA
CALL[java.lang.String,substring,1,java.lang.String] PARA[LIT[Integer]] +++$+++  LEX[alltext.insert] PARENTHESESSTART VAR[INT] COMMA
CALL[java.lang.StringBuilder,insert,2,java.lang.StringBuilder] PARA[VAR[INT]] PARA[CALL[java.lang.String,substring]] +++$+++  COMMA VAR[INT] PARENTHESESEND EOL
CALL[javax.swing.text.JTextComponent,getSelectionStart,0,int] +++$+++  CURLYSTART INT VAR[INT] OP[assign]
CALL[javax.swing.text.JTextComponent,getText,0,java.lang.String] +++$+++  EOL TYPE[String] VAR[java.lang.String] OP[assign]
CALL[javax.swing.JTextArea,setWrapStyleWord,1,void] PARA[LIT[Boolean]] +++$+++  PARENTHESESSTART LEX[true] PARENTHESESEND EOL
CALL[java.util.List,add,1,boolean] PARA[CALL[java.lang.String,toLowerCase]] +++$+++  OP[assign] NULL PARENTHESESEND CURLYSTART
CALL[java.awt.Color,getGreen,0,int] +++$+++  OP[sum] LEX[two.getRed] PARENTHESESSTART PARENTHESESEND
CALL[java.util.List,size,0,int] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,containsKey,1,boolean] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.lang.String,indexOf,1,int] PARA[VAR[CHAR]] +++$+++  VAR[CHAR] PARENTHESESEND CURLYSTART RETURN
CALL[java.util.regex.Pattern,matcher,1,java.util.regex.Matcher] PARA[VAR[java.lang.String]] +++$+++  CURLYSTART TYPE[Matcher] VAR[java.util.regex.Matcher] OP[assign]
CALL[java.util.regex.Matcher,matches,0,boolean] +++$+++  PARENTHESESEND EOL RETURN PARENTHESESSTART
CALL[java.lang.Boolean,equals,1,boolean] PARA[FIELD[net.sf.jabref.logic.net.ProxyPreferences]] +++$+++  ELSE IF PARENTHESESSTART OP[not]
CALL[java.util.Map,get,1,V] PARA[VAR[java.lang.String]] +++$+++  CURLYSTART RETURN LEX[Optional.ofNullable] PARENTHESESSTART
CALL[java.util.Optional,get,0,T] +++$+++  PARENTHESESEND PARENTHESESEND CURLYSTART RETURN
CALL[java.util.List,size,0,int] +++$+++  PARENTHESESSTART PARENTHESESEND OP[not] OP[assign]
CALL[java.lang.String,getBytes,0,byte[]] +++$+++  LEX[IOException] CURLYSTART LEX[out.write] PARENTHESESSTART
CALL[java.io.Reader,read,0,int] +++$+++  PARENTHESESSTART PARENTHESESSTART VAR[INT] OP[assign]
CALL[java.lang.StringBuilder,length,0,int] +++$+++  CURLYEND CURLYEND IF PARENTHESESSTART
CALL[java.lang.String,length,0,int] +++$+++  OP[sum] LEX[PREFIX.substring] PARENTHESESSTART COMMA
CALL[java.lang.String,replaceAll,2,java.lang.String] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND EOL VAR[java.lang.String] OP[assign]
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  CURLYSTART CHAR VAR[CHAR] OP[assign]
CALL[java.util.List,size,0,int] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.String,toCharArray,0,char[]] +++$+++  ARRAYSTART ARRAYEND VAR[CHAR] OP[assign]
CALL[java.util.Optional,get,0,T] +++$+++  CURLYEND RETURN LEX[FileField.parse] PARENTHESESSTART
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[LIT[Stirng]] +++$+++  VAR[java.lang.String] COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[LIT[Stirng]] +++$+++  VAR[java.lang.String] COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[LIT[Stirng]] +++$+++  VAR[java.lang.String] COMMA PARENTHESESEND EOL
CALL[java.util.Map,get,1,V] PARA[VAR[java.lang.String]] +++$+++  RETURN PARENTHESESSTART TYPE[Boolean] PARENTHESESEND
CALL[java.util.Map,get,1,V] PARA[VAR[java.lang.String]] +++$+++  VAR[java.lang.String] PARENTHESESEND CURLYSTART RETURN
CALL[java.util.Set,contains,1,boolean] PARA[VAR[net.sf.jabref.logic.cleanup.CleanupPreset.CleanupStep]] +++$+++  VAR[net.sf.jabref.logic.cleanup.CleanupPreset.CleanupStep] PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.String,length,0,int] +++$+++  OP[assign] EOL VAR[INT] OP[lessThan]
CALL[java.lang.StringBuilder,toString,0,java.lang.String] +++$+++  PARENTHESESEND EOL CURLYEND RETURN
CALL[java.util.Map,get,1,V] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESEND PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Character]] +++$+++  EOL CURLYEND ELSE CURLYSTART
CALL[java.util.List,get,1,E] PARA[VAR[INT]] +++$+++  PARENTHESESEND CURLYSTART LEX[stringBuilder.append] PARENTHESESSTART
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Character]] +++$+++  VAR[INT] PARENTHESESEND PARENTHESESEND EOL
CALL[java.lang.StringBuilder,toString,0,java.lang.String] +++$+++  OP[sum] EOL CURLYEND RETURN
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Character]] +++$+++  PARENTHESESEND PARENTHESESEND PARENTHESESEND CURLYSTART
CALL[java.lang.StringBuffer,toString,0,java.lang.String] +++$+++  VAR[java.lang.StringBuffer] PARENTHESESEND EOL RETURN
CALL[java.lang.String,charAt,1,char] PARA[LIT[Integer]] +++$+++  CURLYSTART IF PARENTHESESSTART PARENTHESESSTART
CALL[java.lang.String,length,0,int] +++$+++  PARENTHESESEND OP[bitwiseOr] OP[bitwiseOr] PARENTHESESSTART
CALL[java.lang.String,charAt,1,char] PARA[LIT[Integer]] +++$+++  PARENTHESESSTART PARENTHESESSTART VAR[CHAR] OP[assign]
CALL[java.lang.String,length,0,int] +++$+++  OP[assign] EOL VAR[INT] OP[lessThan]
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  PARENTHESESEND CURLYSTART VAR[CHAR] OP[assign]
CALL[java.util.Set,contains,1,boolean] PARA[VAR[java.lang.String]] +++$+++  VAR[java.lang.String] PARENTHESESEND CURLYSTART RETURN
CALL[java.util.StringTokenizer,nextToken,0,java.lang.String] +++$+++  PARENTHESESEND CURLYSTART LEX[fieldList.add] PARENTHESESSTART
CALL[java.util.Optional,isPresent,0,boolean] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.lang.String,replaceAll,2,java.lang.String] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND EOL VAR[java.lang.String] OP[assign]
CALL[java.lang.String,equals,1,boolean] PARA[LIT[Stirng]] +++$+++  OP[assign] OP[assign] OP[bitwiseOr] OP[bitwiseOr]
CALL[java.lang.String,equals,1,boolean] PARA[LIT[Stirng]] +++$+++  EOL CURLYEND IF PARENTHESESSTART
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[LIT[Stirng]] +++$+++  LEX[m_transformationDictionary] PARENTHESESEND EOL CURLYEND
CALL[javax.swing.JTabbedPane,getTabCount,0,int] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[javax.swing.JTable,convertColumnIndexToModel,1,int] PARA[VAR[INT]] +++$+++  EOL INT VAR[INT] OP[assign]
CALL[javax.swing.JFrame,setVisible,1,void] PARA[LIT[Boolean]] +++$+++  OP[not] OP[assign] NULL PARENTHESESEND
CALL[java.awt.Container,getParent,0,java.awt.Container] +++$+++  ELSE CURLYSTART VAR[java.awt.Container] OP[assign]
CALL[java.lang.Exception,printStackTrace,0,void] +++$+++  TYPE[Exception] VAR[java.lang.Exception] PARENTHESESEND CURLYSTART
CALL[java.util.Vector,elementAt,1,E] PARA[VAR[INT]] +++$+++  OP[assign] PARENTHESESSTART TYPE[BeanConnection] PARENTHESESEND
CALL[java.util.Vector,elementAt,1,E] PARA[VAR[INT]] +++$+++  OP[assign] PARENTHESESSTART TYPE[BeanConnection] PARENTHESESEND
CALL[java.util.Vector,size,0,int] +++$+++  OP[assign] EOL VAR[INT] OP[lessThan]
CALL[java.util.Vector,size,0,int] +++$+++  OP[assign] EOL VAR[INT] OP[lessThan]
CALL[javax.swing.JComponent,repaint,0,void] +++$+++  COMMA VAR[java.beans.EventSetDescriptor] PARENTHESESEND EOL
CALL[java.lang.Exception,printStackTrace,0,void] +++$+++  TYPE[Exception] VAR[java.lang.Exception] PARENTHESESEND CURLYSTART
CALL[java.awt.FontMetrics,stringWidth,1,int] PARA[VAR[java.lang.String]] +++$+++  EOL INT VAR[INT] OP[assign]
CALL[java.lang.String,length,0,int] +++$+++  PARENTHESESEND OP[greaterThan] OP[bitwiseAnd] OP[bitwiseAnd]
CALL[javax.swing.JComponent,setOpaque,1,void] PARA[LIT[Boolean]] +++$+++  LEX[component.isOpaque] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.awt.image.BufferedImage,createGraphics,0,java.awt.Graphics2D] +++$+++  EOL TYPE[Graphics2D] VAR[java.awt.Graphics2D] OP[assign]
CALL[java.awt.Rectangle,getX,0,double] +++$+++  EOL LEX[g2d.translate] PARENTHESESSTART OP[sub]
CALL[java.lang.Exception,printStackTrace,0,void] +++$+++  TYPE[Exception] VAR[java.lang.Exception] PARENTHESESEND CURLYSTART
CALL[javax.swing.JRadioButton,isSelected,0,boolean] +++$+++  ELSE CURLYSTART LEX[m_Exp.setAdvanceDataSetFirst] PARENTHESESSTART
CALL[javax.swing.JCheckBox,isSelected,0,boolean] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[javax.swing.JTextField,setMinimumSize,1,void] PARA[VAR[java.awt.Dimension]] +++$+++  PARENTHESESSTART VAR[java.awt.Dimension] PARENTHESESEND EOL
CALL[javax.swing.DefaultListModel,size,0,int] +++$+++  CURLYEND LEX[m_EditBut.setEnabled] PARENTHESESSTART PARENTHESESSTART
CALL[javax.swing.JTextField,setEnabled,1,void] PARA[LIT[Boolean]] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND EOL
CALL[javax.swing.JTextField,getText,0,java.lang.String] +++$+++  VAR[INT] OP[assign] LEX[Integer.parseInt] PARENTHESESSTART
CALL[javax.swing.JFrame,dispose,0,void] +++$+++  LEX[WindowEvent] LEX[e] PARENTHESESEND CURLYSTART
CALL[javax.swing.JTextField,getText,0,java.lang.String] +++$+++  VAR[INT] OP[assign] LEX[Integer.parseInt] PARENTHESESSTART
CALL[javax.swing.DefaultListModel,clear,0,void] +++$+++  LEX[m_Results.clear] PARENTHESESSTART PARENTHESESEND EOL
CALL[javax.swing.JList,getSelectedIndex,0,int] +++$+++  EOL INT VAR[INT] OP[assign]
CALL[javax.swing.JList,getSelectedIndex,0,int] +++$+++  EOL INT VAR[INT] OP[assign]
CALL[javax.swing.JList,setSelectedValue,2,void] PARA[VAR[java.lang.String]] PARA[LIT[Boolean]] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND EOL
CALL[javax.swing.JTextField,getText,0,java.lang.String] +++$+++  PARENTHESESEND CURLYSTART RETURN PARENTHESESSTART
CALL[java.io.PrintStream,flush,0,void] +++$+++  LEX[finished] PARENTHESESSTART PARENTHESESEND CURLYSTART
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[LIT[Character]] +++$+++  OP[assign] OP[assign] PARENTHESESEND PARENTHESESEND
CALL[java.awt.Color,getRed,0,int] +++$+++  CURLYSTART INT VAR[INT] OP[assign]
CALL[java.awt.event.MouseEvent,getX,0,int] +++$+++  ELSE CURLYSTART LEX[p2.searchPoints] PARENTHESESSTART
CALL[javax.swing.JList,getSelectedIndices,0,int[]] +++$+++  LEX[false] EOL VAR[INT] OP[assign]
CALL[weka.gui.boundaryvisualizer.BoundaryPanel.PlotPanel,getHeight,0,int] +++$+++  EOL INT VAR[INT] OP[assign]
CALL[java.lang.Thread,start,0,void] +++$+++  PARENTHESESSTART LEX[Thread.MIN_PRIORITY] PARENTHESESEND EOL
CALL[javax.swing.JTable,getParent,0,java.awt.Container] +++$+++  OP[assign] PARENTHESESSTART TYPE[JViewport] PARENTHESESEND
CALL[java.util.Vector,elementAt,1,E] PARA[VAR[INT]] +++$+++  OP[assign] PARENTHESESSTART TYPE[String] PARENTHESESEND
CALL[java.util.Vector,size,0,int] +++$+++  EOL CURLYEND VAR[INT] OP[assign]
CALL[javax.swing.JTextField,setText,1,void] PARA[VAR[java.lang.String]] +++$+++  VAR[java.lang.String] OP[assign] VAR[java.lang.String] EOL
CALL[javax.swing.JTextField,getText,0,java.lang.String] +++$+++  PARENTHESESEND CURLYSTART VAR[java.lang.String] OP[assign]
CALL[java.util.Iterator,hasNext,0,boolean] +++$+++  PARENTHESESEND EOL WHILE PARENTHESESSTART
CALL[java.lang.String,length,0,int] +++$+++  OP[assign] EOL VAR[INT] OP[lessThan]
CALL[java.util.Vector,elementAt,1,E] PARA[VAR[INT]] +++$+++  RETURN PARENTHESESSTART TYPE[String] PARENTHESESEND
CALL[java.io.PrintWriter,println,1,void] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESSTART VAR[BOOLEAN] PARENTHESESEND CURLYSTART
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.io.PrintWriter,print,1,void] PARA[LIT[Stirng]] +++$+++  LEX[memberSpecification.annotationType] PARENTHESESEND PARENTHESESEND EOL
CALL[java.util.List,size,0,int] +++$+++  OP[assign] NEW TYPE[ArrayList] PARENTHESESSTART
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  CURLYSTART CHAR VAR[CHAR] OP[assign]
CALL[java.lang.String,indexOf,1,int] PARA[LIT[Character]] +++$+++  OP[greaterThan] OP[assign] OP[bitwiseOr] OP[bitwiseOr]
CALL[java.lang.String,indexOf,1,int] PARA[LIT[Character]] +++$+++  OP[greaterThan] OP[assign] OP[bitwiseOr] OP[bitwiseOr]
CALL[java.lang.String,indexOf,1,int] PARA[LIT[Character]] +++$+++  OP[greaterThan] OP[assign] OP[bitwiseOr] OP[bitwiseOr]
CALL[java.lang.String,lastIndexOf,1,int] PARA[VAR[CHAR]] +++$+++  CURLYSTART INT VAR[INT] OP[assign]
CALL[java.lang.String,length,0,int] +++$+++  WHILE PARENTHESESSTART VAR[INT] OP[lessThan]
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  VAR[INT] PARENTHESESEND OP[assign] OP[assign]
CALL[java.lang.String,hashCode,0,int] +++$+++  OP[assign] NULL OP[ternaryTrue] OP[ternaryFalse]
CALL[javax.swing.JList,setSelectedIndices,1,void] PARA[VAR[INT]] +++$+++  ARRAYEND PARENTHESESEND EOL CURLYEND
CALL[java.lang.Thread,start,0,void] +++$+++  PARENTHESESSTART VAR[proguard.gui.splash.SplashPanel.MyAnimator] PARENTHESESEND EOL
CALL[java.awt.Graphics2D,clip,1,void] PARA[VAR[java.awt.Shape]] +++$+++  LEX[Shape] VAR[java.awt.Shape] PARENTHESESEND CURLYSTART
CALL[java.awt.Graphics2D,fillPolygon,3,void] PARA[VAR[INT]] PARA[VAR[INT]] PARA[VAR[INT]] +++$+++  INT VAR[INT] PARENTHESESEND CURLYSTART
CALL[java.awt.Graphics2D,fillRect,4,void] PARA[VAR[INT]] PARA[VAR[INT]] PARA[VAR[INT]] PARA[VAR[INT]] +++$+++  INT VAR[INT] PARENTHESESEND CURLYSTART
CALL[java.awt.Graphics2D,getBackground,0,java.awt.Color] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.awt.Graphics2D,setClip,4,void] PARA[VAR[INT]] PARA[VAR[INT]] PARA[VAR[INT]] PARA[VAR[INT]] +++$+++  INT VAR[INT] PARENTHESESEND CURLYSTART
CALL[javax.swing.JComponent,setPreferredSize,1,void] PARA[VAR[java.awt.Dimension]] +++$+++  PARENTHESESSTART VAR[INT] PARENTHESESEND EOL
CALL[java.lang.String,hashCode,0,int] +++$+++  OP[assign] NULL OP[ternaryTrue] OP[ternaryFalse]
CALL[java.lang.String,length,0,int] +++$+++  CURLYSTART RETURN VAR[INT] OP[lessThan]
CALL[java.lang.String,length,0,int] +++$+++  WHILE PARENTHESESSTART VAR[INT] OP[lessThan]
CALL[java.lang.String,charAt,1,char] PARA[LIT[Integer]] +++$+++  VAR[java.lang.String] PARENTHESESEND CURLYSTART RETURN
CALL[java.io.DataOutput,write,1,void] PARA[VAR[INT]] +++$+++  PARENTHESESEND CURLYSTART TRY CURLYSTART
CALL[java.io.DataInput,readByte,0,byte] +++$+++  CURLYSTART TRY CURLYSTART RETURN
CALL[java.io.IOException,getMessage,0,java.lang.String] +++$+++  THROW NEW TYPE[RuntimeException] PARENTHESESSTART
CALL[java.io.DataInput,readLine,0,java.lang.String] +++$+++  CURLYSTART TRY CURLYSTART RETURN
CALL[java.io.IOException,getMessage,0,java.lang.String] +++$+++  THROW NEW TYPE[RuntimeException] PARENTHESESSTART
CALL[java.util.Map,clear,0,void] +++$+++  LEX[clear] PARENTHESESSTART PARENTHESESEND CURLYSTART
CALL[java.lang.String,startsWith,1,boolean] PARA[VAR[java.lang.String]] +++$+++  OP[assign] NULL OP[bitwiseAnd] OP[bitwiseAnd]
CALL[java.lang.String,length,0,int] +++$+++  CURLYSTART VAR[INT] OP[sum] OP[assign]
CALL[java.awt.FontMetrics,stringWidth,1,int] PARA[VAR[java.lang.String]] +++$+++  CURLYSTART INT VAR[INT] OP[assign]
CALL[java.awt.FontMetrics,stringWidth,1,int] PARA[LIT[Stirng]] +++$+++  CURLYEND INT VAR[INT] OP[assign]
CALL[java.lang.String,substring,2,java.lang.String] PARA[LIT[Integer]] PARA[VAR[INT]] +++$+++  VAR[INT] OP[greaterThan] OP[assign] OP[ternaryTrue]
CALL[javax.swing.JComponent,setBackground,1,void] PARA[CALL[null,getColor]] +++$+++  EOL CURLYEND ELSE CURLYSTART
CALL[javax.swing.JComponent,setBorder,1,void] PARA[CALL[javax.swing.JComponent,getBorder]] +++$+++  PARENTHESESEND PARENTHESESEND EOL CURLYEND
CALL[javax.swing.DefaultCellEditor,shouldSelectCell,1,boolean] PARA[VAR[java.util.EventObject]] +++$+++  VAR[java.util.EventObject] PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.String,toLowerCase,0,java.lang.String] +++$+++  PARENTHESESEND CURLYSTART VAR[java.lang.String] OP[assign]
CALL[java.awt.Graphics,setColor,1,void] PARA[VAR[java.awt.Color]] +++$+++  PARENTHESESSTART VAR[BOOLEAN] PARENTHESESEND CURLYSTART
CALL[java.util.List,add,1,boolean] PARA[VAR[net.sourceforge.ganttproject.task.algorithm.DependencyGraph.Listener]] +++$+++  LEX[Listener] VAR[net.sourceforge.ganttproject.task.algorithm.DependencyGraph.Listener] PARENTHESESEND CURLYSTART
CALL[javax.swing.JFileChooser,addChoosableFileFilter,1,void] PARA[FIELD[ImporterFactory]] +++$+++  ARRAYEND PARENTHESESEND EOL CURLYEND
CALL[java.util.List,size,0,int] +++$+++  OP[bitwiseAnd] OP[bitwiseAnd] VAR[INT] OP[lessThan]
CALL[java.awt.Container,add,1,java.awt.Component] PARA[VAR[javax.swing.JPanel]] +++$+++  COMMA LEX[BorderLayout.SOUTH] PARENTHESESEND EOL
CALL[javax.swing.JTextField,getText,0,java.lang.String] +++$+++  CURLYSTART TYPE[String] VAR[java.lang.String] OP[assign]
CALL[javax.swing.JComboBox,getSelectedItem,0,java.lang.Object] +++$+++  OP[assign] PARENTHESESSTART LEX[DependencyTableModel.TaskComboItem] PARENTHESESEND
CALL[javax.swing.JLabel,setEnabled,1,void] PARA[LIT[Boolean]] +++$+++  PARENTHESESSTART LEX[true] PARENTHESESEND EOL
CALL[java.io.File,isDirectory,0,boolean] +++$+++  EOL CURLYEND IF PARENTHESESSTART
CALL[java.io.File,getAbsolutePath,0,java.lang.String] +++$+++  PARENTHESESEND CURLYSTART LEX[myTextField.setText] PARENTHESESSTART
CALL[java.awt.Container,getLayout,0,java.awt.LayoutManager] +++$+++  OP[assign] PARENTHESESSTART TYPE[SpringLayout] PARENTHESESEND
CALL[javax.swing.Box,add,1,java.awt.Component] PARA[CALL[null,createHorizontalStrut]] +++$+++  PARENTHESESSTART VAR[javax.swing.JButton] PARENTHESESEND EOL
CALL[javax.swing.Box,add,1,java.awt.Component] PARA[CALL[null,createHorizontalStrut]] +++$+++  PARENTHESESEND PARENTHESESEND PARENTHESESEND CURLYSTART
CALL[javax.swing.JEditorPane,setText,1,void] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESSTART VAR[javax.swing.event.HyperlinkListener] PARENTHESESEND EOL
CALL[javax.swing.JComponent,setBorder,1,void] PARA[CALL[null,createEmptyBorder]] +++$+++  INT VAR[INT] PARENTHESESEND CURLYSTART
CALL[java.util.ArrayList,size,0,int] +++$+++  CURLYSTART RETURN VAR[INT] OP[lessThan]
CALL[javax.swing.JSplitPane,setDividerLocation,1,void] PARA[VAR[INT]] +++$+++  INT VAR[INT] PARENTHESESEND CURLYSTART
CALL[java.awt.print.Printable,print,3,int] PARA[VAR[java.awt.Graphics]] PARA[VAR[java.awt.print.PageFormat]] PARA[VAR[INT]] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.lang.Throwable,getMessage,0,java.lang.String] +++$+++  PARENTHESESEND CURLYSTART LEX[myErrors.add] PARENTHESESSTART
CALL[javax.swing.tree.TreeNode,getIndex,1,int] PARA[VAR[javax.swing.tree.TreeNode]] +++$+++  CURLYEND INT VAR[INT] OP[assign]
CALL[java.util.Calendar,getTime,0,java.util.Date] +++$+++  CURLYSTART RETURN LEX[currentDateFormat.format] PARENTHESESSTART
CALL[java.util.ArrayList,add,1,boolean] PARA[VAR[net.sourceforge.ganttproject.language.GanttLanguage.Listener]] +++$+++  LEX[Listener] VAR[net.sourceforge.ganttproject.language.GanttLanguage.Listener] PARENTHESESEND CURLYSTART
CALL[java.util.Set,add,1,boolean] PARA[CALL[java.util.Iterator,next]] +++$+++  PARENTHESESEND EOL PARENTHESESEND CURLYSTART
CALL[java.util.Set,containsAll,1,boolean] PARA[VAR[java.util.Set]] +++$+++  PARENTHESESEND EOL CURLYEND RETURN
CALL[java.awt.Font,deriveFont,1,java.awt.Font] PARA[VAR[FLOAT]] +++$+++  VAR[java.awt.Font] EOL VAR[java.awt.Font] OP[assign]
CALL[java.util.Date,equals,1,boolean] PARA[FIELD[biz.ganttproject.core.chart.grid.Offset]] +++$+++  FIELD[myOffsetEnd,biz.ganttproject.core.chart.grid.Offset] PARENTHESESEND OP[bitwiseAnd] OP[bitwiseAnd]
CALL[biz.ganttproject.core.time.GanttCalendar,setTime,1,void] PARA[VAR[java.util.Date]] +++$+++  PARENTHESESSTART VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.lang.String,hashCode,0,int] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.util.List,size,0,int] +++$+++  OP[assign] EOL VAR[INT] OP[lessThan]
CALL[java.util.ArrayList,get,1,E] PARA[VAR[INT]] +++$+++  VAR[INT] PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.String,contains,1,boolean] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.lang.String,contains,1,boolean] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART PARENTHESESEND OP[bitwiseOr] OP[bitwiseOr]
CALL[java.util.Collection,removeAll,1,boolean] PARA[VAR[java.util.Collection]] +++$+++  PARENTHESESEND EOL CURLYEND CURLYEND
CALL[java.util.Collection,addAll,1,boolean] PARA[VAR[java.util.Collection]] +++$+++  PARENTHESESSTART VAR[java.util.Collection] PARENTHESESEND EOL
CALL[java.util.List,addAll,1,boolean] PARA[CALL[java.util.Map,get]] +++$+++  VAR[java.lang.String] PARENTHESESEND PARENTHESESEND CURLYSTART
CALL[java.util.List,get,1,E] PARA[VAR[INT]] +++$+++  PARENTHESESEND PARENTHESESEND CURLYSTART RETURN
CALL[java.util.List,size,0,int] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.util.List,contains,1,boolean] PARA[VAR[java.lang.Object]] +++$+++  CURLYSTART IF PARENTHESESSTART OP[not]
CALL[java.awt.Container,getInsets,0,java.awt.Insets] +++$+++  FINAL TYPE[Insets] VAR[java.awt.Insets] OP[assign]
CALL[java.util.List,get,1,E] PARA[LIT[Integer]] +++$+++  OP[assign] NEW TYPE[PopupToolBoxButton] PARENTHESESSTART
CALL[javax.swing.JToolBar,setRollover,1,void] PARA[LIT[Boolean]] +++$+++  LEX[tbf.createToolBar] PARENTHESESSTART PARENTHESESEND EOL
CALL[javax.swing.JPanel,add,1,java.awt.Component] PARA[VAR[javax.swing.JToolBar]] +++$+++  LEX[ptb] PARENTHESESEND EOL CURLYEND
CALL[java.util.Map,containsKey,1,boolean] PARA[VAR[java.lang.String]] +++$+++  VAR[java.lang.String] PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.String,equals,1,boolean] PARA[CALL[java.lang.reflect.Method,getName]] +++$+++  OP[assign] NULL OP[bitwiseAnd] OP[bitwiseAnd]
CALL[java.util.Iterator,hasNext,0,boolean] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[LIT[Stirng]] +++$+++  VAR[INT] OP[greaterThan] PARENTHESESEND CURLYSTART
CALL[java.util.List,add,1,boolean] PARA[VAR[org.argouml.cognitive.ListSet.T]] +++$+++  PARENTHESESSTART VAR[org.argouml.cognitive.ListSet.T] PARENTHESESEND EOL
CALL[java.util.List,add,2,void] PARA[VAR[INT]] PARA[VAR[org.argouml.cognitive.ListSet.T]] +++$+++  VAR[org.argouml.cognitive.ListSet.T] PARENTHESESEND PARENTHESESEND CURLYSTART
CALL[java.util.List,listIterator,0,java.util.ListIterator<E>] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.util.List,iterator,0,java.util.Iterator<E>] +++$+++  PARENTHESESSTART TYPE[Iterator] VAR[java.util.Iterator] OP[assign]
CALL[java.util.Iterator,next,0,E] +++$+++  OP[assign] PARENTHESESSTART TYPE[String] PARENTHESESEND
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[CALL[java.lang.String,substring]] +++$+++  PARENTHESESSTART VAR[INT] PARENTHESESEND EOL
CALL[java.util.Iterator,hasNext,0,boolean] +++$+++  PARENTHESESEND EOL WHILE PARENTHESESSTART
CALL[java.lang.String,length,0,int] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[javax.swing.Action,putValue,2,void] PARA[LIT[Stirng]] PARA[CALL[null,getKeyStroke]] +++$+++  COMMA VAR[java.lang.String] PARENTHESESEND EOL
CALL[javax.swing.Action,putValue,2,void] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  COMMA VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.lang.String,length,0,int] +++$+++  OP[assign] NULL OP[bitwiseOr] OP[bitwiseOr]
CALL[java.util.List,get,1,E] PARA[LIT[Integer]] +++$+++  PARENTHESESSTART PARENTHESESEND OP[greaterThan] OP[ternaryTrue]
CALL[java.util.Set,size,0,int] +++$+++  OP[assign] NULL OP[bitwiseOr] OP[bitwiseOr]
CALL[java.lang.String,equals,1,boolean] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.awt.datatransfer.DataFlavor,match,1,boolean] PARA[VAR[java.awt.datatransfer.DataFlavor]] +++$+++  VAR[java.awt.datatransfer.DataFlavor] PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.String,length,0,int] +++$+++  OP[assign] NULL OP[bitwiseOr] OP[bitwiseOr]
CALL[java.util.Map,get,1,V] PARA[CALL[null,valueOf]] +++$+++  PARENTHESESEND PARENTHESESEND CURLYSTART RETURN
CALL[java.awt.Point,getX,0,double] +++$+++  PARENTHESESSTART PARENTHESESSTART INT PARENTHESESEND
CALL[java.util.Iterator,next,0,E] +++$+++  PARENTHESESEND CURLYSTART VAR[java.lang.Object] OP[assign]
CALL[java.util.Iterator,hasNext,0,boolean] +++$+++  PARENTHESESEND CURLYSTART WHILE PARENTHESESSTART
CALL[java.util.Set,contains,1,boolean] PARA[VAR[java.lang.Object]] +++$+++  VAR[java.lang.Object] PARENTHESESEND CURLYSTART RETURN
CALL[java.util.Set,toString,0,java.lang.String] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.util.Set,toArray,0,java.lang.Object[]] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.util.Set,containsAll,1,boolean] PARA[VAR[java.util.Collection]] +++$+++  VAR[java.util.Collection] PARENTHESESEND CURLYSTART RETURN
CALL[java.util.Iterator,hasNext,0,boolean] +++$+++  PARENTHESESEND EOL WHILE PARENTHESESSTART
CALL[javax.swing.JDialog,setVisible,1,void] PARA[LIT[Boolean]] +++$+++  OP[assign] NULL PARENTHESESEND CURLYSTART
CALL[java.lang.String,lastIndexOf,1,int] PARA[VAR[java.lang.String]] +++$+++  CURLYSTART INT VAR[INT] OP[assign]
CALL[java.lang.String,startsWith,1,boolean] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND OP[bitwiseAnd] OP[bitwiseAnd] OP[not]
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[VAR[java.lang.String]] +++$+++  OP[assign] NULL PARENTHESESEND CURLYSTART
CALL[java.util.Iterator,next,0,E] +++$+++  CURLYSTART TYPE[Object] VAR[java.lang.Object] OP[assign]
CALL[java.util.Hashtable,containsKey,1,boolean] PARA[VAR[java.lang.String]] +++$+++  VAR[java.lang.String] PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.String,indexOf,1,int] PARA[LIT[Character]] +++$+++  PARENTHESESSTART PARENTHESESEND OP[assign] OP[assign]
CALL[java.lang.StringBuffer,length,0,int] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[javax.swing.Action,isEnabled,0,boolean] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.String,endsWith,1,boolean] PARA[LIT[Stirng]] +++$+++  CURLYEND ELSE IF PARENTHESESSTART
CALL[java.lang.String,endsWith,1,boolean] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.util.List,add,1,boolean] PARA[VAR[java.lang.String]] +++$+++  STRING VAR[java.lang.String] PARENTHESESEND CURLYSTART
CALL[java.util.List,clear,0,void] +++$+++  PARENTHESESSTART LEX[attributeSetting] PARENTHESESEND EOL
CALL[java.net.URL,getFile,0,java.lang.String] +++$+++  PARENTHESESEND CURLYSTART LEX[paths.add] PARENTHESESSTART
CALL[java.util.Collection,remove,1,boolean] PARA[VAR[java.lang.Object]] +++$+++  LEX[Object] VAR[java.lang.Object] PARENTHESESEND CURLYSTART
CALL[java.util.StringTokenizer,hasMoreTokens,0,boolean] +++$+++  VAR[INT] OP[lessThan] OP[bitwiseAnd] OP[bitwiseAnd]
CALL[java.lang.String,startsWith,1,boolean] PARA[LIT[Stirng]] +++$+++  CURLYSTART IF PARENTHESESSTART OP[not]
CALL[java.util.List,add,1,boolean] PARA[CALL[java.util.StringTokenizer,nextToken]] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND CURLYSTART
CALL[javax.swing.JPasswordField,setEnabled,1,void] PARA[VAR[BOOLEAN]] +++$+++  PARENTHESESSTART VAR[BOOLEAN] PARENTHESESEND EOL
CALL[java.lang.String,length,0,int] +++$+++  FINAL INT VAR[INT] OP[assign]
CALL[java.lang.StringBuffer,toString,0,java.lang.String] +++$+++  LEX[node.put] PARENTHESESSTART VAR[java.lang.String] COMMA
CALL[java.util.List,listIterator,0,java.util.ListIterator<E>] +++$+++  NULL EOL VAR[java.util.ListIterator] OP[assign]
CALL[java.util.prefs.Preferences,putInt,2,void] PARA[VAR[java.lang.String]] PARA[VAR[INT]] +++$+++  INT VAR[INT] PARENTHESESEND CURLYSTART
CALL[java.util.prefs.Preferences,put,2,void] PARA[VAR[java.lang.String]] PARA[CALL[java.io.File,getAbsolutePath]] +++$+++  LEX[File] VAR[java.io.File] PARENTHESESEND CURLYSTART
CALL[java.awt.Dimension,getWidth,0,double] +++$+++  COMMA PARENTHESESSTART INT PARENTHESESEND
CALL[java.util.List,add,1,boolean] PARA[VAR[jmemorize.core.CardSide.CardSideObserver]] +++$+++  LEX[CardSideObserver] VAR[jmemorize.core.CardSide.CardSideObserver] PARENTHESESEND CURLYSTART
CALL[javax.swing.ImageIcon,getIconHeight,0,int] +++$+++  EOL INT VAR[INT] OP[assign]
CALL[java.lang.Boolean,booleanValue,0,boolean] +++$+++  OP[assign] NULL OP[bitwiseAnd] OP[bitwiseAnd]
CALL[java.util.Set,remove,1,boolean] PARA[VAR[java.io.File]] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND EOL
CALL[java.io.File,listFiles,0,java.io.File[]] +++$+++  ARRAYSTART ARRAYEND VAR[java.io.File] OP[assign]
CALL[java.io.File,getName,0,java.lang.String] +++$+++  LEX[repository.addImage] PARENTHESESSTART VAR[java.io.FileInputStream] COMMA
CALL[java.util.List,add,1,boolean] PARA[VAR[jmemorize.core.learn.LearnHistory.SessionSummary]] +++$+++  OP[not] OP[assign] NULL PARENTHESESEND
CALL[java.util.logging.Logger,warning,1,void] PARA[LIT[Stirng]] +++$+++  LEX[Main.getLogger] PARENTHESESSTART PARENTHESESEND EOL
CALL[javax.swing.text.StyledEditorKit,getInputAttributes,0,javax.swing.text.MutableAttributeSet] +++$+++  EOL TYPE[MutableAttributeSet] VAR[javax.swing.text.MutableAttributeSet] OP[assign]
CALL[javax.swing.text.MutableAttributeSet,removeAttributes,1,void] PARA[CALL[javax.swing.text.MutableAttributeSet,getAttributeNames]] +++$+++  LEX[kit.getInputAttributes] PARENTHESESSTART PARENTHESESEND EOL
CALL[javax.swing.Timer,stop,0,void] +++$+++  LEX[stop] PARENTHESESSTART PARENTHESESEND CURLYSTART
CALL[javax.swing.JPanel,getLayout,0,java.awt.LayoutManager] +++$+++  OP[assign] PARENTHESESSTART TYPE[CardLayout] PARENTHESESEND
CALL[javax.swing.JList,setVisibleRowCount,1,void] PARA[LIT[Integer]] +++$+++  LEX[buildFontPanel] PARENTHESESSTART PARENTHESESEND CURLYSTART
CALL[java.util.Map,get,1,V] PARA[VAR[java.lang.String]] +++$+++  OP[assign] PARENTHESESSTART TYPE[String] PARENTHESESEND
CALL[java.util.Iterator,next,0,E] +++$+++  OP[assign] PARENTHESESSTART TYPE[ImageWriter] PARENTHESESEND
CALL[java.io.FileInputStream,read,1,int] PARA[VAR[BYTE]] +++$+++  CURLYSTART INT VAR[INT] OP[assign]
CALL[java.util.zip.ZipOutputStream,close,0,void] +++$+++  CURLYEND CURLYEND FINALLY CURLYSTART
CALL[java.util.zip.ZipOutputStream,closeEntry,0,void] +++$+++  PARENTHESESSTART PARENTHESESEND EOL CURLYEND
CALL[java.lang.String,length,0,int] +++$+++  LEX[baseFileName.length] PARENTHESESSTART PARENTHESESEND OP[sub]
CALL[java.util.List,add,1,boolean] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESSTART PARENTHESESEND EOL CURLYEND
CALL[javax.swing.JScrollPane,setBorder,1,void] PARA[CALL[null,createEmptyBorder]] +++$+++  PARENTHESESSTART VAR[java.awt.image.RenderedImage] PARENTHESESEND EOL
CALL[java.awt.Graphics2D,fill,1,void] PARA[VAR[java.awt.geom.GeneralPath]] +++$+++  LEX[filledPolygon.closePath] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.awt.image.ColorModel,createCompatibleWritableRaster,2,java.awt.image.WritableRaster] PARA[CALL[java.awt.image.BufferedImage,getWidth]] PARA[CALL[java.awt.image.BufferedImage,getHeight]] +++$+++  TYPE[BufferedImage] PARENTHESESSTART VAR[java.awt.image.ColorModel] COMMA
CALL[java.lang.String,split,1,java.lang.String[]] PARA[LIT[Stirng]] +++$+++  ARRAYSTART ARRAYEND VAR[java.lang.String] OP[assign]
CALL[javax.swing.InputMap,get,1,java.lang.Object] PARA[VAR[javax.swing.KeyStroke]] +++$+++  CURLYSTART TYPE[Object] VAR[java.lang.Object] OP[assign]
CALL[javax.swing.JProgressBar,getMinimum,0,int] +++$+++  PARENTHESESEND EOL LEX[progressBar.setValue] PARENTHESESSTART
CALL[javax.swing.JFileChooser,getIcon,1,javax.swing.Icon] PARA[VAR[java.io.File]] +++$+++  OP[assign] NULL EOL RETURN
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[VAR[CHAR]] +++$+++  OP[assign] PARENTHESESEND PARENTHESESEND CURLYSTART
CALL[java.lang.String,equals,1,boolean] PARA[VAR[java.lang.String]] +++$+++  VAR[java.lang.String] PARENTHESESEND OP[bitwiseOr] OP[bitwiseOr]
CALL[java.io.InputStream,read,1,int] PARA[VAR[BYTE]] +++$+++  DO CURLYSTART VAR[INT] OP[assign]
CALL[java.util.Map,get,1,V] PARA[VAR[java.lang.Object]] +++$+++  OP[assign] PARENTHESESSTART TYPE[List] PARENTHESESEND
CALL[java.util.Iterator,hasNext,0,boolean] +++$+++  NULL PARENTHESESEND OP[bitwiseAnd] OP[bitwiseAnd]
CALL[java.lang.String,toLowerCase,0,java.lang.String] +++$+++  LEX[Collections.binarySearch] PARENTHESESSTART VAR[java.util.List] COMMA
CALL[java.awt.image.BufferedImage,createGraphics,0,java.awt.Graphics2D] +++$+++  EOL TYPE[Graphics2D] VAR[java.awt.Graphics2D] OP[assign]
CALL[java.awt.Graphics2D,fillRect,4,void] PARA[LIT[Integer]] PARA[LIT[Integer]] PARA[VAR[INT]] PARA[VAR[INT]] +++$+++  PARENTHESESSTART VAR[java.awt.Color] PARENTHESESEND EOL
CALL[java.awt.image.ColorModel,getColorSpace,0,java.awt.color.ColorSpace] +++$+++  EOL TYPE[ColorSpace] VAR[java.awt.color.ColorSpace] OP[assign]
CALL[java.awt.Color,getBlue,0,int] +++$+++  LEX[color.getGreen] PARENTHESESSTART PARENTHESESEND COMMA
CALL[java.util.Map,get,1,V] PARA[VAR[java.lang.String]] +++$+++  CURLYSTART TYPE[Object] VAR[java.lang.Object] OP[assign]
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.lang.String]] +++$+++  COMMA VAR[java.lang.Object] PARENTHESESEND EOL
CALL[java.util.List,remove,1,boolean] PARA[VAR[java.awt.Component]] +++$+++  OP[ternaryFalse] OP[sum] VAR[java.awt.Component] EOL
CALL[java.lang.String,equals,1,boolean] PARA[VAR[java.lang.String]] +++$+++  NULL EOL IF PARENTHESESSTART
CALL[java.lang.String,equals,1,boolean] PARA[VAR[java.lang.String]] +++$+++  VAR[java.lang.String] PARENTHESESEND OP[bitwiseOr] OP[bitwiseOr]
CALL[java.io.File,getAbsolutePath,0,java.lang.String] +++$+++  PARENTHESESEND CURLYSTART LEX[targetDirField.setText] PARENTHESESSTART
CALL[javax.swing.JFileChooser,setApproveButtonText,1,void] PARA[VAR[java.lang.String]] +++$+++  LEX[localeTools.getMessage] PARENTHESESSTART PARENTHESESEND EOL
CALL[javax.swing.JMenuItem,setEnabled,1,void] PARA[VAR[BOOLEAN]] +++$+++  PARENTHESESSTART VAR[BOOLEAN] PARENTHESESEND EOL
CALL[java.awt.event.ActionEvent,getID,0,int] +++$+++  LEX[event.getSource] PARENTHESESSTART PARENTHESESEND COMMA
CALL[java.util.Iterator,hasNext,0,boolean] +++$+++  PARENTHESESEND EOL WHILE PARENTHESESSTART
CALL[javax.swing.ListSelectionModel,clearSelection,0,void] +++$+++  LEX[clearSelection] PARENTHESESSTART PARENTHESESEND CURLYSTART
CALL[java.util.List,size,0,int] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.awt.event.ActionEvent,getSource,0,java.lang.Object] +++$+++  EOL TYPE[Object] VAR[java.lang.Object] OP[assign]
CALL[java.util.HashMap,get,1,V] PARA[VAR[java.lang.Object]] +++$+++  RETURN PARENTHESESSTART TYPE[Hashtable] PARENTHESESEND
CALL[java.lang.Exception,printStackTrace,0,void] +++$+++  TYPE[Exception] VAR[java.lang.Exception] PARENTHESESEND CURLYSTART
CALL[java.lang.Exception,printStackTrace,0,void] +++$+++  TYPE[Exception] VAR[java.lang.Exception] PARENTHESESEND CURLYSTART
CALL[javax.swing.JPopupMenu,add,1,javax.swing.JMenuItem] PARA[VAR[javax.swing.JMenuItem]] +++$+++  PARENTHESESSTART VAR[javax.swing.JMenuItem] PARENTHESESEND EOL
CALL[javax.swing.JPopupMenu,addSeparator,0,void] +++$+++  PARENTHESESSTART VAR[javax.swing.JMenuItem] PARENTHESESEND EOL
CALL[java.io.InputStream,close,0,void] +++$+++  FINALLY CURLYSTART TRY CURLYSTART
CALL[java.io.OutputStream,close,0,void] +++$+++  CURLYSTART CURLYEND TRY CURLYSTART
CALL[javax.swing.JTextField,getText,0,java.lang.String] +++$+++  LEX[findText.getText] PARENTHESESSTART PARENTHESESEND COMMA
CALL[java.io.DataInputStream,readInt,0,int] +++$+++  EOL INT VAR[INT] OP[assign]
CALL[java.util.ArrayList,get,1,E] PARA[VAR[INT]] +++$+++  VAR[INT] PARENTHESESEND CURLYSTART RETURN
CALL[java.io.PrintWriter,close,0,void] +++$+++  PARENTHESESSTART VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.io.BufferedReader,close,0,void] +++$+++  EOL CURLYEND FINALLY CURLYSTART
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[VAR[java.lang.String]] +++$+++  OP[assign] NULL PARENTHESESEND CURLYSTART
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  OP[assign] OP[assign] OP[bitwiseOr] OP[bitwiseOr]
CALL[java.awt.MenuItem,setActionCommand,1,void] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESSTART VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.io.ByteArrayOutputStream,write,3,void] PARA[VAR[BYTE]] PARA[LIT[Integer]] PARA[VAR[INT]] +++$+++  OP[assign] PARENTHESESEND BREAK EOL
CALL[java.util.Vector,size,0,int] +++$+++  PARENTHESESEND CURLYSTART LEX[redoItem.setEnabled] PARENTHESESSTART
CALL[java.awt.MenuItem,addActionListener,1,void] PARA[THIS[null]] +++$+++  PARENTHESESSTART VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.awt.Scrollbar,getValue,0,int] +++$+++  OP[multiply] LEX[Math.exp] PARENTHESESSTART PARENTHESESSTART
CALL[java.io.ByteArrayOutputStream,write,3,void] PARA[VAR[BYTE]] PARA[LIT[Integer]] PARA[VAR[INT]] +++$+++  OP[assign] PARENTHESESEND BREAK EOL
CALL[java.lang.String,length,0,int] +++$+++  PARENTHESESEND CURLYSTART LEX[pasteItem.setEnabled] PARENTHESESSTART
CALL[java.lang.Double,floatValue,0,float] +++$+++  RETURN NEW TYPE[Float] PARENTHESESSTART
CALL[java.lang.Double,byteValue,0,byte] +++$+++  RETURN NEW TYPE[Byte] PARENTHESESSTART
CALL[java.util.ResourceBundle,getString,1,java.lang.String] PARA[LIT[Stirng]] +++$+++  NULL PARENTHESESEND VAR[java.lang.String] OP[assign]
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[LIT[Character]] +++$+++  VAR[INT] OP[sum] OP[sum] PARENTHESESEND
CALL[java.util.Iterator,hasNext,0,boolean] +++$+++  LEX[findInList.iterator] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.util.LinkedList,add,2,void] PARA[VAR[INT]] PARA[VAR[java.lang.Object]] +++$+++  LEX[Object] VAR[java.lang.Object] PARENTHESESEND CURLYSTART
CALL[java.util.LinkedList,get,1,E] PARA[VAR[INT]] +++$+++  VAR[INT] PARENTHESESEND CURLYSTART RETURN
CALL[java.util.LinkedList,hashCode,0,int] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.Number,doubleValue,0,double] +++$+++  VAR[java.lang.Number] OP[assign] LEX[Double.valueOf] PARENTHESESSTART
CALL[java.util.Iterator,hasNext,0,boolean] +++$+++  LEX[data] EOL WHILE PARENTHESESSTART
CALL[java.util.Iterator,hasNext,0,boolean] +++$+++  LEX[data] EOL WHILE PARENTHESESSTART
CALL[java.util.Iterator,hasNext,0,boolean] +++$+++  PARENTHESESEND EOL WHILE PARENTHESESSTART
CALL[java.util.LinkedList,iterator,0,java.util.Iterator<E>] +++$+++  EOL TYPE[Iterator] VAR[java.util.Iterator] OP[assign]
CALL[java.util.LinkedList,iterator,0,java.util.Iterator<E>] +++$+++  EOL TYPE[Iterator] VAR[java.util.Iterator] OP[assign]
CALL[java.util.Calendar,getTimeInMillis,0,long] +++$+++  PARENTHESESEND EOL VAR[LONG] OP[assign]
CALL[java.util.Iterator,next,0,E] +++$+++  OP[assign] PARENTHESESSTART TYPE[ScriptedFormula] PARENTHESESEND
CALL[java.lang.String,replaceAll,2,java.lang.String] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  CURLYSTART TYPE[String] VAR[java.lang.String] OP[assign]
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[VAR[java.lang.String]] +++$+++  IF PARENTHESESSTART VAR[BOOLEAN] PARENTHESESEND
CALL[java.lang.Number,doubleValue,0,double] +++$+++  OP[assign] NEW TYPE[Double] PARENTHESESSTART
CALL[java.lang.Double,doubleValue,0,double] +++$+++  LEX[ClassUtils.PERCENT_MULTIPLE_VALUES] PARENTHESESEND OP[bitwiseOr] OP[bitwiseOr]
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[VAR[java.lang.String]] +++$+++  TYPE[StringBuffer] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.util.ArrayList,iterator,0,java.util.Iterator<E>] +++$+++  EOL TYPE[Iterator] VAR[java.util.Iterator] OP[assign]
CALL[java.lang.String,equals,1,boolean] PARA[VAR[java.lang.String]] +++$+++  OP[assign] NULL OP[bitwiseOr] OP[bitwiseOr]
CALL[javax.swing.event.EventListenerList,getListeners,1,T[]] PARA[VAR[java.lang.Class]] +++$+++  VAR[java.lang.Class] PARENTHESESEND CURLYSTART RETURN
CALL[java.util.Iterator,hasNext,0,boolean] +++$+++  LEX[current] EOL WHILE PARENTHESESSTART
CALL[java.lang.String,endsWith,1,boolean] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART PARENTHESESEND OP[bitwiseOr] OP[bitwiseOr]
CALL[java.lang.String,toLowerCase,0,java.lang.String] +++$+++  RETURN EOL VAR[java.lang.String] OP[assign]
CALL[java.util.Calendar,setLenient,1,void] PARA[LIT[Boolean]] +++$+++  PARENTHESESSTART OP[not] VAR[BOOLEAN] PARENTHESESEND
CALL[java.util.Calendar,add,2,void] PARA[VAR[INT]] PARA[VAR[INT]] +++$+++  LEX[Calendar] VAR[java.util.Calendar] PARENTHESESEND CURLYSTART
CALL[java.util.Iterator,next,0,E] +++$+++  OP[assign] PARENTHESESSTART TYPE[TimeScale] PARENTHESESEND
CALL[java.lang.String,equals,1,boolean] PARA[LIT[Stirng]] +++$+++  TRY CURLYSTART IF PARENTHESESSTART
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[VAR[INT]] +++$+++  LEX[sb.append] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[VAR[java.lang.Object]] +++$+++  LEX[sb.append] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.lang.StringBuilder,toString,0,java.lang.String] +++$+++  PARENTHESESEND EOL RETURN PARENTHESESSTART
CALL[java.io.PrintWriter,close,0,void] +++$+++  LEX[pw.println] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[VAR[BOOLEAN]] +++$+++  LEX[sb.append] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Character]] +++$+++  LEX[m_buffer.setLength] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Stirng]] +++$+++  CURLYSTART CASE OP[ternaryFalse] CURLYSTART
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Stirng]] +++$+++  CURLYEND CASE OP[ternaryFalse] CURLYSTART
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Stirng]] +++$+++  CURLYEND CASE OP[ternaryFalse] CURLYSTART
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[VAR[CHAR]] +++$+++  CURLYEND DEFAULT OP[ternaryFalse] CURLYSTART
CALL[java.io.OutputStreamWriter,write,1,void] PARA[LIT[Character]] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND CURLYSTART
CALL[java.io.IOException,printStackTrace,0,void] +++$+++  TYPE[IOException] VAR[java.io.IOException] PARENTHESESEND CURLYSTART
CALL[java.lang.Number,intValue,0,int] +++$+++  OP[assign] NULL OP[ternaryTrue] OP[ternaryFalse]
CALL[java.lang.String,length,0,int] +++$+++  OP[assign] NULL OP[bitwiseOr] OP[bitwiseOr]
CALL[java.util.Calendar,getTime,0,java.util.Date] +++$+++  PARENTHESESEND EOL VAR[java.util.Date] OP[assign]
CALL[java.lang.Integer,intValue,0,int] +++$+++  CURLYSTART INT VAR[INT] OP[assign]
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Stirng]] +++$+++  OP[sum] OP[sum] PARENTHESESEND CURLYSTART
CALL[java.lang.Double,doubleValue,0,double] +++$+++  CURLYSTART VAR[DOUBLE] OP[sum] OP[assign]
CALL[java.lang.Integer,compareTo,1,int] PARA[VAR[java.lang.Integer]] +++$+++  EOL INT VAR[INT] OP[assign]
CALL[java.io.InputStream,read,1,int] PARA[VAR[BYTE]] +++$+++  PARENTHESESEND CURLYSTART VAR[INT] OP[assign]
CALL[java.lang.StringBuilder,setLength,1,void] PARA[LIT[Integer]] +++$+++  OP[sum] OP[assign] VAR[INT] EOL
CALL[java.io.PrintWriter,println,1,void] PARA[LIT[Stirng]] +++$+++  OP[sum] VAR[BOOLEAN] PARENTHESESEND EOL
CALL[java.io.ByteArrayOutputStream,toString,0,java.lang.String] +++$+++  PARENTHESESEND EOL RETURN PARENTHESESSTART
CALL[java.util.List,add,1,boolean] PARA[VAR[java.lang.Integer]] +++$+++  LEX[Integer] VAR[java.lang.Integer] PARENTHESESEND CURLYSTART
CALL[java.lang.String,length,0,int] +++$+++  ELSE CURLYSTART IF PARENTHESESSTART
CALL[java.lang.String,length,0,int] +++$+++  ELSE CURLYSTART IF PARENTHESESSTART
CALL[java.lang.String,toLowerCase,0,java.lang.String] +++$+++  VAR[java.lang.Integer] OP[assign] LEX[map.get] PARENTHESESSTART
CALL[java.lang.StringBuilder,toString,0,java.lang.String] +++$+++  CURLYEND CURLYEND RETURN PARENTHESESSTART
CALL[java.lang.Integer,intValue,0,int] +++$+++  EOL CURLYEND RETURN PARENTHESESSTART
CALL[java.util.HashMap,clear,0,void] +++$+++  EOL TYPE[String] VAR[java.lang.String] EOL
CALL[java.util.HashMap,get,1,V] PARA[CALL[java.lang.String,trim]] +++$+++  CURLYSTART TYPE[Integer] VAR[java.lang.Integer] OP[assign]
CALL[java.lang.String,charAt,1,char] PARA[LIT[Integer]] +++$+++  OP[assign] NULL OP[bitwiseOr] OP[bitwiseOr]
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  PARENTHESESEND CURLYSTART VAR[CHAR] OP[assign]
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[VAR[INT]] +++$+++  EOL CURLYEND ELSE CURLYSTART
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Stirng]] +++$+++  VAR[INT] PARENTHESESEND EOL CURLYEND
CALL[java.lang.StringBuilder,toString,0,java.lang.String] +++$+++  EOL CURLYEND VAR[java.lang.String] OP[assign]
CALL[java.io.PrintWriter,close,0,void] +++$+++  LEX[pw.println] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  PARENTHESESEND CURLYSTART VAR[CHAR] OP[assign]
CALL[java.util.HashMap,get,1,V] PARA[VAR[java.lang.Integer]] +++$+++  PARENTHESESEND CURLYSTART RETURN PARENTHESESSTART
CALL[java.lang.String,length,0,int] +++$+++  OP[sum] OP[assign] PARENTHESESSTART PARENTHESESSTART
CALL[java.lang.String,indexOf,2,int] PARA[LIT[Character]] PARA[VAR[INT]] +++$+++  PARENTHESESEND CURLYSTART VAR[INT] OP[assign]
CALL[java.lang.StringBuilder,length,0,int] +++$+++  CURLYEND CURLYEND IF PARENTHESESSTART
CALL[java.lang.StringBuilder,toString,0,java.lang.String] +++$+++  PARENTHESESEND CURLYSTART LEX[list.add] PARENTHESESSTART
CALL[java.lang.String,length,0,int] +++$+++  OP[assign] NEW TYPE[StringBuilder] PARENTHESESSTART
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Character]] +++$+++  VAR[CHAR] PARENTHESESEND PARENTHESESEND CURLYSTART
CALL[java.lang.String,getBytes,0,byte[]] +++$+++  PARENTHESESEND CURLYSTART VAR[BYTE] OP[assign]
CALL[java.lang.Class,getDeclaredFields,0,java.lang.reflect.Field[]] +++$+++  ARRAYSTART ARRAYEND VAR[java.lang.reflect.Field] OP[assign]
CALL[java.lang.String,hashCode,0,int] +++$+++  LEX[classe.hashCode] PARENTHESESSTART PARENTHESESEND OP[sum]
CALL[java.lang.Class,equals,1,boolean] PARA[CALL[org.projectlibre.core.dictionary.DictionaryCategory,getClasse]] +++$+++  PARENTHESESEND VAR[java.lang.Object] EOL RETURN
CALL[java.awt.Component,getParent,0,java.awt.Container] +++$+++  VAR[java.awt.Component] EOL VAR[java.awt.Component] OP[assign]
CALL[javax.swing.ListModel,getElementAt,1,E] PARA[VAR[INT]] +++$+++  LEX[i--] PARENTHESESEND IF PARENTHESESSTART
CALL[java.util.Map,get,1,V] PARA[VAR[java.awt.Font]] +++$+++  OP[assign] PARENTHESESSTART TYPE[Font] PARENTHESESEND
CALL[javax.swing.JComponent,setBackground,1,void] PARA[VAR[java.awt.Color]] +++$+++  LEX[format.getBackgroundObject] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.awt.geom.GeneralPath,quadTo,4,void] PARA[VAR[FLOAT]] PARA[VAR[FLOAT]] PARA[VAR[FLOAT]] PARA[VAR[FLOAT]] +++$+++  LEX[quad] PARENTHESESSTART PARENTHESESEND CURLYSTART
CALL[java.awt.geom.GeneralPath,curveTo,6,void] PARA[VAR[FLOAT]] PARA[VAR[FLOAT]] PARA[VAR[FLOAT]] PARA[VAR[FLOAT]] PARA[VAR[FLOAT]] PARA[VAR[FLOAT]] +++$+++  LEX[curve] PARENTHESESSTART PARENTHESESEND CURLYSTART
CALL[java.util.ArrayList,listIterator,1,java.util.ListIterator<E>] PARA[VAR[INT]] +++$+++  VAR[INT] PARENTHESESEND CURLYSTART RETURN
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.Object]] PARA[VAR[java.lang.Object]] +++$+++  PARENTHESESSTART VAR[java.lang.Object] PARENTHESESEND EOL
CALL[java.util.ArrayList,contains,1,boolean] PARA[VAR[java.lang.Object]] +++$+++  VAR[java.lang.Object] PARENTHESESEND CURLYSTART RETURN
CALL[java.util.Iterator,next,0,E] +++$+++  OP[assign] PARENTHESESSTART TYPE[CacheEvent] PARENTHESESEND
CALL[java.util.List,size,0,int] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.util.List,iterator,0,java.util.Iterator<E>] +++$+++  PARENTHESESSTART TYPE[Iterator] VAR[java.util.Iterator] OP[assign]
CALL[java.util.ListIterator,hasNext,0,boolean] +++$+++  LEX[intervals.listIterator] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.util.List,listIterator,1,java.util.ListIterator<E>] PARA[CALL[java.util.List,size]] +++$+++  PARENTHESESSTART TYPE[ListIterator] VAR[java.util.ListIterator] OP[assign]
CALL[javax.swing.JScrollPane,getViewport,0,javax.swing.JViewport] +++$+++  CURLYSTART TYPE[JViewport] VAR[javax.swing.JViewport] OP[assign]
CALL[javax.swing.JScrollPane,getViewport,0,javax.swing.JViewport] +++$+++  EOL TYPE[JViewport] VAR[javax.swing.JViewport] OP[assign]
CALL[javax.swing.JFormattedTextField,setValue,1,void] PARA[VAR[DOUBLE]] +++$+++  PARENTHESESSTART VAR[DOUBLE] PARENTHESESEND EOL
CALL[java.awt.LayoutManager,minimumLayoutSize,1,java.awt.Dimension] PARA[VAR[java.awt.Container]] +++$+++  VAR[java.awt.Container] PARENTHESESEND CURLYSTART RETURN
CALL[javax.swing.JRootPane,setOpaque,1,void] PARA[LIT[Boolean]] +++$+++  TYPE[JRibbonRootPane] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.awt.FontMetrics,getHeight,0,int] +++$+++  EOL INT VAR[INT] OP[assign]
CALL[java.awt.image.BufferedImage,getHeight,0,int] +++$+++  LEX[float] PARENTHESESEND LEX[image.getWidth] PARENTHESESSTART
CALL[java.awt.image.BufferedImage,getWidth,0,int] +++$+++  PARENTHESESEND INT VAR[INT] OP[assign]
CALL[java.awt.geom.GeneralPath,moveTo,2,void] PARA[LIT[Integer]] PARA[VAR[INT]] +++$+++  LEX[float] PARENTHESESEND PARENTHESESSTART VAR[FLOAT]
CALL[java.awt.Component,requestFocus,0,void] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND CURLYSTART
CALL[java.util.Iterator,hasNext,0,boolean] +++$+++  LEX[objs.iterator] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.lang.String,substring,2,java.lang.String] PARA[LIT[Integer]] PARA[VAR[INT]] +++$+++  VAR[INT] PARENTHESESEND VAR[java.lang.String] OP[assign]
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[VAR[INT]] +++$+++  EOL CURLYEND ELSE CURLYSTART
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[LIT[Stirng]] +++$+++  VAR[INT] PARENTHESESEND EOL CURLYEND
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[VAR[INT]] +++$+++  EOL CURLYEND ELSE CURLYSTART
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND PARENTHESESEND EOL CURLYEND
CALL[java.util.Calendar,setTimeInMillis,1,void] PARA[VAR[LONG]] +++$+++  LEX[_cal.getTimeInMillis] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.util.Iterator,next,0,E] +++$+++  OP[assign] PARENTHESESSTART TYPE[Field] PARENTHESESEND
CALL[java.lang.Thread,stop,0,void] +++$+++  VAR[java.lang.String] OP[assign] VAR[java.lang.String] EOL
CALL[java.util.Enumeration,nextElement,0,E] +++$+++  OP[assign] PARENTHESESSTART TYPE[String] PARENTHESESEND
CALL[java.util.Hashtable,put,2,V] PARA[VAR[java.lang.String]] PARA[LIT[Stirng]] +++$+++  EOL CURLYEND ELSE CURLYSTART
CALL[java.util.StringTokenizer,nextElement,0,java.lang.Object] +++$+++  OP[assign] PARENTHESESSTART TYPE[String] PARENTHESESEND
CALL[java.lang.Thread,start,0,void] +++$+++  PARENTHESESSTART THIS PARENTHESESEND EOL
CALL[java.lang.String,equals,1,boolean] PARA[VAR[java.lang.String]] +++$+++  VAR[java.lang.String] PARENTHESESEND OP[bitwiseOr] OP[bitwiseOr]
CALL[java.net.Socket,close,0,void] +++$+++  PARENTHESESEND EOL TRY CURLYSTART
CALL[java.io.PrintWriter,flush,0,void] +++$+++  LEX[out.print] PARENTHESESSTART PARENTHESESEND EOL
CALL[net.sf.jftp.net.server.FtpServer,start,0,void] +++$+++  TYPE[FtpServer] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.lang.String,length,0,int] +++$+++  VAR[INT] OP[assign] OP[assign] PARENTHESESSTART
CALL[java.lang.StringBuffer,toString,0,java.lang.String] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.String,lastIndexOf,1,int] PARA[LIT[Stirng]] +++$+++  CURLYEND INT VAR[INT] OP[assign]
CALL[java.lang.String,lastIndexOf,1,int] PARA[LIT[Stirng]] +++$+++  OP[assign] LEX[file.substring] PARENTHESESSTART COMMA
CALL[javax.swing.table.TableColumn,setPreferredWidth,1,void] PARA[LIT[Integer]] +++$+++  LEX[column.setMinWidth] PARENTHESESSTART PARENTHESESEND EOL
CALL[javax.swing.JPasswordField,getText,0,java.lang.String] +++$+++  NULL PARENTHESESEND EOL RETURN
CALL[javax.swing.JPanel,add,1,java.awt.Component] PARA[VAR[javax.swing.JButton]] +++$+++  PARENTHESESSTART VAR[java.lang.String] PARENTHESESEND EOL
CALL[javax.swing.JPanel,add,1,java.awt.Component] PARA[VAR[javax.swing.JLabel]] +++$+++  PARENTHESESSTART VAR[javax.swing.JLabel] PARENTHESESEND EOL
CALL[javax.swing.JPasswordField,setEnabled,1,void] PARA[LIT[Boolean]] +++$+++  PARENTHESESSTART LEX[true] PARENTHESESEND EOL
CALL[javax.swing.JTextField,setEnabled,1,void] PARA[LIT[Boolean]] +++$+++  PARENTHESESSTART LEX[false] PARENTHESESEND EOL
CALL[javax.swing.JTextField,setEnabled,1,void] PARA[LIT[Boolean]] +++$+++  PARENTHESESSTART LEX[false] PARENTHESESEND EOL
CALL[javax.swing.JTextArea,append,1,void] PARA[LIT[Stirng]] +++$+++  LEX[info.append] PARENTHESESSTART PARENTHESESEND EOL
CALL[javax.swing.JTextArea,append,1,void] PARA[LIT[Stirng]] +++$+++  LEX[info.append] PARENTHESESSTART PARENTHESESEND EOL
CALL[javax.swing.JTextArea,append,1,void] PARA[LIT[Stirng]] +++$+++  LEX[info.append] PARENTHESESSTART PARENTHESESEND EOL
CALL[javax.swing.JTextArea,append,1,void] PARA[LIT[Stirng]] +++$+++  LEX[info.append] PARENTHESESSTART PARENTHESESEND EOL
CALL[javax.swing.JProgressBar,setValue,1,void] PARA[LIT[Integer]] +++$+++  LEX[bar.setMaximum] PARENTHESESSTART PARENTHESESEND EOL
CALL[javax.swing.JTextField,getText,0,java.lang.String] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.awt.FontMetrics,getHeight,0,int] +++$+++  EOL INT VAR[INT] OP[assign]
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND EOL CURLYEND CURLYEND
CALL[java.lang.String,equals,1,boolean] PARA[LIT[Stirng]] +++$+++  OP[assign] EOL IF PARENTHESESSTART
CALL[java.util.List,iterator,0,java.util.Iterator<E>] +++$+++  TYPE[String] OP[greaterThan] VAR[java.util.Iterator] OP[assign]
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[LIT[Stirng]] +++$+++  CONTINUE EOL CASE OP[ternaryFalse]
CALL[java.lang.String,length,0,int] +++$+++  PARENTHESESSTART OP[sum] LEX[s.substring] PARENTHESESSTART
CALL[java.lang.String,length,0,int] +++$+++  OP[assign] EOL VAR[INT] OP[lessThan]
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[LIT[Stirng]] +++$+++  CONTINUE EOL CASE OP[ternaryFalse]
CALL[java.lang.String,length,0,int] +++$+++  PARENTHESESSTART OP[sum] LEX[s.substring] PARENTHESESSTART
CALL[java.util.Map,get,1,V] PARA[VAR[java.lang.String]] +++$+++  LEX[opt.put] PARENTHESESSTART VAR[java.lang.String] COMMA
CALL[javax.swing.JPanel,add,1,java.awt.Component] PARA[VAR[javax.swing.JComponent]] +++$+++  PARENTHESESSTART VAR[javax.swing.JComponent] PARENTHESESEND EOL
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[LIT[Stirng]] +++$+++  CONTINUE EOL CASE OP[ternaryFalse]
CALL[java.lang.StringBuffer,toString,0,java.lang.String] +++$+++  EOL CURLYEND CURLYEND RETURN
CALL[java.util.List,add,1,boolean] PARA[CALL[jia.Vec,sub]] +++$+++  OP[ternaryFalse] VAR[java.util.Collection] PARENTHESESEND CURLYSTART
CALL[java.util.Collection,isEmpty,0,boolean] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.util.List,add,1,boolean] PARA[VAR[java.io.File]] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND CURLYSTART
CALL[java.lang.String,startsWith,1,boolean] PARA[VAR[java.lang.String]] +++$+++  VAR[java.lang.String] PARENTHESESEND CURLYSTART RETURN
CALL[java.io.ByteArrayOutputStream,toByteArray,0,byte[]] +++$+++  PARENTHESESEND EOL CURLYEND RETURN
CALL[java.lang.Exception,printStackTrace,0,void] +++$+++  TYPE[Exception] VAR[java.lang.Exception] PARENTHESESEND CURLYSTART
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[LIT[Character]] +++$+++  BREAK EOL CASE OP[ternaryFalse]
CALL[java.util.Map,values,0,java.util.Collection<V>] +++$+++  CURLYSTART TYPE[Collection] VAR[java.util.Collection] OP[assign]
CALL[java.util.Collection,iterator,0,java.util.Iterator<E>] +++$+++  PARENTHESESSTART TYPE[Iterator] VAR[java.util.Iterator] OP[assign]
CALL[java.io.IOException,printStackTrace,0,void] +++$+++  TYPE[IOException] VAR[java.io.IOException] PARENTHESESEND CURLYSTART
CALL[java.io.FileWriter,write,1,void] PARA[VAR[java.lang.String]] +++$+++  COMMA VAR[BOOLEAN] PARENTHESESEND EOL
CALL[java.io.FileWriter,close,0,void] +++$+++  PARENTHESESSTART VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART VAR[INT] OP[lessThan] PARENTHESESEND
CALL[java.lang.String,substring,2,java.lang.String] PARA[LIT[Integer]] PARA[VAR[INT]] +++$+++  CURLYEND ELSE CURLYSTART RETURN
CALL[java.lang.String,endsWith,1,boolean] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART PARENTHESESEND OP[bitwiseAnd] OP[bitwiseAnd]
CALL[java.util.logging.Logger,info,1,void] PARA[LIT[Stirng]] +++$+++  OP[assign] NULL PARENTHESESEND CURLYSTART
CALL[javax.swing.JComponent,isOpaque,0,boolean] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[javax.swing.JComponent,isOpaque,0,boolean] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[javax.swing.JComponent,getWidth,0,int] +++$+++  CURLYEND INT VAR[INT] OP[assign]
CALL[java.awt.Color,getRed,0,int] +++$+++  NULL OP[bitwiseOr] OP[bitwiseOr] PARENTHESESSTART
CALL[java.awt.Color,getBlue,0,int] +++$+++  PARENTHESESSTART PARENTHESESEND OP[multiply] OP[sum]
CALL[java.awt.image.BufferedImage,createGraphics,0,java.awt.Graphics2D] +++$+++  EOL TYPE[Graphics2D] VAR[java.awt.Graphics2D] OP[assign]
CALL[java.awt.image.BufferedImage,createGraphics,0,java.awt.Graphics2D] +++$+++  EOL TYPE[Graphics2D] VAR[java.awt.Graphics2D] OP[assign]
CALL[java.util.logging.Logger,warning,1,void] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND CURLYSTART DEFAULT OP[ternaryFalse]
CALL[java.util.logging.Logger,warning,1,void] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND CURLYSTART DEFAULT OP[ternaryFalse]
CALL[java.util.List,clear,0,void] +++$+++  LEX[Color...] VAR[java.awt.Color] PARENTHESESEND CURLYSTART
CALL[java.awt.geom.GeneralPath,transform,1,void] PARA[CALL[null,getQuadrantRotateInstance]] +++$+++  CURLYSTART CASE VAR[net.sf.freecol.client.gui.panel.Flag.UnionPosition] OP[ternaryFalse]
CALL[java.awt.Graphics2D,setColor,1,void] PARA[CALL[java.util.List,get]] +++$+++  LEX[Graphics2D] VAR[java.awt.Graphics2D] PARENTHESESEND CURLYSTART
CALL[java.awt.Graphics2D,fillRect,4,void] PARA[LIT[Integer]] PARA[LIT[Integer]] PARA[VAR[INT]] PARA[VAR[INT]] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND EOL
CALL[java.util.List,size,0,int] +++$+++  CURLYSTART INT VAR[INT] OP[assign]
CALL[java.awt.geom.GeneralPath,moveTo,2,void] PARA[LIT[Integer]] PARA[VAR[DOUBLE]] +++$+++  EOL CASE VAR[net.sf.freecol.client.gui.panel.Flag.UnionShape] OP[ternaryFalse]
CALL[java.util.Map,put,2,V] PARA[VAR[net.sf.freecol.common.util.CollectionUtils.accumulateToMap(java.util.Map<K, V>, K, V, java.util.function.BinaryOperator<V>).K]] PARA[VAR[net.sf.freecol.common.util.CollectionUtils.accumulateToMap(java.util.Map<K, V>, K, V, java.util.function.BinaryOperator<V>).V]] +++$+++  EOL CURLYEND ELSE CURLYSTART
CALL[java.util.List,size,0,int] +++$+++  FINAL INT VAR[INT] OP[assign]
CALL[java.lang.StringBuilder,length,0,int] +++$+++  OP[assign] NULL OP[bitwiseAnd] OP[bitwiseAnd]
CALL[java.lang.String,isEmpty,0,boolean] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.lang.reflect.Constructor,newInstance,1,T] PARA[VAR[java.lang.Object]] +++$+++  TRY CURLYSTART VAR[java.lang.Object] OP[assign]
CALL[java.io.File,getName,0,java.lang.String] +++$+++  PARENTHESESSTART LEX[Level.WARNING] COMMA OP[sum]
CALL[java.io.File,isDirectory,0,boolean] +++$+++  OP[ternaryTrue] OP[ternaryFalse] PARENTHESESSTART OP[not]
CALL[java.io.File,isFile,0,boolean] +++$+++  PARENTHESESSTART PARENTHESESEND OP[bitwiseAnd] OP[bitwiseAnd]
CALL[java.io.File,lastModified,0,long] +++$+++  OP[assign] NULL OP[bitwiseOr] OP[bitwiseOr]
CALL[java.io.File,getPath,0,java.lang.String] +++$+++  PARENTHESESSTART LEX[Level.WARNING] COMMA OP[sum]
CALL[java.util.HashMap,put,2,V] PARA[VAR[CHAR]] PARA[VAR[net.sf.freecol.common.resources.FAFile.FALetter]] +++$+++  ARRAYEND PARENTHESESEND EOL CURLYEND
CALL[java.lang.String,isEmpty,0,boolean] +++$+++  OP[assign] NULL OP[bitwiseOr] OP[bitwiseOr]
CALL[java.lang.String,startsWith,1,boolean] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.lang.String,indexOf,1,int] PARA[VAR[java.lang.String]] +++$+++  EOL INT VAR[INT] OP[assign]
CALL[java.lang.String,length,0,int] +++$+++  LEX[result.substring] PARENTHESESSTART VAR[INT] OP[sum]
CALL[java.lang.StringBuilder,toString,0,java.lang.String] +++$+++  PARENTHESESEND EOL CURLYEND RETURN
CALL[java.lang.String,substring,1,java.lang.String] PARA[CALL[java.lang.String,length]] +++$+++  VAR[INT] OP[assign] LEX[Integer.parseInt] PARENTHESESSTART
CALL[java.util.Map,get,1,V] PARA[VAR[net.sf.freecol.common.model.TypeCountMap.T]] +++$+++  CURLYSTART TYPE[Integer] VAR[java.lang.Integer] OP[assign]
CALL[java.util.Map,size,0,int] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.util.Iterator,hasNext,0,boolean] +++$+++  PARENTHESESEND EOL WHILE PARENTHESESSTART
CALL[java.lang.String,substring,2,java.lang.String] PARA[CALL[java.lang.String,length]] PARA[CALL[java.lang.String,length]] +++$+++  PARENTHESESEND CURLYSTART VAR[java.lang.String] OP[assign]
CALL[java.util.Collection,isEmpty,0,boolean] +++$+++  OP[assign] NULL OP[bitwiseOr] OP[bitwiseOr]
CALL[java.io.File,getCanonicalPath,0,java.lang.String] +++$+++  TRY CURLYSTART VAR[java.lang.String] OP[assign]
CALL[java.lang.String,endsWith,1,boolean] PARA[LIT[Stirng]] +++$+++  CURLYEND ELSE IF PARENTHESESSTART
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[VAR[java.lang.Object]] +++$+++  OP[ternaryFalse] VAR[java.lang.Object] PARENTHESESEND CURLYSTART
CALL[java.lang.String,substring,1,java.lang.String] PARA[VAR[INT]] +++$+++  CURLYSTART RETURN LEX[StringEscapeUtils.unescapeHtml] PARENTHESESSTART
CALL[java.io.Closeable,close,0,void] +++$+++  PARENTHESESEND CURLYSTART TRY CURLYSTART
CALL[java.util.zip.ZipFile,close,0,void] +++$+++  PARENTHESESEND CURLYSTART TRY CURLYSTART
CALL[java.net.Socket,close,0,void] +++$+++  PARENTHESESEND CURLYSTART TRY CURLYSTART
CALL[java.lang.String,replace,2,java.lang.String] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND CURLYSTART VAR[java.lang.String] OP[assign]
CALL[java.lang.String,regionMatches,5,boolean] PARA[LIT[Boolean]] PARA[LIT[Integer]] PARA[VAR[java.lang.String]] PARA[LIT[Integer]] PARA[CALL[java.lang.String,length]] +++$+++  LEX[false] EOL CURLYEND RETURN
CALL[java.awt.Polygon,addPoint,2,void] PARA[LIT[Integer]] PARA[LIT[Integer]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.awt.Graphics2D,fill,1,void] PARA[VAR[java.awt.geom.Area]] +++$+++  PARENTHESESSTART VAR[java.awt.Shape] PARENTHESESEND EOL
CALL[javax.swing.PopupFactory,getPopup,4,javax.swing.Popup] PARA[VAR[java.awt.Component]] PARA[VAR[java.awt.Component]] PARA[VAR[INT]] PARA[VAR[INT]] +++$+++  PARENTHESESEND EOL CURLYEND RETURN
CALL[javax.swing.JComponent,setForeground,1,void] PARA[CALL[null,getColor]] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND EOL
CALL[java.lang.ref.WeakReference,get,0,T] +++$+++  OP[bitwiseAnd] VAR[javax.swing.JComponent] OP[assign] OP[assign]
CALL[java.lang.UnsupportedOperationException,getMessage,0,java.lang.String] +++$+++  LEX[Logger.info] PARENTHESESSTART VAR[java.lang.String] COMMA
CALL[java.util.regex.Matcher,matches,0,boolean] +++$+++  OP[assign] EOL IF PARENTHESESSTART
CALL[java.lang.String,substring,2,java.lang.String] PARA[LIT[Integer]] PARA[CALL[java.lang.String,indexOf]] +++$+++  PARENTHESESEND CURLYSTART VAR[java.lang.String] OP[assign]
CALL[java.lang.String,replace,2,java.lang.String] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND EOL VAR[java.lang.String] OP[assign]
CALL[java.lang.String,startsWith,1,boolean] PARA[VAR[java.lang.String]] +++$+++  CURLYSTART IF PARENTHESESSTART OP[not]
CALL[java.util.List,add,1,boolean] PARA[VAR[java.lang.String]] +++$+++  OP[assign] VAR[java.lang.String] EOL CURLYEND
CALL[java.lang.StringBuilder,toString,0,java.lang.String] +++$+++  EOL CURLYEND CURLYEND RETURN
CALL[java.lang.Exception,getMessage,0,java.lang.String] +++$+++  PARENTHESESEND CURLYSTART LEX[Logger.error] PARENTHESESSTART
CALL[javax.swing.tree.DefaultMutableTreeNode,getUserObject,0,java.lang.Object] +++$+++  OP[assign] NULL OP[bitwiseAnd] OP[bitwiseAnd]
CALL[java.util.Map,containsKey,1,boolean] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.util.Map,get,1,V] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESSTART PARENTHESESSTART TYPE[String] PARENTHESESEND
CALL[java.util.Map,containsKey,1,boolean] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.lang.UnsupportedOperationException,getMessage,0,java.lang.String] +++$+++  PARENTHESESEND CURLYSTART LEX[Logger.info] PARENTHESESSTART
CALL[java.awt.event.ActionEvent,getSource,0,java.lang.Object] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.awt.event.ActionEvent,getSource,0,java.lang.Object] +++$+++  CURLYEND ELSE IF PARENTHESESSTART
CALL[java.util.List,add,1,boolean] PARA[VAR[javax.swing.event.TableModelListener]] +++$+++  LEX[TableModelListener] VAR[javax.swing.event.TableModelListener] PARENTHESESEND CURLYSTART
CALL[java.lang.String,split,1,java.lang.String[]] PARA[LIT[Stirng]] +++$+++  ARRAYSTART ARRAYEND VAR[java.lang.String] OP[assign]
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESSTART PARENTHESESEND EOL CURLYEND
CALL[java.util.List,add,1,boolean] PARA[VAR[javax.swing.event.TableModelListener]] +++$+++  LEX[TableModelListener] VAR[javax.swing.event.TableModelListener] PARENTHESESEND CURLYSTART
CALL[java.util.List,get,1,E] PARA[LIT[Integer]] +++$+++  CURLYSTART RETURN LEX[Optional.of] PARENTHESESSTART
CALL[java.net.URL,sameFile,1,boolean] PARA[FIELD[net.filebot.web.Artwork]] +++$+++  PARENTHESESEND VAR[java.lang.Object] EOL RETURN
CALL[java.lang.Object,toString,0,java.lang.String] +++$+++  CURLYSTART RETURN LEX[sb.append] PARENTHESESSTART
CALL[java.lang.String,clone,0,java.lang.Object] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.util.regex.Matcher,find,0,boolean] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.io.File,getName,0,java.lang.String] +++$+++  CURLYSTART RETURN LEX[MAC_THUMBNAIL_STORE.equals] PARENTHESESSTART
CALL[java.util.regex.Matcher,find,0,boolean] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.lang.String,length,0,int] +++$+++  OP[bitwiseAnd] OP[bitwiseAnd] LEX[filename.charAt] PARENTHESESSTART
CALL[java.nio.ByteBuffer,capacity,0,int] +++$+++  PARENTHESESSTART INT PARENTHESESEND PARENTHESESSTART
CALL[java.util.Set,contains,1,boolean] PARA[CALL[java.nio.file.Path,getFileName]] +++$+++  VAR[INT] PARENTHESESEND CURLYSTART RETURN
CALL[java.nio.file.Path,getName,1,java.nio.file.Path] PARA[VAR[INT]] +++$+++  LEX[e.getRoot] PARENTHESESSTART PARENTHESESEND OP[ternaryFalse]
CALL[java.util.function.Function,apply,1,R] PARA[VAR[java.lang.String]] +++$+++  CURLYSTART TRY CURLYSTART RETURN
CALL[javax.swing.SingleSelectionModel,getSelectedIndex,0,int] +++$+++  EOL RETURN LEX[model.get] PARENTHESESSTART
CALL[javax.swing.JLabel,getText,0,java.lang.String] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.awt.Component,getBackground,0,java.awt.Color] +++$+++  PARENTHESESEND EOL LEX[g2d.setPaint] PARENTHESESSTART
CALL[java.awt.geom.RectangularShape,getCenterX,0,double] +++$+++  OP[assign] NEW LEX[Point2D.Double] PARENTHESESSTART
CALL[java.awt.geom.RectangularShape,getCenterY,0,double] +++$+++  LEX[shape.getMinX] PARENTHESESSTART PARENTHESESEND COMMA
CALL[java.awt.geom.RectangularShape,getMinX,0,double] +++$+++  OP[assign] NEW LEX[Point2D.Double] PARENTHESESSTART
CALL[java.awt.Color,getBlue,0,int] +++$+++  LEX[c1.getGreen] PARENTHESESSTART PARENTHESESEND COMMA
CALL[javax.swing.JButton,setOpaque,1,void] PARA[LIT[Boolean]] +++$+++  PARENTHESESSTART LEX[SwingConstants.BOTTOM] PARENTHESESEND EOL
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  CURLYSTART RETURN LEX[Character.getNumericValue] PARENTHESESSTART
CALL[java.lang.String,toLowerCase,0,java.lang.String] +++$+++  PARENTHESESEND CURLYSTART VAR[java.lang.String] OP[assign]
CALL[java.util.List,iterator,0,java.util.Iterator<E>] +++$+++  TYPE[V] OP[greaterThan] LEX[valueSeq] OP[assign]
CALL[java.util.List,size,0,int] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.Throwable,getMessage,0,java.lang.String] +++$+++  LEX[debug.log] PARENTHESESSTART LEX[Level.WARNING] COMMA
CALL[java.util.Collection,size,0,int] +++$+++  OP[assign] NEW TYPE[String] ARRAYSTART
CALL[java.nio.file.attribute.UserDefinedFileAttributeView,delete,1,void] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND CURLYSTART
CALL[java.io.InputStream,read,1,int] PARA[VAR[BYTE]] +++$+++  PARENTHESESSTART PARENTHESESSTART VAR[INT] OP[assign]
CALL[java.util.Map,isEmpty,0,boolean] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.Object,toString,0,java.lang.String] +++$+++  NULL OP[ternaryTrue] NULL OP[ternaryFalse]
CALL[java.io.File,getAbsolutePath,0,java.lang.String] +++$+++  OP[assign] NULL OP[ternaryTrue] OP[ternaryFalse]
CALL[javax.swing.JButton,setRolloverIcon,1,void] PARA[VAR[javax.swing.Icon]] +++$+++  PARENTHESESSTART VAR[javax.swing.Icon] PARENTHESESEND EOL
CALL[javax.swing.JButton,setMaximumSize,1,void] PARA[CALL[javax.swing.JButton,getPreferredSize]] +++$+++  VAR[javax.swing.Icon] PARENTHESESEND PARENTHESESEND EOL
CALL[java.util.List,size,0,int] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.util.concurrent.atomic.AtomicInteger,get,0,int] +++$+++  LEX[totalTaskCount.get] PARENTHESESSTART PARENTHESESEND OP[sub]
CALL[javax.swing.JPanel,setBackground,1,void] PARA[VAR[java.awt.Color]] +++$+++  PARENTHESESSTART LEX[false] PARENTHESESEND EOL
CALL[javax.swing.JComboBox,getSelectedItem,0,java.lang.Object] +++$+++  RETURN PARENTHESESSTART TYPE[SubtitleFormat] PARENTHESESEND
CALL[javax.swing.JLabel,setText,1,void] PARA[VAR[java.lang.String]] +++$+++  STRING VAR[java.lang.String] PARENTHESESEND CURLYSTART
CALL[java.nio.CharBuffer,limit,0,int] +++$+++  PARENTHESESSTART PARENTHESESEND COMMA COMMA
CALL[java.util.Comparator,compare,2,int] PARA[VAR[java.io.File]] PARA[VAR[java.io.File]] +++$+++  VAR[java.io.File] PARENTHESESEND CURLYSTART RETURN
CALL[java.util.List,clear,0,void] +++$+++  LEX[clear] PARENTHESESSTART PARENTHESESEND CURLYSTART
CALL[java.util.zip.ZipEntry,getName,0,java.lang.String] +++$+++  PARENTHESESSTART NEW TYPE[MemoryFile] PARENTHESESSTART
CALL[java.nio.ByteBuffer,remaining,0,int] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.io.PrintWriter,flush,0,void] +++$+++  LEX[flush] PARENTHESESSTART PARENTHESESEND CURLYSTART
CALL[java.lang.Throwable,getClass,0,java.lang.Class<? extends java.lang.Object>] +++$+++  PARENTHESESEND CURLYSTART WHILE PARENTHESESSTART
CALL[java.util.List,get,1,E] PARA[LIT[Integer]] +++$+++  PARENTHESESEND OP[ternaryTrue] NULL OP[ternaryFalse]
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Stirng]] +++$+++  BREAK EOL CASE OP[ternaryFalse]
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Stirng]] +++$+++  VAR[INT] OP[greaterThan] PARENTHESESEND CURLYSTART
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Stirng]] +++$+++  ARRAYEND ARRAYEND PARENTHESESEND EOL
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART PARENTHESESEND EOL CURLYEND
CALL[java.lang.StringBuilder,toString,0,java.lang.String] +++$+++  PARENTHESESSTART PARENTHESESEND EOL RETURN
CALL[java.io.ObjectOutputStream,close,0,void] +++$+++  LEX[out.flush] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.util.Vector,elements,0,java.util.Enumeration<E>] +++$+++  CURLYSTART TYPE[Enumeration] VAR[java.util.Enumeration] OP[assign]
CALL[java.util.Comparator,compare,2,int] PARA[VAR[java.lang.Object]] PARA[VAR[java.lang.Object]] +++$+++  EOL INT VAR[INT] OP[assign]
CALL[java.lang.Object,toString,0,java.lang.String] +++$+++  PARENTHESESEND EOL LEX[sreturn.append] PARENTHESESSTART
CALL[java.lang.StringBuilder,toString,0,java.lang.String] +++$+++  PARENTHESESSTART PARENTHESESEND EOL RETURN
CALL[java.awt.Component,getComponentOrientation,0,java.awt.ComponentOrientation] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.awt.Graphics2D,setPaint,1,void] PARA[VAR[java.awt.Paint]] +++$+++  OP[multiply] PARENTHESESEND EOL CURLYEND
CALL[java.awt.Graphics2D,setStroke,1,void] PARA[VAR[java.awt.Stroke]] +++$+++  PARENTHESESSTART VAR[java.awt.Paint] PARENTHESESEND EOL
CALL[javax.swing.JDialog,dispose,0,void] +++$+++  LEX[timer.stop] PARENTHESESSTART PARENTHESESEND EOL
CALL[javax.swing.Timer,start,0,void] +++$+++  LEX[dialog.setOpacity] PARENTHESESSTART PARENTHESESEND EOL
CALL[javax.swing.Timer,setDelay,1,void] PARA[VAR[INT]] +++$+++  OP[greaterThan] OP[assign] PARENTHESESEND CURLYSTART
CALL[java.awt.print.PrinterJob,setPrintService,1,void] PARA[CALL[java.awt.print.PrinterJob,getPrintService]] +++$+++  PARENTHESESEND CURLYSTART TRY CURLYSTART
CALL[java.awt.image.BufferedImage,getHeight,0,int] +++$+++  OP[bitwiseOr] VAR[INT] OP[not] OP[assign]
CALL[java.awt.image.BufferedImage,createGraphics,0,java.awt.Graphics2D] +++$+++  VAR[INT] PARENTHESESEND VAR[java.awt.Graphics2D] OP[assign]
CALL[java.lang.String,length,0,int] +++$+++  OP[assign] EOL VAR[INT] OP[lessThan]
CALL[java.lang.String,indexOf,1,int] PARA[LIT[Stirng]] +++$+++  OP[greaterThan] OP[assign] OP[bitwiseOr] OP[bitwiseOr]
CALL[java.lang.String,indexOf,1,int] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND CURLYSTART RETURN PARENTHESESSTART
CALL[com.openbravo.pos.sales.JMooringDetails,applyComponentOrientation,1,void] PARA[CALL[java.awt.Component,getComponentOrientation]] +++$+++  PARENTHESESSTART LEX[s] PARENTHESESEND EOL
CALL[java.awt.Component,getComponentOrientation,0,java.awt.ComponentOrientation] +++$+++  PARENTHESESEND EOL LEX[myMsg.applyComponentOrientation] PARENTHESESSTART
CALL[java.util.List,get,1,E] PARA[VAR[INT]] +++$+++  CURLYSTART TYPE[SalesLine] VAR[com.openbravo.pos.panels.PaymentsModel.SalesLine] OP[assign]
CALL[java.util.Properties,getProperty,2,java.lang.String] PARA[VAR[java.lang.String]] PARA[VAR[java.lang.String]] +++$+++  VAR[java.lang.String] PARENTHESESEND CURLYSTART RETURN
CALL[java.awt.Font,getTransform,0,java.awt.geom.AffineTransform] +++$+++  PARENTHESESEND EOL LEX[a.preConcatenate] PARENTHESESSTART
CALL[java.lang.Double,doubleValue,0,double] +++$+++  CURLYEND ELSE IF PARENTHESESSTART
CALL[java.util.Iterator,next,0,E] +++$+++  OP[assign] PARENTHESESSTART TYPE[PaymentInfo] PARENTHESESEND
CALL[java.util.HashMap,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.HashMap,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.HashMap,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.HashMap,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.HashMap,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.ArrayList,size,0,int] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  OP[assign] PARENTHESESSTART BYTE PARENTHESESEND
CALL[java.util.List,add,1,boolean] PARA[VAR[java.lang.String]] +++$+++  STRING VAR[java.lang.String] PARENTHESESEND CURLYSTART
CALL[java.util.List,add,1,boolean] PARA[VAR[java.lang.String]] +++$+++  STRING VAR[java.lang.String] PARENTHESESEND CURLYSTART
CALL[java.lang.String,indexOf,1,int] PARA[LIT[Stirng]] +++$+++  EOL ELSE IF PARENTHESESSTART
CALL[java.io.Writer,write,1,void] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESSTART VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[CALL[java.lang.CharSequence,charAt]] +++$+++  OP[sub] VAR[INT] PARENTHESESEND CURLYSTART
CALL[java.lang.Class,getResourceAsStream,1,java.io.InputStream] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESSTART NEW TYPE[BufferedInputStream] PARENTHESESSTART
CALL[java.io.IOException,printStackTrace,1,void] PARA[VAR[java.io.PrintStream]] +++$+++  TYPE[IOException] VAR[java.io.IOException] PARENTHESESEND CURLYSTART
CALL[java.io.Writer,close,0,void] +++$+++  PARENTHESESEND CURLYSTART TRY CURLYSTART
CALL[java.lang.String,indexOf,1,int] PARA[VAR[CHAR]] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.lang.StringBuilder,toString,0,java.lang.String] +++$+++  PARENTHESESEND EOL CURLYEND RETURN
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  CURLYSTART CHAR VAR[CHAR] OP[assign]
CALL[java.lang.String,length,0,int] +++$+++  OP[bitwiseAnd] OP[bitwiseAnd] VAR[INT] OP[lessThan]
CALL[java.lang.StringBuilder,toString,0,java.lang.String] +++$+++  CURLYEND CURLYEND CURLYEND RETURN
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Character]] +++$+++  PARENTHESESSTART LEX[count--] OP[greaterThan] PARENTHESESEND
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Character]] +++$+++  VAR[INT] OP[assign] OP[assign] PARENTHESESEND
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Character]] +++$+++  BREAK EOL CASE OP[ternaryFalse]
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Character]] +++$+++  PARENTHESESSTART PARENTHESESEND EOL ELSE
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[VAR[java.lang.String]] +++$+++  EOL BREAK EOL CURLYEND
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND EOL
CALL[javax.swing.JScrollBar,setBlockIncrement,1,void] PARA[VAR[INT]] +++$+++  LEX[vertical.setUnitIncrement] PARENTHESESSTART PARENTHESESEND EOL
CALL[javax.swing.Timer,stop,0,void] +++$+++  LEX[updateBracketHighlightWithDelay] PARENTHESESSTART PARENTHESESEND CURLYSTART
CALL[java.io.File,exists,0,boolean] +++$+++  NULL OP[bitwiseOr] OP[bitwiseOr] OP[not]
CALL[java.util.regex.Matcher,replaceFirst,1,java.lang.String] PARA[VAR[java.lang.String]] +++$+++  OP[assign] NULL PARENTHESESEND RETURN
CALL[java.lang.String,indexOf,1,int] PARA[LIT[Character]] +++$+++  RETURN LEX[url.substring] PARENTHESESSTART COMMA
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Character]] +++$+++  PARENTHESESEND CURLYSTART CASE OP[ternaryFalse]
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Character]] +++$+++  BREAK EOL CASE OP[ternaryFalse]
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  PARENTHESESEND EOL LEX[sbForeignCharsEsc.append] PARENTHESESSTART
CALL[java.util.Hashtable,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[org.gjt.sp.jedit.JEditActionContext.E]] +++$+++  VAR[org.gjt.sp.jedit.JEditActionContext.E] PARENTHESESEND EOL CURLYEND
CALL[java.util.Vector,removeElement,1,boolean] PARA[VAR[org.gjt.sp.jedit.JEditActionContext.E]] +++$+++  VAR[java.lang.String] OP[assign] NULL EOL
CALL[java.util.Hashtable,containsKey,1,boolean] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.util.Hashtable,remove,1,V] PARA[VAR[java.lang.String]] +++$+++  CURLYSTART TYPE[E] VAR[org.gjt.sp.jedit.JEditActionContext.E] OP[assign]
CALL[java.util.Hashtable,get,1,V] PARA[VAR[java.lang.String]] +++$+++  CURLYSTART TYPE[E] VAR[org.gjt.sp.jedit.JEditActionContext.E] OP[assign]
CALL[java.util.Vector,add,1,boolean] PARA[VAR[java.lang.String]] +++$+++  LEX[dockableSets.keySet] PARENTHESESSTART PARENTHESESEND PARENTHESESEND
CALL[java.util.Vector,remove,1,boolean] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESSTART VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.lang.String,length,0,int] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.lang.String,charAt,1,char] PARA[LIT[Integer]] +++$+++  VAR[CHAR] OP[assign] LEX[TextUtilities.getComplementaryBracket] PARENTHESESSTART
CALL[java.util.List,toArray,1,T[]] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESSTART PARENTHESESEND ARRAYEND EOL
CALL[java.util.Hashtable,get,1,V] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESEND EOL VAR[java.util.Hashtable] OP[assign]
CALL[java.util.Map,get,1,V] PARA[VAR[java.lang.String]] +++$+++  CURLYEND TYPE[Icon] VAR[javax.swing.Icon] OP[assign]
CALL[java.awt.event.MouseEvent,getModifiers,0,int] +++$+++  CURLYSTART RETURN LEX[TextAreaMouseHandler.isRightButton] PARENTHESESSTART
CALL[javax.swing.AbstractButton,putClientProperty,2,void] PARA[LIT[Stirng]] PARA[VAR[javax.swing.UIDefaults]] +++$+++  COMMA VAR[java.awt.Insets] PARENTHESESEND EOL
CALL[java.awt.Frame,addComponentListener,1,void] PARA[VAR[org.gjt.sp.jedit.GUIUtilities.SizeSaver]] +++$+++  PARENTHESESSTART VAR[org.gjt.sp.jedit.GUIUtilities.SizeSaver] PARENTHESESEND EOL
CALL[java.util.HashMap,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.HashMap,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.HashMap,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.HashMap,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.HashMap,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.HashMap,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.HashMap,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.List,add,1,boolean] PARA[VAR[org.gjt.sp.jedit.buffer.JEditBuffer.Listener]] +++$+++  RETURN EOL CURLYEND CURLYEND
CALL[java.lang.String,equals,1,boolean] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.io.BufferedInputStream,markSupported,0,boolean] +++$+++  PARENTHESESEND EOL ASSERT PARENTHESESSTART
CALL[java.net.URL,openConnection,0,java.net.URLConnection] +++$+++  OP[assign] PARENTHESESSTART TYPE[HttpURLConnection] PARENTHESESEND
CALL[java.util.List,size,0,int] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  PARENTHESESEND CURLYSTART SWITCH PARENTHESESSTART
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  OP[assign] EOL LEX[buf.append] PARENTHESESSTART
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  PARENTHESESEND CURLYSTART SWITCH PARENTHESESSTART
CALL[java.lang.String,length,0,int] +++$+++  OP[assign] EOL VAR[INT] OP[lessThan]
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  PARENTHESESSTART OP[not] LEX[Character.isWhitespace] PARENTHESESSTART
CALL[java.lang.CharSequence,length,0,int] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.lang.CharSequence,charAt,1,char] PARA[LIT[Integer]] +++$+++  EOL CHAR VAR[CHAR] OP[assign]
CALL[java.lang.CharSequence,charAt,1,char] PARA[VAR[INT]] +++$+++  PARENTHESESEND CURLYSTART VAR[CHAR] OP[assign]
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[VAR[java.lang.String]] +++$+++  COMMA VAR[INT] PARENTHESESEND EOL
CALL[java.lang.String,length,0,int] +++$+++  IF PARENTHESESSTART VAR[INT] OP[sum]
CALL[java.util.List,size,0,int] +++$+++  OP[assign] NEW TYPE[Handler] ARRAYSTART
CALL[java.util.Map,get,1,V] PARA[VAR[java.lang.String]] +++$+++  VAR[java.lang.String] PARENTHESESEND CURLYSTART RETURN
CALL[java.util.Properties,putAll,1,void] PARA[VAR[java.util.Properties]] +++$+++  TYPE[Properties] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.util.Properties,remove,1,V] PARA[VAR[java.lang.String]] +++$+++  STRING VAR[java.lang.String] PARENTHESESEND CURLYSTART
CALL[java.io.InputStream,close,0,void] +++$+++  EOL CURLYEND FINALLY CURLYSTART
CALL[java.util.Vector,size,0,int] +++$+++  OP[bitwiseAnd] OP[bitwiseAnd] VAR[INT] OP[lessThan]
CALL[java.util.Vector,indexOf,1,int] PARA[VAR[java.lang.Object]] +++$+++  VAR[java.lang.Object] PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.String,endsWith,1,boolean] PARA[LIT[Stirng]] +++$+++  CURLYSTART BOOLEAN VAR[BOOLEAN] OP[assign]
CALL[java.lang.String,length,0,int] +++$+++  OP[assign] NEW TYPE[StringBuilder] PARENTHESESSTART
CALL[java.util.Set,add,1,boolean] PARA[VAR[java.lang.String]] +++$+++  VAR[java.util.Set] PARENTHESESEND EOL CURLYEND
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[VAR[CHAR]] +++$+++  BREAK EOL DEFAULT OP[ternaryFalse]
CALL[java.lang.StringBuilder,toString,0,java.lang.String] +++$+++  NULL PARENTHESESEND VAR[java.lang.String] OP[assign]
CALL[java.awt.Graphics,setColor,1,void] PARA[VAR[java.awt.Color]] +++$+++  PARENTHESESSTART VAR[java.awt.Font] PARENTHESESEND EOL
CALL[java.lang.String,equals,1,boolean] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[javax.swing.table.DefaultTableModel,getRowCount,0,int] +++$+++  OP[bitwiseAnd] OP[bitwiseAnd] VAR[INT] OP[lessThan]
CALL[javax.swing.DefaultListModel,size,0,int] +++$+++  OP[assign] EOL VAR[INT] OP[lessThan]
CALL[java.lang.reflect.Method,getName,0,java.lang.String] +++$+++  TYPE[SignatureKey] PARENTHESESSTART VAR[java.lang.Class] COMMA
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Stirng]] +++$+++  CONTINUE EOL CASE OP[ternaryFalse]
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Stirng]] +++$+++  CONTINUE EOL CASE OP[ternaryFalse]
CALL[java.lang.Class,getField,1,java.lang.reflect.Field] PARA[VAR[java.lang.String]] +++$+++  TRY CURLYSTART VAR[java.lang.reflect.Field] OP[assign]
CALL[java.lang.String,substring,1,java.lang.String] PARA[LIT[Integer]] +++$+++  PARENTHESESEND PARENTHESESEND PARENTHESESEND OP[sum]
CALL[java.lang.reflect.Method,getModifiers,0,int] +++$+++  CURLYSTART RETURN LEX[Modifier.isStatic] PARENTHESESSTART
CALL[java.util.List,get,1,E] PARA[VAR[INT]] +++$+++  VAR[INT] PARENTHESESEND CURLYSTART RETURN
CALL[java.awt.font.LineMetrics,getAscent,0,float] +++$+++  PARENTHESESEND PARENTHESESSTART VAR[DOUBLE] OP[sum]
CALL[java.awt.geom.Rectangle2D,getHeight,0,double] +++$+++  PARENTHESESEND EOL CURLYEND RETURN
CALL[java.awt.geom.Rectangle2D,getHeight,0,double] +++$+++  VAR[DOUBLE] OP[sum] VAR[DOUBLE] OP[sub]
CALL[java.lang.String,endsWith,1,boolean] PARA[LIT[Stirng]] +++$+++  EOL ELSE IF PARENTHESESSTART
CALL[javax.swing.DefaultListModel,getSize,0,int] +++$+++  EOL INT VAR[INT] OP[assign]
CALL[javax.swing.JCheckBoxMenuItem,setActionCommand,1,void] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART LEX[browser.autoDetectEncoding] PARENTHESESEND EOL
CALL[java.util.List,add,1,boolean] PARA[VAR[javax.swing.JRadioButtonMenuItem]] +++$+++  COMMA VAR[javax.swing.JRadioButtonMenuItem] PARENTHESESEND EOL
CALL[javax.swing.JRadioButtonMenuItem,setActionCommand,1,void] PARA[LIT[Stirng]] +++$+++  TYPE[JRadioButtonMenuItem] PARENTHESESSTART PARENTHESESEND EOL
CALL[javax.swing.ButtonGroup,add,1,void] PARA[VAR[javax.swing.JRadioButtonMenuItem]] +++$+++  PARENTHESESSTART VAR[org.gjt.sp.jedit.browser.BrowserCommandsMenu.ActionHandler] PARENTHESESEND EOL
CALL[java.util.Collection,add,1,boolean] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND EOL
CALL[java.util.StringTokenizer,hasMoreTokens,0,boolean] +++$+++  PARENTHESESEND EOL WHILE PARENTHESESSTART
CALL[java.util.jar.Attributes,getValue,1,java.lang.String] PARA[VAR[java.util.jar.Attributes.Name]] +++$+++  NULL PARENTHESESEND VAR[java.lang.String] OP[assign]
CALL[java.io.File,exists,0,boolean] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.util.Map,entrySet,0,java.util.Set<java.util.Map.Entry<K, V>>] +++$+++  TYPE[String] OP[greaterThan] VAR[java.util.Map.Entry] OP[ternaryFalse]
CALL[java.io.ByteArrayOutputStream,write,3,void] PARA[VAR[BYTE]] PARA[LIT[Integer]] PARA[VAR[INT]] +++$+++  VAR[INT] OP[greaterThan] PARENTHESESEND CURLYSTART
CALL[java.io.FileInputStream,close,0,void] +++$+++  LEX[out.close] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.lang.String,length,0,int] +++$+++  OP[assign] NULL OP[bitwiseAnd] OP[bitwiseAnd]
CALL[java.lang.String,length,0,int] +++$+++  OP[assign] NULL OP[bitwiseAnd] OP[bitwiseAnd]
CALL[java.util.Vector,size,0,int] +++$+++  EOL PARENTHESESSTART VAR[INT] OP[lessThan]
CALL[java.util.ArrayList,add,1,boolean] PARA[VAR[java.lang.String]] +++$+++  OP[assign] NULL PARENTHESESEND CURLYSTART
CALL[java.util.ArrayList,get,1,E] PARA[VAR[INT]] +++$+++  OP[assign] PARENTHESESSTART TYPE[String] PARENTHESESEND
CALL[java.util.Map,get,1,V] PARA[VAR[java.lang.String]] +++$+++  OP[assign] PARENTHESESSTART TYPE[String] PARENTHESESEND
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[VAR[CHAR]] +++$+++  PARENTHESESSTART VAR[INT] PARENTHESESEND EOL
CALL[java.util.StringTokenizer,nextToken,0,java.lang.String] +++$+++  PARENTHESESEND EOL VAR[java.lang.String] OP[assign]
CALL[java.util.StringTokenizer,hasMoreTokens,0,boolean] +++$+++  PARENTHESESEND EOL WHILE PARENTHESESSTART
CALL[java.lang.String,indexOf,1,int] PARA[LIT[Character]] +++$+++  EOL INT VAR[INT] OP[assign]
CALL[java.io.File,toString,0,java.lang.String] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.String,trim,0,java.lang.String] +++$+++  PARENTHESESEND PARENTHESESEND EOL RETURN
CALL[java.lang.String,substring,2,java.lang.String] PARA[LIT[Integer]] PARA[VAR[INT]] +++$+++  CURLYSTART TYPE[String] VAR[java.lang.String] OP[assign]
CALL[java.lang.String,toCharArray,0,char[]] +++$+++  ARRAYSTART ARRAYEND VAR[CHAR] OP[assign]
CALL[java.lang.StringBuffer,toString,0,java.lang.String] +++$+++  EOL CURLYEND CURLYEND RETURN
CALL[java.lang.String,length,0,int] +++$+++  WHILE PARENTHESESSTART VAR[INT] OP[lessThan]
CALL[java.lang.String,substring,1,java.lang.String] PARA[VAR[INT]] +++$+++  OP[sum] OP[sum] EOL RETURN
CALL[java.lang.String,length,0,int] +++$+++  PARENTHESESSTART PARENTHESESEND OP[bitwiseAnd] OP[bitwiseAnd]
CALL[java.lang.String,toLowerCase,0,java.lang.String] +++$+++  PARENTHESESSTART VAR[BOOLEAN] PARENTHESESEND RETURN
CALL[java.util.Set,toString,0,java.lang.String] +++$+++  PARENTHESESSTART VAR[java.lang.String] OP[sum] OP[sum]
CALL[java.lang.String,startsWith,1,boolean] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.StringBuilder,toString,0,java.lang.String] +++$+++  EOL CURLYEND CURLYEND RETURN
CALL[java.lang.reflect.Method,invoke,2,java.lang.Object] PARA[VAR[java.lang.Object]] PARA[VAR[java.net.URI]] +++$+++  PARENTHESESSTART PARENTHESESEND EOL CURLYEND
CALL[java.util.Iterator,hasNext,0,boolean] +++$+++  EOL IF PARENTHESESSTART OP[not]
CALL[java.util.Map,size,0,int] +++$+++  PARENTHESESSTART INT PARENTHESESEND PARENTHESESSTART
CALL[java.lang.String,replace,2,java.lang.String] PARA[LIT[Character]] PARA[LIT[Character]] +++$+++  CURLYSTART RETURN LEX[DescriptorFactory.canonicalizeString] PARENTHESESSTART
CALL[java.lang.String,indexOf,2,int] PARA[LIT[Character]] PARA[VAR[INT]] +++$+++  CURLYSTART INT VAR[INT] OP[assign]
CALL[java.util.Map,clear,0,void] +++$+++  LEX[clear] PARENTHESESSTART PARENTHESESEND CURLYSTART
CALL[java.util.Map.Entry,getKey,0,K] +++$+++  VAR[INT] OP[assign] LEX[counts.getCount] PARENTHESESSTART
CALL[java.util.Map.Entry,getValue,0,V] +++$+++  ELSE CURLYSTART LEX[e.setValue] PARENTHESESSTART
CALL[java.util.Map,entrySet,0,java.util.Set<java.util.Map.Entry<K, V>>] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[edu.umd.cs.findbugs.util.HTML.HTMLtoPlainTextWriter2,write,0,void] +++$+++  COMMA VAR[javax.swing.text.html.HTMLDocument] PARENTHESESEND EOL
CALL[java.lang.String,length,0,int] +++$+++  OP[assign] LEX[s.substring] PARENTHESESSTART COMMA
CALL[java.lang.Class,newInstance,0,T] +++$+++  CURLYSTART TRY CURLYSTART RETURN
CALL[java.util.Collection,isEmpty,0,boolean] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.util.Map,get,1,V] PARA[VAR[edu.umd.cs.findbugs.util.Bag.E]] +++$+++  CURLYSTART TYPE[Integer] VAR[java.lang.Integer] OP[assign]
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  CURLYSTART CHAR VAR[CHAR] OP[assign]
CALL[java.util.ResourceBundle,getString,1,java.lang.String] PARA[VAR[java.lang.String]] +++$+++  CURLYSTART TRY CURLYSTART RETURN
CALL[java.util.ResourceBundle,getString,1,java.lang.String] PARA[VAR[java.lang.String]] +++$+++  VAR[java.lang.String] PARENTHESESEND CURLYSTART RETURN
CALL[java.util.Enumeration,nextElement,0,E] +++$+++  CURLYSTART TYPE[String] VAR[java.lang.String] OP[assign]
CALL[java.util.Map,get,1,V] PARA[VAR[java.lang.String]] +++$+++  VAR[java.lang.String] PARENTHESESEND CURLYSTART RETURN
CALL[java.util.Properties,setProperty,2,java.lang.Object] PARA[VAR[java.lang.String]] PARA[VAR[java.lang.String]] +++$+++  STRING VAR[java.lang.String] PARENTHESESEND CURLYSTART
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  PARENTHESESSTART PARENTHESESEND OP[bitwiseOr] OP[bitwiseOr]
CALL[java.lang.String,equals,1,boolean] PARA[FIELD[edu.umd.cs.findbugs.FindBugsMain]] +++$+++  PARENTHESESEND VAR[java.lang.Object] EOL RETURN
CALL[java.lang.Runnable,run,0,void] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND CURLYSTART
CALL[java.util.HashMap,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.lang.String]] +++$+++  STRING VAR[java.lang.String] PARENTHESESEND CURLYSTART
CALL[java.util.Map,values,0,java.util.Collection<V>] +++$+++  PARENTHESESSTART TYPE[Plugin] VAR[edu.umd.cs.findbugs.Plugin] OP[ternaryFalse]
CALL[java.io.Closeable,close,0,void] +++$+++  EOL CURLYEND TRY CURLYSTART
CALL[java.io.InputStream,close,0,void] +++$+++  EOL CURLYEND TRY CURLYSTART
CALL[java.net.URL,openConnection,0,java.net.URLConnection] +++$+++  CURLYSTART TYPE[URLConnection] VAR[java.net.URLConnection] OP[assign]
CALL[java.io.InputStream,read,0,int] +++$+++  EOL INT VAR[INT] OP[assign]
CALL[java.lang.String,length,0,int] +++$+++  LEX[option.length] PARENTHESESSTART PARENTHESESEND OP[sum]
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[CALL[java.util.Iterator,next]] +++$+++  PARENTHESESEND EOL PARENTHESESEND CURLYSTART
CALL[java.util.Map,clear,0,void] +++$+++  BOOLEAN VAR[BOOLEAN] PARENTHESESEND CURLYSTART
CALL[java.util.Map.Entry,getValue,0,V] +++$+++  PARENTHESESEND OP[sum] VAR[CHAR] OP[sum]
CALL[java.lang.Throwable,getStackTrace,0,java.lang.StackTraceElement[]] +++$+++  ARRAYSTART ARRAYEND VAR[java.lang.StackTraceElement] OP[assign]
CALL[javax.annotation.meta.When,hashCode,0,int] +++$+++  NULL PARENTHESESEND OP[ternaryTrue] OP[ternaryFalse]
CALL[javax.annotation.meta.When,hashCode,0,int] +++$+++  PARENTHESESSTART PARENTHESESEND OP[multiply] OP[sum]
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.Object]] PARA[VAR[edu.umd.cs.findbugs.ba.AnnotationDatabase.AnnotationEnum]] +++$+++  LEX[AnnotationEnum] VAR[edu.umd.cs.findbugs.ba.AnnotationDatabase.AnnotationEnum] PARENTHESESEND CURLYSTART
CALL[java.util.Set,contains,1,boolean] PARA[VAR[edu.umd.cs.findbugs.ba.AnnotationDatabase.AnnotationEnum]] +++$+++  VAR[edu.umd.cs.findbugs.ba.AnnotationDatabase.AnnotationEnum] PARENTHESESEND CURLYSTART RETURN
CALL[java.util.Map,containsKey,1,boolean] PARA[VAR[java.lang.Object]] +++$+++  VAR[java.lang.Object] PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.String,indexOf,1,int] PARA[LIT[Character]] +++$+++  VAR[java.lang.String] PARENTHESESEND CURLYSTART ASSERT
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  CURLYSTART CHAR VAR[CHAR] OP[assign]
CALL[java.lang.StringBuilder,toString,0,java.lang.String] +++$+++  EOL CURLYEND CURLYEND RETURN
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Stirng]] +++$+++  OP[assign] VAR[INT] PARENTHESESEND CURLYSTART
CALL[java.lang.String,charAt,1,char] PARA[LIT[Integer]] +++$+++  OP[assign] OP[assign] OP[bitwiseOr] OP[bitwiseOr]
CALL[java.lang.String,startsWith,1,boolean] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART PARENTHESESEND OP[bitwiseOr] OP[bitwiseOr]
CALL[java.util.BitSet,clear,0,void] +++$+++  LEX[clear] PARENTHESESSTART PARENTHESESEND CURLYSTART
CALL[java.lang.StringBuilder,toString,0,java.lang.String] +++$+++  OP[sum] PARENTHESESEND EOL RETURN
CALL[java.lang.StringBuilder,toString,0,java.lang.String] +++$+++  TYPE[Token] PARENTHESESSTART LEX[Token.STRING] COMMA
CALL[java.util.BitSet,get,1,boolean] PARA[VAR[INT]] +++$+++  EOL CURLYEND IF PARENTHESESSTART
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[VAR[java.lang.Object]] +++$+++  LEX[buf.append] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Character]] +++$+++  PARENTHESESSTART VAR[INT] PARENTHESESEND EOL
CALL[java.util.TreeSet,add,1,boolean] PARA[VAR[edu.umd.cs.findbugs.graph.MergeVertices.EdgeType]] +++$+++  PARENTHESESEND PARENTHESESEND PARENTHESESEND CURLYSTART
CALL[java.io.InputStream,close,0,void] +++$+++  OP[assign] NULL PARENTHESESEND CURLYSTART
CALL[java.util.HashSet,add,1,boolean] PARA[VAR[java.lang.String]] +++$+++  LEX[in.close] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.io.PrintStream,print,1,void] PARA[VAR[INT]] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND EOL
CALL[java.io.PrintStream,print,1,void] PARA[LIT[Character]] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND EOL
CALL[java.util.Random,nextLong,0,long] +++$+++  PARENTHESESEND CURLYSTART VAR[LONG] OP[assign]
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  PARENTHESESSTART OP[not] LEX[Character.isWhitespace] PARENTHESESSTART
CALL[java.util.Map,get,1,V] PARA[VAR[java.lang.String]] +++$+++  VAR[java.lang.String] PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.ThreadLocal,get,0,T] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.io.File,isFile,0,boolean] +++$+++  EOL CURLYEND IF PARENTHESESSTART
CALL[javax.swing.DefaultListSelectionModel,getMinSelectionIndex,0,int] +++$+++  CURLYSTART INT VAR[INT] OP[assign]
CALL[java.awt.Container,getLayout,0,java.awt.LayoutManager] +++$+++  OP[assign] PARENTHESESSTART TYPE[SpringLayout] PARENTHESESEND
CALL[java.awt.event.ActionEvent,setSource,1,void] PARA[VAR[javax.swing.JTree]] +++$+++  LEX[ActionEvent] VAR[java.awt.event.ActionEvent] PARENTHESESEND CURLYSTART
CALL[javax.swing.JPanel,add,2,void] PARA[VAR[javax.swing.JComponent]] PARA[VAR[java.awt.GridBagConstraints]] +++$+++  COMMA COMMA PARENTHESESEND EOL
CALL[java.util.prefs.Preferences,clear,0,void] +++$+++  PARENTHESESSTART LEX[GUISaveState.class] PARENTHESESEND EOL
CALL[java.util.ArrayList,remove,1,boolean] PARA[VAR[java.io.File]] +++$+++  EOL CURLYEND ELSE CURLYSTART
CALL[java.util.LinkedHashSet,remove,1,boolean] PARA[CALL[java.net.URL,toURI]] +++$+++  CURLYSTART TRY CURLYSTART RETURN
CALL[javax.swing.JPanel,add,1,java.awt.Component] PARA[VAR[javax.swing.JButton]] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND EOL
CALL[java.awt.Graphics2D,setColor,1,void] PARA[VAR[java.awt.Color]] +++$+++  COMMA LEX[RenderingHints.VALUE_ANTIALIAS_ON] PARENTHESESEND EOL
CALL[javax.swing.JFrame,setVisible,1,void] PARA[LIT[Boolean]] +++$+++  LEX[frame.pack] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.util.Map,clear,0,void] +++$+++  LEX[clear] PARENTHESESSTART PARENTHESESEND CURLYSTART
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.Integer]] PARA[VAR[java.awt.Color]] +++$+++  LEX[Color] VAR[java.awt.Color] PARENTHESESEND CURLYSTART
CALL[javax.swing.text.Segment,current,0,char] +++$+++  OP[assign] FIELD[count,javax.swing.text.Segment] EOL RETURN
CALL[java.util.Vector,elements,0,java.util.Enumeration<E>] +++$+++  CURLYSTART TYPE[Enumeration] VAR[java.util.Enumeration] OP[assign]
CALL[java.lang.StringBuffer,toString,0,java.lang.String] +++$+++  PARENTHESESEND EOL CURLYEND RETURN
CALL[java.util.Vector,elements,0,java.util.Enumeration<E>] +++$+++  CURLYSTART TYPE[Enumeration] VAR[java.util.Enumeration] OP[assign]
CALL[java.util.Enumeration,nextElement,0,E] +++$+++  OP[assign] PARENTHESESSTART TYPE[ConversionSpecification] PARENTHESESEND
CALL[java.lang.String,length,0,int] +++$+++  IF PARENTHESESSTART VAR[INT] OP[lessThan]
CALL[java.util.Vector,size,0,int] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.String,length,0,int] +++$+++  OP[assign] NULL PARENTHESESEND OP[ternaryTrue]
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.io.RandomAccessFile,readFloat,0,float] +++$+++  VAR[FLOAT] ARRAYSTART ARRAYEND OP[assign]
CALL[java.io.RandomAccessFile,readFloat,0,float] +++$+++  VAR[FLOAT] ARRAYSTART ARRAYEND OP[assign]
CALL[java.io.RandomAccessFile,readInt,0,int] +++$+++  LEX[IOException] CURLYSTART VAR[INT] OP[assign]
CALL[java.lang.String,equals,1,boolean] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.lang.String,equals,1,boolean] PARA[LIT[Stirng]] +++$+++  EOL CURLYEND IF PARENTHESESSTART
CALL[java.lang.String,equals,1,boolean] PARA[LIT[Stirng]] +++$+++  EOL CURLYEND IF PARENTHESESSTART
CALL[java.io.RandomAccessFile,close,0,void] +++$+++  PARENTHESESEND CURLYSTART TRY CURLYSTART
CALL[java.awt.Container,add,1,java.awt.Component] PARA[VAR[javax.swing.JTextField]] +++$+++  PARENTHESESSTART VAR[javax.swing.JTextField] PARENTHESESEND EOL
CALL[java.lang.String,equals,1,boolean] PARA[LIT[Stirng]] +++$+++  EOL ELSE IF PARENTHESESSTART
CALL[java.io.FileOutputStream,write,1,void] PARA[VAR[INT]] +++$+++  PARENTHESESSTART VAR[INT] PARENTHESESEND EOL
CALL[java.io.FileOutputStream,write,1,void] PARA[VAR[INT]] +++$+++  PARENTHESESSTART VAR[INT] PARENTHESESEND EOL
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[VAR[INT]] +++$+++  LEX[s.append] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART VAR[INT] OP[lessThan] PARENTHESESEND
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART VAR[INT] OP[lessThan] PARENTHESESEND
CALL[javax.swing.ImageIcon,setImage,1,void] PARA[CALL[java.awt.Image,getScaledInstance]] +++$+++  TYPE[ImageIcon] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[LIT[Stirng]] +++$+++  OP[assign] OP[assign] PARENTHESESEND CURLYSTART
CALL[java.awt.event.MouseEvent,getClickCount,0,int] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.awt.event.MouseEvent,getSource,0,java.lang.Object] +++$+++  OP[assign] PARENTHESESSTART TYPE[JList] PARENTHESESEND
CALL[javax.swing.ListSelectionModel,isSelectionEmpty,0,boolean] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.util.concurrent.atomic.AtomicLong,get,0,long] +++$+++  OP[sum] OP[sum] LEX[df.format] PARENTHESESSTART
CALL[org.h2.jaqu.ValidationRemark.Level,name,0,java.lang.String] +++$+++  LEX[sb.append] PARENTHESESSTART LEX[StringUtils.pad] PARENTHESESSTART
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Character]] +++$+++  LEX[true] PARENTHESESEND PARENTHESESEND EOL
CALL[java.lang.StringBuilder,toString,0,java.lang.String] +++$+++  VAR[java.lang.String] PARENTHESESEND EOL RETURN
CALL[java.util.ArrayList,size,0,int] +++$+++  OP[assign] VAR[java.lang.String] OP[sum] OP[sum]
CALL[java.util.ArrayList,add,1,boolean] PARA[VAR[org.h2.jaqu.TableDefinition.IndexDefinition]] +++$+++  FIELD[type,org.h2.jaqu.TableDefinition.IndexDefinition] OP[assign] LEX[type] EOL
CALL[java.util.Map,put,2,V] PARA[CALL[org.h2.jaqu.TableDefinition.FieldDefinition,getValue]] PARA[VAR[org.h2.jaqu.TableDefinition.FieldDefinition]] +++$+++  PARENTHESESSTART VAR[java.lang.Object] PARENTHESESEND EOL
CALL[java.util.ArrayList,get,1,E] PARA[VAR[INT]] +++$+++  CURLYSTART TYPE[FieldDefinition] VAR[org.h2.jaqu.TableDefinition.FieldDefinition] OP[assign]
CALL[java.lang.StringBuilder,toString,0,java.lang.String] +++$+++  PARENTHESESEND CURLYSTART VAR[java.lang.String] OP[assign]
CALL[java.util.ArrayList,add,1,boolean] PARA[VAR[org.h2.java.StatementBlock]] +++$+++  PARENTHESESSTART LEX[expr] PARENTHESESEND EOL
CALL[java.lang.StringBuilder,toString,0,java.lang.String] +++$+++  PARENTHESESEND EOL CURLYEND RETURN
CALL[java.util.HashMap,containsKey,1,boolean] PARA[VAR[java.lang.String]] +++$+++  OP[assign] OP[assign] OP[bitwiseOr] OP[bitwiseOr]
CALL[java.lang.String,startsWith,1,boolean] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.lang.String,startsWith,1,boolean] PARA[LIT[Stirng]] +++$+++  OP[assign] EOL IF PARENTHESESSTART
CALL[java.lang.String,indexOf,2,int] PARA[LIT[Character]] PARA[VAR[INT]] +++$+++  CURLYEND INT VAR[INT] OP[assign]
CALL[java.lang.String,length,0,int] +++$+++  OP[assign] EOL VAR[INT] OP[lessThan]
CALL[java.lang.String,endsWith,1,boolean] PARA[LIT[Stirng]] +++$+++  CURLYEND IF PARENTHESESSTART OP[not]
CALL[java.lang.String,indexOf,2,int] PARA[LIT[Stirng]] PARA[VAR[INT]] +++$+++  CURLYEND INT VAR[INT] OP[assign]
CALL[java.awt.image.BufferedImage,createGraphics,0,java.awt.Graphics2D] +++$+++  VAR[INT] TYPE[Graphics2D] VAR[java.awt.Graphics2D] OP[assign]
CALL[java.awt.image.BufferedImage,getType,0,int] +++$+++  VAR[INT] COMMA VAR[INT] COMMA
CALL[java.lang.String,length,0,int] +++$+++  PARENTHESESSTART VAR[INT] OP[greaterThan] OP[assign]
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  PARENTHESESSTART PARENTHESESEND OP[bitwiseAnd] OP[bitwiseAnd]
CALL[java.lang.String,length,0,int] +++$+++  VAR[INT] OP[assign] VAR[INT] OP[sum]
CALL[java.lang.String,replace,2,java.lang.String] PARA[LIT[Character]] PARA[LIT[Character]] +++$+++  PARENTHESESEND EOL VAR[java.lang.String] OP[assign]
CALL[java.lang.String,equals,1,boolean] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.lang.String,length,0,int] +++$+++  VAR[java.lang.String] OP[assign] LEX[path.substring] PARENTHESESSTART
CALL[java.lang.String,replace,2,java.lang.String] PARA[LIT[Character]] PARA[LIT[Character]] +++$+++  EOL CURLYEND VAR[java.lang.String] OP[assign]
CALL[java.io.File,mkdirs,0,boolean] +++$+++  CURLYSTART IF PARENTHESESSTART OP[not]
CALL[java.lang.String,length,0,int] +++$+++  LEX[s.substring] PARENTHESESSTART VAR[INT] OP[sum]
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Character]] +++$+++  EOL CURLYEND ELSE CURLYSTART
CALL[java.lang.String,length,0,int] +++$+++  EOL CURLYEND IF PARENTHESESSTART
CALL[java.lang.String,startsWith,1,boolean] PARA[LIT[Stirng]] +++$+++  VAR[java.lang.Character] EOL IF PARENTHESESSTART
CALL[java.lang.String,substring,1,java.lang.String] PARA[LIT[Integer]] +++$+++  VAR[INT] OP[assign] LEX[Integer.parseInt] PARENTHESESSTART
CALL[java.lang.String,substring,2,java.lang.String] PARA[LIT[Integer]] PARA[VAR[INT]] +++$+++  PARENTHESESEND CURLYSTART VAR[java.lang.String] OP[assign]
CALL[java.nio.ByteBuffer,putLong,2,java.nio.ByteBuffer] PARA[VAR[INT]] PARA[VAR[LONG]] +++$+++  VAR[INT] OP[sub] OP[assign] EOL
CALL[java.io.File,exists,0,boolean] +++$+++  CURLYSTART IF PARENTHESESSTART OP[not]
CALL[java.io.RandomAccessFile,close,0,void] +++$+++  PARENTHESESSTART FIELD[length,BYTE] PARENTHESESEND EOL
CALL[java.io.ByteArrayOutputStream,reset,0,void] +++$+++  VAR[INT] OP[assign] FIELD[length,BYTE] EOL
CALL[java.lang.String,substring,2,java.lang.String] PARA[LIT[Integer]] PARA[VAR[INT]] +++$+++  VAR[INT] OP[assign] LEX[Integer.parseInt] PARENTHESESSTART
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  CURLYSTART CHAR VAR[CHAR] OP[assign]
CALL[java.lang.StringBuilder,toString,0,java.lang.String] +++$+++  EOL CURLYEND CURLYEND RETURN
CALL[java.lang.String,startsWith,1,boolean] PARA[LIT[Stirng]] +++$+++  CURLYSTART RETURN LEX[server.getFileName] PARENTHESESSTART
CALL[java.lang.String,startsWith,1,boolean] PARA[LIT[Stirng]] +++$+++  VAR[java.lang.String] PARENTHESESEND CURLYSTART RETURN
CALL[java.util.HashSet,addAll,1,boolean] PARA[CALL[org.h2.dev.cache.CacheLIRS.Segment,keySet]] +++$+++  OP[ternaryFalse] VAR[org.h2.dev.cache.CacheLIRS.Segment] PARENTHESESEND CURLYSTART
CALL[java.io.ByteArrayOutputStream,write,3,void] PARA[VAR[BYTE]] PARA[LIT[Integer]] PARA[VAR[INT]] +++$+++  PARENTHESESSTART VAR[BYTE] PARENTHESESEND EOL
CALL[java.io.ByteArrayOutputStream,toByteArray,0,byte[]] +++$+++  PARENTHESESSTART PARENTHESESEND EOL RETURN
CALL[java.util.zip.Inflater,end,0,void] +++$+++  VAR[INT] PARENTHESESEND EOL CURLYEND
CALL[java.io.ByteArrayOutputStream,toByteArray,0,byte[]] +++$+++  PARENTHESESEND EOL CURLYEND RETURN
CALL[java.io.File,isDirectory,0,boolean] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.util.List,size,0,int] +++$+++  EOL INT VAR[INT] OP[assign]
CALL[java.io.InputStream,skip,1,long] PARA[CALL[java.util.List,get]] +++$+++  PARENTHESESSTART VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.util.TreeSet,first,0,E] +++$+++  CURLYSTART TYPE[ChunkStream] VAR[org.h2.dev.fs.ArchiveTool.ChunkStream] OP[assign]
CALL[java.util.ArrayList,size,0,int] +++$+++  OP[multiply] VAR[INT] OP[bitwiseOr] OP[bitwiseOr]
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[VAR[INT]] +++$+++  EOL CURLYEND ELSE CURLYSTART
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Character]] +++$+++  COMMA VAR[INT] PARENTHESESEND EOL
CALL[java.util.ArrayList,clear,0,void] +++$+++  EOL VAR[INT] OP[assign] EOL
CALL[java.lang.StringBuilder,toString,0,java.lang.String] +++$+++  CURLYEND TYPE[String] VAR[java.lang.String] OP[assign]
CALL[java.util.HashSet,contains,1,boolean] PARA[VAR[java.lang.String]] +++$+++  VAR[java.lang.String] PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.String,length,0,int] +++$+++  OP[assign] LEX[n.substring] PARENTHESESSTART COMMA
CALL[java.lang.String,indexOf,1,int] PARA[LIT[Character]] +++$+++  PARENTHESESEND CURLYSTART VAR[INT] OP[assign]
CALL[java.lang.String,length,0,int] +++$+++  PARENTHESESEND CURLYSTART VAR[INT] OP[assign]
CALL[java.lang.String,length,0,int] +++$+++  OP[assign] NULL OP[bitwiseAnd] OP[bitwiseAnd]
CALL[java.lang.String,startsWith,1,boolean] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART PARENTHESESEND OP[bitwiseOr] OP[bitwiseOr]
CALL[java.lang.String,startsWith,1,boolean] PARA[LIT[Stirng]] +++$+++  CURLYEND ELSE IF PARENTHESESSTART
CALL[java.lang.management.ThreadInfo,getThreadName,0,java.lang.String] +++$+++  CURLYSTART LEX[print.print] PARENTHESESSTART OP[sum]
CALL[java.lang.management.ThreadInfo,getLockName,0,java.lang.String] +++$+++  CURLYSTART LEX[print.append] PARENTHESESSTART OP[sum]
CALL[java.lang.management.ThreadInfo,isSuspended,0,boolean] +++$+++  EOL CURLYEND IF PARENTHESESSTART
CALL[java.io.PrintWriter,append,1,java.io.PrintWriter] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND CURLYSTART
CALL[java.util.ArrayList,size,0,int] +++$+++  PARENTHESESSTART VAR[java.lang.String] OP[sum] OP[sum]
CALL[java.util.ArrayList,size,0,int] +++$+++  PARENTHESESSTART VAR[java.lang.String] OP[sum] OP[sum]
CALL[java.util.Map,get,1,V] PARA[CALL[java.lang.Object,getClass]] +++$+++  CURLYSTART TYPE[AtomicBoolean] VAR[java.util.concurrent.atomic.AtomicBoolean] OP[assign]
CALL[java.lang.management.MonitorInfo,getIdentityHashCode,0,int] +++$+++  OP[sum] OP[sum] LEX[Integer.toHexString] PARENTHESESSTART
CALL[java.io.Reader,close,0,void] +++$+++  PARENTHESESEND CURLYSTART TRY CURLYSTART
CALL[java.lang.String,length,0,int] +++$+++  CURLYSTART INT VAR[INT] OP[assign]
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  CURLYSTART CHAR VAR[CHAR] OP[assign]
CALL[java.lang.String,trim,0,java.lang.String] +++$+++  LEX[list.add] PARENTHESESSTART VAR[BOOLEAN] OP[ternaryTrue]
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[VAR[CHAR]] +++$+++  OP[sum] OP[sum] PARENTHESESEND CURLYSTART
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  OP[lessThan] VAR[INT] OP[bitwiseAnd] OP[bitwiseAnd]
CALL[java.lang.String,substring,1,java.lang.String] PARA[VAR[INT]] +++$+++  PARENTHESESEND OP[ternaryTrue] VAR[java.lang.String] OP[ternaryFalse]
CALL[java.lang.Class,getName,0,java.lang.String] +++$+++  NEW TYPE[IllegalStateException] PARENTHESESSTART OP[sum]
CALL[java.lang.Class,getMethod,2,java.lang.reflect.Method] PARA[VAR[java.lang.String]] PARA[VAR[java.lang.Class]] +++$+++  CURLYSTART TRY CURLYSTART RETURN
CALL[java.lang.reflect.Method,invoke,1,java.lang.Object] PARA[VAR[java.lang.Object]] +++$+++  OP[assign] PARENTHESESSTART TYPE[Integer] PARENTHESESEND
CALL[java.lang.StringBuilder,toString,0,java.lang.String] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.io.InputStream,skip,1,long] PARA[VAR[LONG]] +++$+++  CURLYSTART LONG VAR[LONG] OP[assign]
CALL[java.io.Reader,skip,1,long] PARA[VAR[LONG]] +++$+++  CURLYSTART LONG VAR[LONG] OP[assign]
CALL[java.io.Reader,close,0,void] +++$+++  EOL CURLYEND FINALLY CURLYSTART
CALL[java.util.ArrayList,add,1,boolean] PARA[VAR[java.lang.String]] +++$+++  CURLYSTART CONTINUE EOL CURLYEND
CALL[java.nio.CharBuffer,rewind,0,java.nio.Buffer] +++$+++  OP[sum] VAR[INT] PARENTHESESEND EOL
CALL[java.nio.ByteBuffer,flip,0,java.nio.Buffer] +++$+++  EOL RETURN EOL CURLYEND
CALL[java.lang.String,equalsIgnoreCase,1,boolean] PARA[LIT[Stirng]] +++$+++  CURLYEND ELSE IF PARENTHESESSTART
CALL[java.nio.ByteBuffer,position,1,java.nio.Buffer] PARA[LIT[Integer]] +++$+++  PARENTHESESSTART TYPE[LZF] PARENTHESESEND CURLYSTART
CALL[java.nio.ByteBuffer,remaining,0,int] +++$+++  EOL CURLYEND WHILE PARENTHESESSTART
CALL[java.nio.channels.FileChannel,close,0,void] +++$+++  PARENTHESESEND CURLYSTART TRY CURLYSTART
CALL[java.util.HashSet,add,1,boolean] PARA[VAR[java.lang.String]] +++$+++  OP[assign] NULL PARENTHESESEND CURLYSTART
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  CURLYSTART CHAR VAR[CHAR] OP[assign]
CALL[java.lang.String,hashCode,0,int] +++$+++  LEX[table.getId] PARENTHESESSTART PARENTHESESEND LEX[^]
CALL[java.nio.ByteBuffer,get,0,byte] +++$+++  LEX[x7f] EOL VAR[INT] OP[assign]
CALL[java.lang.String,lastIndexOf,1,int] PARA[LIT[Character]] +++$+++  CURLYSTART INT VAR[INT] OP[assign]
CALL[java.nio.ByteBuffer,putShort,2,java.nio.ByteBuffer] PARA[VAR[INT]] PARA[VAR[SHORT]] +++$+++  SHORT VAR[SHORT] PARENTHESESEND CURLYSTART
CALL[java.nio.ByteBuffer,remaining,0,int] +++$+++  CURLYSTART INT VAR[INT] OP[assign]
CALL[java.io.DataOutputStream,writeShort,1,void] PARA[VAR[INT]] +++$+++  PARENTHESESEND THROWS LEX[IOException] CURLYSTART
CALL[java.lang.String,substring,2,java.lang.String] PARA[LIT[Integer]] PARA[VAR[INT]] +++$+++  PARENTHESESEND EOL LEX[result.append] PARENTHESESSTART
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[CALL[java.lang.String,substring]] +++$+++  VAR[INT] OP[lessThan] PARENTHESESEND CURLYSTART
CALL[java.util.ArrayList,size,0,int] +++$+++  CURLYSTART RETURN LEX[i] OP[lessThan]
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Stirng]] +++$+++  BREAK EOL CASE OP[ternaryFalse]
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Stirng]] +++$+++  BREAK EOL CASE OP[ternaryFalse]
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[VAR[CHAR]] +++$+++  BREAK EOL DEFAULT OP[ternaryFalse]
CALL[java.lang.String,trim,0,java.lang.String] +++$+++  EOL CURLYEND VAR[java.lang.String] OP[assign]
CALL[java.util.List,size,0,int] +++$+++  PARENTHESESEND EOL RETURN PARENTHESESSTART
CALL[java.lang.String,toCharArray,0,char[]] +++$+++  LEX[store.store] PARENTHESESSTART VAR[java.io.ByteArrayOutputStream] COMMA
CALL[java.util.HashMap,get,1,V] PARA[VAR[INT]] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.util.HashMap,get,1,V] PARA[VAR[INT]] +++$+++  CURLYEND TYPE[DataType] VAR[org.h2.value.DataType] OP[assign]
CALL[java.lang.Class,isAssignableFrom,1,boolean] PARA[VAR[java.lang.Class]] +++$+++  LEX[false] EOL CURLYEND RETURN
CALL[java.lang.String,length,0,int] +++$+++  VAR[java.lang.String] OP[assign] LEX[name.substring] PARENTHESESSTART
CALL[java.net.Socket,getInputStream,0,java.io.InputStream] +++$+++  PARENTHESESSTART NEW TYPE[BufferedInputStream] PARENTHESESSTART
CALL[java.io.DataOutputStream,writeDouble,1,void] PARA[VAR[DOUBLE]] +++$+++  PARENTHESESEND THROWS LEX[IOException] CURLYSTART
CALL[java.lang.StringBuilder,toString,0,java.lang.String] +++$+++  CURLYEND TYPE[String] VAR[java.lang.String] OP[assign]
CALL[java.sql.SQLException,getMessage,0,java.lang.String] +++$+++  CURLYSTART LEX[LOGGER.error] PARENTHESESSTART OP[sum]
CALL[java.io.InputStream,read,1,int] PARA[VAR[BYTE]] +++$+++  PARENTHESESSTART PARENTHESESSTART VAR[INT] OP[assign]
CALL[java.io.ByteArrayOutputStream,close,0,void] +++$+++  LEX[baot.toByteArray] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.lang.String,trim,0,java.lang.String] +++$+++  EOL CURLYEND VAR[java.lang.String] OP[assign]
CALL[java.lang.String,substring,2,java.lang.String] PARA[LIT[Integer]] PARA[CALL[java.lang.String,indexOf]] +++$+++  PARENTHESESEND CURLYSTART VAR[java.lang.String] OP[assign]
CALL[java.lang.String,indexOf,1,int] PARA[LIT[Character]] +++$+++  OP[assign] LEX[value.substring] PARENTHESESSTART COMMA
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  EOL CURLYEND VAR[CHAR] OP[assign]
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  CURLYEND RETURN LEX[Character.isDigit] PARENTHESESSTART
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  CURLYEND RETURN LEX[Character.isDigit] PARENTHESESSTART
CALL[java.awt.Component,getFont,0,java.awt.Font] +++$+++  VAR[java.awt.FontMetrics] OP[assign] LEX[component.getFontMetrics] PARENTHESESSTART
CALL[java.util.Map,get,1,V] PARA[VAR[java.lang.String]] +++$+++  CURLYSTART TYPE[Lock] VAR[java.util.concurrent.locks.Lock] OP[assign]
CALL[java.util.ArrayList,size,0,int] +++$+++  PARENTHESESSTART VAR[INT] OP[greaterThan] OP[assign]
CALL[java.lang.String,split,2,java.lang.String[]] PARA[LIT[Stirng]] PARA[LIT[Integer]] +++$+++  ARRAYSTART ARRAYEND VAR[java.lang.String] OP[assign]
CALL[java.util.ArrayList,add,1,boolean] PARA[VAR[java.lang.String]] +++$+++  OP[assign] NULL PARENTHESESEND CURLYSTART
CALL[java.lang.String,hashCode,0,int] +++$+++  NULL PARENTHESESEND OP[ternaryTrue] OP[ternaryFalse]
CALL[java.lang.String,lastIndexOf,1,int] PARA[LIT[Character]] +++$+++  CURLYSTART INT VAR[INT] OP[assign]
CALL[java.lang.String,length,0,int] +++$+++  PARENTHESESEND CURLYSTART VAR[INT] OP[assign]
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[VAR[java.lang.String]] +++$+++  LEX[sb.append] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART VAR[java.lang.Object] PARENTHESESEND EOL
CALL[java.lang.String,replace,2,java.lang.String] PARA[LIT[Character]] PARA[LIT[Character]] +++$+++  PARENTHESESEND EOL VAR[java.lang.String] OP[assign]
CALL[java.lang.StringBuilder,toString,0,java.lang.String] +++$+++  PARENTHESESEND EOL CURLYEND RETURN
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[VAR[CHAR]] +++$+++  PARENTHESESEND EOL DEFAULT OP[ternaryFalse]
CALL[java.util.Iterator,next,0,E] +++$+++  PARENTHESESEND CURLYSTART LEX[iterators.add] PARENTHESESSTART
CALL[java.lang.String,substring,2,java.lang.String] PARA[LIT[Integer]] PARA[VAR[INT]] +++$+++  PARENTHESESEND EOL VAR[java.lang.String] OP[assign]
CALL[java.io.IOException,getMessage,0,java.lang.String] +++$+++  PARENTHESESSTART COMMA VAR[java.nio.file.Path] COMMA
CALL[java.lang.String,endsWith,1,boolean] PARA[LIT[Stirng]] +++$+++  EOL CURLYEND IF PARENTHESESSTART
CALL[java.util.ArrayList,add,1,boolean] PARA[VAR[java.io.File]] +++$+++  OP[sum] PARENTHESESEND EOL CURLYEND
CALL[java.lang.Exception,getMessage,0,java.lang.String] +++$+++  PARENTHESESSTART COMMA LEX[PMS.NAME] COMMA
CALL[java.io.File,renameTo,1,boolean] PARA[VAR[java.io.File]] +++$+++  EOL IF PARENTHESESSTART OP[not]
CALL[java.awt.event.ItemEvent,getStateChange,0,int] +++$+++  CURLYSTART LEX[configuration.setDvdIsoThumbnails] PARENTHESESSTART PARENTHESESSTART
CALL[java.awt.event.ItemEvent,getStateChange,0,int] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.awt.event.ItemEvent,getStateChange,0,int] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.awt.event.ItemEvent,getStateChange,0,int] +++$+++  CURLYSTART LEX[configuration.setPrettifyFilenames] PARENTHESESSTART PARENTHESESSTART
CALL[javax.swing.JCheckBox,setContentAreaFilled,1,void] PARA[LIT[Boolean]] +++$+++  PARENTHESESEND OP[sum] PARENTHESESEND EOL
CALL[java.awt.event.ItemEvent,getStateChange,0,int] +++$+++  EOL LEX[forceDTSinPCM.setEnabled] PARENTHESESSTART PARENTHESESSTART
CALL[javax.swing.JTextField,getText,0,java.lang.String] +++$+++  PARENTHESESEND CURLYSTART LEX[configuration.setForcedSubtitleLanguage] PARENTHESESSTART
CALL[java.awt.event.ItemEvent,getStateChange,0,int] +++$+++  PARENTHESESEND CURLYSTART LEX[configuration.setMencoderSubFribidi] PARENTHESESSTART
CALL[javax.swing.JTextField,getText,0,java.lang.String] +++$+++  PARENTHESESEND CURLYSTART LEX[configuration.setAssScale] PARENTHESESSTART
CALL[java.awt.Color,getRGB,0,int] +++$+++  PARENTHESESEND EOL LEX[configuration.setSubsColor] PARENTHESESSTART
CALL[java.io.BufferedReader,readLine,0,java.lang.String] +++$+++  PARENTHESESSTART PARENTHESESSTART VAR[java.lang.String] OP[assign]
CALL[javax.swing.JTextArea,getText,0,java.lang.String] +++$+++  CURLYSTART TYPE[String] VAR[java.lang.String] OP[assign]
CALL[javax.swing.JTextField,getText,0,java.lang.String] +++$+++  PARENTHESESEND CURLYSTART LEX[configuration.setIpFilter] PARENTHESESSTART
CALL[javax.swing.BoundedRangeModel,getValue,0,int] +++$+++  EOL INT VAR[INT] OP[assign]
CALL[java.awt.image.BufferedImage,createGraphics,0,java.awt.Graphics2D] +++$+++  EOL TYPE[Graphics2D] VAR[java.awt.Graphics2D] OP[assign]
CALL[javax.swing.JFileChooser,setAcceptAllFileFilterUsed,1,void] PARA[LIT[Boolean]] +++$+++  PARENTHESESSTART VAR[javax.swing.filechooser.FileNameExtensionFilter] PARENTHESESEND EOL
CALL[javax.swing.JFileChooser,setSelectedFile,1,void] PARA[VAR[java.io.File]] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND CURLYSTART
CALL[java.io.File,getAbsolutePath,0,java.lang.String] +++$+++  EOL LEX[System.setProperty] PARENTHESESSTART COMMA
CALL[java.io.OutputStream,close,0,void] +++$+++  PARENTHESESSTART VAR[BYTE] PARENTHESESEND EOL
CALL[java.io.OutputStream,write,3,void] PARA[VAR[BYTE]] PARA[LIT[Integer]] PARA[VAR[INT]] +++$+++  OP[sum] OP[assign] VAR[INT] EOL
CALL[java.lang.String,lastIndexOf,1,int] PARA[LIT[Character]] +++$+++  CURLYSTART INT VAR[INT] OP[assign]
CALL[java.lang.String,equals,1,boolean] PARA[VAR[java.lang.String]] +++$+++  NULL OP[bitwiseAnd] OP[bitwiseAnd] PARENTHESESSTART
CALL[java.io.InputStream,read,1,int] PARA[VAR[BYTE]] +++$+++  CURLYSTART INT VAR[INT] OP[assign]
CALL[java.net.URL,getPath,0,java.lang.String] +++$+++  OP[assign] NEW TYPE[File] PARENTHESESSTART
CALL[java.io.File,mkdirs,0,boolean] +++$+++  PARENTHESESSTART VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.lang.StringBuilder,length,0,int] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.net.InetAddress,getHostAddress,0,java.lang.String] +++$+++  CURLYSTART TYPE[String] VAR[java.lang.String] OP[assign]
CALL[java.util.List,isEmpty,0,boolean] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.lang.String,replace,2,java.lang.String] PARA[LIT[Character]] PARA[LIT[Character]] +++$+++  PARENTHESESEND EOL VAR[java.lang.String] OP[assign]
CALL[java.util.Map,get,1,V] PARA[CALL[java.net.InetAddress,getHostAddress]] +++$+++  VAR[java.util.Map] PARENTHESESEND CURLYSTART RETURN
CALL[java.net.URL,getUserInfo,0,java.lang.String] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.net.URL,getHost,0,java.lang.String] +++$+++  PARENTHESESEND CURLYSTART LEX[siteinfo.put] PARENTHESESSTART
CALL[java.net.NetworkInterface,getName,0,java.lang.String] +++$+++  VAR[java.util.Set] OP[assign] LEX[addressMap.get] PARENTHESESSTART
CALL[java.util.List,size,0,int] +++$+++  TYPE[ArrayList] OP[lessThan] OP[greaterThan] PARENTHESESSTART
CALL[java.lang.Throwable,getMessage,0,java.lang.String] +++$+++  CURLYSTART LEX[LOG.warning] PARENTHESESSTART OP[sum]
CALL[java.lang.String,length,0,int] +++$+++  WHILE PARENTHESESSTART VAR[INT] OP[lessThan]
CALL[java.util.List,iterator,0,java.util.Iterator<E>] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.String,toLowerCase,0,java.lang.String] +++$+++  PARENTHESESSTART LEX[description.lastIndexOf] PARENTHESESSTART OP[sum]
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[VAR[CHAR]] +++$+++  BREAK EOL DEFAULT OP[ternaryFalse]
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Stirng]] +++$+++  BREAK EOL CURLYEND CURLYEND
CALL[java.io.Writer,write,1,void] PARA[LIT[Character]] +++$+++  BREAK EOL CASE OP[ternaryFalse]
CALL[java.io.Writer,write,1,void] PARA[LIT[Character]] +++$+++  BREAK EOL CASE OP[ternaryFalse]
CALL[java.io.Writer,write,1,void] PARA[LIT[Character]] +++$+++  PARENTHESESSTART VAR[BOOLEAN] PARENTHESESEND CURLYSTART
CALL[java.util.concurrent.ConcurrentHashMap,get,1,V] PARA[VAR[java.lang.String]] +++$+++  EOL TYPE[String] VAR[java.lang.String] OP[assign]
CALL[java.io.Writer,write,3,void] PARA[VAR[CHAR]] PARA[LIT[Integer]] PARA[VAR[INT]] +++$+++  PARENTHESESEND PARENTHESESEND PARENTHESESEND CURLYSTART
CALL[java.io.Writer,write,3,void] PARA[VAR[java.lang.String]] PARA[VAR[INT]] PARA[VAR[INT]] +++$+++  PARENTHESESEND THROWS LEX[IOException] CURLYSTART
CALL[java.io.Writer,append,1,java.io.Writer] PARA[VAR[java.lang.CharSequence]] +++$+++  THROWS LEX[IOException] CURLYSTART RETURN
CALL[javax.swing.table.TableModel,getRowCount,0,int] +++$+++  NULL PARENTHESESEND OP[ternaryTrue] OP[ternaryFalse]
CALL[javax.swing.ButtonGroup,getButtonCount,0,int] +++$+++  CURLYSTART INT VAR[INT] OP[assign]
CALL[javax.swing.ButtonGroup,add,1,void] PARA[VAR[javax.swing.AbstractButton]] +++$+++  LEX[AbstractButton] VAR[javax.swing.AbstractButton] PARENTHESESEND CURLYSTART
CALL[javax.swing.DefaultListModel,addElement,1,void] PARA[VAR[java.lang.Object]] +++$+++  LEX[Object] VAR[java.lang.Object] PARENTHESESEND CURLYSTART
CALL[javax.swing.table.TableModel,getColumnCount,0,int] +++$+++  CURLYSTART INT VAR[INT] OP[assign]
CALL[javax.swing.JToolBar,getComponentAtIndex,1,java.awt.Component] PARA[VAR[INT]] +++$+++  VAR[INT] PARENTHESESEND CURLYSTART RETURN
CALL[java.util.Iterator,next,0,E] +++$+++  OP[assign] PARENTHESESSTART LEX[groovy.swing.impl.TableLayoutCell] PARENTHESESEND
CALL[java.util.List,isEmpty,0,boolean] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.util.SortedSet,isEmpty,0,boolean] +++$+++  EOL IF PARENTHESESSTART OP[not]
CALL[java.lang.String,trim,0,java.lang.String] +++$+++  PARENTHESESEND EOL CURLYEND RETURN
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[CALL[javax.management.Notification,getTimeStamp]] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND EOL
CALL[java.lang.Class,getModifiers,0,int] +++$+++  OP[bitwiseAnd] OP[bitwiseAnd] LEX[Modifier.isFinal] PARENTHESESSTART
CALL[java.util.Map,keySet,0,java.util.Set<K>] +++$+++  PARENTHESESSTART TYPE[Object] VAR[java.lang.Object] OP[ternaryFalse]
CALL[java.util.List,get,1,E] PARA[VAR[INT]] +++$+++  PARENTHESESEND CURLYSTART LEX[ans.add] PARENTHESESSTART
CALL[java.io.Writer,write,1,void] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND CURLYSTART TRY CURLYSTART
CALL[java.util.List,add,1,boolean] PARA[VAR[java.lang.Object]] +++$+++  TYPE[ArrayList] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.util.List,add,1,boolean] PARA[VAR[java.util.List]] +++$+++  PARENTHESESSTART VAR[java.lang.Object] PARENTHESESEND EOL
CALL[java.util.List,add,1,boolean] PARA[VAR[java.lang.Object]] +++$+++  TYPE[NodeList] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.util.Iterator,next,0,E] +++$+++  CURLYSTART TYPE[Object] VAR[java.lang.Object] OP[assign]
CALL[java.util.Map,values,0,java.util.Collection<V>] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.String,lastIndexOf,1,int] PARA[LIT[Stirng]] +++$+++  EOL INT VAR[INT] OP[assign]
CALL[java.lang.String,equals,1,boolean] PARA[LIT[Stirng]] +++$+++  NULL PARENTHESESEND OP[bitwiseOr] OP[bitwiseOr]
CALL[java.lang.Object,hashCode,0,int] +++$+++  OP[assign] NULL PARENTHESESEND OP[ternaryTrue]
CALL[java.util.Map,containsKey,1,boolean] PARA[VAR[java.lang.Object]] +++$+++  VAR[java.lang.Object] PARENTHESESEND CURLYSTART RETURN
CALL[java.util.Calendar,getTime,0,java.util.Date] +++$+++  PARENTHESESEND PARENTHESESEND EOL RETURN
CALL[java.io.File,exists,0,boolean] +++$+++  CURLYEND IF PARENTHESESSTART OP[not]
CALL[java.lang.String,lastIndexOf,1,int] PARA[LIT[Character]] +++$+++  CURLYSTART INT VAR[INT] OP[assign]
CALL[java.io.File,mkdirs,0,boolean] +++$+++  VAR[INT] PARENTHESESEND PARENTHESESEND EOL
CALL[java.io.PrintWriter,print,1,void] PARA[CALL[java.lang.String,replace]] +++$+++  LEX[alias.getName] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.io.PrintWriter,print,1,void] PARA[LIT[Stirng]] +++$+++  OP[assign] LEX[ClassHelper.long_TYPE] PARENTHESESEND CURLYSTART
CALL[java.io.PrintWriter,print,1,void] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND OP[not] OP[assign] PARENTHESESEND
CALL[java.lang.String,length,0,int] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.lang.String,length,0,int] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.lang.Class,getName,0,java.lang.String] +++$+++  RETURN NEW TYPE[Logger] PARENTHESESSTART
CALL[java.util.Map.Entry,getKey,0,K] +++$+++  ARRAYSTART VAR[INT] ARRAYEND OP[assign]
CALL[java.lang.CharSequence,toString,0,java.lang.String] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.StringBuilder,toString,0,java.lang.String] +++$+++  ARRAYSTART VAR[INT] ARRAYEND OP[assign]
CALL[java.util.Iterator,hasNext,0,boolean] +++$+++  LEX[scope.getReferencedLocalVariablesIterator] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.util.Map,get,1,V] PARA[VAR[INT]] +++$+++  PARENTHESESEND CURLYSTART VAR[java.lang.String] OP[assign]
CALL[java.util.Map,put,2,V] PARA[VAR[INT]] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND CURLYSTART
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.util.Map]] +++$+++  TYPE[HashMap] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.lang.String,equals,1,boolean] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.lang.String,substring,1,java.lang.String] PARA[LIT[Integer]] +++$+++  PARENTHESESEND CURLYSTART VAR[java.lang.String] OP[assign]
CALL[java.lang.String,length,0,int] +++$+++  OP[assign] EOL VAR[INT] OP[lessThan]
CALL[java.lang.Thread,setDaemon,1,void] PARA[LIT[Boolean]] +++$+++  IF PARENTHESESSTART VAR[BOOLEAN] PARENTHESESEND
CALL[java.util.List,add,1,boolean] PARA[LIT[Integer]] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND EOL
CALL[java.util.List,get,1,E] PARA[LIT[Integer]] +++$+++  EOL TYPE[Object] VAR[java.lang.Object] OP[assign]
CALL[java.lang.Object,getClass,0,java.lang.Class<? extends java.lang.Object>] +++$+++  ELSE CURLYSTART VAR[java.lang.Class] OP[assign]
CALL[java.lang.String,equals,1,boolean] PARA[VAR[java.lang.String]] +++$+++  VAR[java.lang.String] PARENTHESESEND CURLYSTART RETURN
CALL[java.net.URL,toExternalForm,0,java.lang.String] +++$+++  NEW TYPE[GroovyRuntimeException] PARENTHESESSTART OP[sum]
CALL[java.util.Enumeration,hasMoreElements,0,boolean] +++$+++  PARENTHESESEND EOL WHILE PARENTHESESSTART
CALL[java.io.PushbackReader,read,0,int] +++$+++  CURLYSTART INT VAR[INT] OP[assign]
CALL[java.io.PushbackReader,unread,1,void] PARA[VAR[INT]] +++$+++  PARENTHESESSTART VAR[INT] PARENTHESESEND EOL
CALL[java.io.PushbackReader,unread,1,void] PARA[VAR[INT]] +++$+++  OP[assign] VAR[INT] PARENTHESESEND CURLYSTART
CALL[java.util.Map.Entry,getValue,0,V] +++$+++  PARENTHESESEND CURLYSTART LEX[map.put] PARENTHESESSTART
CALL[java.util.Map,get,1,V] PARA[VAR[java.lang.Class]] +++$+++  CURLYSTART TYPE[String] VAR[java.lang.String] OP[assign]
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.Class]] PARA[VAR[java.lang.String]] +++$+++  CURLYSTART RETURN EOL CURLYEND
CALL[java.lang.String,hashCode,0,int] +++$+++  NULL PARENTHESESEND OP[ternaryTrue] OP[ternaryFalse]
CALL[java.lang.String,hashCode,0,int] +++$+++  NULL PARENTHESESEND OP[ternaryTrue] OP[ternaryFalse]
CALL[javax.swing.DefaultListModel,isEmpty,0,boolean] +++$+++  CURLYEND ELSE IF PARENTHESESSTART
CALL[net.sourceforge.pmd.util.designer.DFAPanel.DFACanvas,repaint,0,void] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND EOL
CALL[javax.swing.event.UndoableEditEvent,getEdit,0,javax.swing.undo.UndoableEdit] +++$+++  PARENTHESESEND CURLYSTART LEX[undoManager.addEdit] PARENTHESESSTART
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[VAR[java.lang.String]] +++$+++  VAR[INT] PARENTHESESEND PARENTHESESEND EOL
CALL[java.lang.String,length,0,int] +++$+++  EOL INT VAR[INT] OP[assign]
CALL[java.lang.String,length,0,int] +++$+++  EOL INT VAR[INT] OP[assign]
CALL[java.lang.String,substring,1,java.lang.String] PARA[VAR[INT]] +++$+++  EOL CURLYEND LEX[list.add] PARENTHESESSTART
CALL[java.lang.String,replaceAll,2,java.lang.String] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND CURLYSTART VAR[java.lang.String] OP[assign]
CALL[java.lang.String,hashCode,0,int] +++$+++  NULL PARENTHESESEND CURLYSTART RETURN
CALL[java.util.List,get,1,E] PARA[VAR[INT]] +++$+++  EOL CURLYEND LEX[buffer.append] PARENTHESESSTART
CALL[java.util.List,size,0,int] +++$+++  OP[assign] EOL VAR[INT] OP[lessThan]
CALL[java.util.List,add,1,boolean] PARA[VAR[net.sourceforge.pmd.lang.dfa.report.AbstractReportNode]] +++$+++  LEX[AbstractReportNode] VAR[net.sourceforge.pmd.lang.dfa.report.AbstractReportNode] PARENTHESESEND CURLYSTART
CALL[java.util.List,get,1,E] PARA[VAR[INT]] +++$+++  OP[sub] PARENTHESESEND CURLYSTART RETURN
CALL[java.util.List,isEmpty,0,boolean] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.io.File,isDirectory,0,boolean] +++$+++  CURLYEND ELSE IF PARENTHESESSTART
CALL[java.lang.String,replace,2,java.lang.String] PARA[LIT[Character]] PARA[LIT[Character]] +++$+++  VAR[java.lang.String] PARENTHESESEND CURLYSTART RETURN
CALL[java.util.List,isEmpty,0,boolean] +++$+++  NULL OP[bitwiseAnd] OP[bitwiseAnd] OP[not]
CALL[java.util.List,add,1,boolean] PARA[CALL[null,ruleRemoved]] +++$+++  STRING VAR[java.lang.String] PARENTHESESEND CURLYSTART
CALL[java.lang.String,lastIndexOf,1,int] PARA[LIT[Character]] +++$+++  VAR[INT] OP[assign] LEX[Math.max] PARENTHESESSTART
CALL[java.lang.String,endsWith,1,boolean] PARA[LIT[Stirng]] +++$+++  EOL CURLYEND IF PARENTHESESSTART
CALL[java.lang.String,startsWith,1,boolean] PARA[LIT[Stirng]] +++$+++  EOL INT VAR[INT] OP[assign]
CALL[java.util.List,add,1,boolean] PARA[CALL[java.lang.String,substring]] +++$+++  OP[assign] OP[assign] PARENTHESESEND CURLYSTART
CALL[java.io.PrintWriter,print,1,void] PARA[LIT[Character]] +++$+++  OP[ternaryFalse] VAR[java.util.List] PARENTHESESEND CURLYSTART
CALL[java.io.PrintWriter,print,1,void] PARA[VAR[java.lang.String]] +++$+++  OP[assign] NULL PARENTHESESEND CURLYSTART
CALL[java.io.PrintWriter,print,1,void] PARA[VAR[java.lang.String]] +++$+++  LEX[writer.print] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[LIT[Stirng]] +++$+++  BREAK EOL CASE OP[ternaryFalse]
CALL[java.lang.String,length,0,int] +++$+++  PARENTHESESSTART OP[sum] LEX[s.substring] PARENTHESESSTART
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  FINAL CHAR VAR[CHAR] OP[assign]
CALL[java.lang.StringBuilder,toString,0,java.lang.String] +++$+++  PARENTHESESSTART PARENTHESESEND EOL RETURN
CALL[java.lang.String,equals,1,boolean] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.lang.String,equals,1,boolean] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.lang.String,equals,1,boolean] PARA[LIT[Stirng]] +++$+++  EOL ELSE IF PARENTHESESSTART
CALL[java.io.File,isDirectory,0,boolean] +++$+++  OP[assign] NULL OP[bitwiseAnd] OP[bitwiseAnd]
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.lang.String]] +++$+++  STRING VAR[java.lang.String] PARENTHESESEND CURLYSTART
CALL[java.awt.Canvas,getHeight,0,int] +++$+++  LEX[canvas.getWidth] PARENTHESESSTART PARENTHESESEND COMMA
CALL[java.awt.Color,getBlue,0,int] +++$+++  PARENTHESESEND DOUBLE VAR[DOUBLE] OP[assign]
CALL[java.awt.image.BufferedImage,getHeight,0,int] +++$+++  OP[assign] EOL VAR[INT] OP[lessThan]
CALL[java.util.List,size,0,int] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.util.Map,containsKey,1,boolean] PARA[VAR[java.lang.String]] +++$+++  CURLYSTART IF PARENTHESESSTART OP[not]
CALL[java.util.List,size,0,int] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.String,startsWith,1,boolean] PARA[LIT[Stirng]] +++$+++  VAR[java.lang.String] PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.StringBuilder,toString,0,java.lang.String] +++$+++  EOL CURLYEND CURLYEND RETURN
CALL[java.io.PrintStream,print,1,void] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESSTART VAR[java.io.File] PARENTHESESEND EOL
CALL[java.io.PrintStream,close,0,void] +++$+++  PARENTHESESSTART VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.awt.image.BufferedImage,getWidth,0,int] +++$+++  OP[assign] EOL VAR[INT] OP[lessThan]
CALL[java.util.List,add,1,boolean] PARA[VAR[net.sf.hale.characterbuilder.PointAllocatorModel.Listener]] +++$+++  LEX[Listener] VAR[net.sf.hale.characterbuilder.PointAllocatorModel.Listener] PARENTHESESEND CURLYSTART
CALL[java.util.List,clear,0,void] +++$+++  PARENTHESESSTART VAR[java.util.List] PARENTHESESEND CURLYSTART
CALL[java.util.Set,contains,1,boolean] PARA[VAR[java.lang.Integer]] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.util.TreeSet,add,1,boolean] PARA[VAR[java.lang.String]] +++$+++  STRING VAR[java.lang.String] PARENTHESESEND CURLYSTART
CALL[java.lang.String,equals,1,boolean] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.lang.String,equals,1,boolean] PARA[LIT[Stirng]] +++$+++  CURLYEND ELSE IF PARENTHESESSTART
CALL[java.util.List,get,1,E] PARA[VAR[INT]] +++$+++  CURLYSTART TYPE[TemporarySightArea] VAR[net.sf.hale.GameTimer.TemporarySightArea] OP[assign]
CALL[java.util.List,add,1,boolean] PARA[VAR[net.sf.hale.rules.Damage.Entry]] +++$+++  PARENTHESESSTART LEX[type] PARENTHESESEND EOL
CALL[java.util.List,isEmpty,0,boolean] +++$+++  EOL IF PARENTHESESSTART OP[not]
CALL[java.util.Map,size,0,int] +++$+++  LEX[false] EOL RETURN PARENTHESESSTART
CALL[java.io.InputStream,skip,1,long] PARA[VAR[LONG]] +++$+++  PARENTHESESEND EOL TRY CURLYSTART
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[VAR[java.lang.String]] +++$+++  OP[ternaryFalse] VAR[java.lang.String] PARENTHESESEND CURLYSTART
CALL[java.util.Map,get,1,V] PARA[VAR[java.lang.String]] +++$+++  CURLYSTART TYPE[JournalConfig] VAR[org.ambraproject.freemarker.AmbraFreemarkerConfig.JournalConfig] OP[assign]
CALL[java.util.Map,get,1,V] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESEND CURLYSTART VAR[org.ambraproject.freemarker.AmbraFreemarkerConfig.JournalConfig] OP[assign]
CALL[java.util.Map,get,1,V] PARA[VAR[java.lang.String]] +++$+++  CURLYSTART TYPE[JournalConfig] VAR[org.ambraproject.freemarker.AmbraFreemarkerConfig.JournalConfig] OP[assign]
CALL[java.util.Map,get,1,V] PARA[VAR[java.lang.String]] +++$+++  LEX[true] EOL VAR[org.ambraproject.freemarker.AmbraFreemarkerConfig.JournalConfig] OP[assign]
CALL[java.util.Map,get,1,V] PARA[VAR[java.lang.String]] +++$+++  CURLYSTART TYPE[JournalConfig] VAR[org.ambraproject.freemarker.AmbraFreemarkerConfig.JournalConfig] OP[assign]
CALL[java.util.StringTokenizer,nextToken,0,java.lang.String] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND CURLYSTART
CALL[java.util.Date,hashCode,0,int] +++$+++  OP[not] OP[assign] NULL OP[ternaryTrue]
CALL[java.net.URI,toString,0,java.lang.String] +++$+++  OP[assign] NULL PARENTHESESEND OP[ternaryTrue]
CALL[java.lang.String,startsWith,1,boolean] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESEND EOL CURLYEND RETURN
CALL[java.lang.String,replaceAll,2,java.lang.String] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND EOL VAR[java.lang.String] OP[assign]
CALL[java.lang.String,replaceAll,2,java.lang.String] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  VAR[java.lang.String] EOL VAR[java.lang.String] OP[assign]
CALL[java.lang.String,hashCode,0,int] +++$+++  OP[not] OP[assign] NULL OP[ternaryTrue]
CALL[java.lang.String,hashCode,0,int] +++$+++  OP[not] OP[assign] NULL OP[ternaryTrue]
CALL[java.lang.String,hashCode,0,int] +++$+++  OP[assign] OP[multiply] VAR[INT] OP[sum]
CALL[java.lang.String,hashCode,0,int] +++$+++  OP[assign] OP[multiply] VAR[INT] OP[sum]
CALL[java.lang.String,substring,2,java.lang.String] PARA[LIT[Integer]] PARA[LIT[Integer]] +++$+++  PARENTHESESEND CURLYSTART VAR[java.lang.String] OP[assign]
CALL[java.lang.String,hashCode,0,int] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.String,hashCode,0,int] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.util.List,add,1,boolean] PARA[CALL[java.util.List,get]] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND EOL
CALL[java.lang.String,hashCode,0,int] +++$+++  OP[not] OP[assign] NULL OP[ternaryTrue]
CALL[java.lang.String,equals,1,boolean] PARA[FIELD[org.ambraproject.views.article.HomePageArticleInfo]] +++$+++  OP[assign] NULL OP[ternaryTrue] OP[not]
CALL[org.ambraproject.views.AnnotationView,clone,0,java.lang.Object] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.util.Calendar,getTime,0,java.util.Date] +++$+++  VAR[java.util.Date] PARENTHESESEND EOL RETURN
CALL[java.util.ArrayList,size,0,int] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.util.List,containsAll,1,boolean] PARA[VAR[java.util.List]] +++$+++  CURLYSTART IF PARENTHESESSTART PARENTHESESSTART
CALL[java.lang.String,charAt,1,char] PARA[LIT[Integer]] +++$+++  VAR[java.lang.String] EOL IF PARENTHESESSTART
CALL[java.util.HashMap,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.lang.Long]] +++$+++  LEX[Long] VAR[java.lang.Long] PARENTHESESEND CURLYSTART
CALL[java.util.HashMap,entrySet,0,java.util.Set<java.util.Map.Entry<K, V>>] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.util.Locale,getLanguage,0,java.lang.String] +++$+++  VAR[java.lang.String] OP[assign] LEX[ISO_639_1_to_ISO_639_2.get] PARENTHESESSTART
CALL[java.util.Iterator,hasNext,0,boolean] +++$+++  LEX[ImageIO.getImageReadersByFormatName] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Character]] +++$+++  OP[assign] OP[assign] PARENTHESESEND CURLYSTART
CALL[java.lang.String,contains,1,boolean] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART PARENTHESESEND OP[bitwiseOr] OP[bitwiseOr]
CALL[java.lang.String,length,0,int] +++$+++  CURLYSTART INT VAR[INT] OP[assign]
CALL[javax.swing.JPanel,add,2,void] PARA[VAR[javax.swing.JPanel]] PARA[LIT[Stirng]] +++$+++  VAR[javax.swing.JButton] COMMA PARENTHESESEND EOL
CALL[javax.swing.JPanel,add,2,void] PARA[VAR[javax.swing.JButton]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND EOL
CALL[javax.swing.JProgressBar,setStringPainted,1,void] PARA[LIT[Boolean]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[javax.swing.JCheckBox,setSelected,1,void] PARA[LIT[Boolean]] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND CURLYSTART
CALL[java.io.File,isDirectory,0,boolean] +++$+++  VAR[java.io.File] PARENTHESESEND CURLYSTART RETURN
CALL[java.io.File,isFile,0,boolean] +++$+++  TYPE[String] VAR[java.lang.String] OP[assign] PARENTHESESSTART
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.lang.StringBuilder,toString,0,java.lang.String] +++$+++  EOL CURLYEND LEX[_textTrackers.setText] PARENTHESESSTART
CALL[javax.swing.JTextArea,setText,1,void] PARA[CALL[java.lang.StringBuilder,toString]] +++$+++  PARENTHESESSTART PARENTHESESEND EOL CURLYEND
CALL[javax.swing.JButton,setEnabled,1,void] PARA[LIT[Boolean]] +++$+++  PARENTHESESSTART LEX[false] PARENTHESESEND EOL
CALL[javax.swing.JPanel,add,2,void] PARA[VAR[javax.swing.JLabel]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART LEX[false] PARENTHESESEND EOL
CALL[javax.swing.JPanel,add,2,void] PARA[VAR[javax.swing.JScrollPane]] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESSTART LEX[JScrollPane.HORIZONTAL_SCROLLBAR_NEVER] PARENTHESESEND EOL
CALL[javax.swing.JLabel,setEnabled,1,void] PARA[LIT[Boolean]] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND EOL
CALL[java.lang.String,indexOf,1,int] PARA[VAR[java.lang.String]] +++$+++  ELSE CURLYSTART RETURN PARENTHESESSTART
CALL[java.lang.Thread,start,0,void] +++$+++  PARENTHESESSTART THIS PARENTHESESEND EOL
CALL[java.awt.Robot,waitForIdle,0,void] +++$+++  OP[assign] NULL PARENTHESESEND CURLYSTART
CALL[javax.swing.JTable,getFontMetrics,1,java.awt.FontMetrics] PARA[VAR[java.awt.Font]] +++$+++  CURLYEND TYPE[FontMetrics] VAR[java.awt.FontMetrics] OP[assign]
CALL[java.lang.String,startsWith,1,boolean] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[javax.swing.plaf.synth.SynthContext,getStyle,0,javax.swing.plaf.synth.SynthStyle] +++$+++  LEX[ctx.getRegion] PARENTHESESSTART PARENTHESESEND COMMA
CALL[java.awt.Component,getPreferredSize,0,java.awt.Dimension] +++$+++  EOL TYPE[Dimension] VAR[java.awt.Dimension] OP[assign]
CALL[java.awt.Graphics2D,dispose,0,void] +++$+++  VAR[INT] OP[sub] PARENTHESESEND EOL
CALL[java.awt.geom.Path2D,reset,0,void] +++$+++  INT VAR[INT] PARENTHESESEND CURLYSTART
CALL[java.awt.geom.Path2D,lineTo,2,void] PARA[VAR[FLOAT]] PARA[VAR[FLOAT]] +++$+++  COMMA VAR[FLOAT] PARENTHESESEND EOL
CALL[java.awt.geom.Path2D,closePath,0,void] +++$+++  COMMA VAR[INT] PARENTHESESEND EOL
CALL[java.awt.font.LineBreakMeasurer,setPosition,1,void] PARA[CALL[java.text.AttributedCharacterIterator,getBeginIndex]] +++$+++  VAR[INT] OP[sub] PARENTHESESEND EOL
CALL[javax.swing.text.JTextComponent,getClientProperty,1,java.lang.Object] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[javax.swing.border.Border,paintBorder,6,void] PARA[VAR[java.awt.Component]] PARA[VAR[java.awt.Graphics]] PARA[VAR[INT]] PARA[VAR[INT]] PARA[VAR[INT]] PARA[VAR[INT]] +++$+++  OP[assign] NULL PARENTHESESEND CURLYSTART
CALL[javax.swing.JComponent,removePropertyChangeListener,2,void] PARA[LIT[Stirng]] PARA[THIS[null]] +++$+++  LEX[JComponent] VAR[javax.swing.JComponent] PARENTHESESEND CURLYSTART
CALL[javax.swing.plaf.TextUI,getAccessibleChildrenCount,1,int] PARA[VAR[javax.swing.JComponent]] +++$+++  VAR[javax.swing.JComponent] PARENTHESESEND CURLYSTART RETURN
CALL[javax.swing.JTextField,getClientProperty,1,java.lang.Object] PARA[VAR[java.lang.String]] +++$+++  RETURN PARENTHESESSTART TYPE[ActionListener] PARENTHESESEND
CALL[java.io.PrintWriter,write,1,void] PARA[CALL[java.io.File,getCanonicalPath]] +++$+++  LEX[m3uFile.println] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.util.LinkedList,add,1,boolean] PARA[VAR[java.io.File]] +++$+++  OP[greaterThan] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.io.File,getParentFile,0,java.io.File] +++$+++  EOL CURLYEND VAR[java.io.File] OP[assign]
CALL[java.lang.String,equals,1,boolean] PARA[LIT[Stirng]] +++$+++  OP[assign] NULL OP[bitwiseAnd] OP[bitwiseAnd]
CALL[java.util.List,size,0,int] +++$+++  NULL EOL IF PARENTHESESSTART
CALL[java.io.PrintWriter,print,1,void] PARA[LIT[Stirng]] +++$+++  VAR[INT] PARENTHESESEND PARENTHESESEND EOL
CALL[java.util.List,get,1,E] PARA[VAR[INT]] +++$+++  EOL CURLYEND LEX[out.print] PARENTHESESSTART
CALL[java.util.List,get,1,E] PARA[LIT[Integer]] +++$+++  OP[assign] PARENTHESESSTART TYPE[String] PARENTHESESEND
CALL[java.util.List,get,1,E] PARA[LIT[Integer]] +++$+++  OP[assign] PARENTHESESSTART TYPE[Long] PARENTHESESEND
CALL[java.util.List,get,1,E] PARA[LIT[Integer]] +++$+++  OP[assign] PARENTHESESSTART TYPE[String] PARENTHESESEND
CALL[java.util.List,size,0,int] +++$+++  EOL INT VAR[INT] OP[assign]
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Character]] +++$+++  PARENTHESESEND CURLYSTART CASE OP[ternaryFalse]
CALL[java.io.PrintWriter,flush,0,void] +++$+++  PARENTHESESSTART VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.util.concurrent.atomic.AtomicBoolean,compareAndSet,2,boolean] PARA[LIT[Boolean]] PARA[LIT[Boolean]] +++$+++  CURLYSTART IF PARENTHESESSTART OP[not]
CALL[java.awt.Font,getName,0,java.lang.String] +++$+++  OP[bitwiseAnd] OP[not] LEX[newName.equalsIgnoreCase] PARENTHESESSTART
CALL[java.util.concurrent.ExecutorService,execute,1,void] PARA[VAR[java.lang.Runnable]] +++$+++  LEX[Runnable] VAR[java.lang.Runnable] PARENTHESESEND CURLYSTART
CALL[java.lang.String,startsWith,1,boolean] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[javax.swing.JButton,setFont,1,void] PARA[VAR[java.awt.Font]] +++$+++  PARENTHESESSTART VAR[com.limegroup.gnutella.gui.LanguageWindow.CancelAction] PARENTHESESEND EOL
CALL[javax.swing.JDialog,setVisible,1,void] PARA[LIT[Boolean]] +++$+++  PARENTHESESSTART VAR[javax.swing.JDialog] PARENTHESESEND EOL
CALL[java.lang.reflect.Field,getType,0,java.lang.Class<? extends java.lang.Object>] +++$+++  OP[not] OP[assign] OP[bitwiseAnd] OP[bitwiseAnd]
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[javax.swing.Icon]] +++$+++  TYPE[MissingResourceException] VAR[java.util.MissingResourceException] PARENTHESESEND CURLYSTART
CALL[java.util.Map,get,1,V] PARA[VAR[java.lang.String]] +++$+++  EOL TYPE[Icon] VAR[javax.swing.Icon] OP[assign]
CALL[java.util.List,add,1,boolean] PARA[LIT[Stirng]] +++$+++  LEX[command.add] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.util.List,add,1,boolean] PARA[LIT[Stirng]] +++$+++  LEX[command.add] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.util.List,add,1,boolean] PARA[LIT[Stirng]] +++$+++  OP[sum] PARENTHESESEND EOL CURLYEND
CALL[java.util.List,add,1,boolean] PARA[LIT[Stirng]] +++$+++  LEX[command.add] PARENTHESESSTART PARENTHESESEND EOL
CALL[javax.swing.JLabel,setBorder,1,void] PARA[CALL[null,createEmptyBorder]] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND EOL
CALL[javax.swing.JPanel,add,1,java.awt.Component] PARA[VAR[javax.swing.JButton]] +++$+++  TYPE[JButton] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.lang.String,split,1,java.lang.String[]] PARA[LIT[Stirng]] +++$+++  ARRAYSTART ARRAYEND VAR[java.lang.String] OP[assign]
CALL[java.awt.datatransfer.DataFlavor,equals,1,boolean] PARA[VAR[java.awt.datatransfer.DataFlavor]] +++$+++  VAR[java.awt.datatransfer.DataFlavor] PARENTHESESEND OP[bitwiseOr] OP[bitwiseOr]
CALL[javax.swing.JComponent,getTransferHandler,0,javax.swing.TransferHandler] +++$+++  OP[assign] PARENTHESESSTART TYPE[LimeTransferHandler] PARENTHESESEND
CALL[java.awt.datatransfer.Transferable,isDataFlavorSupported,1,boolean] PARA[VAR[java.awt.datatransfer.DataFlavor]] +++$+++  VAR[java.awt.datatransfer.DataFlavor] PARENTHESESEND CURLYSTART RETURN
CALL[java.util.concurrent.atomic.AtomicBoolean,get,0,boolean] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.lang.Runnable,run,0,void] +++$+++  LEX[EventQueue.isDispatchThread] PARENTHESESSTART PARENTHESESEND PARENTHESESEND
CALL[javax.swing.JPanel,add,2,void] PARA[VAR[javax.swing.JPanel]] PARA[VAR[java.awt.GridBagConstraints]] +++$+++  COMMA COMMA PARENTHESESEND EOL
CALL[javax.swing.JToggleButton,getText,0,java.lang.String] +++$+++  CURLYSTART TYPE[String] VAR[java.lang.String] OP[assign]
CALL[javax.swing.JLabel,getFontMetrics,1,java.awt.FontMetrics] PARA[CALL[javax.swing.JLabel,getFont]] +++$+++  CURLYSTART TYPE[FontMetrics] VAR[java.awt.FontMetrics] OP[assign]
CALL[javax.swing.JLabel,getText,0,java.lang.String] +++$+++  EOL RETURN LEX[fm.stringWidth] PARENTHESESSTART
CALL[java.io.BufferedReader,readLine,0,java.lang.String] +++$+++  PARENTHESESSTART PARENTHESESSTART VAR[java.lang.String] OP[assign]
CALL[java.util.Vector,get,1,E] PARA[VAR[INT]] +++$+++  CURLYSTART TYPE[ListDataListener] VAR[javax.swing.event.ListDataListener] OP[assign]
CALL[com.limegroup.gnutella.gui.ShutdownWindow,setVisible,1,void] PARA[LIT[Boolean]] +++$+++  TYPE[ShutdownWindow] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.util.Set,contains,1,boolean] PARA[VAR[java.lang.Object]] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[javax.swing.tree.TreeModel,isLeaf,1,boolean] PARA[VAR[java.lang.Object]] +++$+++  VAR[java.lang.Object] PARENTHESESEND CURLYSTART RETURN
CALL[java.util.Set,add,1,boolean] PARA[VAR[java.lang.Object]] +++$+++  OP[assign] NULL PARENTHESESEND CURLYSTART
CALL[javax.swing.JProgressBar,getMaximum,0,int] +++$+++  DOUBLE PARENTHESESEND LEX[BAR.getValue] PARENTHESESSTART
CALL[javax.swing.JTextArea,copy,0,void] +++$+++  LEX[textArea.selectAll] PARENTHESESSTART PARENTHESESEND EOL
CALL[javax.swing.event.ListSelectionEvent,getSource,0,java.lang.Object] +++$+++  OP[assign] PARENTHESESSTART TYPE[ListSelectionModel] PARENTHESESEND
CALL[java.awt.Color,getGreen,0,int] +++$+++  OP[assign] LEX[xFC] OP[bitwiseAnd] OP[bitwiseAnd]
CALL[java.awt.Color,brighter,0,java.awt.Color] +++$+++  PARENTHESESEND EOL VAR[java.awt.Color] OP[assign]
CALL[java.awt.event.MouseEvent,getSource,0,java.lang.Object] +++$+++  PARENTHESESSTART NEW TYPE[ActionEvent] PARENTHESESSTART
CALL[javax.swing.JTable,getTableHeader,0,javax.swing.table.JTableHeader] +++$+++  CURLYSTART TYPE[JTableHeader] VAR[javax.swing.table.JTableHeader] OP[assign]
CALL[javax.swing.JLabel,getBorder,0,javax.swing.border.Border] +++$+++  PARENTHESESEND EOL VAR[javax.swing.border.Border] OP[assign]
CALL[javax.swing.table.JTableHeader,getTable,0,javax.swing.JTable] +++$+++  EOL TYPE[JTable] VAR[javax.swing.JTable] OP[assign]
CALL[javax.swing.JTable,setAutoResizeMode,1,void] PARA[VAR[INT]] +++$+++  PARENTHESESEND OP[not] OP[assign] PARENTHESESEND
CALL[java.awt.Graphics,drawLine,4,void] PARA[LIT[Integer]] PARA[LIT[Integer]] PARA[VAR[INT]] PARA[LIT[Integer]] +++$+++  PARENTHESESSTART VAR[java.awt.Color] PARENTHESESEND EOL
CALL[javax.swing.JCheckBoxMenuItem,addActionListener,1,void] PARA[VAR[java.awt.event.ActionListener]] +++$+++  COMMA VAR[java.lang.Object] PARENTHESESEND EOL
CALL[javax.swing.JMenuItem,addActionListener,1,void] PARA[VAR[java.awt.event.ActionListener]] +++$+++  COMMA LEX[setting] PARENTHESESEND EOL
CALL[java.lang.Exception,printStackTrace,0,void] +++$+++  TYPE[Exception] VAR[java.lang.Exception] PARENTHESESEND CURLYSTART
CALL[java.lang.Exception,printStackTrace,0,void] +++$+++  TYPE[Exception] VAR[java.lang.Exception] PARENTHESESEND CURLYSTART
CALL[java.util.Map,get,1,V] PARA[VAR[com.limegroup.gnutella.MagnetOptions.Option]] +++$+++  TYPE[String] OP[greaterThan] VAR[java.util.List] OP[assign]
CALL[java.util.List,add,1,boolean] PARA[VAR[java.lang.String]] +++$+++  VAR[java.util.List] PARENTHESESEND EOL CURLYEND
CALL[java.lang.String,length,0,int] +++$+++  EOL INT VAR[INT] OP[assign]
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  OP[bitwiseOr] VAR[BOOLEAN] OP[bitwiseOr] OP[bitwiseOr]
CALL[java.lang.String,indexOf,1,int] PARA[LIT[Character]] +++$+++  EOL INT VAR[INT] OP[assign]
CALL[java.util.ArrayList,size,0,int] +++$+++  OP[assign] COMMA VAR[INT] OP[assign]
CALL[org.gudy.azureus2.core3.util.AEThread2.threadWrapper,getPriority,0,int] +++$+++  PARENTHESESSTART VAR[INT] OP[not] OP[assign]
CALL[java.lang.Throwable,printStackTrace,0,void] +++$+++  OP[assign] NULL PARENTHESESEND CURLYSTART
CALL[java.io.File,lastModified,0,long] +++$+++  CURLYSTART LONG VAR[LONG] OP[assign]
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  CURLYSTART CHAR VAR[CHAR] OP[assign]
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  PARENTHESESSTART VAR[CHAR] OP[not] OP[assign]
CALL[java.lang.String,length,0,int] +++$+++  OP[assign] EOL VAR[INT] OP[lessThan]
CALL[java.lang.String,substring,1,java.lang.String] PARA[VAR[INT]] +++$+++  VAR[INT] PARENTHESESEND OP[sum] OP[sum]
CALL[java.util.List,size,0,int] +++$+++  PARENTHESESSTART PARENTHESESEND OP[sum] OP[sum]
CALL[java.util.List,get,1,E] PARA[VAR[INT]] +++$+++  OP[assign] PARENTHESESSTART TYPE[LogAlert] PARENTHESESEND
CALL[java.util.List,get,1,E] PARA[VAR[INT]] +++$+++  PARENTHESESEND CURLYSTART RETURN PARENTHESESSTART
CALL[java.util.List,remove,1,boolean] PARA[VAR[org.gudy.azureus2.core3.util.CopyOnWriteList.T]] +++$+++  EOL BOOLEAN VAR[BOOLEAN] OP[assign]
CALL[java.util.List,remove,1,boolean] PARA[VAR[org.gudy.azureus2.core3.util.SystemTime.ChangeListener]] +++$+++  PARENTHESESSTART VAR[java.util.List] PARENTHESESEND EOL
CALL[java.lang.String,replaceAll,2,java.lang.String] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  EOL CURLYEND VAR[java.lang.String] OP[assign]
CALL[java.util.StringTokenizer,hasMoreTokens,0,boolean] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.util.StringTokenizer,nextToken,0,java.lang.String] +++$+++  VAR[INT] OP[assign] LEX[Integer.parseInt] PARENTHESESSTART
CALL[java.lang.String,length,0,int] +++$+++  OP[assign] EOL VAR[INT] OP[lessThan]
CALL[java.lang.Process,getInputStream,0,java.io.InputStream] +++$+++  EOL TYPE[InputStream] VAR[java.io.InputStream] OP[assign]
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Character]] +++$+++  PARENTHESESEND CURLYSTART CASE OP[ternaryFalse]
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART VAR[LONG] OP[lessThan] PARENTHESESEND
CALL[java.io.File,getAbsoluteFile,0,java.io.File] +++$+++  TYPE[IOException] CURLYSTART VAR[java.io.File] OP[assign]
CALL[java.util.Properties,containsKey,1,boolean] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESSTART PARENTHESESEND OP[bitwiseAnd] OP[bitwiseAnd]
CALL[java.util.Properties,containsKey,1,boolean] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESSTART PARENTHESESEND OP[bitwiseAnd] OP[bitwiseAnd]
CALL[java.io.File,getAbsolutePath,0,java.lang.String] +++$+++  PARENTHESESEND EOL VAR[java.lang.String] OP[assign]
CALL[java.io.File,isFile,0,boolean] +++$+++  TYPE[String] VAR[java.lang.String] OP[assign] PARENTHESESSTART
CALL[java.lang.StringBuilder,toString,0,java.lang.String] +++$+++  EOL CURLYEND CURLYEND RETURN
CALL[java.util.Collection,isEmpty,0,boolean] +++$+++  EOL IF PARENTHESESSTART OP[not]
CALL[java.util.Iterator,hasNext,0,boolean] +++$+++  PARENTHESESEND EOL WHILE PARENTHESESSTART
CALL[java.util.zip.ZipEntry,isDirectory,0,boolean] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.util.zip.ZipInputStream,closeEntry,0,void] +++$+++  LEX[fos.close] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[CALL[java.lang.String,substring]] +++$+++  PARENTHESESSTART PARENTHESESEND EOL CURLYEND
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[VAR[java.lang.String]] +++$+++  OP[sum] OP[sum] PARENTHESESEND CURLYSTART
CALL[java.util.Collection,iterator,0,java.util.Iterator<E>] +++$+++  TYPE[String] OP[greaterThan] VAR[java.util.Iterator] OP[assign]
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Character]] +++$+++  PARENTHESESSTART VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.lang.StringBuilder,toString,0,java.lang.String] +++$+++  EOL CURLYEND CURLYEND RETURN
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART COMMA PARENTHESESEND EOL
CALL[java.io.File,exists,0,boolean] +++$+++  EOL IF PARENTHESESSTART OP[not]
CALL[java.lang.String,indexOf,1,int] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESEND OP[lessThan] OP[bitwiseOr] OP[bitwiseOr]
CALL[java.lang.String,substring,1,java.lang.String] PARA[VAR[INT]] +++$+++  PARENTHESESEND CURLYSTART LEX[newString.append] PARENTHESESSTART
CALL[java.lang.StringBuffer,toString,0,java.lang.String] +++$+++  PARENTHESESEND EOL CURLYEND RETURN
CALL[java.lang.String,hashCode,0,int] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.String,equals,1,boolean] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART PARENTHESESEND OP[bitwiseOr] OP[bitwiseOr]
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND EOL
CALL[java.lang.String,replaceAll,2,java.lang.String] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND CURLYSTART VAR[java.lang.String] OP[assign]
CALL[java.lang.String,replaceAll,2,java.lang.String] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND EOL VAR[java.lang.String] OP[assign]
CALL[java.lang.String,replaceAll,2,java.lang.String] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND EOL VAR[java.lang.String] OP[assign]
CALL[java.lang.StringBuilder,toString,0,java.lang.String] +++$+++  PARENTHESESEND EOL CURLYEND RETURN
CALL[java.lang.String,replaceAll,2,java.lang.String] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND EOL VAR[java.lang.String] OP[assign]
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[VAR[CHAR]] +++$+++  OP[lessThan] OP[assign] PARENTHESESEND CURLYSTART
CALL[java.util.Iterator,next,0,E] +++$+++  CURLYSTART TYPE[SearchTask] VAR[com.frostwire.search.SearchManager.SearchTask] OP[assign]
CALL[java.lang.StringBuilder,toString,0,java.lang.String] +++$+++  PARENTHESESEND EOL CURLYEND RETURN
CALL[java.util.Map.Entry,getValue,0,V] +++$+++  LEX[entry.getKey] PARENTHESESSTART PARENTHESESEND COMMA
CALL[java.lang.Long,longValue,0,long] +++$+++  NULL OP[ternaryTrue] VAR[LONG] OP[ternaryFalse]
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  OP[bitwiseAnd] OP[bitwiseAnd] LEX[stripChars.indexOf] PARENTHESESSTART
CALL[java.lang.CharSequence,length,0,int] +++$+++  FINAL INT VAR[INT] OP[assign]
CALL[java.lang.CharSequence,length,0,int] +++$+++  EOL CURLYEND IF PARENTHESESSTART
CALL[java.lang.CharSequence,charAt,1,char] PARA[VAR[INT]] +++$+++  FINAL CHAR VAR[CHAR] OP[assign]
CALL[java.lang.String,substring,2,java.lang.String] PARA[LIT[Integer]] PARA[VAR[INT]] +++$+++  VAR[java.lang.String] EOL CURLYEND RETURN
CALL[java.lang.String,length,0,int] +++$+++  OP[bitwiseOr] OP[bitwiseOr] VAR[INT] OP[greaterThan]
CALL[java.lang.String,substring,2,java.lang.String] PARA[VAR[INT]] PARA[VAR[INT]] +++$+++  PARENTHESESEND CURLYSTART LEX[list.add] PARENTHESESSTART
CALL[java.util.List,add,1,boolean] PARA[CALL[java.lang.String,substring]] +++$+++  OP[assign] LEX[false] EOL CURLYEND
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[VAR[CHAR]] +++$+++  OP[greaterThan] VAR[INT] PARENTHESESEND CURLYSTART
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  FINAL CHAR VAR[CHAR] OP[assign]
CALL[java.lang.String,toUpperCase,0,java.lang.String] +++$+++  NULL EOL CURLYEND RETURN
CALL[java.lang.String,toUpperCase,1,java.lang.String] PARA[VAR[java.util.Locale]] +++$+++  NULL EOL CURLYEND RETURN
CALL[java.lang.CharSequence,length,0,int] +++$+++  OP[assign] EOL VAR[INT] OP[lessThan]
CALL[java.lang.CharSequence,length,0,int] +++$+++  COMMA VAR[java.lang.CharSequence] COMMA COMMA
CALL[java.lang.Character,charValue,0,char] +++$+++  VAR[CHAR] EOL CURLYEND RETURN
CALL[java.io.File,canRead,0,boolean] +++$+++  EOL CURLYEND IF PARENTHESESSTART
CALL[java.io.File,isDirectory,0,boolean] +++$+++  PARENTHESESEND OP[bitwiseAnd] OP[bitwiseAnd] OP[not]
CALL[java.nio.channels.FileChannel,transferFrom,3,long] PARA[VAR[java.nio.channels.FileChannel]] PARA[VAR[LONG]] PARA[VAR[LONG]] +++$+++  EOL VAR[LONG] OP[sum] OP[assign]
CALL[java.io.File,setLastModified,1,boolean] PARA[CALL[java.io.File,lastModified]] +++$+++  PARENTHESESSTART VAR[BOOLEAN] PARENTHESESEND CURLYSTART
CALL[java.io.File,exists,0,boolean] +++$+++  EOL WHILE PARENTHESESSTART OP[not]
CALL[java.io.File,exists,0,boolean] +++$+++  TYPE[IOException] CURLYSTART IF PARENTHESESSTART
CALL[java.io.File,exists,0,boolean] +++$+++  CURLYSTART IF PARENTHESESSTART OP[not]
CALL[java.io.File,exists,0,boolean] +++$+++  CURLYEND IF PARENTHESESSTART OP[not]
CALL[java.io.Closeable,close,0,void] +++$+++  OP[assign] NULL PARENTHESESEND CURLYSTART
CALL[java.io.InputStream,read,0,int] +++$+++  CURLYSTART INT VAR[INT] OP[assign]
CALL[java.lang.String,length,0,int] +++$+++  COMMA VAR[java.lang.String] COMMA COMMA
CALL[java.io.StringWriter,toString,0,java.lang.String] +++$+++  PARENTHESESEND EOL CURLYEND RETURN
CALL[java.lang.StringBuilder,toString,0,java.lang.String] +++$+++  PARENTHESESEND EOL CURLYEND RETURN
CALL[java.io.Closeable,close,0,void] +++$+++  PARENTHESESEND CURLYSTART TRY CURLYSTART
CALL[java.io.Writer,write,1,void] PARA[VAR[java.lang.String]] +++$+++  LEX[writer.write] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.lang.CharSequence,charAt,1,char] PARA[VAR[INT]] +++$+++  OP[bitwiseAnd] OP[not] LEX[Character.isLetterOrDigit] PARENTHESESSTART
CALL[java.lang.String,equals,1,boolean] PARA[VAR[java.lang.String]] +++$+++  CURLYEND ELSE IF PARENTHESESSTART
CALL[java.lang.String,equals,1,boolean] PARA[VAR[java.lang.String]] +++$+++  CURLYEND ELSE IF PARENTHESESSTART
CALL[java.io.File,isDirectory,0,boolean] +++$+++  CURLYSTART IF PARENTHESESSTART OP[not]
CALL[java.io.File,getAbsolutePath,0,java.lang.String] +++$+++  LEX[editor.putString] PARENTHESESSTART VAR[java.lang.String] COMMA
CALL[java.util.Set,add,1,boolean] PARA[VAR[java.io.File]] +++$+++  VAR[java.lang.String] PARENTHESESEND PARENTHESESEND CURLYSTART
CALL[java.lang.StringBuffer,toString,0,java.lang.String] +++$+++  PARENTHESESSTART PARENTHESESEND EOL RETURN
CALL[java.util.Set,add,1,boolean] PARA[THIS[null]] +++$+++  LEX[Set] VAR[java.util.Set] PARENTHESESEND CURLYSTART
CALL[java.lang.Object,getClass,0,java.lang.Class<? extends java.lang.Object>] +++$+++  EOL TYPE[Class] VAR[java.lang.Class] OP[assign]
CALL[java.lang.Process,exitValue,0,int] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[LIT[Stirng]] +++$+++  CONTINUE EOL CASE OP[ternaryFalse]
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[VAR[CHAR]] +++$+++  EOL CURLYEND ELSE CURLYSTART
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[LIT[Stirng]] +++$+++  CONTINUE EOL CASE OP[ternaryFalse]
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[LIT[Stirng]] +++$+++  CONTINUE EOL CASE OP[ternaryFalse]
CALL[java.io.DataInputStream,readByte,0,byte] +++$+++  PARENTHESESEND EOL VAR[INT] OP[assign]
CALL[java.io.DataInputStream,readByte,0,byte] +++$+++  PARENTHESESEND EOL VAR[INT] OP[assign]
CALL[java.lang.Object,toString,0,java.lang.String] +++$+++  LEX[attrs.put] PARENTHESESSTART VAR[java.lang.String] COMMA
CALL[java.util.HashMap,put,2,V] PARA[VAR[java.lang.String]] PARA[CALL[null,toString]] +++$+++  LONG VAR[LONG] PARENTHESESEND CURLYSTART
CALL[java.util.ArrayList,add,1,boolean] PARA[VAR[ca.spaz.util.XMLNode]] +++$+++  LEX[XMLNode] VAR[ca.spaz.util.XMLNode] PARENTHESESEND CURLYSTART
CALL[java.util.zip.ZipEntry,getSize,0,long] +++$+++  OP[assign] PARENTHESESSTART INT PARENTHESESEND
CALL[java.lang.IllegalAccessException,getMessage,0,java.lang.String] +++$+++  PARENTHESESEND CURLYSTART VAR[java.lang.String] OP[assign]
CALL[java.lang.ClassNotFoundException,getMessage,0,java.lang.String] +++$+++  PARENTHESESEND CURLYSTART VAR[java.lang.String] OP[assign]
CALL[java.lang.InstantiationException,getMessage,0,java.lang.String] +++$+++  PARENTHESESEND CURLYSTART VAR[java.lang.String] OP[assign]
CALL[java.util.LinkedList,removeFirst,0,E] +++$+++  CURLYSTART TYPE[Object] VAR[java.lang.Object] OP[assign]
CALL[java.util.Map,remove,1,V] PARA[VAR[java.lang.Object]] +++$+++  EOL TYPE[Object] VAR[java.lang.Object] OP[assign]
CALL[java.util.Map,size,0,int] +++$+++  PARENTHESESSTART PARENTHESESEND OP[assign] OP[assign]
CALL[java.util.zip.Inflater,inflate,1,int] PARA[VAR[BYTE]] +++$+++  CURLYSTART INT VAR[INT] OP[assign]
CALL[java.awt.Window,getWidth,0,int] +++$+++  EOL INT VAR[INT] OP[assign]
CALL[java.awt.Window,getWidth,0,int] +++$+++  CURLYSTART INT VAR[INT] OP[assign]
CALL[java.util.Calendar,setTime,1,void] PARA[VAR[java.util.Date]] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND EOL
CALL[java.io.FileInputStream,read,1,int] PARA[VAR[BYTE]] +++$+++  EOL INT VAR[INT] OP[assign]
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[VAR[CHAR]] +++$+++  OP[lessThan] VAR[INT] PARENTHESESEND CURLYSTART
CALL[javax.swing.JProgressBar,setMaximum,1,void] PARA[LIT[Integer]] +++$+++  LEX[progressBar.setMinimum] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.util.Iterator,next,0,E] +++$+++  OP[assign] PARENTHESESSTART TYPE[TaskListener] PARENTHESESEND
CALL[javax.swing.JTextArea,addFocusListener,1,void] PARA[THIS[null]] +++$+++  COMMA PARENTHESESEND PARENTHESESEND EOL
CALL[java.lang.String,equals,1,boolean] PARA[CALL[ca.spaz.cron.datasource.FoodProxy,getDescription]] +++$+++  EOL IF PARENTHESESSTART OP[not]
CALL[java.util.Iterator,hasNext,0,boolean] +++$+++  LEX[sources.iterator] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.util.List,iterator,0,java.util.Iterator<E>] +++$+++  PARENTHESESSTART TYPE[Iterator] VAR[java.util.Iterator] OP[assign]
CALL[java.util.HashMap,get,1,V] PARA[VAR[java.lang.String]] +++$+++  RETURN PARENTHESESSTART TYPE[List] PARENTHESESEND
CALL[java.util.HashMap,get,1,V] PARA[VAR[java.lang.String]] +++$+++  RETURN PARENTHESESSTART TYPE[List] PARENTHESESEND
CALL[java.util.HashMap,get,1,V] PARA[VAR[java.lang.String]] +++$+++  RETURN PARENTHESESSTART TYPE[List] PARENTHESESEND
CALL[java.util.Vector,remove,1,boolean] PARA[VAR[javax.swing.event.ChangeListener]] +++$+++  LEX[ChangeListener] VAR[javax.swing.event.ChangeListener] PARENTHESESEND CURLYSTART
CALL[java.util.Vector,add,1,boolean] PARA[VAR[java.awt.event.ActionListener]] +++$+++  LEX[ActionListener] VAR[java.awt.event.ActionListener] PARENTHESESEND CURLYSTART
CALL[javax.swing.JTable,getSelectedRow,0,int] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[javax.swing.JTable,getSelectedRows,0,int[]] +++$+++  ARRAYSTART ARRAYEND VAR[INT] OP[assign]
CALL[javax.swing.JLabel,setBorder,1,void] PARA[CALL[null,createEmptyBorder]] +++$+++  PARENTHESESSTART LEX[Color.WHITE] PARENTHESESEND EOL
CALL[java.lang.String,substring,2,java.lang.String] PARA[LIT[Integer]] PARA[LIT[Integer]] +++$+++  OP[greaterThan] PARENTHESESEND CURLYSTART RETURN
CALL[java.util.ArrayList,clear,0,void] +++$+++  PARENTHESESSTART VAR[java.util.ArrayList] PARENTHESESEND CURLYSTART
CALL[java.io.File,exists,0,boolean] +++$+++  EOL IF PARENTHESESSTART OP[not]
CALL[java.io.File,getAbsolutePath,0,java.lang.String] +++$+++  OP[assign] NEW TYPE[File] PARENTHESESSTART
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[LIT[Stirng]] +++$+++  TYPE[StringBuffer] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.awt.Container,getSize,0,java.awt.Dimension] +++$+++  EOL TYPE[Dimension] VAR[java.awt.Dimension] OP[assign]
CALL[java.util.Hashtable,get,1,V] PARA[VAR[java.awt.Component]] +++$+++  OP[assign] PARENTHESESSTART TYPE[SpazPosition] PARENTHESESEND
CALL[java.lang.String,equals,1,boolean] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.util.Hashtable,elements,0,java.util.Enumeration<V>] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[ca.spaz.gui.WrapperDialog,setVisible,1,void] PARA[LIT[Boolean]] +++$+++  PARENTHESESSTART VAR[java.awt.Component] PARENTHESESEND EOL
CALL[java.util.HashMap,get,1,V] PARA[VAR[java.lang.String]] +++$+++  OP[assign] PARENTHESESSTART TYPE[SQLCol] PARENTHESESEND
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[LIT[Stirng]] +++$+++  EOL CURLYEND ELSE CURLYSTART
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND EOL CURLYEND CURLYEND
CALL[java.util.Properties,getProperty,1,java.lang.String] PARA[VAR[java.lang.String]] +++$+++  CURLYSTART TYPE[String] VAR[java.lang.String] OP[assign]
CALL[java.lang.StringBuffer,insert,2,java.lang.StringBuffer] PARA[LIT[Integer]] PARA[VAR[CHAR]] +++$+++  OP[lessThan] VAR[INT] PARENTHESESEND CURLYSTART
CALL[java.lang.StringBuffer,length,0,int] +++$+++  PARENTHESESEND EOL WHILE PARENTHESESSTART
CALL[java.io.File,getAbsoluteFile,0,java.io.File] +++$+++  TYPE[Object] ARRAYSTART ARRAYEND CURLYSTART
CALL[java.io.InputStream,close,0,void] +++$+++  CURLYEND CURLYEND FINALLY CURLYSTART
CALL[com._17od.upm.gui.MainWindow,setAlwaysOnTop,1,void] PARA[VAR[BOOLEAN]] +++$+++  BOOLEAN VAR[BOOLEAN] PARENTHESESEND CURLYSTART
CALL[java.lang.Exception,printStackTrace,0,void] +++$+++  TYPE[Exception] VAR[java.lang.Exception] PARENTHESESEND CURLYSTART
CALL[java.lang.Double,doubleValue,0,double] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.awt.event.KeyEvent,getKeyCode,0,int] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.io.IOException,printStackTrace,0,void] +++$+++  TYPE[IOException] VAR[java.io.IOException] PARENTHESESEND CURLYSTART
CALL[java.lang.String,indexOf,1,int] PARA[VAR[java.lang.String]] +++$+++  CURLYEND INT VAR[INT] OP[assign]
CALL[java.io.InputStream,read,1,int] PARA[VAR[BYTE]] +++$+++  CURLYSTART INT VAR[INT] OP[assign]
CALL[java.util.Map,get,1,V] PARA[VAR[java.lang.Integer]] +++$+++  OP[assign] PARENTHESESSTART TYPE[List] PARENTHESESEND
CALL[java.util.List,size,0,int] +++$+++  OP[assign] NEW TYPE[UPnPWANConnectionPortMapping] ARRAYSTART
CALL[java.util.Map,put,2,V] PARA[LIT[Stirng]] PARA[VAR[java.lang.Object]] +++$+++  TYPE[HashMap] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.util.Iterator,next,0,E] +++$+++  IF PARENTHESESSTART LEX[url.matches] PARENTHESESSTART
CALL[java.lang.Number,longValue,0,long] +++$+++  PARENTHESESEND EOL CURLYEND RETURN
CALL[java.util.Map,containsKey,1,boolean] PARA[VAR[java.lang.String]] +++$+++  NULL OP[bitwiseAnd] OP[bitwiseAnd] OP[not]
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.util.List]] +++$+++  PARENTHESESSTART FIELD[length,java.lang.String] PARENTHESESEND EOL
CALL[java.lang.String,length,0,int] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.util.List,size,0,int] +++$+++  PARENTHESESEND CURLYSTART RETURN PARENTHESESSTART
CALL[java.net.InetAddress,isSiteLocalAddress,0,boolean] +++$+++  PARENTHESESSTART PARENTHESESEND OP[bitwiseOr] OP[bitwiseOr]
CALL[java.util.Map,get,1,V] PARA[VAR[java.lang.String]] +++$+++  EOL TYPE[Long] VAR[java.lang.Long] OP[assign]
CALL[java.lang.String,toCharArray,0,char[]] +++$+++  ARRAYSTART ARRAYEND VAR[CHAR] OP[assign]
CALL[java.io.InputStream,mark,1,void] PARA[VAR[INT]] +++$+++  INT VAR[INT] PARENTHESESEND CURLYSTART
CALL[java.util.Set,contains,1,boolean] PARA[CALL[java.lang.String,toLowerCase]] +++$+++  PARENTHESESEND CURLYSTART RETURN PARENTHESESSTART
CALL[java.io.InputStream,close,0,void] +++$+++  PARENTHESESEND THROWS LEX[IOException] CURLYSTART
CALL[java.lang.String,substring,2,java.lang.String] PARA[VAR[INT]] PARA[VAR[INT]] +++$+++  PARENTHESESEND CURLYSTART LEX[res.append] PARENTHESESSTART
CALL[java.lang.String,length,0,int] +++$+++  EOL CURLYEND IF PARENTHESESSTART
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESEND OP[greaterThan] PARENTHESESEND CURLYSTART
CALL[java.io.InputStream,read,0,int] +++$+++  CURLYSTART INT VAR[INT] OP[assign]
CALL[java.util.List,size,0,int] +++$+++  PARENTHESESSTART NEW TYPE[String] ARRAYSTART
CALL[java.lang.Throwable,printStackTrace,0,void] +++$+++  PARENTHESESSTART VAR[BOOLEAN] PARENTHESESEND CURLYSTART
CALL[java.io.DataInputStream,readShort,0,short] +++$+++  PARENTHESESEND CURLYSTART VAR[INT] OP[assign]
CALL[java.util.ArrayList,size,0,int] +++$+++  OP[assign] EOL VAR[INT] OP[lessThan]
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.Object]] PARA[VAR[java.lang.Object]] +++$+++  PARENTHESESSTART VAR[java.util.Map] PARENTHESESEND EOL
CALL[java.lang.String,length,0,int] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.net.Socket,close,0,void] +++$+++  PARENTHESESEND CURLYSTART TRY CURLYSTART
CALL[java.lang.String,equals,1,boolean] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART PARENTHESESEND OP[bitwiseOr] OP[bitwiseOr]
CALL[java.util.Map,get,1,V] PARA[VAR[java.net.Proxy]] +++$+++  TYPE[PluginProxyImpl] OP[greaterThan] VAR[java.lang.ref.WeakReference] OP[assign]
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND EOL
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[VAR[java.lang.String]] +++$+++  LEX[res.append] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.util.List,get,1,E] PARA[VAR[INT]] +++$+++  OP[assign] PARENTHESESSTART LEX[pendingRequest] PARENTHESESEND
CALL[java.lang.Long,longValue,0,long] +++$+++  COMMA NEW TYPE[Long] PARENTHESESSTART
CALL[java.nio.ByteBuffer,hasRemaining,0,boolean] +++$+++  PARENTHESESEND EOL WHILE PARENTHESESSTART
CALL[java.net.InetAddress,getAddress,0,byte[]] +++$+++  ARRAYSTART ARRAYEND VAR[BYTE] OP[assign]
CALL[java.nio.ByteBuffer,put,1,java.nio.ByteBuffer] PARA[CALL[java.lang.String,getBytes]] +++$+++  PARENTHESESEND OP[greaterThan] PARENTHESESEND CURLYSTART
CALL[java.net.InetSocketAddress,getPort,0,int] +++$+++  PARENTHESESSTART PARENTHESESSTART SHORT PARENTHESESEND
CALL[java.nio.ByteBuffer,flip,0,java.nio.Buffer] +++$+++  BYTE PARENTHESESEND PARENTHESESEND EOL
CALL[java.nio.ByteBuffer,get,0,byte] +++$+++  EOL BYTE VAR[BYTE] OP[assign]
CALL[java.nio.ByteBuffer,get,0,byte] +++$+++  EOL BYTE VAR[BYTE] OP[assign]
CALL[java.nio.channels.spi.AbstractSelectableChannel,keyFor,1,java.nio.channels.SelectionKey] PARA[VAR[java.nio.channels.Selector]] +++$+++  CURLYEND TYPE[SelectionKey] VAR[java.nio.channels.SelectionKey] OP[assign]
CALL[java.util.LinkedList,contains,1,boolean] PARA[VAR[java.nio.channels.SocketChannel]] +++$+++  CURLYSTART IF PARENTHESESSTART OP[not]
CALL[java.util.Iterator,next,0,E] +++$+++  CURLYSTART TYPE[ConnectionRequest] VAR[com.aelitis.azureus.core.networkmanager.impl.tcp.TCPConnectionManager.ConnectionRequest] OP[assign]
CALL[java.util.List,iterator,0,java.util.Iterator<E>] +++$+++  CURLYEND TYPE[Iterator] VAR[java.util.Iterator] OP[assign]
CALL[java.util.Iterator,hasNext,0,boolean] +++$+++  PARENTHESESEND EOL WHILE PARENTHESESSTART
CALL[java.util.Iterator,next,0,E] +++$+++  TYPE[Object] ARRAYSTART ARRAYEND PARENTHESESEND
CALL[java.util.Iterator,remove,0,void] +++$+++  OP[assign] LEX[listener] PARENTHESESEND CURLYSTART
CALL[java.util.List,remove,1,E] PARA[LIT[Integer]] +++$+++  OP[sum] OP[sum] PARENTHESESEND CURLYSTART
CALL[java.util.ArrayList,remove,1,boolean] PARA[VAR[java.nio.channels.spi.AbstractSelectableChannel]] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.nio.ByteBuffer,duplicate,0,java.nio.ByteBuffer] +++$+++  PARENTHESESEND CURLYSTART VAR[java.nio.ByteBuffer] OP[assign]
CALL[java.util.ArrayList,isEmpty,0,boolean] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.util.ArrayList,size,0,int] +++$+++  OP[assign] EOL VAR[INT] OP[lessThan]
CALL[java.lang.String,equalsIgnoreCase,1,boolean] PARA[LIT[Stirng]] +++$+++  CURLYEND ELSE IF PARENTHESESSTART
CALL[java.util.List,contains,1,boolean] PARA[VAR[com.aelitis.azureus.ui.swt.views.skin.SkinViewManager.SkinViewManagerListener]] +++$+++  CURLYSTART IF PARENTHESESSTART OP[not]
CALL[java.util.List,add,1,boolean] PARA[VAR[com.aelitis.azureus.ui.swt.views.skin.SkinViewManager.SkinViewManagerListener]] +++$+++  VAR[com.aelitis.azureus.ui.swt.views.skin.SkinViewManager.SkinViewManagerListener] PARENTHESESEND PARENTHESESEND CURLYSTART
CALL[java.util.List,toArray,0,java.lang.Object[]] +++$+++  PARENTHESESEND CURLYSTART VAR[java.lang.Object] OP[assign]
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.Class]] PARA[VAR[java.util.List]] +++$+++  TYPE[ArrayList] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.util.List,add,1,boolean] PARA[VAR[java.lang.String]] +++$+++  VAR[java.lang.String] PARENTHESESEND PARENTHESESEND CURLYSTART
CALL[java.lang.String,trim,0,java.lang.String] +++$+++  RETURN EOL LEX[items.add] PARENTHESESSTART
CALL[java.lang.String,length,0,int] +++$+++  OP[assign] EOL VAR[INT] OP[assign]
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[VAR[CHAR]] +++$+++  OP[sum] OP[sum] PARENTHESESEND CURLYSTART
CALL[java.lang.String,length,0,int] +++$+++  ARRAYSTART PARENTHESESSTART PARENTHESESSTART PARENTHESESSTART
CALL[java.lang.String,length,0,int] +++$+++  OP[assign] EOL VAR[INT] OP[lessThan]
CALL[java.lang.String,length,0,int] +++$+++  VAR[BYTE] ARRAYSTART LEX[data.charAt] PARENTHESESSTART
CALL[java.lang.String,length,0,int] +++$+++  VAR[BYTE] ARRAYSTART LEX[data.charAt] PARENTHESESSTART
CALL[java.lang.String,length,0,int] +++$+++  OP[assign] PARENTHESESSTART PARENTHESESSTART PARENTHESESSTART
CALL[java.lang.String,length,0,int] +++$+++  IF PARENTHESESSTART LEX[data.charAt] PARENTHESESSTART
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[VAR[java.io.File]] +++$+++  LEX[res.append] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[VAR[java.io.File]] +++$+++  LEX[res.append] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.io.File,getAbsolutePath,0,java.lang.String] +++$+++  PARENTHESESEND EOL LEX[System.load] PARENTHESESSTART
CALL[java.io.OutputStreamWriter,write,1,void] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESSTART VAR[java.io.ByteArrayOutputStream] PARENTHESESEND EOL
CALL[java.lang.String,startsWith,1,boolean] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART PARENTHESESEND OP[bitwiseOr] OP[bitwiseOr]
CALL[java.io.File,getAbsolutePath,0,java.lang.String] +++$+++  NULL PARENTHESESEND VAR[java.lang.String] OP[assign]
CALL[java.util.zip.ZipEntry,setTime,1,void] PARA[CALL[java.io.File,lastModified]] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND EOL
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[LIT[Character]] +++$+++  OP[lessThan] OP[assign] PARENTHESESEND CURLYSTART
CALL[java.io.File,getAbsolutePath,0,java.lang.String] +++$+++  PARENTHESESSTART PARENTHESESEND OP[sum] OP[sum]
CALL[java.io.File,getAbsolutePath,0,java.lang.String] +++$+++  PARENTHESESSTART PARENTHESESEND OP[sum] OP[sum]
CALL[java.util.HashMap,put,2,V] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND EOL
CALL[java.lang.String,length,0,int] +++$+++  LEX[next_command.length] PARENTHESESSTART PARENTHESESEND OP[sum]
CALL[java.io.PrintStream,println,0,void] +++$+++  LEX[os.println] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.util.Iterator,next,0,E] +++$+++  OP[assign] PARENTHESESSTART TYPE[IConsoleCommand] PARENTHESESEND
CALL[java.util.List,size,0,int] +++$+++  EOL ELSE VAR[INT] OP[assign]
CALL[java.util.Set,iterator,0,java.util.Iterator<E>] +++$+++  PARENTHESESSTART TYPE[Iterator] VAR[java.util.Iterator] OP[assign]
CALL[java.lang.Object,hashCode,0,int] +++$+++  PARENTHESESSTART PARENTHESESEND OP[assign] OP[assign]
CALL[java.io.File,exists,0,boolean] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.io.File,exists,0,boolean] +++$+++  EOL IF PARENTHESESSTART OP[not]
CALL[java.lang.String,equals,1,boolean] PARA[VAR[java.lang.String]] +++$+++  OP[assign] NULL OP[bitwiseAnd] OP[bitwiseAnd]
CALL[java.util.Set,contains,1,boolean] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.util.List,add,1,boolean] PARA[VAR[java.util.List]] +++$+++  PARENTHESESEND OP[greaterThan] PARENTHESESEND CURLYSTART
CALL[java.util.List,add,1,boolean] PARA[VAR[java.lang.String]] +++$+++  VAR[INT] ARRAYEND PARENTHESESEND EOL
CALL[java.util.List,size,0,int] +++$+++  EOL CURLYEND IF PARENTHESESSTART
CALL[java.util.Map.Entry,getValue,0,V] +++$+++  EOL TYPE[String] VAR[java.lang.String] OP[assign]
CALL[java.io.File,getParentFile,0,java.io.File] +++$+++  PARENTHESESSTART OP[not] LEX[active_dir.equals] PARENTHESESSTART
CALL[java.io.File,exists,0,boolean] +++$+++  EOL IF PARENTHESESSTART OP[not]
CALL[java.util.Iterator,remove,0,void] +++$+++  VAR[BYTE] PARENTHESESEND PARENTHESESEND CURLYSTART
CALL[java.util.ArrayList,remove,1,boolean] PARA[VAR[java.lang.Object]] +++$+++  PARENTHESESSTART VAR[java.util.List] PARENTHESESEND EOL
CALL[java.util.LinkedList,isEmpty,0,boolean] +++$+++  OP[sum] EOL IF PARENTHESESSTART
CALL[java.lang.Integer,intValue,0,int] +++$+++  COMMA OP[sum] LEX[Integer.toHexString] PARENTHESESSTART
CALL[java.lang.StackTraceElement,getFileName,0,java.lang.String] +++$+++  CURLYEND TYPE[String] VAR[java.lang.String] OP[assign]
CALL[java.lang.String,replaceAll,2,java.lang.String] PARA[VAR[java.lang.String]] PARA[LIT[Stirng]] +++$+++  EOL TYPE[String] VAR[java.lang.String] OP[assign]
CALL[java.io.File,delete,0,boolean] +++$+++  OP[multiply] LEX[L] PARENTHESESEND CURLYSTART
CALL[java.lang.String,substring,1,java.lang.String] PARA[LIT[Integer]] +++$+++  PARENTHESESEND CURLYSTART VAR[java.lang.String] OP[assign]
CALL[java.lang.String,length,0,int] +++$+++  CURLYSTART INT VAR[INT] OP[assign]
CALL[java.lang.String,substring,1,java.lang.String] PARA[LIT[Integer]] +++$+++  PARENTHESESEND EOL VAR[java.lang.String] OP[assign]
CALL[java.util.Map,get,1,V] PARA[VAR[java.lang.String]] +++$+++  TYPE[String] OP[greaterThan] VAR[java.util.List] OP[assign]
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.util.List]] +++$+++  OP[greaterThan] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.lang.String,lastIndexOf,1,int] PARA[LIT[Stirng]] +++$+++  CURLYSTART INT VAR[INT] OP[assign]
CALL[java.lang.String,charAt,1,char] PARA[LIT[Integer]] +++$+++  EOL CURLYEND IF PARENTHESESSTART
CALL[java.lang.String,charAt,1,char] PARA[LIT[Integer]] +++$+++  CURLYEND ELSE IF PARENTHESESSTART
CALL[java.net.URL,getPath,0,java.lang.String] +++$+++  PARENTHESESEND CURLYSTART LEX[result.append] PARENTHESESSTART
CALL[java.net.URL,getQuery,0,java.lang.String] +++$+++  EOL CURLYEND IF PARENTHESESSTART
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[CALL[java.net.URL,getRef]] +++$+++  LEX[result.append] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[CALL[java.net.URL,getPath]] +++$+++  OP[assign] NULL PARENTHESESEND CURLYSTART
CALL[java.net.URL,getRef,0,java.lang.String] +++$+++  PARENTHESESEND EOL LEX[result.append] PARENTHESESSTART
CALL[java.lang.StringBuffer,toString,0,java.lang.String] +++$+++  PARENTHESESSTART NEW TYPE[URL] PARENTHESESSTART
CALL[java.lang.String,indexOf,1,int] PARA[LIT[Stirng]] +++$+++  EOL INT VAR[INT] OP[assign]
CALL[java.lang.String,substring,1,java.lang.String] PARA[VAR[INT]] +++$+++  TYPE[URL] PARENTHESESSTART VAR[java.lang.String] OP[sum]
CALL[java.net.URL,getProtocol,0,java.lang.String] +++$+++  PARENTHESESEND EOL LEX[result.append] PARENTHESESSTART
CALL[java.lang.String,lastIndexOf,1,int] PARA[LIT[Character]] +++$+++  EOL CURLYEND VAR[INT] OP[assign]
CALL[java.net.URL,getPort,0,int] +++$+++  EOL INT VAR[INT] OP[assign]
CALL[java.net.URL,getPort,0,int] +++$+++  CURLYEND INT VAR[INT] OP[assign]
CALL[java.net.URL,getDefaultPort,0,int] +++$+++  PARENTHESESSTART VAR[INT] OP[assign] OP[assign]
CALL[java.net.URL,toString,0,java.lang.String] +++$+++  CURLYEND CURLYEND RETURN PARENTHESESSTART
CALL[java.lang.String,contains,1,boolean] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART PARENTHESESEND OP[bitwiseOr] OP[bitwiseOr]
CALL[java.util.List,add,1,boolean] PARA[VAR[java.lang.String]] +++$+++  CURLYSTART CURLYEND ELSE CURLYSTART
CALL[java.util.List,size,0,int] +++$+++  PARENTHESESSTART NEW TYPE[String] ARRAYSTART
CALL[java.io.FileInputStream,read,1,int] PARA[VAR[BYTE]] +++$+++  LEX[IOException] CURLYSTART RETURN PARENTHESESSTART
CALL[java.io.FileInputStream,skip,1,long] PARA[VAR[LONG]] +++$+++  PARENTHESESEND THROWS LEX[IOException] CURLYSTART
CALL[java.util.List,size,0,int] +++$+++  OP[assign] NEW TYPE[AERunnable] ARRAYSTART
CALL[java.util.Iterator,hasNext,0,boolean] +++$+++  PARENTHESESEND EOL WHILE PARENTHESESSTART
CALL[java.io.File,createNewFile,0,boolean] +++$+++  EOL CURLYEND ELSE CURLYSTART
CALL[java.util.List,size,0,int] +++$+++  EOL CURLYEND WHILE PARENTHESESSTART
CALL[java.io.File,delete,0,boolean] +++$+++  PARENTHESESEND CURLYSTART RETURN PARENTHESESSTART
CALL[java.lang.String,length,0,int] +++$+++  VAR[java.lang.String] OP[assign] LEX[file_to_move.substring] PARENTHESESSTART
CALL[java.io.File,isDirectory,0,boolean] +++$+++  EOL IF PARENTHESESSTART OP[not]
CALL[java.io.InputStream,read,1,int] PARA[VAR[BYTE]] +++$+++  CURLYSTART INT VAR[INT] OP[assign]
CALL[java.lang.ref.ReferenceQueue,poll,0,java.lang.ref.Reference<? extends T>] +++$+++  PARENTHESESSTART TYPE[WeakEntry] PARENTHESESEND PARENTHESESSTART
CALL[java.util.List,add,1,boolean] PARA[VAR[org.gudy.azureus2.core3.util.SystemTime.TickConsumer]] +++$+++  PARENTHESESSTART VAR[java.util.List] PARENTHESESEND EOL
CALL[java.util.List,add,1,boolean] PARA[VAR[org.gudy.azureus2.core3.util.SystemTime.ChangeListener]] +++$+++  PARENTHESESSTART VAR[java.util.List] PARENTHESESEND EOL
CALL[java.lang.String,startsWith,1,boolean] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.lang.String,startsWith,1,boolean] PARA[LIT[Stirng]] +++$+++  EOL CURLYEND IF PARENTHESESSTART
CALL[java.util.StringTokenizer,hasMoreTokens,0,boolean] +++$+++  PARENTHESESSTART PARENTHESESEND OP[bitwiseAnd] OP[bitwiseAnd]
CALL[java.lang.ThreadLocal,get,0,T] +++$+++  OP[assign] PARENTHESESSTART TYPE[Stack] PARENTHESESEND
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[LIT[Stirng]] +++$+++  EOL CURLYEND ELSE CURLYSTART
CALL[java.lang.String,replaceAll,2,java.lang.String] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  EOL CURLYEND VAR[java.lang.String] OP[assign]
CALL[java.lang.String,replaceAll,2,java.lang.String] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  EOL CURLYEND VAR[java.lang.String] OP[assign]
CALL[java.lang.String,replaceAll,2,java.lang.String] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND EOL VAR[java.lang.String] OP[assign]
CALL[java.lang.String,substring,2,java.lang.String] PARA[VAR[INT]] PARA[VAR[INT]] +++$+++  CURLYEND VAR[java.lang.String] OP[sum] OP[assign]
CALL[java.lang.String,replaceAll,2,java.lang.String] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND EOL VAR[java.lang.String] OP[assign]
CALL[java.lang.String,length,0,int] +++$+++  PARENTHESESEND EOL WHILE PARENTHESESSTART
CALL[java.lang.String,indexOf,2,int] PARA[LIT[Character]] PARA[VAR[INT]] +++$+++  EOL INT VAR[INT] OP[assign]
CALL[java.util.List,get,1,E] PARA[LIT[Integer]] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.util.Map,get,1,V] PARA[LIT[Stirng]] +++$+++  OP[assign] PARENTHESESSTART TYPE[Map] PARENTHESESEND
CALL[java.net.URL,getHost,0,java.lang.String] +++$+++  VAR[java.lang.String] OP[assign] LEX[UrlUtils.expandIPV6Host] PARENTHESESSTART
CALL[java.lang.String,equals,1,boolean] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART PARENTHESESEND OP[bitwiseOr] OP[bitwiseOr]
CALL[java.net.URL,getHost,0,java.lang.String] +++$+++  CURLYSTART TYPE[String] VAR[java.lang.String] OP[assign]
CALL[java.net.URL,getHost,0,java.lang.String] +++$+++  OP[assign] NULL OP[ternaryTrue] OP[ternaryFalse]
CALL[java.io.BufferedInputStream,read,0,int] +++$+++  CURLYSTART INT VAR[INT] OP[assign]
CALL[java.util.jar.JarInputStream,read,1,int] PARA[VAR[BYTE]] +++$+++  CURLYSTART INT VAR[INT] OP[assign]
CALL[java.util.List,iterator,0,java.util.Iterator<E>] +++$+++  CURLYEND TYPE[Iterator] VAR[java.util.Iterator] OP[assign]
CALL[java.util.Set,size,0,int] +++$+++  PARENTHESESSTART NEW TYPE[String] ARRAYSTART
CALL[java.io.ByteArrayOutputStream,toByteArray,0,byte[]] +++$+++  PARENTHESESEND EOL LEX[sig.update] PARENTHESESSTART
CALL[java.util.Iterator,next,0,E] +++$+++  PARENTHESESEND CURLYSTART VAR[java.lang.Object] OP[assign]
CALL[java.util.List,remove,1,boolean] PARA[VAR[org.gudy.bouncycastle.jce.provider.PKIXPolicyNode]] +++$+++  LEX[PKIXPolicyNode] VAR[org.gudy.bouncycastle.jce.provider.PKIXPolicyNode] PARENTHESESEND CURLYSTART
CALL[java.io.IOException,toString,0,java.lang.String] +++$+++  NEW TYPE[CertificateEncodingException] PARENTHESESSTART OP[sum]
CALL[java.math.BigInteger,toByteArray,0,byte[]] +++$+++  THROWS LEX[IllegalStateException] CURLYSTART RETURN
CALL[java.io.ByteArrayOutputStream,size,0,int] +++$+++  LEX[Cipher.WRAP_MODE] PARENTHESESEND CURLYSTART RETURN
CALL[java.io.ByteArrayOutputStream,write,3,void] PARA[VAR[BYTE]] PARA[VAR[INT]] PARA[VAR[INT]] +++$+++  INT LEX[outputOffset] PARENTHESESEND CURLYSTART
CALL[java.lang.String,length,0,int] +++$+++  VAR[BYTE] ARRAYSTART LEX[data.charAt] PARENTHESESSTART
CALL[java.lang.String,length,0,int] +++$+++  LEX[IOException] CURLYSTART IF PARENTHESESSTART
CALL[java.lang.String,length,0,int] +++$+++  VAR[BYTE] ARRAYSTART LEX[data.charAt] PARENTHESESSTART
CALL[java.lang.String,length,0,int] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.util.Vector,size,0,int] +++$+++  OP[assign] NEW TYPE[String] ARRAYSTART
CALL[java.util.Hashtable,get,1,V] PARA[VAR[java.lang.String]] +++$+++  RETURN PARENTHESESSTART TYPE[DERObjectIdentifier] PARENTHESESEND
CALL[java.lang.String,substring,1,java.lang.String] PARA[VAR[INT]] +++$+++  VAR[INT] OP[not] OP[assign] OP[ternaryTrue]
CALL[java.io.File,listFiles,0,java.io.File[]] +++$+++  ARRAYSTART ARRAYEND VAR[java.io.File] OP[assign]
CALL[java.awt.Frame,isShowing,0,boolean] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.awt.image.BufferedImage,getHeight,0,int] +++$+++  LEX[image.getWidth] PARENTHESESSTART PARENTHESESEND OP[multiply]
CALL[javax.swing.JCheckBox,setSelected,1,void] PARA[VAR[BOOLEAN]] +++$+++  OP[not] OP[assign] LEX[AspectRatio.FREE_RATIO] EOL
CALL[javax.swing.JSlider,setValue,1,void] PARA[CALL[null,max]] +++$+++  OP[not] VAR[BOOLEAN] PARENTHESESEND CURLYSTART
CALL[javax.swing.JSlider,getMinimum,0,int] +++$+++  LEX[qualitySlider.getValue] PARENTHESESSTART PARENTHESESEND OP[sub]
CALL[java.lang.String,length,0,int] +++$+++  OP[assign] NULL OP[bitwiseAnd] OP[bitwiseAnd]
CALL[java.lang.String,length,0,int] +++$+++  OP[assign] EOL VAR[INT] OP[lessThan]
CALL[java.lang.String,compareTo,1,int] PARA[VAR[java.lang.String]] +++$+++  NULL PARENTHESESEND CURLYSTART RETURN
CALL[java.awt.Graphics,fillRect,4,void] PARA[VAR[INT]] PARA[VAR[INT]] PARA[VAR[INT]] PARA[LIT[Integer]] +++$+++  PARENTHESESSTART VAR[java.awt.Color] PARENTHESESEND EOL
CALL[java.io.ObjectInputStream,defaultReadObject,0,void] +++$+++  LEX[IOException] COMMA LEX[ClassNotFoundException] CURLYSTART
CALL[java.util.Iterator,next,0,E] +++$+++  TYPE[TextStyle] OP[greaterThan] VAR[java.lang.ref.WeakReference] OP[assign]
CALL[java.util.Enumeration,hasMoreElements,0,boolean] +++$+++  LEX[add.keys] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.lang.StringBuffer,toString,0,java.lang.String] +++$+++  EOL CURLYEND CURLYEND RETURN
CALL[java.lang.StringBuilder,toString,0,java.lang.String] +++$+++  OP[assign] NULL OP[ternaryTrue] OP[ternaryFalse]
CALL[javax.swing.JButton,addActionListener,1,void] PARA[VAR[net.sf.latexdraw.installer.Installer.InstallerListener]] +++$+++  PARENTHESESSTART VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.awt.Color]] +++$+++  COMMA VAR[java.awt.Color] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.awt.Color]] +++$+++  COMMA VAR[java.awt.Color] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.awt.Color]] +++$+++  COMMA VAR[java.awt.Color] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.awt.Color]] +++$+++  COMMA VAR[java.awt.Color] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.awt.Color]] +++$+++  COMMA VAR[java.awt.Color] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.awt.Color]] +++$+++  COMMA VAR[java.awt.Color] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.awt.Color]] +++$+++  COMMA VAR[java.awt.Color] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.awt.Color]] +++$+++  COMMA VAR[java.awt.Color] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.awt.Color]] +++$+++  COMMA VAR[java.awt.Color] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.awt.Color]] +++$+++  COMMA VAR[java.awt.Color] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.awt.Color]] +++$+++  COMMA VAR[java.awt.Color] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.awt.Color]] +++$+++  COMMA VAR[java.awt.Color] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.awt.Color]] +++$+++  COMMA VAR[java.awt.Color] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.awt.Color]] PARA[VAR[java.lang.String]] +++$+++  COMMA VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.awt.Color]] PARA[VAR[java.lang.String]] +++$+++  COMMA VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.awt.Color]] PARA[VAR[java.lang.String]] +++$+++  COMMA VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.awt.Color]] PARA[VAR[java.lang.String]] +++$+++  COMMA VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.awt.Color]] PARA[VAR[java.lang.String]] +++$+++  COMMA VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.awt.Color]] PARA[VAR[java.lang.String]] +++$+++  COMMA VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.awt.Color]] PARA[VAR[java.lang.String]] +++$+++  COMMA VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.awt.Color]] PARA[VAR[java.lang.String]] +++$+++  COMMA VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.awt.Color]] PARA[VAR[java.lang.String]] +++$+++  COMMA VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.awt.Color]] PARA[VAR[java.lang.String]] +++$+++  COMMA VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.awt.Color]] PARA[VAR[java.lang.String]] +++$+++  COMMA VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.awt.Color]] PARA[VAR[java.lang.String]] +++$+++  COMMA VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.awt.Color]] PARA[VAR[java.lang.String]] +++$+++  COMMA VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.awt.Color]] PARA[VAR[java.lang.String]] +++$+++  COMMA VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.awt.Color]] PARA[VAR[java.lang.String]] +++$+++  COMMA VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.awt.Color]] PARA[VAR[java.lang.String]] +++$+++  COMMA VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.awt.Color]] PARA[VAR[java.lang.String]] +++$+++  COMMA VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.lang.String,length,0,int] +++$+++  VAR[java.lang.String] EOL IF PARENTHESESSTART
CALL[java.lang.String,isEmpty,0,boolean] +++$+++  OP[assign] NULL OP[bitwiseOr] OP[bitwiseOr]
CALL[java.lang.String,equals,1,boolean] PARA[VAR[java.lang.String]] +++$+++  VAR[java.lang.String] PARENTHESESEND OP[bitwiseOr] OP[bitwiseOr]
CALL[java.lang.String,equals,1,boolean] PARA[VAR[java.lang.String]] +++$+++  VAR[java.lang.String] PARENTHESESEND OP[bitwiseOr] OP[bitwiseOr]
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.awt.Color]] +++$+++  COMMA VAR[java.awt.Color] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.awt.Color]] +++$+++  COMMA VAR[java.awt.Color] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.awt.Color]] +++$+++  COMMA VAR[java.awt.Color] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.awt.Color]] +++$+++  COMMA VAR[java.awt.Color] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.awt.Color]] +++$+++  COMMA VAR[java.awt.Color] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.awt.Color]] +++$+++  COMMA VAR[java.awt.Color] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.awt.Color]] +++$+++  COMMA VAR[java.awt.Color] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.awt.Color]] +++$+++  COMMA VAR[java.awt.Color] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.awt.Color]] +++$+++  COMMA VAR[java.awt.Color] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.awt.Color]] +++$+++  COMMA VAR[java.awt.Color] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.awt.Color]] +++$+++  COMMA VAR[java.awt.Color] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.awt.Color]] +++$+++  COMMA VAR[java.awt.Color] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.awt.Color]] +++$+++  COMMA VAR[java.awt.Color] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.awt.Color]] +++$+++  COMMA VAR[java.awt.Color] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.awt.Color]] PARA[VAR[java.lang.String]] +++$+++  COMMA VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.awt.Color]] PARA[VAR[java.lang.String]] +++$+++  COMMA VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.awt.Color]] PARA[VAR[java.lang.String]] +++$+++  COMMA VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.awt.Color]] PARA[VAR[java.lang.String]] +++$+++  COMMA VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.awt.Color]] PARA[VAR[java.lang.String]] +++$+++  COMMA VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.awt.Color]] PARA[VAR[java.lang.String]] +++$+++  COMMA VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.awt.Color]] PARA[VAR[java.lang.String]] +++$+++  COMMA VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.awt.Color]] PARA[VAR[java.lang.String]] +++$+++  COMMA VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.awt.Color]] PARA[VAR[java.lang.String]] +++$+++  COMMA VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.lang.String,replace,2,java.lang.String] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND EOL VAR[java.lang.String] OP[assign]
CALL[java.lang.String,replace,2,java.lang.String] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND EOL VAR[java.lang.String] OP[assign]
CALL[java.lang.String,replace,2,java.lang.String] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND EOL VAR[java.lang.String] OP[assign]
CALL[java.lang.String,replace,2,java.lang.String] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND EOL VAR[java.lang.String] OP[assign]
CALL[java.lang.String,replace,2,java.lang.String] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND EOL VAR[java.lang.String] OP[assign]
CALL[java.lang.String,replace,2,java.lang.String] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND EOL VAR[java.lang.String] OP[assign]
CALL[java.lang.String,replace,2,java.lang.String] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND EOL VAR[java.lang.String] OP[assign]
CALL[java.lang.String,replace,2,java.lang.String] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND EOL VAR[java.lang.String] OP[assign]
CALL[java.lang.String,replace,2,java.lang.String] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND EOL VAR[java.lang.String] OP[assign]
CALL[java.util.ArrayList,get,1,E] PARA[VAR[INT]] +++$+++  PARENTHESESEND EOL LEX[buf.append] PARENTHESESSTART
CALL[java.lang.Thread,start,0,void] +++$+++  PARENTHESESSTART LEX[true] PARENTHESESEND EOL
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  CURLYSTART CHAR VAR[CHAR] OP[assign]
CALL[java.lang.String,substring,2,java.lang.String] PARA[VAR[INT]] PARA[VAR[INT]] +++$+++  OP[not] OP[assign] PARENTHESESEND OP[ternaryTrue]
CALL[java.lang.String,length,0,int] +++$+++  EOL CURLYEND IF PARENTHESESSTART
CALL[java.lang.String,replaceAll,2,java.lang.String] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND EOL VAR[java.lang.String] OP[assign]
CALL[java.lang.String,replaceAll,2,java.lang.String] PARA[LIT[Stirng]] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND EOL VAR[java.lang.String] OP[assign]
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[LIT[Character]] +++$+++  EOL CURLYEND ELSE CURLYSTART
CALL[java.lang.StringBuffer,toString,0,java.lang.String] +++$+++  CURLYEND TYPE[String] VAR[java.lang.String] OP[assign]
CALL[java.net.URL,toURI,0,java.net.URI] +++$+++  CURLYSTART TYPE[URI] VAR[java.net.URI] OP[assign]
CALL[java.util.Properties,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESEND OP[greaterThan] PARENTHESESEND CURLYSTART
CALL[java.io.ByteArrayOutputStream,close,0,void] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND EOL
CALL[java.lang.String,length,0,int] +++$+++  IF PARENTHESESSTART OP[assign] OP[assign]
CALL[javax.swing.Timer,stop,0,void] +++$+++  LEX[FocusEvent] VAR[java.awt.event.FocusEvent] PARENTHESESEND CURLYSTART
CALL[javax.swing.Timer,removeActionListener,1,void] PARA[VAR[java.awt.event.ActionListener]] +++$+++  VAR[java.awt.event.FocusListener] OP[assign] VAR[java.awt.event.FocusListener] EOL
CALL[javax.swing.Timer,addActionListener,1,void] PARA[VAR[java.awt.event.ActionListener]] +++$+++  OP[assign] VAR[java.awt.event.FocusListener] PARENTHESESEND CURLYSTART
CALL[javax.swing.JPanel,add,1,java.awt.Component] PARA[VAR[javax.swing.JRadioButton]] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND EOL
CALL[javax.swing.tree.DefaultMutableTreeNode,setAllowsChildren,1,void] PARA[LIT[Boolean]] +++$+++  EOL CURLYEND CURLYEND EOL
CALL[java.util.Map.Entry,getValue,0,V] +++$+++  VAR[java.lang.String] OP[sum] OP[assign] OP[sum]
CALL[java.util.Map.Entry,getKey,0,K] +++$+++  VAR[java.lang.String] OP[sum] OP[assign] OP[sum]
CALL[java.util.Map.Entry,getKey,0,K] +++$+++  OP[assign] VAR[java.lang.String] OP[sum] OP[sum]
CALL[java.awt.Font,isBold,0,boolean] +++$+++  PARENTHESESEND EOL VAR[BOOLEAN] OP[assign]
CALL[java.awt.Rectangle,intersects,1,boolean] PARA[VAR[java.awt.Rectangle]] +++$+++  PARENTHESESEND PARENTHESESEND EOL RETURN
CALL[java.io.File,getAbsolutePath,0,java.lang.String] +++$+++  OP[assign] LEX[s_stringMgr.getString] PARENTHESESSTART COMMA
CALL[javax.swing.JInternalFrame,setVisible,1,void] PARA[LIT[Boolean]] +++$+++  LEX[fr.moveToFront] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.awt.Component,getLocation,0,java.awt.Point] +++$+++  ELSE CURLYSTART VAR[java.awt.Point] OP[assign]
CALL[java.lang.Throwable,getMessage,0,java.lang.String] +++$+++  PARENTHESESEND CURLYSTART VAR[java.lang.String] OP[assign]
CALL[javax.swing.table.TableModel,getColumnCount,0,int] +++$+++  OP[not] OP[assign] NULL OP[ternaryTrue]
CALL[java.io.File,getPath,0,java.lang.String] +++$+++  OP[assign] NEW TYPE[ImageIcon] PARENTHESESSTART
CALL[java.io.File,isFile,0,boolean] +++$+++  OP[assign] NULL OP[bitwiseAnd] OP[bitwiseAnd]
CALL[javax.swing.JTextArea,setText,1,void] PARA[CALL[java.lang.StringBuffer,toString]] +++$+++  PARENTHESESEND EOL CURLYEND CURLYEND
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  CURLYSTART CHAR VAR[CHAR] OP[assign]
CALL[java.util.Set,toArray,0,java.lang.Object[]] +++$+++  ARRAYSTART ARRAYEND VAR[java.lang.Object] OP[assign]
CALL[java.util.List,size,0,int] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.util.List,get,1,E] PARA[VAR[java.lang.Integer]] +++$+++  VAR[java.lang.Integer] PARENTHESESEND CURLYSTART RETURN
CALL[java.awt.event.MouseEvent,isPopupTrigger,0,boolean] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.awt.Component,getBackground,0,java.awt.Color] +++$+++  CURLYEND ELSE IF PARENTHESESSTART
CALL[java.util.HashMap,containsKey,1,boolean] PARA[VAR[java.awt.Point]] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.awt.Point,setLocation,2,void] PARA[VAR[INT]] PARA[VAR[INT]] +++$+++  INT VAR[INT] PARENTHESESEND CURLYSTART
CALL[javax.swing.JTable,getRowCount,0,int] +++$+++  PARENTHESESSTART VAR[INT] OP[assign] OP[assign]
CALL[java.lang.String,replace,2,java.lang.String] PARA[LIT[Character]] PARA[LIT[Character]] +++$+++  PARENTHESESEND CURLYSTART VAR[java.lang.String] OP[assign]
CALL[java.util.HashMap,get,1,V] PARA[VAR[java.lang.String]] +++$+++  TYPE[String] OP[greaterThan] VAR[java.util.HashMap] OP[assign]
CALL[java.sql.SQLException,getMessage,0,java.lang.String] +++$+++  CURLYSTART LEX[s_log.error] PARENTHESESSTART OP[sum]
CALL[java.lang.String,startsWith,1,boolean] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART PARENTHESESEND OP[bitwiseOr] OP[bitwiseOr]
CALL[java.lang.String,startsWith,1,boolean] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART PARENTHESESEND OP[bitwiseOr] OP[bitwiseOr]
CALL[java.lang.String,trim,0,java.lang.String] +++$+++  OP[not] OP[assign] NULL OP[ternaryTrue]
CALL[javax.swing.JCheckBox,setToolTipText,1,void] PARA[VAR[java.lang.String]] +++$+++  COMMA VAR[java.lang.String] PARENTHESESEND EOL
CALL[javax.swing.JPanel,add,2,void] PARA[VAR[javax.swing.JCheckBox]] PARA[VAR[java.awt.GridBagConstraints]] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND EOL
CALL[javax.swing.JCheckBox,isSelected,0,boolean] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[javax.swing.JLabel,setEnabled,1,void] PARA[LIT[Boolean]] +++$+++  PARENTHESESSTART LEX[true] PARENTHESESEND EOL
CALL[javax.swing.JTextField,setEnabled,1,void] PARA[LIT[Boolean]] +++$+++  PARENTHESESSTART LEX[true] PARENTHESESEND EOL
CALL[javax.swing.JPanel,add,2,void] PARA[VAR[javax.swing.JScrollPane]] PARA[VAR[java.awt.GridBagConstraints]] +++$+++  EOL FIELD[weighty,java.awt.GridBagConstraints] OP[assign] EOL
CALL[javax.swing.JTextField,getText,0,java.lang.String] +++$+++  LEX[IllegalArgumentException] CURLYSTART LEX[config.setDataCell] PARENTHESESSTART
CALL[javax.swing.JTextField,getText,0,java.lang.String] +++$+++  LEX[IllegalArgumentException] CURLYSTART LEX[config.setNoWikiTag] PARENTHESESSTART
CALL[javax.swing.JCheckBox,isSelected,0,boolean] +++$+++  FINAL BOOLEAN VAR[BOOLEAN] OP[assign]
CALL[javax.swing.JLabel,setEnabled,1,void] PARA[VAR[BOOLEAN]] +++$+++  PARENTHESESSTART VAR[BOOLEAN] PARENTHESESEND EOL
CALL[javax.swing.JLabel,setEnabled,1,void] PARA[VAR[BOOLEAN]] +++$+++  PARENTHESESSTART VAR[BOOLEAN] PARENTHESESEND EOL
CALL[javax.swing.JPanel,add,2,void] PARA[VAR[javax.swing.JLabel]] PARA[VAR[java.awt.GridBagConstraints]] +++$+++  OP[sum] OP[sum] FIELD[gridx,java.awt.GridBagConstraints] EOL
CALL[javax.swing.JPanel,add,2,void] PARA[VAR[javax.swing.JTextField]] PARA[VAR[java.awt.GridBagConstraints]] +++$+++  EOL FIELD[weightx,java.awt.GridBagConstraints] OP[assign] EOL
CALL[java.awt.Rectangle,contains,1,boolean] PARA[VAR[java.awt.Point]] +++$+++  FIELD[y,java.awt.Rectangle] OP[sum] FIELD[height,java.awt.Rectangle] RETURN
CALL[java.awt.Rectangle,grow,2,void] PARA[LIT[Integer]] PARA[LIT[Integer]] +++$+++  OP[sub] FIELD[width,java.awt.Rectangle] EOL CURLYEND
CALL[java.awt.event.MouseEvent,getY,0,int] +++$+++  LEX[evt.getX] PARENTHESESSTART PARENTHESESEND COMMA
CALL[javax.swing.JButton,setEnabled,1,void] PARA[LIT[Boolean]] +++$+++  OP[not] VAR[BOOLEAN] PARENTHESESEND CURLYSTART
CALL[javax.swing.JButton,setEnabled,1,void] PARA[VAR[BOOLEAN]] +++$+++  BOOLEAN VAR[BOOLEAN] PARENTHESESEND CURLYSTART
CALL[javax.swing.JPanel,add,2,void] PARA[VAR[javax.swing.JButton]] PARA[VAR[java.awt.GridBagConstraints]] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND EOL
CALL[java.net.URL,toString,0,java.lang.String] +++$+++  LEX[viewer] OP[assign] LEX[_sheets.get] PARENTHESESSTART
CALL[java.net.URL,toString,0,java.lang.String] +++$+++  PARENTHESESEND EOL LEX[_sheets.put] PARENTHESESSTART
CALL[javax.swing.JMenu,add,1,javax.swing.JMenuItem] PARA[VAR[javax.swing.JMenu]] +++$+++  CASE LEX[IMenuIDs.SESSION_MENU] OP[ternaryFalse] CURLYSTART
CALL[javax.swing.JMenu,add,1,java.awt.Component] PARA[VAR[java.awt.Component]] +++$+++  CASE LEX[IMenuIDs.SESSION_MENU] OP[ternaryFalse] CURLYSTART
CALL[javax.swing.JSpinner,getValue,0,java.lang.Object] +++$+++  OP[assign] PARENTHESESSTART TYPE[Integer] PARENTHESESEND
CALL[javax.swing.JTextArea,setEnabled,1,void] PARA[CALL[javax.swing.JCheckBox,isSelected]] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND EOL
CALL[java.awt.Color,getRGB,0,int] +++$+++  PARENTHESESEND EOL LEX[_props.setToolbarBackgroundColorRgbValue] PARENTHESESSTART
CALL[javax.swing.JCheckBox,isSelected,0,boolean] +++$+++  EOL CURLYEND IF PARENTHESESSTART
CALL[javax.swing.JButton,setEnabled,1,void] PARA[LIT[Boolean]] +++$+++  VAR[java.awt.Color] OP[assign] VAR[java.awt.Color] EOL
CALL[javax.swing.JButton,setEnabled,1,void] PARA[LIT[Boolean]] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND CURLYSTART
CALL[javax.swing.JCheckBox,isSelected,0,boolean] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[javax.swing.JPanel,setEnabled,1,void] PARA[LIT[Boolean]] +++$+++  PARENTHESESSTART LEX[false] PARENTHESESEND EOL
CALL[javax.swing.tree.DefaultMutableTreeNode,getPath,0,javax.swing.tree.TreeNode[]] +++$+++  PARENTHESESSTART NEW TYPE[TreePath] PARENTHESESSTART
CALL[java.io.File,getAbsolutePath,0,java.lang.String] +++$+++  CURLYSTART LEX[s_log.info] PARENTHESESSTART OP[sum]
CALL[javax.swing.JFrame,pack,0,void] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND EOL
CALL[javax.swing.JButton,getIcon,0,javax.swing.Icon] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[javax.swing.JCheckBoxMenuItem,isSelected,0,boolean] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.lang.String,length,0,int] +++$+++  PARENTHESESSTART VAR[INT] OP[assign] OP[assign]
CALL[javax.swing.JCheckBox,setEnabled,1,void] PARA[LIT[Boolean]] +++$+++  PARENTHESESSTART LEX[false] PARENTHESESEND EOL
CALL[javax.swing.JPanel,add,2,void] PARA[VAR[javax.swing.JCheckBox]] PARA[VAR[java.awt.GridBagConstraints]] +++$+++  COMMA COMMA PARENTHESESEND EOL
CALL[javax.swing.JList,getModel,0,javax.swing.ListModel<E>] +++$+++  CURLYSTART TYPE[ListModel] VAR[javax.swing.ListModel] OP[assign]
CALL[java.util.SortedSet,toArray,0,java.lang.Object[]] +++$+++  PARENTHESESEND EOL LEX[notUseColsList.setListData] PARENTHESESSTART
CALL[java.lang.String,substring,1,java.lang.String] PARA[LIT[Integer]] +++$+++  PARENTHESESEND CURLYSTART VAR[java.lang.String] OP[assign]
CALL[java.lang.String,startsWith,1,boolean] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART PARENTHESESEND OP[bitwiseOr] OP[bitwiseOr]
CALL[javax.swing.MutableComboBoxModel,removeElementAt,1,void] PARA[VAR[INT]] +++$+++  INT VAR[INT] PARENTHESESEND CURLYSTART
CALL[javax.swing.JFrame,pack,0,void] +++$+++  PARENTHESESSTART VAR[net.sourceforge.squirrel_sql.client.session.mainpanel.objecttree.tabs.LineNumber] PARENTHESESEND EOL
CALL[java.awt.event.MouseEvent,getY,0,int] +++$+++  LEX[evt.getX] PARENTHESESSTART PARENTHESESEND COMMA
CALL[javax.swing.JPopupMenu,show,3,void] PARA[CALL[java.awt.event.MouseEvent,getComponent]] PARA[CALL[java.awt.event.MouseEvent,getX]] PARA[CALL[java.awt.event.MouseEvent,getY]] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND CURLYSTART
CALL[java.awt.event.MouseEvent,getY,0,int] +++$+++  LEX[evt.getX] PARENTHESESSTART PARENTHESESEND COMMA
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  LEX[Math.max] PARENTHESESSTART VAR[INT] COMMA
CALL[java.util.List,get,1,E] PARA[CALL[java.util.ArrayList,get]] +++$+++  VAR[INT] PARENTHESESEND CURLYSTART RETURN
CALL[javax.swing.JPanel,add,2,void] PARA[VAR[javax.swing.JComboBox]] PARA[VAR[java.awt.GridBagConstraints]] +++$+++  TYPE[JComboBox] PARENTHESESSTART PARENTHESESEND EOL
CALL[javax.swing.text.JTextComponent,modelToView,1,java.awt.Rectangle] PARA[VAR[INT]] +++$+++  CURLYSTART TYPE[Rectangle] VAR[java.awt.Rectangle] OP[assign]
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  IF PARENTHESESSTART OP[assign] OP[assign]
CALL[java.lang.String,charAt,1,char] PARA[VAR[INT]] +++$+++  IF PARENTHESESSTART OP[assign] OP[assign]
CALL[java.util.Vector,size,0,int] +++$+++  PARENTHESESSTART NEW INT ARRAYSTART
CALL[java.io.PrintWriter,println,1,void] PARA[LIT[Stirng]] +++$+++  VAR[INT] OP[sum] PARENTHESESEND EOL
CALL[java.lang.StringBuffer,toString,0,java.lang.String] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.net.URL,openConnection,0,java.net.URLConnection] +++$+++  EOL TYPE[URLConnection] VAR[java.net.URLConnection] OP[assign]
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[LIT[Stirng]] +++$+++  OP[bitwiseAnd] LEX[xff] PARENTHESESEND EOL
CALL[java.util.prefs.Preferences,putBoolean,2,void] PARA[LIT[Stirng]] PARA[VAR[BOOLEAN]] +++$+++  COMMA VAR[INT] PARENTHESESEND EOL
CALL[java.util.prefs.Preferences,putInt,2,void] PARA[LIT[Stirng]] PARA[VAR[INT]] +++$+++  COMMA VAR[BOOLEAN] PARENTHESESEND EOL
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.lang.Object]] +++$+++  LEX[Object] VAR[java.lang.Object] PARENTHESESEND CURLYSTART
CALL[java.util.Map,size,0,int] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.util.StringTokenizer,nextToken,1,java.lang.String] PARA[LIT[Stirng]] +++$+++  LEX[token.substring] PARENTHESESSTART PARENTHESESEND OP[sum]
CALL[java.lang.String,substring,1,java.lang.String] PARA[LIT[Integer]] +++$+++  PARENTHESESEND CURLYSTART VAR[java.lang.String] OP[assign]
CALL[java.util.List,add,1,boolean] PARA[VAR[java.lang.String]] +++$+++  VAR[java.util.NoSuchElementException] PARENTHESESEND CURLYSTART CURLYEND
CALL[java.lang.String,concat,1,java.lang.String] PARA[CALL[java.lang.String,substring]] +++$+++  PARENTHESESEND CURLYSTART VAR[java.lang.String] OP[assign]
CALL[java.lang.String,concat,1,java.lang.String] PARA[CALL[java.lang.String,substring]] +++$+++  PARENTHESESEND CURLYSTART VAR[java.lang.String] OP[assign]
CALL[java.io.Reader,close,0,void] +++$+++  FINALLY CURLYSTART TRY CURLYSTART
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Character]] +++$+++  PARENTHESESSTART VAR[BOOLEAN] PARENTHESESEND CURLYSTART
CALL[java.lang.ref.ReferenceQueue,poll,0,java.lang.ref.Reference<? extends T>] +++$+++  OP[assign] PARENTHESESSTART TYPE[HandleRef] PARENTHESESEND
CALL[java.util.List,add,1,boolean] PARA[VAR[java.lang.Runnable]] +++$+++  PARENTHESESSTART VAR[java.util.List] PARENTHESESEND CURLYSTART
CALL[java.util.List,indexOf,1,int] PARA[VAR[java.lang.Runnable]] +++$+++  VAR[java.util.List] PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.StringBuilder,toString,0,java.lang.String] +++$+++  RETURN NEW TYPE[PyString] PARENTHESESSTART
CALL[java.lang.StringBuilder,toString,0,java.lang.String] +++$+++  PARENTHESESSTART NEW TYPE[PyString] PARENTHESESSTART
CALL[java.lang.StringBuilder,length,0,int] +++$+++  VAR[CHAR] OP[assign] LEX[out_data.charAt] PARENTHESESSTART
CALL[java.lang.StringBuilder,toString,0,java.lang.String] +++$+++  RETURN NEW TYPE[PyString] PARENTHESESSTART
CALL[java.lang.StringBuilder,appendCodePoint,1,java.lang.StringBuilder] PARA[VAR[INT]] +++$+++  OP[sum] VAR[INT] EOL CURLYEND
CALL[java.nio.ByteBuffer,remaining,0,int] +++$+++  PARENTHESESEND EOL WHILE PARENTHESESSTART
CALL[java.lang.String,toCharArray,0,char[]] +++$+++  ARRAYSTART ARRAYEND VAR[CHAR] OP[assign]
CALL[java.lang.Class,getName,0,java.lang.String] +++$+++  CURLYSTART TYPE[String] VAR[java.lang.String] OP[assign]
CALL[java.lang.String,length,0,int] +++$+++  OP[assign] NEW TYPE[StringBuffer] PARENTHESESSTART
CALL[java.io.InputStream,close,0,void] +++$+++  EOL CURLYEND FINALLY CURLYSTART
CALL[org.python.core.ParserFacade.ExpectedEncodingBufferedReader,mark,1,void] PARA[VAR[INT]] +++$+++  PARENTHESESEND THROWS LEX[Throwable] CURLYSTART
CALL[java.util.regex.Matcher,find,0,boolean] +++$+++  EOL BOOLEAN VAR[BOOLEAN] OP[assign]
CALL[java.lang.String,length,0,int] +++$+++  EOL CURLYEND IF PARENTHESESSTART
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Character]] +++$+++  VAR[INT] EOL VAR[INT] CURLYEND
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Character]] +++$+++  OP[assign] LEX[x00010000] PARENTHESESEND CURLYSTART
CALL[java.lang.String,length,0,int] +++$+++  CURLYSTART INT VAR[INT] OP[assign]
CALL[java.util.Iterator,hasNext,0,boolean] +++$+++  LEX[input.iterator] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.lang.Object,equals,1,boolean] PARA[VAR[java.lang.Object]] +++$+++  OP[assign] OP[assign] NULL OP[ternaryFalse]
CALL[java.lang.Object,hashCode,0,int] +++$+++  NULL PARENTHESESEND OP[ternaryTrue] OP[ternaryFalse]
CALL[java.util.Collection,clear,0,void] +++$+++  LEX[clear] PARENTHESESSTART PARENTHESESEND CURLYSTART
CALL[java.util.Iterator,next,0,E] +++$+++  CURLYSTART TYPE[CodeFlag] VAR[org.python.core.CodeFlag] OP[assign]
CALL[java.util.List,add,2,void] PARA[LIT[Integer]] PARA[VAR[java.lang.Class]] +++$+++  OP[assign] NULL PARENTHESESEND CURLYSTART
CALL[java.io.ByteArrayOutputStream,toString,0,java.lang.String] +++$+++  EOL TYPE[String] VAR[java.lang.String] OP[assign]
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND CURLYSTART
CALL[java.lang.String,substring,2,java.lang.String] PARA[VAR[INT]] PARA[VAR[INT]] +++$+++  PARENTHESESEND CURLYSTART VAR[java.lang.String] OP[assign]
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND EOL CURLYEND CURLYEND
CALL[java.lang.StringBuilder,toString,0,java.lang.String] +++$+++  PARENTHESESSTART PARENTHESESEND EOL RETURN
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[VAR[java.lang.String]] +++$+++  OP[ternaryFalse] VAR[java.lang.String] PARENTHESESEND CURLYSTART
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.lang.StringBuilder,toString,0,java.lang.String] +++$+++  PARENTHESESEND EOL CURLYEND RETURN
CALL[java.util.Set,add,1,boolean] PARA[VAR[java.lang.String]] +++$+++  VAR[java.util.Set] PARENTHESESEND EOL CURLYEND
CALL[java.lang.String,endsWith,1,boolean] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.io.PrintWriter,print,1,void] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESEND PARENTHESESEND PARENTHESESEND EOL
CALL[java.io.File,length,0,long] +++$+++  EOL LONG VAR[LONG] OP[assign]
CALL[java.util.Set,contains,1,boolean] PARA[VAR[java.lang.String]] +++$+++  NULL PARENTHESESEND CURLYSTART RETURN
CALL[java.util.List,clear,0,void] +++$+++  OP[assign] NULL PARENTHESESEND CURLYSTART
CALL[java.lang.String,indexOf,1,int] PARA[LIT[Stirng]] +++$+++  OP[greaterThan] OP[assign] OP[bitwiseAnd] OP[bitwiseAnd]
CALL[java.lang.String,trim,0,java.lang.String] +++$+++  PARENTHESESEND CURLYSTART VAR[java.lang.String] OP[assign]
CALL[java.util.Properties,setProperty,2,java.lang.Object] PARA[VAR[java.lang.String]] PARA[VAR[java.lang.String]] +++$+++  STRING VAR[java.lang.String] PARENTHESESEND CURLYSTART
CALL[java.io.File,mkdirs,0,boolean] +++$+++  CURLYSTART IF PARENTHESESSTART OP[not]
CALL[java.util.List,add,1,boolean] PARA[LIT[Stirng]] +++$+++  OP[greaterThan] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.util.List,add,1,boolean] PARA[LIT[Stirng]] +++$+++  LEX[coreLibFiles.add] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.util.List,add,1,boolean] PARA[LIT[Stirng]] +++$+++  LEX[coreLibFiles.add] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.util.List,add,1,boolean] PARA[LIT[Stirng]] +++$+++  LEX[coreLibFiles.add] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.util.List,add,1,boolean] PARA[LIT[Stirng]] +++$+++  LEX[coreLibFiles.add] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.util.List,add,1,boolean] PARA[LIT[Stirng]] +++$+++  LEX[coreLibFiles.add] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.util.zip.ZipEntry,isDirectory,0,boolean] +++$+++  CURLYSTART IF PARENTHESESSTART OP[not]
CALL[java.util.Iterator,next,0,E] +++$+++  CURLYSTART TYPE[String] VAR[java.lang.String] OP[assign]
CALL[java.lang.StringBuffer,toString,0,java.lang.String] +++$+++  PARENTHESESEND EOL CURLYEND RETURN
CALL[java.io.FileWriter,flush,0,void] +++$+++  PARENTHESESSTART VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.io.File,getAbsolutePath,0,java.lang.String] +++$+++  VAR[java.lang.String] ARRAYSTART ARRAYEND OP[assign]
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART VAR[java.lang.String] PARENTHESESEND EOL
CALL[java.io.File,isDirectory,0,boolean] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.io.BufferedWriter,write,1,void] PARA[VAR[java.lang.String]] +++$+++  EOL CURLYEND ELSE CURLYSTART
CALL[java.util.Iterator,hasNext,0,boolean] +++$+++  PARENTHESESEND EOL WHILE PARENTHESESSTART
CALL[java.util.Collection,size,0,int] +++$+++  OP[assign] NEW TYPE[Option] ARRAYSTART
CALL[java.lang.String,length,0,int] +++$+++  RETURN VAR[INT] OP[assign] OP[assign]
CALL[java.io.OutputStream,write,3,void] PARA[VAR[BYTE]] PARA[LIT[Integer]] PARA[VAR[INT]] +++$+++  PARENTHESESSTART VAR[INT] OP[greaterThan] PARENTHESESEND
CALL[java.io.InputStream,available,0,int] +++$+++  ARRAYEND EOL WHILE PARENTHESESSTART
CALL[java.io.InputStream,read,0,int] +++$+++  CURLYSTART RETURN VAR[CHAR] ARRAYSTART
CALL[java.nio.ByteBuffer,remaining,0,int] +++$+++  LEX[in.remaining] PARENTHESESSTART PARENTHESESEND COMMA
CALL[java.io.File,getPath,0,java.lang.String] +++$+++  NEW TYPE[FileNotFoundException] PARENTHESESSTART OP[sum]
CALL[java.util.regex.Pattern,matcher,1,java.util.regex.Matcher] PARA[VAR[java.lang.String]] +++$+++  CURLYSTART TYPE[Matcher] VAR[java.util.regex.Matcher] OP[assign]
CALL[javax.swing.JPanel,add,1,java.awt.Component] PARA[VAR[javax.swing.JCheckBox]] +++$+++  LEX[JCheckBox] VAR[javax.swing.JCheckBox] PARENTHESESEND CURLYSTART
CALL[javax.swing.event.ListDataListener,intervalAdded,1,void] PARA[VAR[javax.swing.event.ListDataEvent]] +++$+++  OP[ternaryFalse] VAR[java.util.List] PARENTHESESEND CURLYSTART
CALL[java.lang.String,length,0,int] +++$+++  VAR[java.lang.String] OP[assign] LEX[methodName.substring] PARENTHESESSTART
CALL[java.util.List,add,1,boolean] PARA[VAR[java.awt.event.ActionListener]] +++$+++  PARENTHESESSTART PARENTHESESEND EOL CURLYEND
CALL[java.util.List,add,1,boolean] PARA[VAR[java.awt.Component]] +++$+++  OP[not] OP[assign] NULL PARENTHESESEND
CALL[java.awt.event.ActionListener,actionPerformed,1,void] PARA[VAR[java.awt.event.ActionEvent]] +++$+++  OP[ternaryFalse] VAR[java.util.List] PARENTHESESEND CURLYSTART
CALL[javax.swing.JTable,getSelectedRow,0,int] +++$+++  PARENTHESESEND CURLYSTART VAR[INT] OP[assign]
CALL[javax.swing.plaf.basic.BasicComboBoxEditor,focusLost,1,void] PARA[VAR[java.awt.event.FocusEvent]] +++$+++  LEX[FocusEvent] VAR[java.awt.event.FocusEvent] PARENTHESESEND CURLYSTART
CALL[javax.swing.plaf.basic.BasicComboBoxEditor,selectAll,0,void] +++$+++  LEX[selectAll] PARENTHESESSTART PARENTHESESEND CURLYSTART
CALL[javax.swing.DefaultListModel,getElementAt,1,E] PARA[VAR[INT]] +++$+++  VAR[INT] PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.String,hashCode,0,int] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.String,length,0,int] +++$+++  VAR[INT] OP[assign] LEX[Math.min] PARENTHESESSTART
CALL[java.lang.String,equals,1,boolean] PARA[FIELD[net.pandoragames.far.ui.MimeTreeNode]] +++$+++  PARENTHESESEND VAR[java.lang.Object] EOL RETURN
CALL[java.io.File,isDirectory,0,boolean] +++$+++  IF PARENTHESESSTART PARENTHESESSTART OP[not]
CALL[java.io.File,getPath,0,java.lang.String] +++$+++  NEW TYPE[ConfigurationException] PARENTHESESSTART OP[sum]
CALL[java.io.Writer,write,1,void] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART PARENTHESESEND EOL CURLYEND
CALL[java.util.Map,get,1,V] PARA[VAR[java.lang.String]] +++$+++  VAR[java.lang.String] PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.String,hashCode,0,int] +++$+++  VAR[INT] OP[assign] VAR[BOOLEAN] OP[ternaryTrue]
CALL[java.lang.String,compareTo,1,int] PARA[FIELD[org.geoserver.web.data.importer.LayerResource]] +++$+++  PARENTHESESEND EOL CURLYEND RETURN
CALL[java.awt.geom.AffineTransform,createTransformedShape,1,java.awt.Shape] PARA[CALL[java.awt.font.GlyphVector,getOutline]] +++$+++  VAR[INT] TYPE[Shape] VAR[java.awt.Shape] OP[assign]
CALL[java.util.List,add,1,boolean] PARA[VAR[java.lang.Object]] +++$+++  EOL CURLYEND ELSE CURLYSTART
CALL[java.lang.Object,toString,0,java.lang.String] +++$+++  PARENTHESESEND EOL CURLYEND RETURN
CALL[java.util.Map,put,2,V] PARA[CALL[java.lang.String,toLowerCase]] PARA[VAR[java.lang.String]] +++$+++  RETURN VAR[java.lang.String] EOL CURLYEND
CALL[java.util.Map,get,1,V] PARA[VAR[java.lang.String]] +++$+++  OP[not] OP[assign] NULL OP[ternaryTrue]
CALL[java.util.Collection,size,0,int] +++$+++  PARENTHESESEND EOL RETURN PARENTHESESSTART
CALL[java.awt.Color,getGreen,0,int] +++$+++  LEX[c.getRed] PARENTHESESSTART PARENTHESESEND COMMA
CALL[java.awt.Color,getAlpha,0,int] +++$+++  LEX[c.getBlue] PARENTHESESSTART PARENTHESESEND COMMA
CALL[java.awt.Color,getBlue,0,int] +++$+++  LEX[c.getGreen] PARENTHESESSTART PARENTHESESEND COMMA
CALL[java.lang.String,substring,2,java.lang.String] PARA[LIT[Integer]] PARA[LIT[Integer]] +++$+++  PARENTHESESEND COMMA LEX[Integer.valueOf] PARENTHESESSTART
CALL[java.io.OutputStream,flush,0,void] +++$+++  COMMA VAR[java.io.OutputStream] PARENTHESESEND EOL
CALL[java.util.logging.Logger,warning,1,void] PARA[CALL[null,format]] +++$+++  TYPE[IOException] VAR[java.io.IOException] PARENTHESESEND CURLYSTART
CALL[java.lang.String,startsWith,1,boolean] PARA[VAR[java.lang.String]] +++$+++  OP[sum] EOL IF PARENTHESESSTART
CALL[java.util.List,add,1,boolean] PARA[FIELD[EoLayerType]] +++$+++  LEX[EoLayerType.IGNORE] PARENTHESESEND EOL CURLYEND
CALL[java.io.File,exists,0,boolean] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.io.Writer,flush,0,void] +++$+++  COMMA VAR[java.io.Writer] PARENTHESESEND EOL
CALL[java.lang.Exception,getLocalizedMessage,0,java.lang.String] +++$+++  LEX[LOGGER.log] PARENTHESESSTART LEX[Level.FINE] COMMA
CALL[java.util.List,size,0,int] +++$+++  OP[assign] NULL OP[bitwiseOr] OP[bitwiseOr]
CALL[java.util.List,size,0,int] +++$+++  OP[assign] NULL OP[bitwiseOr] OP[bitwiseOr]
CALL[java.util.Map,values,0,java.util.Collection<V>] +++$+++  PARENTHESESSTART TYPE[UTFGridEntry] VAR[org.geoserver.wms.utfgrid.UTFGridEntries.UTFGridEntry] OP[ternaryFalse]
CALL[java.awt.Graphics2D,setColor,1,void] PARA[VAR[java.awt.Color]] +++$+++  COMMA VAR[INT] PARENTHESESEND EOL
CALL[java.lang.String,equalsIgnoreCase,1,boolean] PARA[LIT[Stirng]] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.awt.Graphics2D,dispose,0,void] +++$+++  NULL PARENTHESESEND EOL CURLYEND
CALL[java.util.List,add,1,boolean] PARA[VAR[org.geoserver.wms.decoration.MapDecorationLayout.Block]] +++$+++  LEX[Block] VAR[org.geoserver.wms.decoration.MapDecorationLayout.Block] PARENTHESESEND CURLYSTART
CALL[java.util.Map,entrySet,0,java.util.Set<java.util.Map.Entry<K, V>>] +++$+++  TYPE[String] OP[greaterThan] VAR[java.util.Map.Entry] OP[ternaryFalse]
CALL[java.util.Map,put,2,V] PARA[VAR[java.lang.String]] PARA[VAR[java.lang.String]] +++$+++  EOL CURLYEND ELSE CURLYSTART
CALL[java.util.Map.Entry,getValue,0,V] +++$+++  PARENTHESESSTART PARENTHESESEND OP[sum] COMMA
CALL[java.lang.String,replace,2,java.lang.String] PARA[CALL[java.util.Map.Entry,getKey]] PARA[CALL[java.util.Map.Entry,getValue]] +++$+++  PARENTHESESEND CURLYSTART VAR[java.lang.String] OP[assign]
CALL[java.io.BufferedWriter,flush,0,void] +++$+++  PARENTHESESSTART PARENTHESESEND EOL CURLYEND
CALL[java.io.BufferedOutputStream,close,0,void] +++$+++  LEX[out.flush] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.io.OutputStream,flush,0,void] +++$+++  TYPE[Exception] VAR[java.lang.Exception] PARENTHESESEND CURLYSTART
CALL[java.io.OutputStream,close,0,void] +++$+++  LEX[out.flush] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.io.IOException,initCause,1,java.lang.Throwable] PARA[VAR[java.lang.Exception]] +++$+++  TYPE[IOException] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.lang.String,substring,2,java.lang.String] PARA[LIT[Integer]] PARA[VAR[INT]] +++$+++  CURLYEND ELSE CURLYSTART RETURN
CALL[java.util.ArrayList,add,1,boolean] PARA[VAR[java.lang.String]] +++$+++  OP[not] OP[assign] PARENTHESESEND CURLYSTART
CALL[java.lang.String,substring,1,java.lang.String] PARA[VAR[INT]] +++$+++  PARENTHESESEND EOL VAR[java.lang.String] OP[assign]
CALL[java.io.FileOutputStream,write,3,void] PARA[VAR[BYTE]] PARA[VAR[INT]] PARA[VAR[INT]] +++$+++  PARENTHESESEND THROWS LEX[IOException] CURLYSTART
CALL[java.lang.ClassNotFoundException,getMessage,0,java.lang.String] +++$+++  PARENTHESESEND CURLYSTART VAR[java.lang.String] OP[assign]
CALL[java.lang.IllegalAccessException,getMessage,0,java.lang.String] +++$+++  PARENTHESESEND CURLYSTART VAR[java.lang.String] OP[assign]
CALL[java.lang.Class,getDeclaredField,1,java.lang.reflect.Field] PARA[LIT[Stirng]] +++$+++  EOL TYPE[Field] VAR[java.lang.reflect.Field] OP[assign]
CALL[java.lang.InstantiationException,getMessage,0,java.lang.String] +++$+++  PARENTHESESEND CURLYSTART VAR[java.lang.String] OP[assign]
CALL[java.util.Map.Entry,getKey,0,K] +++$+++  PARENTHESESEND CURLYSTART LEX[fo.put] PARENTHESESSTART
CALL[java.util.Map,entrySet,0,java.util.Set<java.util.Map.Entry<K, V>>] +++$+++  PARENTHESESSTART TYPE[Object] VAR[java.lang.Object] OP[ternaryFalse]
CALL[java.io.InputStream,read,3,int] PARA[VAR[BYTE]] PARA[LIT[Integer]] PARA[VAR[INT]] +++$+++  CURLYEND INT VAR[INT] OP[assign]
CALL[java.io.InputStream,close,0,void] +++$+++  PARENTHESESEND THROWS LEX[IOException] CURLYSTART
CALL[java.lang.Object,getClass,0,java.lang.Class<? extends java.lang.Object>] +++$+++  OP[bitwiseAnd] OP[bitwiseAnd] LEX[type.isAssignableFrom] PARENTHESESSTART
CALL[java.util.Collection,clear,0,void] +++$+++  OP[assign] NULL PARENTHESESEND CURLYSTART
CALL[java.util.Map,clear,0,void] +++$+++  LEX[clear] PARENTHESESSTART PARENTHESESEND CURLYSTART
CALL[java.lang.String,indexOf,1,int] PARA[LIT[Character]] +++$+++  CURLYEND IF PARENTHESESSTART PARENTHESESSTART
CALL[java.lang.StringBuffer,append,1,java.lang.StringBuffer] PARA[LIT[Stirng]] +++$+++  OP[assign] OP[assign] PARENTHESESEND CURLYSTART
CALL[java.lang.String,length,0,int] +++$+++  OP[assign] EOL VAR[INT] OP[lessThan]
CALL[java.lang.String,indexOf,1,int] PARA[LIT[Character]] +++$+++  CURLYSTART INT VAR[INT] OP[assign]
CALL[java.lang.String,indexOf,1,int] PARA[LIT[Character]] +++$+++  CURLYSTART INT VAR[INT] OP[assign]
CALL[java.lang.StringBuilder,length,0,int] +++$+++  VAR[BOOLEAN] OP[assign] LEX[result.charAt] PARENTHESESSTART
CALL[java.lang.String,substring,2,java.lang.String] PARA[LIT[Integer]] PARA[VAR[INT]] +++$+++  OP[greaterThan] PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.String,startsWith,1,boolean] PARA[LIT[Stirng]] +++$+++  OP[assign] EOL IF PARENTHESESSTART
CALL[java.lang.StringBuilder,toString,0,java.lang.String] +++$+++  PARENTHESESEND CURLYSTART LEX[ret.add] PARENTHESESSTART
CALL[java.util.Map,remove,1,V] PARA[CALL[java.util.Map.Entry,getKey]] +++$+++  OP[assign] OP[assign] NULL PARENTHESESEND
CALL[java.io.OutputStream,write,1,void] PARA[VAR[INT]] +++$+++  TYPE[ClientStreamAbortedException] CURLYSTART TRY CURLYSTART
CALL[java.util.List,add,1,boolean] PARA[VAR[java.lang.String]] +++$+++  OP[ternaryFalse] VAR[java.lang.String] PARENTHESESEND CURLYSTART
CALL[java.util.Map,keySet,0,java.util.Set<K>] +++$+++  TYPE[String] OP[greaterThan] VAR[java.util.Set] OP[assign]
CALL[java.lang.String,hashCode,0,int] +++$+++  NULL PARENTHESESEND OP[ternaryTrue] OP[ternaryFalse]
CALL[java.lang.String,hashCode,0,int] +++$+++  NULL PARENTHESESEND OP[ternaryTrue] OP[ternaryFalse]
CALL[java.lang.String,hashCode,0,int] +++$+++  NULL PARENTHESESEND OP[ternaryTrue] OP[ternaryFalse]
CALL[java.lang.String,hashCode,0,int] +++$+++  NULL PARENTHESESEND OP[ternaryTrue] OP[ternaryFalse]
CALL[java.lang.String,endsWith,1,boolean] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.lang.String,hashCode,0,int] +++$+++  NULL PARENTHESESEND OP[ternaryTrue] OP[ternaryFalse]
CALL[java.lang.String,indexOf,1,int] PARA[LIT[Stirng]] +++$+++  CURLYSTART INT VAR[INT] OP[assign]
CALL[java.util.Comparator,compare,2,int] PARA[VAR[org.geoserver.csw.feature.sort.CompositeComparator.T]] PARA[VAR[org.geoserver.csw.feature.sort.CompositeComparator.T]] +++$+++  CURLYSTART INT VAR[INT] OP[assign]
CALL[java.lang.String,equalsIgnoreCase,1,boolean] PARA[VAR[java.lang.String]] +++$+++  EOL CURLYEND IF PARENTHESESSTART
CALL[java.lang.String,hashCode,0,int] +++$+++  NULL PARENTHESESEND OP[ternaryTrue] OP[ternaryFalse]
CALL[java.lang.String,equals,1,boolean] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.util.Iterator,hasNext,0,boolean] +++$+++  PARENTHESESEND EOL IF PARENTHESESSTART
CALL[java.lang.String,equals,1,boolean] PARA[LIT[Stirng]] +++$+++  PARENTHESESSTART PARENTHESESEND OP[bitwiseOr] OP[bitwiseOr]
CALL[java.util.Map,get,1,V] PARA[LIT[Stirng]] +++$+++  RETURN PARENTHESESSTART TYPE[String] PARENTHESESEND
CALL[java.lang.Exception,getLocalizedMessage,0,java.lang.String] +++$+++  PARENTHESESSTART NEW TYPE[SAXParseException] PARENTHESESSTART
CALL[java.util.List,add,1,boolean] PARA[CALL[java.util.StringTokenizer,nextToken]] +++$+++  LEX[commaSplitter.hasMoreElements] PARENTHESESSTART PARENTHESESEND PARENTHESESEND
CALL[java.util.StringTokenizer,hasMoreElements,0,boolean] +++$+++  PARENTHESESEND EOL WHILE PARENTHESESSTART
CALL[java.io.StringWriter,toString,0,java.lang.String] +++$+++  PARENTHESESSTART PARENTHESESEND EOL RETURN
CALL[java.lang.String,split,1,java.lang.String[]] PARA[LIT[Stirng]] +++$+++  ARRAYSTART ARRAYEND VAR[java.lang.String] OP[assign]
CALL[java.lang.String,equals,1,boolean] PARA[VAR[java.lang.String]] +++$+++  OP[assign] NULL OP[bitwiseAnd] OP[bitwiseAnd]
CALL[java.lang.String,equals,1,boolean] PARA[VAR[java.lang.String]] +++$+++  ARRAYEND EOL IF PARENTHESESSTART
CALL[java.util.ArrayList,add,1,boolean] PARA[CALL[java.util.StringTokenizer,nextToken]] +++$+++  PARENTHESESSTART PARENTHESESEND PARENTHESESEND CURLYSTART
CALL[java.util.List,add,1,boolean] PARA[VAR[java.util.HashMap]] +++$+++  COMMA VAR[DOUBLE] PARENTHESESEND EOL
CALL[java.util.List,isEmpty,0,boolean] +++$+++  PARENTHESESSTART PARENTHESESEND CURLYSTART RETURN
CALL[java.lang.StringBuilder,append,1,java.lang.StringBuilder] PARA[LIT[Stirng]] +++$+++  EOL CURLYEND ELSE CURLYSTART
CALL[java.lang.String,equals,1,boolean] PARA[VAR[java.lang.String]] +++$+++  EOL ELSE IF PARENTHESESSTART
CALL[java.util.Map,values,0,java.util.Collection<V>] +++$+++  PARENTHESESSTART TYPE[String] VAR[java.lang.String] OP[ternaryFalse]
CALL[java.util.Set,add,1,boolean] PARA[VAR[org.geoserver.security.impl.AbstractAccessRuleDAO.R]] +++$+++  PARENTHESESSTART PARENTHESESEND EOL RETURN
CALL[java.lang.String,split,1,java.lang.String[]] PARA[LIT[Stirng]] +++$+++  ARRAYSTART ARRAYEND VAR[java.lang.String] OP[assign]
CALL[java.util.Set,addAll,1,boolean] PARA[CALL[null,asList]] +++$+++  PARENTHESESSTART FIELD[length,java.lang.String] PARENTHESESEND EOL
CALL[java.lang.String,equals,1,boolean] PARA[VAR[java.lang.String]] +++$+++  PARENTHESESEND CURLYSTART IF PARENTHESESSTART
CALL[java.nio.CharBuffer,get,1,java.nio.CharBuffer] PARA[VAR[CHAR]] +++$+++  PARENTHESESSTART PARENTHESESEND ARRAYEND EOL
CALL[java.lang.String,equals,1,boolean] PARA[LIT[Stirng]] +++$+++  NULL PARENTHESESEND OP[bitwiseOr] OP[bitwiseOr]
CALL[java.util.Iterator,next,0,E] +++$+++  CURLYSTART TYPE[String] VAR[java.lang.String] OP[assign]
CALL[java.util.Iterator,hasNext,0,boolean] +++$+++  LEX[list.iterator] PARENTHESESSTART PARENTHESESEND EOL
CALL[java.lang.String,lastIndexOf,1,int] PARA[VAR[java.lang.String]] +++$+++  CURLYSTART INT VAR[INT] OP[assign]
CALL[java.util.logging.Logger,fine,1,void] PARA[LIT[Stirng]] +++$+++  LEX[Level.FINE] PARENTHESESEND PARENTHESESEND CURLYSTART
